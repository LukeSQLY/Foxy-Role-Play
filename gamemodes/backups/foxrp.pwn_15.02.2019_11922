/*

FOXY-RP v0.1

*/

/*

----------------------------------------
| INCLUDES:                            |
----------------------------------------

*/

#include 		"a_samp"
#include 		"streamer"	
#include 		"fixes2"
#include 		"regex"
#include 		"a_json"
#include 		"MV_Youtube"
#include 		"YSI\y_classes"
#include 		"a_mysqlf"			
#include 		"playerzone"	
#include 		"foreach"		
#include 		"sscanf2"		
#include 		"zcmd"		
#include 		"AutoAFK"     
#include 		"mSelection" 
#include 		"fly"
#include 		"days"
#include 		"playerprogress"
#include 		"gl_common"
#include 		"a_npc"
#include 		"classes\zmienne.inc"


//STATYCZNIE

static const HudName[7][256] = {
	{"{FFFFFF}Dezaktywacja"},
	{"{B8BFC2}Szary"},
	{"{FF0000}Czerwony"},
	{"{00FF2F}Zielony"},
	{"{0022FF}Niebieski"},
	{"{FFFB00}¯ó³ty"},
	{"{8000FF}Rózowy"}
};

static gTeam[MAX_PLAYERS];

static const LocationsName[][256] = {
	{"Creek (LV)"},
	{"Pilson Intersection (LV)"},
	{"Battery Point (SF)"},
	{"Ocean Docks (LS)"},
	{"Whetstone (SF)"},
	{"Flint County (SF)"},
	{"Doherty (SF)"},
	{"Palisades (SF)"},
	{"Bayside (SF)"},
	{"Commerce (LS)"},
	{"Las Payasadas (LV)"},
	{"Las Venturas Airport (LV)"},
	{"East Los Santos (LS)"},
	{"Linden Side (LV)"},
	{"Angel Pine (SF)"}
};
static const gSAZones[][SAZONE_MAIN] = {
        //      NAME                            AREA (Xmin,Ymin,Zmin,Xmax,Ymax,Zmax)
        {"The Big Ear",                 {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
        {"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
        {"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
        {"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
        {"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
        {"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
        {"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
        {"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
        {"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
        {"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
        {"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
        {"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
        {"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
        {"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
        {"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
        {"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
        {"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
        {"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
        {"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
        {"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
        {"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
        {"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
        {"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
        {"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
        {"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
        {"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
        {"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
        {"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
        {"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
        {"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
        {"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
        {"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
        {"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
        {"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
        {"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
        {"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
        {"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
        {"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
        {"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
        {"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
        {"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
        {"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
        {"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
        {"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
        {"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
        {"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
        {"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
        {"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
        {"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
        {"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
        {"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
        {"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
        {"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
        {"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
        {"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
        {"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
        {"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
        {"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
        {"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
        {"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
        {"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
        {"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
        {"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
        {"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
        {"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
        {"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
        {"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
        {"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
        {"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
        {"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
        {"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
        {"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
        {"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
        {"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
        {"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
        {"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
        {"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
        {"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
        {"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
        {"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
        {"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
        {"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
        {"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
        {"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
        {"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
        {"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
        {"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
        {"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
        {"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
        {"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
        {"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
        {"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
        {"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
        {"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
        {"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
        {"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
        {"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
        {"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
        {"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
        {"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
        {"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
        {"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
        {"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
        {"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
        {"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
        {"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
        {"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
        {"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
        {"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
        {"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
        {"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
        {"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
        {"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
        {"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
        {"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
        {"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
        {"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
        {"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
        {"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
        {"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
        {"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
        {"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
        {"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
        {"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
        {"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
        {"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
        {"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
        {"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
        {"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
        {"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
        {"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
        {"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
        {"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
        {"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
        {"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
        {"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
        {"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
        {"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
        {"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
        {"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
        {"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
        {"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
        {"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
        {"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
        {"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
        {"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
        {"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
        {"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
        {"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
        {"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
        {"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
        {"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
        {"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
        {"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
        {"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
        {"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
        {"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
        {"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
        {"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
        {"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
        {"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
        {"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
        {"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
        {"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
        {"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
        {"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
        {"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
        {"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
        {"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
        {"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
        {"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
        {"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
        {"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
        {"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
        {"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
        {"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
        {"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
        {"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
        {"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
        {"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
        {"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
        {"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
        {"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
        {"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
        {"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
        {"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
        {"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
        {"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
        {"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
        {"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
        {"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
        {"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
        {"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
        {"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
        {"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
        {"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
        {"Los Santos International",    {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
        {"Los Santos International",    {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
        {"Los Santos International",    {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
        {"Los Santos International",    {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
        {"Los Santos International",    {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
        {"Los Santos International",    {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
        {"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
        {"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
        {"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
        {"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
        {"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
        {"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
        {"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
        {"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
        {"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
        {"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
        {"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
        {"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
        {"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
        {"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
        {"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
        {"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
        {"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
        {"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
        {"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
        {"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
        {"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
        {"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
        {"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
        {"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
        {"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
        {"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
        {"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
        {"Mulholland Intersection",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
        {"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
        {"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
        {"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
        {"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
        {"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
        {"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
        {"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
        {"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
        {"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
        {"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
        {"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
        {"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
        {"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
        {"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
        {"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
        {"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
        {"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
        {"PilSzarym",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
        {"PilSzarym",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
        {"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
        {"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
        {"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
        {"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
        {"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
        {"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
        {"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
        {"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
        {"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
        {"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
        {"Randolph Industrial Estate",  {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
        {"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
        {"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
        {"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
        {"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
        {"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
        {"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
        {"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
        {"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
        {"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
        {"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
        {"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
        {"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
        {"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
        {"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
        {"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
        {"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
        {"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
        {"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
        {"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
        {"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
        {"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
        {"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
        {"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
        {"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
        {"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
        {"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
        {"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
        {"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
        {"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
        {"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
        {"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
        {"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
        {"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
        {"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
        {"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
        {"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
        {"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
        {"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
        {"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
        {"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
        {"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
        {"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
        {"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
        {"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
        {"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
        {"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
        {"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
        {"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
        {"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
        {"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
        {"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
        {"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
        {"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
        {"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
        {"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
        {"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
        {"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
        {"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
        {"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
        {"The Four Dragons Casino",     {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
        {"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
        {"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
        {"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
        {"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
        {"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
        {"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
        {"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
        {"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
        {"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
        {"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
        {"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
        {"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
        {"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
        {"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
        {"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
        {"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
        {"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
        {"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
        {"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
        {"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
        {"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
        {"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
        {"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
        {"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
        {"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
        {"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
        {"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
        {"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
        {"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
        {"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
        {"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
        {"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
        {"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
        {"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
        {"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
        {"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
        // Main Zones
        {"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
        {"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
        {"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
        {"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
        {"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
        {"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
        {"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
        {"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
        {"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};
//statycznie


// FORWARD luuj
forward PlaceADDS();
forward OnVehicleUpdate();
forward Draggingt(playerid, ID);
forward AntySpamTimer(playerid);
forward StopFishing(playerid);
forward RobbedMoney(playerid);
forward ConvertMsToTime(ms);
forward StopMusic(playerid);
forward LoadItems();
forward UpdatePlayerData(); //timer wolany 5 sekund
forward UpdatePlayer3DName(playerid);
forward ValidTuningCar(carid);
forward ValidNeonCar(carid);
forward LoadWejscia();
forward LoadBramy();
forward LoadObjects();
forward LoadActors();
forward LoadFurnitures();
forward SendJobMessage(job, color, string[]);
forward odpalanie(playerid);
forward odpalanie2(playerid);
forward OnPlayerDateUpdateX2(playerid);
forward UpdateSecondary(playerid);
forward SendLeaderMessage(leader, color, string[]);
forward WantedDown();
forward FreezeEX(playerid);
forward WantedTime2();
forward GetPlayerArmourEx(playerid, &Float:armour);
forward SetPlayerArmourEx(playerid, Float:armour);
forward GetPlayerHealthEx(playerid, &Float:health);
forward SetPlayerHealthEx(playerid, Float:health);
forward EndOfConnection(playerid);
forward Race2(playerid);
forward NFight(playerid);
forward Fight(playerid);
forward IsVehicleOccupied(vehicleid);
forward SplitText(const strsrc[], strdest[][], delimiter);
forward DeAMXI(playerid);
forward DepositMoney(playerid);
forward StartMovingTimer();
forward Race(playerid);
forward WalkAnim(playerid);
forward SBUpdate(bizzid, type);
forward InsertCar(playerid,model,value,namecar[],type,stockid);
forward IsAnOwnableCar(vehicleid);
forward HUpdate(hid, type);
forward Update(playerid, type);
forward aimback(playerid);
forward UpdateLabel(update, h);
forward UpdatePlayer(playerid);
forward MySQLCheckAccount(sqlplayersname[]);
forward Truckerilegal(playerid,carid);
forward VaildFishPlace(playerid);
forward lspdbarclose();
forward nggateclose();
forward lspdgateclose();
forward jailclosegate();
forward DrugEffectGone(playerid);
forward LoadFactions();
forward Float:GetDistance(playerid, Float:x, Float:y);
forward IsAtATM(playerid);
forward UnFreezeStation(playerid);
forward Fisher(playerid);
forward Fisher2(playerid);
forward pizzaa(playerid);
forward Adminlog(string[]);
forward Warnlog(ip[],psql,asql,reason[]);
forward Banlog(ip[],name1[],name2[],reason[],day);
forward Jaillog(ip[],psql,asql,reason[],min);
forward Mutelog(psql,asql,reason[],min);
forward Transferlog(ip1[],ip2[],psql1,psql2,money);
forward Factionlog(factionid,psql,action[]);
forward LogIP(string[],psql);
forward LoadProperty();
forward setminute(playerid);
forward UnsetAfterTutorial(playerid);
forward LoadBizz();
forward LoadStuff();
forward IsAtClothShop(playerid);
forward IsAtGasStation(playerid);
forward IsAtBank(playerid);
forward IsAtOrderPlace(playerid);
forward IsAtBar(playerid);
forward SetPlayerSpawn(playerid);
forward SetupPlayerForClassSelection(playerid);
forward SetPlayerTeamFromClass(playerid,classid);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward CrimInRange(Float:radi, playerid,copid);
forward SendEnemyMessage(color, string[]);
forward SendTeamBeepMessage(team, color, string[]);
forward SendAdminMessage(color,const string[],level);
forward SendIP(color,const string[]);
forward HLChat(color,const string[]);
forward LeaderChat(color,const string[]);
forward IsPlayerInArea(playerid, Float:minx, Float:miny, Float:maxx, Float:maxy);
forward PrintBizInfo(playerid,targetid);
forward PrintSBizInfo(playerid,targetid);
forward SetPlayerUnjail();
forward IsAChiliad(carid);
forward IsAProdCar(carid);
forward IsAnAmbulance(carid);
forward IsAnTaxi(carid);
forward IsABike(carid);
forward IsAPlane(carid);
forward IsABoat(carid);
forward IsACop(playerid);
forward IsAMember(playerid);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num);
forward SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi);
forward SetPlayerCriminal(playerid,declare,reason[]);
forward SetPlayerFree(playerid,declare,reason[]);
forward ShowStats(playerid,targetid);
forward ShowStats2(playerid,targetid);
forward GameModeExitFunc();
forward GameModeInitExitFunc();
forward split(const strsrc[], strdest[][], delimiter);
forward OnPlayerLogin2(playerid,password[]);
forward OnPlayerRegister(playerid, password[]);
forward BroadCast(color,const string[]);
forward OOCOff(color,const string[]);
forward OOCNews(color,string[]);
forward OOCNews2(color,const string[]);
forward SendFactionMessage(family, color, string[]);
forward SendNewFamilyMessage(family, color, string[]);
forward SendTeamMessage(member, color, string[]);
forward SendRadioMessage(member, color, string[]);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward ClearPaper(paper);
forward ClearCrime(playerid);
forward CarCheck();
forward CarTow(carid);
forward CheckGas();
forward Checkvehinfo();
forward Fillup(playerid);
forward StoppedVehicle();
forward SyncTime();
forward SyncUp();
forward IsPlayerInZone(playerid, zoneid);
forward Production();
forward PayDay();
forward HouseLevel(playerid);
forward CHouseLevel(houseid);
forward CustomPickups();
forward FixHour(hour);
forward Logink(playerid);
forward StworzPrzystanek(text[], Float:pozX, Float:pozY, Float:pozZ, Float:pozA);
forward UsunPrzystanek(id);
forward ZapiszPrzystanek(id);
forward LoadBus();
forward BusStop(playerid, stopid);
forward BusStart(playerid);



// HOUSE SAVE
public HUpdate(hid, type)
{
	new var[256];
	switch(type)
	{
	    case hExitxx:
	    {
			format(var, sizeof(var), "UPDATE `houses` SET `Exitx`='%f' WHERE `ID`='%d'",HouseInfo[hid][hExitx], hid);
			mysql_query(SQL ,var);
	    }
	    case hExityx:
	    {
			format(var, sizeof(var), "UPDATE `houses` SET `Exity`='%f' WHERE `ID`='%d'",HouseInfo[hid][hExity], hid);
			mysql_query(SQL ,var);
	    }
	    case hExitzx:
	    {
			format(var, sizeof(var), "UPDATE `houses` SET `Exitz`='%f' WHERE `ID`='%d'",HouseInfo[hid][hExitz], hid);
			mysql_query(SQL ,var);
	    }
	    case hInteriorx:
	    {
			format(var, sizeof(var), "UPDATE `houses` SET `Interior`='%d' WHERE `ID`='%d'",HouseInfo[hid][hInterior], hid);
			mysql_query(SQL ,var);
	    }
	    case hRadiox: {
			format(var, sizeof(var), "UPDATE `houses` SET `Radio`='%d' WHERE `ID`='%d'",HouseInfo[hid][hRadio], hid);
			mysql_query(SQL ,var);
	    }
	}
	return 1;
}

function SaveAccounts()
{
	for(new i; i < MAX_PLAYERS; i++)
	{
		Update(i, pCashx);
		Update(i, pRP);
		Update(i, pBank);
		Update(i, pCarLicTx);
		Update(i, pFlyLicTx);
		Update(i, pFishLicTx);
		Update(i, pGunLicTx);
		Update(i, pRobx);
		Update(i, pFpunishx);
		Update(i, pLawyerx);
		Update(i, pConnectTimex);
		Update(i, pTowx);
	}
}

// PLAYER SAVE
public Update(playerid, type) {
	new var[256];
	switch(type) {
		case pCashx: format(var, sizeof(var), "UPDATE `users` SET `Money`='%d' WHERE `ID`='%d'",GetPlayerCash(playerid), PlayerInfo[playerid][pSQLID]);
		case pRP: format(var, sizeof(var), "UPDATE `users` SET `Respect`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pExp], PlayerInfo[playerid][pSQLID]);
		case pBank: format(var, sizeof(var), "UPDATE `users` SET `Bank`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pAccount], PlayerInfo[playerid][pSQLID]);
		case pCarLicTx: format(var, sizeof(var), "UPDATE `users` SET `CarLicT`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pCarLicT], PlayerInfo[playerid][pSQLID]);
		case pFlyLicTx: format(var, sizeof(var), "UPDATE `users` SET `FlyLicT`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pFlyLicT], PlayerInfo[playerid][pSQLID]);
		case pBoatLicTx: format(var, sizeof(var), "UPDATE `users` SET `BoatLicT`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pBoatLicT], PlayerInfo[playerid][pSQLID]);
		case pFishLicTx: format(var, sizeof(var), "UPDATE `users` SET `FishLicT`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pFishLicT], PlayerInfo[playerid][pSQLID]);
		case pGunLicTx: format(var, sizeof(var), "UPDATE `users` SET `GunLicT`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pGunLicT], PlayerInfo[playerid][pSQLID]);
		case pRobx: format(var, sizeof(var), "UPDATE `users` SET `Rob`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pRob], PlayerInfo[playerid][pSQLID]);
		case pFpunishx: format(var, sizeof(var), "UPDATE `users` SET `FPunish`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pFpunish], PlayerInfo[playerid][pSQLID]);
		case pLawyerx: format(var, sizeof(var), "UPDATE `users` SET `Acceptpoints`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pLawyer], PlayerInfo[playerid][pSQLID]);
		case pConnectTimex: format(var, sizeof(var), "UPDATE `users` SET `ConnectedTime`='%0.3f' WHERE `ID`='%d'",PlayerInfo[playerid][pConnectTime], PlayerInfo[playerid][pSQLID]);
		case pTowx: format(var, sizeof(var), "UPDATE `users` SET `Tow`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pTow], PlayerInfo[playerid][pSQLID]);
		case pPayDayHadx: format(var, sizeof(var), "UPDATE `users` SET `PayDayHad`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pPayDayHad], PlayerInfo[playerid][pSQLID]);
		case pPayDayx: format(var, sizeof(var), "UPDATE `users` SET `PayDay`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pPayDay], PlayerInfo[playerid][pSQLID]);
		case pPayCheckx: format(var, sizeof(var), "UPDATE `users` SET `Paycheck`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pPayCheck], PlayerInfo[playerid][pSQLID]);
		case pHousex: format(var, sizeof(var), "UPDATE `users` SET `House`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pHouse], PlayerInfo[playerid][pSQLID]);
		case pJailedx: format(var, sizeof(var), "UPDATE `users` SET `Jailed`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pJailed], PlayerInfo[playerid][pSQLID]);
		case pJailTimex: format(var, sizeof(var), "UPDATE `users` SET `JailTime`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pJailTime], PlayerInfo[playerid][pSQLID]);
		case pBWTimex: format(var, sizeof(var), "UPDATE `users` SET `BWTime`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pBWTime], PlayerInfo[playerid][pSQLID]);
		case pWantedLevelx: format(var, sizeof(var), "UPDATE `users` SET `WantedLevel`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pWantedLevel], PlayerInfo[playerid][pSQLID]);
		case pPhonex: format(var, sizeof(var), "UPDATE `users` SET `Phone`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pPhone], PlayerInfo[playerid][pSQLID]);
		case pMatsx: format(var, sizeof(var), "UPDATE `users` SET `Materials`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pMats], PlayerInfo[playerid][pSQLID]);
		case pRobSkillx: format(var, sizeof(var), "UPDATE `users` SET `RobSkill`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pRobSkill], PlayerInfo[playerid][pSQLID]);
		case pLevelx: format(var, sizeof(var), "UPDATE `users` SET `Level`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pSQLID]);
		case pPremiumAccountx: format(var, sizeof(var), "UPDATE `users` SET `Premium`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pPremiumAccount], PlayerInfo[playerid][pSQLID]);
		case pTelefonOnlinex: format(var, sizeof(var), "UPDATE `users` SET `TelefonOnline`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pTelefonOnline], PlayerInfo[playerid][pSQLID]);
		case pDzwonekx: format(var, sizeof(var), "UPDATE `users` SET `Dzwonek`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pDzwonek], PlayerInfo[playerid][pSQLID]);
		case pTrybCichyx: format(var, sizeof(var), "UPDATE `users` SET `TrybCichy`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pTrybCichy], PlayerInfo[playerid][pSQLID]);
		case pDzwiekSMSx: format(var, sizeof(var), "UPDATE `users` SET `DzwiekSMS`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pDzwiekSMS], PlayerInfo[playerid][pSQLID]);
		case pZastrzezonyx: format(var, sizeof(var), "UPDATE `users` SET `Zastrzezony`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pZastrzezony], PlayerInfo[playerid][pSQLID]);
		case pSpawnModex: format(var, sizeof(var), "UPDATE `users` SET `SpawnMode`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pSpawnMode], PlayerInfo[playerid][pSQLID]);
		case pBizzx: format(var, sizeof(var), "UPDATE `users` SET `Bizz`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pBizz], PlayerInfo[playerid][pSQLID]);
		case pPnumberx: format(var, sizeof(var), "UPDATE `users` SET `PhoneNr`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pPnumber], PlayerInfo[playerid][pSQLID]);
		case pRegx: format(var, sizeof(var), "UPDATE `users` SET `Registered`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pReg], PlayerInfo[playerid][pSQLID]);
		case pRegistredDatex: format(var, sizeof(var), "UPDATE `users` SET `RegisterDate`='%s' WHERE `ID`='%d'",PlayerInfo[playerid][pRegistredDate], PlayerInfo[playerid][pSQLID]);
		case pRentedx: format(var, sizeof(var), "UPDATE `users` SET `Rented`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pRented], PlayerInfo[playerid][pSQLID]);
		case pCrimesx: format(var, sizeof(var), "UPDATE `users` SET `Crimes`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pCrimes], PlayerInfo[playerid][pSQLID]);
		case pCrime1x: format(var, sizeof(var), "UPDATE `users` SET `Crime1`='%s' WHERE `ID`='%d'",PlayerInfo[playerid][pCrime1], PlayerInfo[playerid][pSQLID]);
		case pCrime2x: format(var, sizeof(var), "UPDATE `users` SET `Crime2`='%s' WHERE `ID`='%d'",PlayerInfo[playerid][pCrime2], PlayerInfo[playerid][pSQLID]);
		case pCrime3x: format(var, sizeof(var), "UPDATE `users` SET `Crime3`='%s' WHERE `ID`='%d'",PlayerInfo[playerid][pCrime3], PlayerInfo[playerid][pSQLID]);
		case pVictimx: format(var, sizeof(var), "UPDATE `users` SET `Victim`='%s' WHERE `ID`='%d'",PlayerInfo[playerid][pVictim], PlayerInfo[playerid][pSQLID]);
		case pAccusedx: format(var, sizeof(var), "UPDATE `users` SET `Accused`='%s' WHERE `ID`='%d'",PlayerInfo[playerid][pAccused], PlayerInfo[playerid][pSQLID]);
		case pEmailx: format(var, sizeof(var), "UPDATE `users` SET `Email`='%s' WHERE `ID`='%d'",PlayerInfo[playerid][pEmail], PlayerInfo[playerid][pSQLID]);
		case pBTempx: format(var, sizeof(var), "UPDATE `users` SET `BTemp`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pBTemp], PlayerInfo[playerid][pSQLID]);
		case pBYearx: format(var, sizeof(var), "UPDATE `users` SET `BYear`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pBYear], PlayerInfo[playerid][pSQLID]);
		case pBMonthx: format(var, sizeof(var), "UPDATE `users` SET `BMonth`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pBMonth], PlayerInfo[playerid][pSQLID]);
		case pBDayx: format(var, sizeof(var), "UPDATE `users` SET `BDay`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pBDay], PlayerInfo[playerid][pSQLID]);
		case pBByx: format(var, sizeof(var), "UPDATE `users` SET `BBy`='%s' WHERE `ID`='%d'",PlayerInfo[playerid][pBBy], PlayerInfo[playerid][pSQLID]);
		case pBReasonx: format(var, sizeof(var), "UPDATE `users` SET `BReason`='%s' WHERE `ID`='%d'",PlayerInfo[playerid][pBReason], PlayerInfo[playerid][pSQLID]);
		case pWarnsx: format(var, sizeof(var), "UPDATE `users` SET `Warnings`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pWarns], PlayerInfo[playerid][pSQLID]);
		case pTruckerSkillx: format(var, sizeof(var), "UPDATE `users` SET `TruckerSkill`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pTruckerSkill], PlayerInfo[playerid][pSQLID]);
		case pGarbageSkillx: format(var, sizeof(var), "UPDATE `users` SET `GarbageSkill`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pGarbageSkill], PlayerInfo[playerid][pSQLID]);
		case pShowJobx: format(var, sizeof(var), "UPDATE `users` SET `ShowJob`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pShowJob], PlayerInfo[playerid][pSQLID]);
		case pShowFPx: format(var, sizeof(var), "UPDATE `users` SET `ShowFP`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pShowFP], PlayerInfo[playerid][pSQLID]);
		case pShowLogox: format(var, sizeof(var), "UPDATE `users` SET `ShowLogo`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pShowLogo], PlayerInfo[playerid][pSQLID]);
		case pShowCeasx: format(var, sizeof(var), "UPDATE `users` SET `ShowCeas`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pShowCeas], PlayerInfo[playerid][pSQLID]);
		case pFarmerSkillx: format(var, sizeof(var), "UPDATE `users` SET `FarmerSkill`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pFarmerSkill], PlayerInfo[playerid][pSQLID]);
		case pMowerSkillx: format(var, sizeof(var), "UPDATE `users` SET `MowerSkill`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pMowerSkill], PlayerInfo[playerid][pSQLID]);
		case pPremiumPointsx: format(var, sizeof(var), "UPDATE `users` SET `GoldPoints`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pPremiumPoints], PlayerInfo[playerid][pSQLID]);
		case pShowFactionx: format(var, sizeof(var), "UPDATE `users` SET `ShowFaction`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pShowFaction], PlayerInfo[playerid][pSQLID]);
		case pConstructorSkillx:  format(var, sizeof(var), "UPDATE `users` SET `ConstructorSkill`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pConstructorSkill], PlayerInfo[playerid][pSQLID]);
		case pFishSkillx: format(var, sizeof(var), "UPDATE `users` SET `FishSkill`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pFishSkill], PlayerInfo[playerid][pSQLID]);
		case pHotSkillx: format(var, sizeof(var), "UPDATE `users` SET `HotSkill`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pHotSkill], PlayerInfo[playerid][pSQLID]);
		case pBusSkillx: format(var, sizeof(var), "UPDATE `users` SET `BusSkill`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pBusSkill], PlayerInfo[playerid][pSQLID]);
		case pGasCanx: format(var, sizeof(var), "UPDATE `users` SET `GasCan`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pGasCan], PlayerInfo[playerid][pSQLID]);
		case pCadouLuatx: format(var, sizeof(var), "UPDATE `users` SET `CadouLuat`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pCadouLuat], PlayerInfo[playerid][pSQLID]);
		case pDetectivSkillx: format(var, sizeof(var), "UPDATE `users` SET `DetectivSkill`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pDetectivSkill], PlayerInfo[playerid][pSQLID]);
		case pPizzaSkillx: format(var, sizeof(var), "UPDATE `users` SET `PizzaSkill`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pPizzaSkill], PlayerInfo[playerid][pSQLID]);
	}
	mysql_query(SQL ,var);
	return 1;
}

public MySQLCheckAccount(sqlplayersname[])
{
	new query[128];
	new escstr[MAX_PLAYER_NAME];
	mysql_real_escape_string(sqlplayersname, escstr);
	format(query, sizeof(query), "SELECT `ID` FROM users WHERE `name`='%s'", escstr);
	mysql_query(SQL,query);
	mysql_store_result();
	if (mysql_num_rows()==0)
	{
	    mysql_free_result();
		return 0;
	}
	else
	{
		new strid[32];
		new intid;
		mysql_fetch_row(strid);
		intid = strval(strid);
	    mysql_free_result();
		return intid;
	}
}



public aimback(playerid)
{
    SetPlayerPosEx(playerid,Aimx[playerid],Aimy[playerid],Aimz[playerid]);
	return 1;
}

public  WalkAnim(playerid)
{
	new keys, updown, leftright;
	GetPlayerKeys(playerid,keys,updown,leftright);
	if (GetPlayerWalkingStyle(playerid) == WALK_NORMAL)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_PED)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_civi",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_civi",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
 	else if (GetPlayerWalkingStyle(playerid) == WALK_GANGSTA)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_gang1",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_GANGSTA2)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_gang2",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_OLD)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_old",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_old",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_FAT_OLD)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_fatold",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_fatold",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_FAT)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_fat",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_fat",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_LADY)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_LADY2)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_WHORE)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_WHORE2)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_DRUNK)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_drunk",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_drunk",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_BLIND)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","Walk_Wuzi",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	return 1;
}

stock GetPlayer3DZone(playerid, zone[], len) //Credits to Cueball, Betamaster, Mabako, and Simon (for finetuning).
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    for(new i = 0; i != sizeof(gSAZones); i++ )
    {
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4] && z >= gSAZones[i][SAZONE_AREA][2] && z <= gSAZones[i][SAZONE_AREA][5])
        {
            return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
        }
    }
    return 0;
}

stock GetPlayer3DZone2(Float:x, Float:y, Float:z, zone[], len) //Credits to Cueball, Betamaster, Mabako, and Simon (for finetuning).
{
    for(new i = 0; i != sizeof(gSAZones); i++ )
    {
        if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4] && z >= gSAZones[i][SAZONE_AREA][2] && z <= gSAZones[i][SAZONE_AREA][5])
        {
            return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
        }
    }
    return 0;
}

stock SetPlayerWalkingStyle(playerid, style)
{
	WalkStyle[playerid] = style;
}

stock GetPlayerWalkingStyle(playerid)
{
	return WalkStyle[playerid];
}

stock GetNoOfPlayersInVeh(vehicleid)
{
    new x;
    for ( new i; i != MAX_PLAYERS; ++i )
    {
        if ( GetPlayerVehicleID ( i ) != vehicleid ) continue;
        x += 1;
    }
    return x;
}

public DrugEffectGone(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(UsingDrugs[playerid] == 1)
	    {
            UsingDrugs[playerid] = 0;
			ClearAnimations(playerid);
			SetPlayerDrunkLevel (playerid, 0);
            PlayerStoned[playerid] = 0;
            KillTimer(drug[playerid]);
		}
	}
	return 1;
}

stock GangZoneCreateM( Float:MinX,Float:MinY,Float:MaxX,Float:MaxY)
{
	new gangid = GangZoneCreate(MinX,MinY,MaxX,MaxY);
	MGangZones[gangid][exista] = true;
	MGangZones[gangid][linie][0] = GangZoneCreate( MinX-2.0, MinY, MinX+2.0, MaxY );
	MGangZones[gangid][linie][1] = GangZoneCreate( MinX-2.0, MaxY-2.0, MaxX, MaxY+2.0 );
	MGangZones[gangid][linie][2] = GangZoneCreate( MaxX-2.0, MinY, MaxX+2.0, MaxY );
	MGangZones[gangid][linie][3] = GangZoneCreate( MinX-2.0, MinY-2.0, MaxX, MinY+2.0 );
	return gangid;
}


public UpdatePlayer(playerid)
{
    if(GetPlayerMoney(playerid) != Cash[playerid])
    {
		ResetMoneyBar(playerid);
		UpdateMoneyBar(playerid, Cash[playerid]);
    }
    return 1;
}

stock GivePlayerCash(playerid, money) return Cash[playerid] += money;
stock GetPlayerCash(playerid) return Cash[playerid];
stock ResetPlayerCash(playerid) return Cash[playerid] = 0;

stock NumeFactiune(id) {
	new string[128];
	format(string, 128, "%s",  DynamicFactions[id][fName]);
	return string;
} 

stock CalculeazaTimp(secunde)
{
	new time = secunde;
	new ora = time/3600;
	time = time%3600;
	new minute = time/60;
	time = time%60;
	new secunde2 = time;
	new string[10];
	format(string,sizeof(string),"%02d:%02d:%02d",ora,minute,secunde2);
	return string;
}

stock CalculeazaTimp2(secunde)
{
	new time = secunde;
	time = time%3600;
	new minute = time/60;
	time = time%60;
	new secunde2 = time;
	new string[10];
	format(string,sizeof(string),"%02d:%02d",minute,secunde2);
	return string;
}

stock GetOnLinePlayers()
{
    new OnLine;
    for(new i, g = GetMaxPlayers(); i < g; i++)
        if(IsPlayerConnected(i))
            OnLine++;
    return OnLine;
}

stock GetVehicleSpeedIDCAR(vehicleid)
{
    new Float:x,Float:y,Float:z,vel;
    GetVehicleVelocity( vehicleid, x, y, z );
    vel = floatround( floatsqroot( x*x + y*y + z*z ) * 180 );
    return vel;
}

stock GetVehicleSpeed(vehicleid, get3d)
{
	new Float:x, Float:y, Float:z;
	GetVehicleVelocity(vehicleid, x, y, z);
	return SpeedCheck(x, y, z, 100.0, get3d);
}

stock ModifyVehicleSpeed(vehicleid,mph) //Miles Per Hour
{
	new Float:Vx,Float:Vy,Float:Vz,Float:DV,Float:multiple;
	GetVehicleVelocity(vehicleid,Vx,Vy,Vz);
	DV = floatsqroot(Vx*Vx + Vy*Vy + Vz*Vz);
	if(DV > 0) //Directional velocity must be greater than 0 (display strobes if 0)
	{
		multiple = ((mph + DV * 100) / (DV * 100)); //Multiplying DV by 100 calculates speed in MPH
		return SetVehicleVelocity(vehicleid,Vx*multiple,Vy*multiple,Vz*multiple);
	}
	return 0;
}

stock GetFreeVehicleSeat(vehicleid)
{
	new bool:Seat[4];
	foreach(Player, i)
	{
		if(IsPlayerInVehicle(i,vehicleid))
		{
			if(GetPlayerVehicleSeat(i) == 0) Seat[0] = true;
			else if(GetPlayerVehicleSeat(i) == 1) Seat[1] = true;
			else if(GetPlayerVehicleSeat(i) == 2) Seat[2] = true;
			else if(GetPlayerVehicleSeat(i) == 3) Seat[3] = true;
		}
	}
	if(Seat[0] == false) return 0;
	else if(Seat[1] == false) return 1;
	else if(Seat[2] == false) return 2;
	else if(Seat[3] == false) return 3;
	else return -1;
}

stock PlayAudioStreamForPlayersInCar(vehicleid,url[])
{
    foreach(Player,i)
    {
        if(IsPlayerInAnyVehicle(i))
        {
            if(GetPlayerVehicleID(i) == vehicleid)
            {
                PlayAudioStreamForPlayer(i,url);
            }
        }
    }
    return 1;
}

stock SMessage(str[],len=30,lines=20)
{
	new opis[256];
	//if(!len||!str[0]) return true;
	new c=0,x=0;
	if(len > 256 || len < 0 ) len=256;
	for(new i = 0, j, y=0; i < lines; y = 0, i++)
	{
		for(j = x + _:!i; j < x + len && str[j]; j++)
		{
			if(str[j]<33){if(str[j-1]>32)y=j;}
		}
		if(!str[j]) j = -1;
		else
		{
			if(!y)
			{
				if(str[j] > 32 || str[j-1] < 33) c = str[j];
				else c = 0; y = j;
			}
			else c = 0; str[y] = 0;
		}
		format(opis, sizeof(opis), "%s\n%s",opis,str[x]);
		if(j < 0) break;
		str[y] = c;
		x = y + (c?0:1);
	}
	return opis;
}

stock StopAudioStreamForPlayersInCar(vehicleid)
{
    foreach(Player,i)
    {
        if(IsPlayerInAnyVehicle(i))
        {
            if(GetPlayerVehicleID(i) == vehicleid)
            {
                StopAudioStreamForPlayer(i);
            }
        }
    }
    return 1;
}

public StartMovingTimer()
{
	//SendClientMessageToAll(-1, "WITAM");
    MoveObject(gMainShipObjectId,gShipRoutePoints[gShipCurrentPoint][0],
                                   gShipRoutePoints[gShipCurrentPoint][1],
                                                           gShipRoutePoints[gShipCurrentPoint][2],
                                                           SHIP_MOVE_SPEED,
                                                           gShipRoutePoints[gShipCurrentPoint][3],
                                                           gShipRoutePoints[gShipCurrentPoint][4],
                                                           gShipRoutePoints[gShipCurrentPoint][5]);
}



public OnObjectMoved(objectid)
{	
		new string[128], text[128], mid;
        if(objectid != gMainShipObjectId) return 0;
 
        if(gShipCurrentPoint > 0 && !(gShipCurrentPoint % 5)) {
		//po doplynieciu
        }
    gShipCurrentPoint++;
 
    if(gShipCurrentPoint == NUM_SHIP_ROUTE_POINTS) {
        gShipCurrentPoint = 0;	
		mid = GiveThingOnGround(107, 1000, 0, 0, 2543.205810, -2663.774902, 10.328149);
		//format(string,sizeof(string), "ID Matsów: %d", Thing[mid][t_uid]);
		//SendClientMessageToAll(-1, string);
		format(string, sizeof(string), "** Z kontenera wysypal sie stos materialów ((1000)) **");
		SendTeamMessage(5, COLOR_PURPLE, string);
		SendTeamMessage(6, COLOR_PURPLE, string);
		SendTeamMessage(11, COLOR_PURPLE, string);
		SendTeamMessage(10, COLOR_PURPLE, string);
		SendTeamMessage(4, COLOR_PURPLE, string);
		format(text, sizeof(text), "(PRZ) Materialy (uid: %d)", Thing[mid][t_uid]);
		Thing[mid][t_textid] = CreateDynamic3DTextLabel(text, COLOR_PURPLE, Thing[mid][t_pos][0], Thing[mid][t_pos][1], Thing[mid][t_pos][2], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Thing[mid][t_vw]);
        return 1;
        }
 
        if(gShipCurrentPoint == 1) {
            SetTimer("StartMovingTimer",30*1000,0);
                return 1;
        }
			foreach(Player, i) {
					if(IsPlayerInRangeOfPoint(i,300.0,gShipRoutePoints[gShipCurrentPoint][0],gShipRoutePoints[gShipCurrentPoint][1], gShipRoutePoints[gShipCurrentPoint][2]))
					{
					StopAudioStreamForPlayer(i);
					PlayAudioStreamForPlayer(i, "http://147.135.199.42/samp/statek.mp3");
					}
				}
    MoveObject(gMainShipObjectId,gShipRoutePoints[gShipCurrentPoint][0],
                                   gShipRoutePoints[gShipCurrentPoint][1],
                                                           gShipRoutePoints[gShipCurrentPoint][2],
                                                           SHIP_MOVE_SPEED,
                                                           gShipRoutePoints[gShipCurrentPoint][3],
                                                           gShipRoutePoints[gShipCurrentPoint][4],
                                                           gShipRoutePoints[gShipCurrentPoint][5]);
 
        return 1;
}

/*stock PlaySoundForPlayersInRange(soundid, Float:range, Float:x, Float:y, Float:z)
{
        for(new i=0; i<MAX_PLAYERS; i++)
        {
            if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,range,x,y,z))
            {
                    PlayerPlaySound(i, soundid, x, y, z);
            }
        }
}
*/
FormatNumber(number)
{
   new Str[15];
   format(Str, 15, "%d", number);

   if (strlen(Str) < sizeof(Str))
   {
      if (number >= 1000 && number < 10000)
             strins( Str, ",", 1, sizeof(Str));

      else if (number >= 10000 && number < 100000)
           strins(Str, ",", 2, sizeof(Str));

      else if (number >= 100000 && number < 1000000)
           strins(Str, ",", 3, sizeof(Str));

      else if (number >= 1000000 && number < 10000000)
           strins(Str, ",", 1, sizeof(Str)),strins(Str, ",", 5, sizeof(Str));

      else if (number >= 10000000 && number < 100000000)
           strins(Str, ",", 2, sizeof(Str)),strins(Str, ",", 6, sizeof(Str));

      else if (number >= 100000000 && number < 1000000000)
           strins(Str, ",", 3, sizeof(Str)),strins(Str, ",", 7, sizeof(Str));

      else if (number >= 1000000000 && number < 10000000000)
           strins(Str, ",", 1, sizeof(Str)),
           strins(Str, ",", 5, sizeof(Str)),
           strins(Str, ",", 9, sizeof(Str));
      else format(Str, 10, "%d", number);
   }
   else  format( Str, 15, "<BUG>" );
   return Str;
}

stock sscanf(string[], format[], {Float,_}:...)
{
	#if defined isnull
		if (isnull(string))
	#else
		if (string[0] == 0 || (string[0] == 1 && string[1] == 0))
	#endif
		{
			return format[0];
		}
	#pragma tabsize 4
	new
		formatPos = 0,
		stringPos = 0,
		paramPos = 2,
		paramCount = numargs(),
		delim = ' ';
	while (string[stringPos] && string[stringPos] <= ' ')
	{
		stringPos++;
	}
	while (paramPos < paramCount && string[stringPos])
	{
		switch (format[formatPos++])
		{
			case '\0':
			{
				return 0;
			}
			case 'i', 'd':
			{
				new
					neg = 1,
					num = 0,
					ch = string[stringPos];
				if (ch == '-')
				{
					neg = -1;
					ch = string[++stringPos];
				}
				do
				{
					stringPos++;
					if ('0' <= ch <= '9')
					{
						num = (num * 10) + (ch - '0');
					}
					else
					{
						return -1;
					}
				}
				while ((ch = string[stringPos]) > ' ' && ch != delim);
				setarg(paramPos, 0, num * neg);
			}
			case 'h', 'x':
			{
				new
					num = 0,
					ch = string[stringPos];
				do
				{
					stringPos++;
					switch (ch)
					{
						case 'x', 'X':
						{
							num = 0;
							continue;
						}
						case '0' .. '9':
						{
							num = (num << 4) | (ch - '0');
						}
						case 'a' .. 'f':
						{
							num = (num << 4) | (ch - ('a' - 10));
						}
						case 'A' .. 'F':
						{
							num = (num << 4) | (ch - ('A' - 10));
						}
						default:
						{
							return -1;
						}
					}
				}
				while ((ch = string[stringPos]) > ' ' && ch != delim);
				setarg(paramPos, 0, num);
			}
			case 'c':
			{
				setarg(paramPos, 0, string[stringPos++]);
			}
			case 'f':
			{

				new changestr[16], changepos = 0, strpos = stringPos;
				while(changepos < 16 && string[strpos] && string[strpos] != delim)
				{
					changestr[changepos++] = string[strpos++];
    				}
				changestr[changepos] = '\0';
				setarg(paramPos,0,_:floatstr(changestr));
			}
			case 'p':
			{
				delim = format[formatPos++];
				continue;
			}
			case '\':
			{
				new
					end = formatPos - 1,
					ch;
				while ((ch = format[++end]) && ch != '\') {}
				if (!ch)
				{
					return -1;
				}
				format[end] = '\0';
				if ((ch = strfind(string, format[formatPos], false, stringPos)) == -1)
				{
					if (format[end + 1])
					{
						return -1;
					}
					return 0;
				}
				format[end] = '\';
				stringPos = ch + (end - formatPos);
				formatPos = end + 1;
			}
			case 'u':
			{
				new
					end = stringPos - 1,
					id = 0,
					bool:num = true,
					ch;
				while ((ch = string[++end]) && ch != delim)
				{
					if (num)
					{
						if ('0' <= ch <= '9')
						{
							id = (id * 10) + (ch - '0');
						}
						else
						{
							num = false;
						}
					}
				}
				if (num && IsPlayerConnected(id))
				{
					setarg(paramPos, 0, id);
				}
				else
				{
					#if !defined foreach
						#define foreach(%1,%2) for (new %2 = 0; %2 < MAX_PLAYERS; %2++) if (IsPlayerConnected(%2))
						#define __SSCANF_FOREACH__
					#endif
					string[end] = '\0';
					num = false;
					new
						name[MAX_PLAYER_NAME];
					id = end - stringPos;
					foreach (Player, playerid)
					{
						GetPlayerName(playerid, name, sizeof (name));
						if (!strcmp(name, string[stringPos], true, id))
						{
							setarg(paramPos, 0, playerid);
							num = true;
							break;
						}
					}
					if (!num)
					{
						setarg(paramPos, 0, INVALID_PLAYER_ID);
					}
					string[end] = ch;
					#if defined __SSCANF_FOREACH__
						#undef foreach
						#undef __SSCANF_FOREACH__
					#endif
				}
				stringPos = end;
			}
			case 's', 'z':
			{
				new
					i = 0,
					ch;
				if (format[formatPos])
				{
					while ((ch = string[stringPos++]) && ch != delim)
					{
						setarg(paramPos, i++, ch);
					}
					if (!i)
					{
						return -1;
					}
				}
				else
				{
					while ((ch = string[stringPos++]))
					{
						setarg(paramPos, i++, ch);
					}
				}
				stringPos--;
				setarg(paramPos, i, '\0');
			}
			default:
			{
				continue;
			}
		}
		while (string[stringPos] && string[stringPos] != delim && string[stringPos] > ' ')
		{
			stringPos++;
		}
		while (string[stringPos] && (string[stringPos] == delim || string[stringPos] <= ' '))
		{
			stringPos++;
		}
		paramPos++;
	}
	do
	{
		if ((delim = format[formatPos++]) > ' ')
		{
			if (delim == '\')
			{
				while ((delim = format[formatPos++]) && delim != '\') {}
			}
			else if (delim != 'z')
			{
				return delim;
			}
		}
	}
	while (delim > ' ');
	return 0;
}

stock right(source[], len)
{
	new retval[MAX_STRING], srclen;
	srclen = strlen(source);
	strmid(retval, source, srclen - len, srclen, MAX_STRING);
	return retval;
}

stock IsMail(email[])
{
  	new len=strlen(email);
  	new cstate=0;
  	new i;
  	for(i=0;i<len;i++)
	{
	    if ((cstate==0 || cstate==1) && (email[i]>='A' && email[i]<='Z')||(email[i]>='0' && email[i]<='9') || (email[i]>='a' && email[i]<='z')  || (email[i]=='.')  || (email[i]=='-')  || (email[i]=='_'))
	    {
	    }
		else
		{
	       // Ok no A..Z,a..z,_,.,-
	       if ((cstate==0) &&(email[i]=='@'))
		   {
	          // its an @ after the name, ok state=1;
	          cstate=1;
	       }
		   else
		   {
	          // Its stuff which is not allowed
	          return false;
	       }
	 	}
	}
  	if (cstate<1) return false;
  	if (len<6) return false;
  	// A toplevel domain has only 3 to 4 signs :-)
  	if ((email[len-3]=='.') || (email[len-4]=='.') || (email[len-5]=='.')) return true;
  	return false;
}



// FISH PLACE
public VaildFishPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4,403.8266,-2088.7598,7.8359) || IsPlayerInRangeOfPoint(playerid, 4,398.7553,-2088.7490,7.8359))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4,396.2197,-2088.6692,7.8359) || IsPlayerInRangeOfPoint(playerid, 4,391.1094,-2088.7976,7.8359))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4,383.4157,-2088.7849,7.8359) || IsPlayerInRangeOfPoint(playerid, 4,374.9598,-2088.7979,7.8359))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4,369.8107,-2088.7927,7.8359) || IsPlayerInRangeOfPoint(playerid, 4,367.3637,-2088.7925,7.8359))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4,362.2244,-2088.7981,7.8359) || IsPlayerInRangeOfPoint(playerid, 4,354.5382,-2088.7979,7.8359))
		{
		    return 1;
		}
	}
	return 0;
}

public DepositMoney(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member == 4 || member == 5 || member == 6 || member == 10 || member == 8 || member == 9 || member == 11 || member == 12 || member == 13 || member == 14)
		{
		    return 1;
		}
		if(leader == 4 || leader == 5 || leader == 6 || leader == 10 || leader == 11 || leader == 12 || leader == 13 || leader == 14 || leader == 8 || leader == 9)
		{
		    return 1;
		}
	}
	return 0;
}

// MAFIA MEMBER
public IsAMember(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member == 4 || member == 5 || member == 6 || member == 10|| member == 11)
		{
		    return 1;
		}
		if(leader==4 || leader==5 || leader==6 || leader==10 || member == 11)
		{
		    return 1;
		}
	}
	return 0;
}

// COP
public IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==1 || member==2 || member==3)
		{
		    return 1;
		}
		else if(leader==1 || leader==2 || leader==3)
		{
		    return 1;
		}
	}
	return 0;
}

forward IsANewsReporter(playerid);
public IsANewsReporter(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==9)
		{
		    return 1;
		}
		else if(leader==9)
		{
		    return 1;
		}
	}
	return 0;
}

// CLOTHES PLACE
public IsAtClothShop(playerid)
{
    if(IsPlayerConnected(playerid))
	{
        if(IsPlayerInRangeOfPoint(playerid, 50.0,207.5627,-103.7291,1005.2578) || IsPlayerInRangeOfPoint(playerid, 50.0,203.9068,-41.0728,1001.8047))
		{//Binco & Suburban
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 50.0,214.4470,-7.6471,1001.2109) || IsPlayerInRangeOfPoint(playerid, 50.0,161.3765,-83.8416,1001.8047) || IsPlayerInRangeOfPoint(playerid, 50.0,204.2205,-168.3091,1000.5234))
		{//Zip & Victim
		    return 1;
		}
	}
	return 0;
}

// BANK
public IsAtBank(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerInRangeOfPoint(playerid, 50.0, 2306.5564,-16.3045,26.7496))
	    {//BANK LS
	        return 1;
	    }
	}
	return 0;
}

// ORDER PLACE
public IsAtOrderPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerInRangeOfPoint(playerid, 100.0, 2546.4717,-1304.7201,1054.6470))
	    {//BANK LS
	        return 1;
	    }
	}
	return 0;
}

// GAS STATION PLACE
public IsAtGasStation(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid,10.0,1004.0070,-939.3102,42.1797) || IsPlayerInRangeOfPoint(playerid,10.0,1944.3260,-1772.9254,13.3906))
		{//LS
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,10.0,-90.5515,-1169.4578,2.4079) || IsPlayerInRangeOfPoint(playerid,10.0,-1609.7958,-2718.2048,48.5391))
		{//LS
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,10.0,-2029.4968,156.4366,28.9498) || IsPlayerInRangeOfPoint(playerid,10.0,-2408.7590,976.0934,45.4175))
		{//SF
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,10.0,-2243.9629,-2560.6477,31.8841) || IsPlayerInRangeOfPoint(playerid,10.0,-1676.6323,414.0262,6.9484))
		{//Between LS and SF
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,10.0,2202.2349,2474.3494,10.5258) || IsPlayerInRangeOfPoint(playerid,10.0,614.9333,1689.7418,6.6968))
		{//LV
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,10.0,-1328.8250,2677.2173,49.7665) || IsPlayerInRangeOfPoint(playerid,10.0,70.3882,1218.6783,18.5165))
		{//LV
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,10.0,2113.7390,920.1079,10.5255) || IsPlayerInRangeOfPoint(playerid,10.0,-1327.7218,2678.8723,50.0625))
		{//LV
		    return 1;
		}
	}
	return 0;
}

// ATM PLACE
public IsAtATM(playerid)
{
    if(IsPlayerConnected(playerid))
	{
        if(PlayerToPoint(2.0,playerid,1137.1111,-1630.3916,13.8810) || PlayerToPoint(2.0,playerid,1009.0426,-929.6671,42.3281) || PlayerToPoint(2.0,playerid,1110.9364,-1788.1910,16.5938) || PlayerToPoint(2.0,playerid,1832.1864,-1849.8851,13.5781) || PlayerToPoint(2.0,playerid,411.9183,-1503.4347,31.4582) || PlayerToPoint(2.0,playerid,1646.5222,-2203.6174,13.5469))
		{//ATM
		    return 1;
		}
	}
	return 0;
}

// BAR PLACE
public IsAtBar(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid,20.0,-224.8864,1404.6012,27.7734))
		{//Idlewood
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,20.0,1215.3036,-13.3529,1000.9219))
		{//PIG Pen
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,20.0,499.4840,-20.3277,1000.6797))
		{//ALHAMBRA
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,10.0,-785.8838,500.0782,1371.7422))
		{//RESTAURANT LS
		    return 1;
		}
	}
	return 0;
}

// BOAT
public IsABoat(carid)
{
	if(GetVehicleModel(carid) == 430 || GetVehicleModel(carid) == 446 || GetVehicleModel(carid) == 452 || GetVehicleModel(carid) == 453 || GetVehicleModel(carid) == 454 || GetVehicleModel(carid) == 472 || GetVehicleModel(carid) == 473 || GetVehicleModel(carid) == 484 || GetVehicleModel(carid) == 493 || GetVehicleModel(carid) == 595)
	{
		return 1;
	}
	return 0;
}

// PLANE
public IsAPlane(carid)
{
	if(GetVehicleModel(carid) == 417 || GetVehicleModel(carid) == 425 || GetVehicleModel(carid) == 447 || GetVehicleModel(carid) == 460 || GetVehicleModel(carid) == 464 || GetVehicleModel(carid) == 465 || GetVehicleModel(carid) == 469 || GetVehicleModel(carid) == 476 || GetVehicleModel(carid) == 487 || GetVehicleModel(carid) == 488 || GetVehicleModel(carid) == 497 || GetVehicleModel(carid) == 501 || GetVehicleModel(carid) == 511 || GetVehicleModel(carid) == 512 || GetVehicleModel(carid) == 513
	 || GetVehicleModel(carid) == 519 || GetVehicleModel(carid) == 520 || GetVehicleModel(carid) == 548 || GetVehicleModel(carid) == 553 || GetVehicleModel(carid) == 563 || GetVehicleModel(carid) == 577 || GetVehicleModel(carid) == 592 || GetVehicleModel(carid) == 593)
	{
		return 1;
	}
	return 0;
}

// AMBULANCE
public IsAnAmbulance(carid)
{
	if(ServerVehicles[carid][vFaction] == 14) return 1;
	return 0;
}

// TAXI CAR
public IsAnTaxi(carid)
{
	if(ServerVehicles[carid][vFaction] == 13) return 1;
	return 0;
}

// BIKE
public IsABike(carid)
{
	if(GetVehicleModel(carid) == 481 || GetVehicleModel(carid) == 509 || GetVehicleModel(carid) == 510)
	{
		return 1;
	}
	return 0;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    new str[256];
	if (GetPVarInt(playerid, "p_panel"))
	{
	    // Ukryj menu, jesli widzisz
	    if (clickedid == TextDrawVehiclePanel[8] || clickedid == Text:INVALID_TEXT_DRAW)
	    {
	        HideTextDrawsPanel(playerid);
	        return 1;
	    }
	    
	    new id = MAX_VEHICLE_PARAMS;
	    while(id--)
	    {
		    if (clickedid == TextDrawVehiclePanel[id + 1])
		    {
		        UpdateVehicleParams(playerid, id);
		        break;
		    }
	    }
	}
	if(clickedid == HiddTD[0]) {
	    if(CarColor[playerid] == 1) {
			if(pColor1[playerid] == 0) pColor1[playerid] = 127;
		    pColor1[playerid] --;
		    ChangeVehicleColor(GetPlayerVehicleID(playerid), pColor1[playerid], pColor2[playerid]);
		    format(str, sizeof(str), "Kolor 1: %d", pColor1[playerid]);
		    PlayerTextDrawSetString(playerid, HiddTDs[0], str);
		    PlayerTextDrawShow(playerid, HiddTDs[0]);
	    }
	    else {
			if(pColor1[playerid] == 128) pColor1[playerid] = 256;
		    pColor1[playerid] --;
		    ChangeVehicleColor(GetPlayerVehicleID(playerid), pColor1[playerid], pColor2[playerid]);
		    format(str, sizeof(str), "Kolor 1: %d", pColor1[playerid]);
		    PlayerTextDrawSetString(playerid, HiddTDs[0], str);
		    PlayerTextDrawShow(playerid, HiddTDs[0]);
		}
	}
	if(clickedid == HiddTD[1]) {
	    if(CarColor[playerid] == 1) {
			if(pColor1[playerid] == 127) pColor1[playerid] = 0;
		    pColor1[playerid] ++;
		    ChangeVehicleColor(GetPlayerVehicleID(playerid), pColor1[playerid], pColor2[playerid]);
		    format(str, sizeof(str), "Kolor 1: %d", pColor1[playerid]);
		    PlayerTextDrawSetString(playerid, HiddTDs[0], str);
		    PlayerTextDrawShow(playerid, HiddTDs[0]);
	    }
	    else {
			if(pColor1[playerid] == 255) pColor1[playerid] = 127;
		    pColor1[playerid] ++;
		    ChangeVehicleColor(GetPlayerVehicleID(playerid), pColor1[playerid], pColor2[playerid]);
		    format(str, sizeof(str), "Kolor 1: %d", pColor1[playerid]);
		    PlayerTextDrawSetString(playerid, HiddTDs[0], str);
		    PlayerTextDrawShow(playerid, HiddTDs[0]);
		}
	}

	if(clickedid == HiddTD[3]) {
	    if(CarColor[playerid] == 1) {
			if(pColor2[playerid] == 0) pColor2[playerid] = 127;
		    pColor2[playerid] --;
		    ChangeVehicleColor(GetPlayerVehicleID(playerid), pColor1[playerid], pColor2[playerid]);
		    format(str, sizeof(str), "Kolor 2: %d", pColor2[playerid]);
		    PlayerTextDrawSetString(playerid, HiddTDs[2], str);
		    PlayerTextDrawShow(playerid, HiddTDs[2]);
	    }
	    else {
			if(pColor2[playerid] == 128) pColor2[playerid] = 256;
		    pColor2[playerid] --;
		    ChangeVehicleColor(GetPlayerVehicleID(playerid), pColor1[playerid], pColor2[playerid]);
		    format(str, sizeof(str), "Kolor 2: %d", pColor2[playerid]);
		    PlayerTextDrawSetString(playerid, HiddTDs[2], str);
		    PlayerTextDrawShow(playerid, HiddTDs[2]);
		}
	}
	if(clickedid == HiddTD[4]) {
	    if(CarColor[playerid] == 1) {
			if(pColor2[playerid] == 127) pColor2[playerid] = 0;
		    pColor2[playerid] ++;
		    ChangeVehicleColor(GetPlayerVehicleID(playerid), pColor1[playerid], pColor2[playerid]);
		    format(str, sizeof(str), "Kolor 2: %d", pColor2[playerid]);
		    PlayerTextDrawSetString(playerid, HiddTDs[2], str);
		    PlayerTextDrawShow(playerid, HiddTDs[2]);
	    }
	    else {
			if(pColor2[playerid] == 255) pColor2[playerid] = 127;
		    pColor2[playerid] ++;
		    ChangeVehicleColor(GetPlayerVehicleID(playerid), pColor1[playerid], pColor2[playerid]);
		    format(str, sizeof(str), "Kolor 2: %d", pColor2[playerid]);
		    PlayerTextDrawSetString(playerid, HiddTDs[2], str);
		    PlayerTextDrawShow(playerid, HiddTDs[2]);
		}
	}

	if(clickedid == HiddTD[2]) {
	    new idd = pCar[playerid];
		ChangeVehicleColor(GetPlayerVehicleID(playerid), CarInfo[idd][cColorOne], CarInfo[idd][cColorTwo]);
    	SetCameraBehindPlayer(playerid), SetPlayerInterior(playerid, pInteriorID[playerid]), SetVehiclePos(GetPlayerVehicleID(playerid), pPos[playerid][0], pPos[playerid][1], pPos[playerid][2]);
		SetPlayerVirtualWorld(playerid, 0);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
		TextDrawHideForPlayer(playerid, HiddTD[0]);
		TextDrawHideForPlayer(playerid, HiddTD[1]);
		TextDrawHideForPlayer(playerid, HiddTD[2]);
		TextDrawHideForPlayer(playerid, HiddTD[3]);
		TextDrawHideForPlayer(playerid, HiddTD[4]);
		PlayerTextDrawHide(playerid, HiddTDs[0]);
		PlayerTextDrawHide(playerid, HiddTDs[1]);
		PlayerTextDrawHide(playerid, HiddTDs[2]);
		InShop[playerid] = 0;
		CancelSelectTextDraw(playerid);
		SInterior[playerid] = 0;
		CarColor[playerid] = 0;
	}

	if(clickedid == Text:INVALID_TEXT_DRAW) {
	    if(InShop[playerid] == 1 || CreateHouse[playerid] == 1 || SInterior[playerid] != 0) {
			SelectTextDraw(playerid, 0xFF0000FF);
	    }
		if(InDealer[playerid] >= 1 && TestingModel[playerid] == 0) {
			CancelSelectTextDraw(playerid);
			HideDealershipTextdraws(playerid);
			if(InDealer[playerid] == 1) SetPlayerPosEx(playerid, 327.9443, -1512.6609, 36.1366);
			else if(InDealer[playerid] == 2) SetPlayerPosEx(playerid, 332.6239, -1506.7646, 36.0565);
			InDealer[playerid] = 0;
			DealerCategory[playerid] = 0;
			DealerCarColor1[playerid] = 0;
			DealerCarColor2[playerid] = 0;
			DealerCarAngle[playerid] = 0;
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			DestroyVehicle(DealerCar[playerid]);
			DealerCar[playerid] = 0;
			DealerCarType[playerid] = -1;
			PlayerPlaySound(playerid, 1085, 0.0, 0.0, 10.0);
		}
		return 1;
	}

	if(clickedid == ShopTD[0]) {
	// --
		if(SInterior[playerid] == 1) SInterior[playerid] = 37;
		SInterior[playerid] --;
		SetInteriorCamera(playerid);
	}
	if(clickedid == ShopTD[1]) {
	// ++
		if(SInterior[playerid] == 36) SInterior[playerid] = 0;
		SInterior[playerid] ++;
		SetInteriorCamera(playerid);
		SetPlayerVirtualWorld(playerid, pVirtual[playerid]);
	}
	if(clickedid == ShopTD[4]) HideShopTDs(playerid), SetCameraBehindPlayer(playerid), SetPlayerInterior(playerid, pInteriorID[playerid]), SetPlayerPosEx(playerid, pPos[playerid][0], pPos[playerid][1], pPos[playerid][2]), CreateHouse[playerid] = 0, SInterior[playerid] = 0;
	return 1;
}


function PrzypomnienieOPracy() {
	new helpss, reports, string[180];
	foreach(Player,f) {
	    if(IsPlayerConnected(f) && IsPlayerLogged[f] == 1) {
			if(Helped[f] == 1) helpss++;
			if(Ajutor[f] != 0) reports++;
		}
	}
	foreach(Player, i) {
		if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {
			if(PlayerInfo[i][pAdmin] != 0 || PlayerInfo[i][pHelper] != 0) {
				if(helpss != 0 || reports != 0) {
					format(string, sizeof(string), "{FFA200}**{FFFF00} Obecnie jest %d pytan i %d zg³oszeñ. {FFA200}**", helpss, reports);
					SendClientMessage(i, COLOR_YELLOW, string);
				}	
			}
		}
	}
	//HideDeathMessage();
	return 1;
}


/*function HideDeathMessage() {
	foreach(Player, i) {
		if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {
			for(new x = 0; x < 5; x++)
			{
					SendDeathMessageToPlayer(i, 1001, 1001, 200);
			}
		}		
	}			
	return 1;
}
function ADeathMessage(playerid, killerid, reason) {
	foreach(Player, i) {
		if(IsPlayerConnected(i) && PlayerInfo[i][pAdmin] >= 1) {
			SendDeathMessageToPlayer(i, killerid, playerid, reason);
		}	
	}
	return 1;
}*/

function GiveVehicle(playerid, modelid) {
	
	new string[180];	
	new idd;
	format(string, sizeof(string), "INSERT INTO cars (Model) VALUES (%d)", modelid);
	new Cache: result = mysql_query(SQL, string);
	new i = cache_insert_id();
	cache_delete(result);	
	idd = i;
	
	new key = FindCSlot(playerid);
	PlayerInfo[playerid][pCarKey][key-1] = idd;
	mysql_format(SQL, string, sizeof(string), "UPDATE users SET CarKey%d='%d' WHERE `ID`='%d' LIMIT 1", key, PlayerInfo[playerid][pCarKey][key-1], PlayerInfo[playerid][pSQLID]);
	mysql_tquery(SQL, string, "", "");			

	CarInfo[idd][Userid] = PlayerInfo[playerid][pSQLID];
	CarInfo[idd][cID] = idd;
	CarInfo[idd][cModel] = modelid;
	CarInfo[idd][cValue] = 1;
	CarInfo[idd][cSpecial] = 1;
	CarInfo[idd][cHP] = 100;
	new randspawn = random(sizeof(DealerCarPos1));
	CarInfo[idd][cLocationx] = DealerCarPos1[randspawn][0];	CarInfo[idd][cLocationy] = DealerCarPos1[randspawn][1];	CarInfo[idd][cLocationz] = DealerCarPos1[randspawn][2];
	CarInfo[idd][cAngle] = DealerCarPos1[randspawn][3];
	CarInfo[idd][cColorOne] = 1;	CarInfo[idd][cColorTwo] = 1;
	strmid(CarInfo[idd][cOwner], PlayerInfo[playerid][pUsername], 0, strlen(PlayerInfo[playerid][pUsername]), 255);
	strmid(CarInfo[idd][cLicense], "NewCar", 0, 6, 255);
	CarInfo[idd][cAlarm] = 0;	CarInfo[idd][cLock] = 0;
	CarInfo[idd][mod0] = 0;		CarInfo[idd][mod1] = 0;		CarInfo[idd][mod2] = 0;		CarInfo[idd][mod3] = 0;
	CarInfo[idd][mod4] = 0;		CarInfo[idd][mod5] = 0;		CarInfo[idd][mod6] = 0;		CarInfo[idd][mod7] = 0;
	CarInfo[idd][mod8] = 0;		CarInfo[idd][mod9] = 0;		CarInfo[idd][mod10] = 0;	CarInfo[idd][mod11] = 0;
	CarInfo[idd][mod12] = 0;	CarInfo[idd][mod13] = 0;	CarInfo[idd][paintjob] = 3;	CarInfo[idd][KM] = 0;

	saveCar(idd);
	mysql_tquery(SQL, string, "", "");

	CarInfo[idd][Spawned] = CreateVehicleEx(CarInfo[idd][cModel],CarInfo[idd][cLocationx],CarInfo[idd][cLocationy],CarInfo[idd][cLocationz],CarInfo[idd][cAngle],CarInfo[idd][cColorOne],CarInfo[idd][cColorTwo],-1);
	VehicleOwned[CarInfo[idd][Spawned]] = CarInfo[idd][Spawned];
	VehicleSQL[CarInfo[idd][Spawned]] = idd;	
	new e,l,aa,d,b,bo,o;
	if(modelid == 404) {
		CP[playerid] = 53;
		SCM(playerid, COLOR_SERVER, "Otrzymales Pereniala na start. Uzyj polecenia /vehicles, aby uzyskac wiecej informacji!");
		SetPlayerCheckpointEx(playerid, CarInfo[idd][cLocationx],CarInfo[idd][cLocationy],CarInfo[idd][cLocationz], 5.0);
	}
	GetVehicleParamsEx(CarInfo[idd][Spawned],e,l,aa,d,b,bo,o);
	SetVehicleParamsEx(CarInfo[idd][Spawned],e,l,aa,1,b,bo,o);
	SetVehicleNumberPlate(CarInfo[idd][Spawned],CarInfo[idd][cLicense]);
	CarInfo[idd][cLock] = 1;
			
	mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Spawned='%d' WHERE ID=%d", CarInfo[idd][Spawned], idd);
	mysql_tquery(SQL, string, "", "");
	return 1;
}


stock saveCar(idd) {
	if(idd == 0) return 1;
	new query[512];
	mysql_format(SQL, query, sizeof(query), 
		"UPDATE cars SET Model='%d', Locationx='%f', Locationy='%f', Locationz='%f', Angle='%f', HP='%f', ColorOne='%d', ColorTwo='%d', Owner='%s', Value='%d', License='%s', Userid='%d'  WHERE ID=%d", 
	CarInfo[idd][cModel], CarInfo[idd][cLocationx], CarInfo[idd][cLocationy], CarInfo[idd][cLocationz], CarInfo[idd][cAngle], CarInfo[idd][cHP], CarInfo[idd][cColorOne], CarInfo[idd][cColorTwo], CarInfo[idd][cOwner], CarInfo[idd][cValue],
	CarInfo[idd][cLicense], CarInfo[idd][Userid], idd);
	mysql_tquery(SQL, query, "", "");
	return 1;
}	

stock saveObjects(string[]) {
	new query[512];
	mysql_format(SQL, query, sizeof(query), 
		"UPDATE cars SET Model='%d', Locationx='%f', Locationy='%f', Locationz='%f', Angle='%f', ColorOne='%d', ColorTwo='%d', Owner='%s', Value='%d', License='%s', Userid='%d'  WHERE ID=%d", 
	CarInfo[idd][cModel], CarInfo[idd][cLocationx], CarInfo[idd][cLocationy], CarInfo[idd][cLocationz], CarInfo[idd][cAngle], CarInfo[idd][cColorOne], CarInfo[idd][cColorTwo], CarInfo[idd][cOwner], CarInfo[idd][cValue],
	CarInfo[idd][cLicense], CarInfo[idd][Userid], idd);
	mysql_tquery(SQL, query, "", "");
	return 1;
}	

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	new szQuery[256],string[256];
    if(playertextid == BGunTD[5]) { HideGunTextdraws(playerid); SendClientMessage(playerid, -1, "Ai parasit meniul!"); DestroyPlayerObject(playerid, GunObject[playerid]); }
	if(playertextid == BGunTD[2]) {
	// left <
		if(BuyGunS[playerid] == 0) return 1;
		BuyGunS[playerid] --;
		new wname[64];
		GetWeaponName(BuyGunD[BuyGunS[playerid]][0], wname, sizeof(wname));		
		format(string, sizeof(string), "%s~n~~g~$%d", wname, BuyGunD[BuyGunS[playerid]][2]);
		PlayerTextDrawSetString(playerid, BGunTD[0], string);
		PlayerTextDrawShow(playerid, BGunTD[0]);

		DestroyPlayerObject(playerid, GunObject[playerid]);
		GunObject[playerid] = CreatePlayerObject(playerid, BuyGunD[BuyGunS[playerid]][1], 315.09949, -133.58640, 999.68811,   90.00000, 0.00000, 90.90000);
	}
	if(playertextid == BGunTD[4]) {
	// right >
		if(BuyGunS[playerid] == 7) BuyGunS[playerid] = -1;
		BuyGunS[playerid] ++;
		new wname[64];
		GetWeaponName(BuyGunD[BuyGunS[playerid]][0], wname, sizeof(wname));		
		format(string, sizeof(string), "%s~n~~g~$%d", wname, BuyGunD[BuyGunS[playerid]][2]);
		PlayerTextDrawSetString(playerid, BGunTD[0], string);
		PlayerTextDrawShow(playerid, BGunTD[0]);		
		DestroyPlayerObject(playerid, GunObject[playerid]);
		GunObject[playerid] = CreatePlayerObject(playerid, BuyGunD[BuyGunS[playerid]][1], 315.09949, -133.58640, 999.68811,   90.00000, 0.00000, 90.90000);
	}
	if(playertextid == BGunTD[3]) {
		// buy 
		if(GetPlayerCash(playerid) < BuyGunD[BuyGunS[playerid]][2]) return SendClientMessage(playerid, -1, "* Nu ai aceasta suma de bani!");
		GivePlayerCash(playerid, -BuyGunD[BuyGunS[playerid]][2]);
		GivePlayerWeapon(playerid, BuyGunD[BuyGunS[playerid]][0], 10+random(100));
		HideGunTextdraws(playerid);
		new wname[64];
		GetWeaponName(BuyGunD[BuyGunS[playerid]][0], wname, sizeof(wname));
		format(string, sizeof(string), "Kupiles %s in schimbul a $%d.", wname, BuyGunD[BuyGunS[playerid]][2]);	
		SCM(playerid, COLOR_WHITE, string);
		BizzInfo[2][bBalance] += BuyGunD[BuyGunS[playerid]][2];
		SBUpdate(2, sbBalancex);
		DestroyPlayerObject(playerid, GunObject[playerid]);
	}	
	if(playertextid == NextColorMain) {
		if(DealerCarColor1[playerid] == 127) DealerCarColor1[playerid] = 0;
		else if(DealerCarColor1[playerid] >= 0) DealerCarColor1[playerid] ++;
		ChangeVehicleColor(DealerCar[playerid], DealerCarColor1[playerid], DealerCarColor2[playerid]);
	}
	if(playertextid == BackColorMain) {
		if(DealerCarColor1[playerid] >= 1) DealerCarColor1[playerid] --;
		else DealerCarColor1[playerid] = 127;
		ChangeVehicleColor(DealerCar[playerid], DealerCarColor1[playerid], DealerCarColor2[playerid]);
	}
	if(playertextid == NextColorSec) {
		if(DealerCarColor2[playerid] == 127) DealerCarColor2[playerid] = 0;
		else if(DealerCarColor2[playerid] >= 0) DealerCarColor2[playerid] ++;
		ChangeVehicleColor(DealerCar[playerid], DealerCarColor1[playerid], DealerCarColor2[playerid]);
	}
	if(playertextid == BackColorSec) {
		if(DealerCarColor2[playerid] >= 1) DealerCarColor2[playerid] --;
		else DealerCarColor2[playerid] = 127;
		ChangeVehicleColor(DealerCar[playerid], DealerCarColor1[playerid], DealerCarColor2[playerid]);
	}
	if(playertextid == CarsCategory) {
		new x=0, dbID[256];
		if(DealerCarType[playerid] == 1) return PlayerPlaySound(playerid, 1085, 0.0, 0.0, 10.0);
		format(szQuery, sizeof(szQuery), "SELECT * FROM `dsveh` WHERE `Type`='1' ORDER BY `ID` ASC");
		new Cache: result = mysql_query(SQL, szQuery);
		for(new i, j = cache_get_row_count (); i != j; ++i)
		{
			cache_get_field_content(i, "ID", dbID);
			x++;
			SelectedCar[playerid][x] = strval(dbID);
			LastDealerCar[playerid] = strval(dbID);
		}
		cache_delete(result);
		TotalDealerCars[playerid] = x;
		DealerCarType[playerid] = 1;
		DealerID[playerid] = 1;
		DestroyVehicle(DealerCar[playerid]);
		DealerCarAngle[playerid] = 75.7200;
		SetPlayerInterior(playerid, 1);

		DealerCar[playerid] = CreateVehicleEx(DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel],613.7783, -2.9987, 1000.5500, 75.7200, DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
		Gas[DealerCar[playerid]] = 100;
		LinkVehicleToInterior(DealerCar[playerid], 1);
		SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
		PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
		SetPlayerCameraPos(playerid, 604.9370, -2.9715, 1003.8300);
		SetPlayerCameraLookAt(playerid, 605.9343, -2.9241, 1003.4600);
		new szType[256], szText[1024];
		if(InDealer[playerid] == 1) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 0) szType = "~g~Normalny";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0) szType = "~r~Premium";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] >= 0) szType = "~g~Premium";
			if(GetPlayerCash(playerid) >= DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Cena: ~g~$%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]), szType);
			else if(GetPlayerCash(playerid) < DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Cena: ~r~$%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]), szType);
		}
		else if(InDealer[playerid] == 2) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 0) szType = "~g~Normalny";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0) szType = "~r~Premium";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] >= 0) szType = "~g~Premium";
			if(GetPlayerCash(playerid) >= DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Gold: ~g~%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]), szType);
			else if(GetPlayerCash(playerid) < DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Gold: ~r~%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]), szType);
		}
		PlayerTextDrawSetString(playerid, InfoDS, szText);
		PlayerTextDrawShow(playerid, InfoDS);
	}

	if(playertextid == BikesCategory) {
		new x=0, dbID[256];
		if(DealerCarType[playerid] == 2) return PlayerPlaySound(playerid, 1085, 0.0, 0.0, 10.0);
		format(szQuery, sizeof(szQuery), "SELECT * FROM `dsveh` WHERE `Type`='2' ORDER BY `ID` ASC");
		new Cache: result = mysql_query(SQL, szQuery);
		for(new i, j = cache_get_row_count (); i != j; ++i)
		{
			cache_get_field_content(i, "ID", dbID);
			x++;
			SelectedCar[playerid][x] = strval(dbID);
			LastDealerCar[playerid] = strval(dbID);
		}
		cache_delete(result);
		TotalDealerCars[playerid] = x;
		DealerCarType[playerid] = 2;
		DealerID[playerid] = 1;
		DestroyVehicle(DealerCar[playerid]);
		DealerCarAngle[playerid] = 75.7200;
		SetPlayerInterior(playerid, 0);
		SetPlayerInterior(playerid, 1);
		DealerCar[playerid] = CreateVehicleEx(DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel],613.7783, -2.9987, 1000.5500, 75.7200, DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
		Gas[DealerCar[playerid]] = 100;
		LinkVehicleToInterior(DealerCar[playerid], 1);
		SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
		PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
		SetPlayerCameraPos(playerid, 604.9370, -2.9715, 1003.8300);
		SetPlayerCameraLookAt(playerid, 605.9343, -2.9241, 1003.4600);
		new szType[256], szText[1024];
		if(InDealer[playerid] == 1) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 0) szType = "~g~Normalny";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0) szType = "~r~Premium";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] >= 0) szType = "~g~Premium";
			if(GetPlayerCash(playerid) >= DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Cena: ~g~$%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]), szType);
			else if(GetPlayerCash(playerid) < DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Cena: ~r~$%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]), szType);
		}
		else if(InDealer[playerid] == 2) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 0) szType = "~g~Normalny";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0) szType = "~r~Premium";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] >= 0) szType = "~g~Premium";
			if(GetPlayerCash(playerid) >= DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Gold: ~g~%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]), szType);
			else if(GetPlayerCash(playerid) < DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Gold: ~r~%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]), szType);
		}
		PlayerTextDrawSetString(playerid, InfoDS, szText);
		PlayerTextDrawShow(playerid, InfoDS);
	}
	if(playertextid == BoatsCategory) {
	if(PlayerInfo[playerid][pBoatLic] == 0) return SCM(playerid, COLOR_NEWS, "Nie posiadasz licencji na plywanie!");
		new x=0, dbID[256];
		if(DealerCarType[playerid] == 3) return PlayerPlaySound(playerid, 1085, 0.0, 0.0, 10.0);
		format(szQuery, sizeof(szQuery), "SELECT * FROM `dsveh` WHERE `Type`='3' ORDER BY `ID` ASC");
		new Cache: result = mysql_query(SQL, szQuery);
		for(new i, j = cache_get_row_count (); i != j; ++i)
		{
			cache_get_field_content(i, "ID", dbID);
			x++;
			SelectedCar[playerid][x] = strval(dbID);
			LastDealerCar[playerid] = strval(dbID);
		}
		cache_delete(result);
		TotalDealerCars[playerid] = x;
		DealerCarType[playerid] = 3;
		DealerID[playerid] = 1;
		DestroyVehicle(DealerCar[playerid]);
		DealerCarAngle[playerid] = 214.5153;
		SetPlayerInterior(playerid, 0);
		DealerCar[playerid] = CreateVehicleEx(DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel],179.2214,-1935.9833,-0.2331, 214.5153, DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
		Gas[DealerCar[playerid]] = 100;
		SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
		PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
		SetPlayerCameraPos(playerid, 195.5355, -1952.8099, 8.7636);
		SetPlayerCameraLookAt(playerid, 194.7955, -1952.1398, 8.3886);
		new szType[256], szText[1024];
		if(InDealer[playerid] == 1) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 0) szType = "~g~Normalny";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0) szType = "~r~Premium";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] >= 0) szType = "~g~Premium";
			if(GetPlayerCash(playerid) >= DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Cena: ~g~$%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]), szType);
			else if(GetPlayerCash(playerid) < DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Cena: ~r~$%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]), szType);
		}
		else if(InDealer[playerid] == 2) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 0) szType = "~g~Normalny";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0) szType = "~r~Premium";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] >= 0) szType = "~g~Premium";
			if(GetPlayerCash(playerid) >= DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Gold: ~g~%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]), szType);
			else if(GetPlayerCash(playerid) < DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Gold: ~r~%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]), szType);
		}
		PlayerTextDrawSetString(playerid, InfoDS, szText);
		PlayerTextDrawShow(playerid, InfoDS);
	}
	if(playertextid == AirCategory) {
		if(PlayerInfo[playerid][pFlyLic] == 0) return SCM(playerid, COLOR_NEWS, "Nie posiadasz licencji na latanie!");
		new x=0, dbID[256];
		if(DealerCarType[playerid] == 4) return PlayerPlaySound(playerid, 1085, 0.0, 0.0, 10.0);
		format(szQuery, sizeof(szQuery), "SELECT * FROM `dsveh` WHERE `Type`='4' ORDER BY `ID` ASC");
		new Cache: result = mysql_query(SQL, szQuery);
		for(new i, j = cache_get_row_count (); i != j; ++i)
		{
			cache_get_field_content(i, "ID", dbID);
			x++;
			SelectedCar[playerid][x] = strval(dbID);
			LastDealerCar[playerid] = strval(dbID);
		}
		cache_delete(result);
		TotalDealerCars[playerid] = x;
		DealerCarType[playerid] = 4;
		DealerID[playerid] = 1;
		DestroyVehicle(DealerCar[playerid]);
		DealerCarAngle[playerid] = 320.7336;
		SetPlayerInterior(playerid, 0);
		DealerCar[playerid] = CreateVehicleEx(DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel],1765.7640, -2286.8374, 27.4146,320.7336, DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
		Gas[DealerCar[playerid]] = 100;
		SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
		PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
		SetPlayerCameraPos(playerid, 1769.0742, -2266.9126, 32.7817);
		SetPlayerCameraLookAt(playerid, 1768.9325, -2267.9021, 32.4167);
		new szType[256], szText[1024];
		if(InDealer[playerid] == 1) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 0) szType = "~g~Normalny";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0) szType = "~r~Premium";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] >= 0) szType = "~g~Premium";
			if(GetPlayerCash(playerid) >= DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Cena: ~g~$%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]), szType);
			else if(GetPlayerCash(playerid) < DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Cena: ~r~$%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]), szType);
		}
		else if(InDealer[playerid] == 2) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 0) szType = "~g~Normalny";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0) szType = "~r~Premium";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] >= 0) szType = "~g~Premium";
			if(GetPlayerCash(playerid) >= DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Gold: ~g~%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]), szType);
			else if(GetPlayerCash(playerid) < DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Gold: ~r~%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]), szType);
		}
		PlayerTextDrawSetString(playerid, InfoDS, szText);
		PlayerTextDrawShow(playerid, InfoDS);
	}
	/*if(playertextid == SpecialCategory) {
		new x=0, dbID[256];
		if(DealerCarType[playerid] == 5) return PlayerPlaySound(playerid, 1085, 0.0, 0.0, 10.0);
		format(szQuery, sizeof(szQuery), "SELECT * FROM `dsveh` WHERE `Type`='5' ORDER BY `ID` ASC");
		new Cache: result = mysql_query(SQL, szQuery);
		for(new i, j = cache_get_row_count (); i != j; ++i)
		{
			cache_get_field_content(i, "ID", dbID);
			x++;
			SelectedCar[playerid][x] = strval(dbID);
			LastDealerCar[playerid] = strval(dbID);
		}
		cache_delete(result);
		TotalDealerCars[playerid] = x;
		DealerCarType[playerid] = 5;
		DealerID[playerid] = 1;
		DestroyVehicle(DealerCar[playerid]);
		DealerCarAngle[playerid] = 26.8845;
		SetPlayerInterior(playerid, 0);
		DealerCar[playerid] = CreateVehicleEx(DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel],1543.3701,-1355.8428,328.6331,121.0334, DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
		Gas[DealerCar[playerid]] = 100;
		SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
		PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
		SetPlayerCameraPos(playerid, 1542.2255, -1370.4922, 333.8188);
		SetPlayerCameraLookAt(playerid, 1542.3651, -1369.5028, 333.4086);
		new szType[256], szText[1024];
		if(InDealer[playerid] == 1) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 0) szType = "~g~Normalny";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0) szType = "~r~Premium";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] >= 0) szType = "~g~Premium";
			if(GetPlayerCash(playerid) >= DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Cena: ~g~$%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]), szType);
			else if(GetPlayerCash(playerid) < DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Cena: ~r~$%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]), szType);
		}
		else if(InDealer[playerid] == 2) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 0) szType = "~g~Normalny";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0) szType = "~r~Premium";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] >= 0) szType = "~g~Premium";
			if(GetPlayerCash(playerid) >= DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Gold: ~g~%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]), szType);
			else if(GetPlayerCash(playerid) < DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Gold: ~r~%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]), szType);
		}
		PlayerTextDrawSetString(playerid, InfoDS, szText);
		PlayerTextDrawShow(playerid, InfoDS);
	}
	if(playertextid == RotLeft) {
		if(DealerCarAngle[playerid] == -330.0)  DealerCarAngle[playerid] = 30.0;
		DealerCarAngle[playerid] -= 30.0;
		SetVehicleZAngle(DealerCar[playerid], DealerCarAngle[playerid]);
	}
	if(playertextid == RotRight) {
		if(DealerCarAngle[playerid] == 330.0)  DealerCarAngle[playerid] = -30.0;
		DealerCarAngle[playerid] += 30.0;
		SetVehicleZAngle(DealerCar[playerid], DealerCarAngle[playerid]);
	}
	if(playertextid == BuyModel) {
		if(InDealer[playerid] == 0) return 1;
		if(InDealer[playerid] == 1) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice] > GetPlayerCash(playerid)) {
				SendClientMessage(playerid, COLOR_GREY, "Nie masz dosc pieniedzy, aby kupic ten samochód.");
				return 1;
			}
		}
		else if(InDealer[playerid] == 2) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold] > PlayerInfo[playerid][pPremiumPoints]) {
				SendClientMessage(playerid, COLOR_GREY, "Nie masz wystarczajacej ilosci punktów premium.");
				return 1;
			}
		}
		if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0) {
			SendClientMessage(playerid, COLOR_GREY, "Mozesz posiadac ten samochód tylko, jesli posiadasz konto premium.");
			return 1;
		}
		else
		{
			if(GetSlots(playerid) == GetVehicles(playerid) && PlayerInfo[playerid][pPremiumAccount] != 0) return SCM(playerid, -1, "Masz maksymalna liczbe samochodów osobowych!"); 
			else if(GetSlots(playerid) == 8 && PlayerInfo[playerid][pPremiumAccount] == 0) return SCM(playerid, -1, "Masz maksymalna liczbe samochodów osobowych! Mozesz kupic jeszcze jeden automat w sklepie.");
			else if(GetSlots(playerid) == GetVehicles(playerid)) return SCM(playerid, -1, "Masz maksymalna liczbe samochodów osobowych! Mozesz kupic jeszcze jeden automat w sklepie.");					
			format(string, sizeof(string), "INSERT INTO cars (Model) VALUES (%d)", DSModels[DealerID[playerid]][dModel]);
			new Cache: result = mysql_query(SQL, string);
			new idd = cache_insert_id();
			cache_delete(result);				
					
			new key = FindCSlot(playerid);
			PlayerInfo[playerid][pCarKey][key-1] = idd;
			DespawnCar[playerid][key-1] = 1801;
			mysql_format(SQL, string, sizeof(string), "UPDATE users SET CarKey%d='%d' WHERE `ID`='%d' LIMIT 1", key, PlayerInfo[playerid][pCarKey][key-1], PlayerInfo[playerid][pSQLID]);
			mysql_tquery(SQL, string, "", "");
			
			CP[playerid] = 53;
			CarInfo[idd][Userid] = PlayerInfo[playerid][pSQLID];
			CarInfo[idd][cID] = idd;
			CarInfo[idd][cModel] = DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel];
			
			if(IsABoat2(CarInfo[idd][cModel])) {
				CarInfo[idd][cLocationx] = 195.9016;	CarInfo[idd][cLocationy] =  -1909.8220;	CarInfo[idd][cLocationz] =  -0.0117;
				CarInfo[idd][cAngle] = -173.4001;
				SetPlayerCheckpointEx(playerid,195.9016,  -1909.8220, -0.0117,5.0);
			}
			else if(IsAPlane2(CarInfo[idd][cModel])) {
				CarInfo[idd][cLocationx] = -1249.9836;	CarInfo[idd][cLocationy] = -42.2870;	CarInfo[idd][cLocationz] =  15.8256;
				CarInfo[idd][cAngle] = 77.1000;
				SetPlayerCheckpointEx(playerid,-1249.9836, -42.2870, 15.8256,5.0);
			}
			else {
				new randspawn = random(sizeof(DealerCarPos));
				CarInfo[idd][cLocationx] = DealerCarPos[randspawn][0];	CarInfo[idd][cLocationy] = DealerCarPos[randspawn][1];	CarInfo[idd][cLocationz] = DealerCarPos[randspawn][2];
				CarInfo[idd][cAngle] = DealerCarPos[randspawn][3];
				SetPlayerCheckpointEx(playerid,CarInfo[idd][cLocationx],CarInfo[idd][cLocationy],CarInfo[idd][cLocationz],5.0);
			}
			
			CarInfo[idd][cColorOne] = DealerCarColor1[playerid];	CarInfo[idd][cColorTwo] = DealerCarColor2[playerid];
			strmid(CarInfo[idd][cOwner], PlayerInfo[playerid][pUsername], 0, strlen(PlayerInfo[playerid][pUsername]), 255);
			CarInfo[idd][cValue] = DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice];
			strmid(CarInfo[idd][cLicense], "NewCar", 0, 6, 255);
			CarInfo[idd][cAlarm] = 0;	CarInfo[idd][cLock] = 0;
			CarInfo[idd][mod0] = 0;		CarInfo[idd][mod1] = 0;		CarInfo[idd][mod2] = 0;		CarInfo[idd][mod3] = 0;
			CarInfo[idd][mod4] = 0;		CarInfo[idd][mod5] = 0;		CarInfo[idd][mod6] = 0;		CarInfo[idd][mod7] = 0;
			CarInfo[idd][mod8] = 0;		CarInfo[idd][mod9] = 0;		CarInfo[idd][mod10] = 0;	CarInfo[idd][mod11] = 0;
			CarInfo[idd][mod12] = 0;	CarInfo[idd][mod13] = 0;	CarInfo[idd][paintjob] = 3;	CarInfo[idd][KM] = 0;
			saveCar(idd);

			CarInfo[idd][Spawned] = CreateVehicleEx(CarInfo[idd][cModel],CarInfo[idd][cLocationx],CarInfo[idd][cLocationy],CarInfo[idd][cLocationz],CarInfo[idd][cAngle],CarInfo[idd][cColorOne],CarInfo[idd][cColorTwo],-1);
			VehicleOwned[CarInfo[idd][Spawned]] = CarInfo[idd][Spawned];
			VehicleSQL[CarInfo[idd][Spawned]] = idd;			
			new e,l,aa,d,b,bo,o;
			GetVehicleParamsEx(idd,e,l,aa,d,b,bo,o);
			SetVehicleParamsEx(idd,0,l,aa,d,b,bo,o);
			SetVehicleNumberPlate(CarInfo[idd][Spawned],CarInfo[idd][cLicense]);
			DestroyVehicle(DealerCar[playerid]);
			TogglePlayerControllable(playerid, 1);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerPosEx(playerid, 1449.8494,-2287.2141,13.5469);
			SetPlayerInterior(playerid, 0);
			
			if(InDealer[playerid] == 1) GivePlayerCash(playerid, -DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]);
			else PlayerInfo[playerid][pPremiumPoints] -= DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold];			
			if(InDealer[playerid] == 1) {
				format(string, sizeof(string), "Gratulacje! Kupiles %s za %s$. ",aVehicleNames[DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel]-400],FormatNumber(CarInfo[idd][cValue]));
				SendClientMessage(playerid,COLOR_MONEY,string);
			}
			else {
				format(string, sizeof(string), "Gratulacje! Kupiles %s za %s premium. ",aVehicleNames[DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel]-400],DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]);
				SendClientMessage(playerid,COLOR_MONEY,string);
			}
			
			format(string, sizeof(string), "($) %s(%d) kupil jeden %s[%d].", GetName(playerid), playerid, aVehicleNames[DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel]-400], idd);
			SendAdminMessage(COLOR_YELLOW, string, 1); 			
			InDealer[playerid] = 0;
			SetPlayerCheckpointEx(playerid,CarInfo[idd][cLocationx],CarInfo[idd][cLocationy],CarInfo[idd][cLocationz],5.0);
			CancelSelectTextDraw(playerid);
			HideDealershipTextdraws(playerid);		
			SetPlayerPosEx(playerid, 327.9443, -1512.6609, 36.1366);
		}
	}*/
	if(playertextid == ExitDS) {
		CancelSelectTextDraw(playerid);
		HideDealershipTextdraws(playerid);
		if(InDealer[playerid] == 1) SetPlayerPosEx(playerid, 327.9443, -1512.6609, 36.1366);
		else if(InDealer[playerid] == 2) SetPlayerPosEx(playerid, 332.6239, -1506.7646, 36.0565);
		InDealer[playerid] = 0;
		DealerCategory[playerid] = 0;
		DealerCarColor1[playerid] = 0;
		DealerCarColor2[playerid] = 0;
		DealerCarAngle[playerid] = 0;
		SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		DestroyVehicle(DealerCar[playerid]);
		DealerCar[playerid] = 0;
		DealerCarType[playerid] = -1;
		TestingModel[playerid] = 0;
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 10.0);
	}
	if(playertextid == BackCar) {
	    if(DealerID[playerid] == 1) DealerID[playerid] = TotalDealerCars[playerid]+1;
		DealerID[playerid] -= 1;
		DestroyVehicle(DealerCar[playerid]);
		if(DealerCarType[playerid] == 1) {
			DealerCarAngle[playerid] = 75.7200;
			DealerCar[playerid] = CreateVehicleEx(DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel],613.7783, -2.9987, 1000.5500, 75.7200, DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
			LinkVehicleToInterior(DealerCar[playerid], 1);
			SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
			PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
			SetPlayerCameraPos(playerid, 604.9370, -2.9715, 1003.8300);
			SetPlayerCameraLookAt(playerid, 605.9343, -2.9241, 1003.4600);
		}
		if(DealerCarType[playerid] == 2) {
			DealerCarAngle[playerid] = 75.7200;
			DealerCar[playerid] = CreateVehicleEx(DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel],613.7783, -2.9987, 1000.5500, 75.7200, DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
			LinkVehicleToInterior(DealerCar[playerid], 1);
			SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
			PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
			SetPlayerCameraPos(playerid, 604.9370, -2.9715, 1003.8300);
			SetPlayerCameraLookAt(playerid, 605.9343, -2.9241, 1003.4600);
		}
		if(DealerCarType[playerid] == 3) {
			DealerCarAngle[playerid] = 214.5153;
			DealerCar[playerid] = CreateVehicleEx(DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel],179.2214,-1935.9833,-0.2331, 214.5153, DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
			SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
			PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
			SetPlayerCameraPos(playerid, 195.5355, -1952.8099, 8.7636);
			SetPlayerCameraLookAt(playerid, 194.7955, -1952.1398, 8.3886);
		}
		if(DealerCarType[playerid] == 4) {
			DealerCarAngle[playerid] = 320.7336;
			DealerCar[playerid] = CreateVehicleEx(DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel],1765.7640, -2286.8374, 27.4146,320.7336, DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
			SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
			PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
			SetPlayerCameraPos(playerid, 1769.0742, -2266.9126, 32.7817);
			SetPlayerCameraLookAt(playerid, 1768.9325, -2267.9021, 32.4167);
		}
		if(DealerCarType[playerid] == 5) {
			DealerCarAngle[playerid] = 26.8845;
			DealerCar[playerid] = CreateVehicleEx(DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel],1543.3701,-1355.8428,330.0876,121.0334, DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
			SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
			PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
			SetPlayerCameraPos(playerid, 1542.2255, -1370.4922, 333.8188);
			SetPlayerCameraLookAt(playerid, 1542.3651, -1369.5028, 333.4086);
		}
		Gas[DealerCar[playerid]] = 100;
		new szType[256], szText[1024];
		if(InDealer[playerid] == 1) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 0) szType = "~g~Normalny";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0) szType = "~r~Premium";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] >= 0) szType = "~g~Premium";
			if(GetPlayerCash(playerid) >= DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Cena: ~g~$%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]), szType);
			else if(GetPlayerCash(playerid) < DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Cena: ~r~$%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]), szType);
		}
		else if(InDealer[playerid] == 2) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 0) szType = "~g~Normalny";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0) szType = "~r~Premium";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] >= 0) szType = "~g~Premium";
			if(GetPlayerCash(playerid) >= DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Gold: ~g~%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]), szType);
			else if(GetPlayerCash(playerid) < DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Gold: ~r~%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]), szType);
		}
		PlayerTextDrawSetString(playerid, InfoDS, szText);
		PlayerTextDrawShow(playerid, InfoDS);
	}
	if(playertextid == NextCar) {
		if(DealerID[playerid] == TotalDealerCars[playerid]) DealerID[playerid] = 0;
        DealerID[playerid] += 1;
		DestroyVehicle(DealerCar[playerid]);
		if(DealerCarType[playerid] == 1) {
			DealerCarAngle[playerid] = 75.7200;
			DealerCar[playerid] = CreateVehicleEx(DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel],613.7783, -2.9987, 1000.5500, 75.7200, DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
			LinkVehicleToInterior(DealerCar[playerid], 1);
			SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
			PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
			SetPlayerCameraPos(playerid, 604.9370, -2.9715, 1003.8300);
			SetPlayerCameraLookAt(playerid, 605.9343, -2.9241, 1003.4600);
		}
		if(DealerCarType[playerid] == 2) {
			DealerCarAngle[playerid] = 75.7200;
			DealerCar[playerid] = CreateVehicleEx(DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel],613.7783, -2.9987, 1000.5500, 75.7200, DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
			LinkVehicleToInterior(DealerCar[playerid], 1);
			SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
			PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
			SetPlayerCameraPos(playerid, 604.9370, -2.9715, 1003.8300);
			SetPlayerCameraLookAt(playerid, 605.9343, -2.9241, 1003.4600);
		}
		if(DealerCarType[playerid] == 3) {
			DealerCarAngle[playerid] = 214.5153;
			DealerCar[playerid] = CreateVehicleEx(DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel],179.2214,-1935.9833,-0.2331, 214.5153, DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
			SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
			PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
			SetPlayerCameraPos(playerid, 195.5355, -1952.8099, 8.7636);
			SetPlayerCameraLookAt(playerid, 194.7955, -1952.1398, 8.3886);
		}
		if(DealerCarType[playerid] == 4) {
			DealerCarAngle[playerid] = 320.7336;
			DealerCar[playerid] = CreateVehicleEx(DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel],1765.7640, -2286.8374, 27.4146,320.7336, DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
			SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
			PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
			SetPlayerCameraPos(playerid, 1769.0742, -2266.9126, 32.7817);
			SetPlayerCameraLookAt(playerid, 1768.9325, -2267.9021, 32.4167);
		}
		if(DealerCarType[playerid] == 5) {
			DealerCarAngle[playerid] = 26.8845;
			DealerCar[playerid] = CreateVehicleEx(DSModels[SelectedCar[playerid][DealerID[playerid]]][dModel],1543.3701,-1355.8428,330.0876,121.0334, DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
			SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
			PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
			SetPlayerCameraPos(playerid, 1542.2255, -1370.4922, 333.8188);
			SetPlayerCameraLookAt(playerid, 1542.3651, -1369.5028, 333.4086);
		}
		Gas[DealerCar[playerid]] = 100;
		new szType[256], szText[1024];
		if(InDealer[playerid] == 1) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 0) szType = "~g~Normalny";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0) szType = "~r~Premium";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] >= 0) szType = "~g~Premium";
			if(GetPlayerCash(playerid) >= DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Cena: ~g~$%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]), szType);
			else if(GetPlayerCash(playerid) < DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Cena: ~r~$%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPrice]), szType);
		}
		else if(InDealer[playerid] == 2) {
			if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 0) szType = "~g~Normalny";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0) szType = "~r~Premium";
			else if(DSModels[SelectedCar[playerid][DealerID[playerid]]][dPremium] == 1 && PlayerInfo[playerid][pPremiumAccount] >= 0) szType = "~g~Premium";
			if(GetPlayerCash(playerid) >= DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Gold: ~g~%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]), szType);
			else if(GetPlayerCash(playerid) < DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]) format(szText, sizeof(szText), "Model: %s~n~Max predkosc: %d km/h~n~Gold: ~r~%s~n~~w~Typ: %s", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[SelectedCar[playerid][DealerID[playerid]]][dMaxSpeed], FormatNumber(DSModels[SelectedCar[playerid][DealerID[playerid]]][dGold]), szType);
		}
		PlayerTextDrawSetString(playerid, InfoDS, szText);
		PlayerTextDrawShow(playerid, InfoDS);
	}

	if(playertextid == TestModel) {
		SendClientMessage(playerid, COLOR_YELLOW, "Masz 3 minuty na przetestowanie pojazdu. Nie zostawiaj go.");
		TestingModel[playerid] = 1;
		CancelSelectTextDraw(playerid);
		HideDealershipTextdraws(playerid);
		SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
		SetPlayerInterior(playerid, 0);
		LinkVehicleToInterior(DealerCar[playerid], 0);
		SetVehicleVirtualWorld(DealerCar[playerid], playerid+1);
		if(DealerCarType[playerid] == 1) SetVehiclePos(DealerCar[playerid], 386.7731,-1520.0092,31.8887), SetVehicleZAngle(DealerCar[playerid], 40.7906);
		else if(DealerCarType[playerid] == 2) SetVehiclePos(DealerCar[playerid], 386.7731,-1520.0092,31.8887), SetVehicleZAngle(DealerCar[playerid], 40.7906);
		else if(DealerCarType[playerid] == 3) SetVehiclePos(DealerCar[playerid], 138.4441,-1901.8715,-0.2312), SetVehicleZAngle(DealerCar[playerid], 177.5421);
		else if(DealerCarType[playerid] == 4) SetVehiclePos(DealerCar[playerid], 2121.3301,-2449.9683,13.5307), SetVehicleZAngle(DealerCar[playerid], 146.3989);
		else if(DealerCarType[playerid] == 5) SetVehiclePos(DealerCar[playerid], 386.7731,-1520.0092,32.9033), SetVehicleZAngle(DealerCar[playerid], 40.7906);
		Gas[DealerCar[playerid]] = 100;
		PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
		DSTimer[playerid] = SetTimerEx("CancelTestDrive", 180000, 0, "d", playerid);
	}

	if(playertextid == HiddTDs[1]) {
	    if(CarColor[playerid] == 0) {
			if(PlayerInfo[playerid][pPremiumPoints] < 1000) return SCM(playerid, COLOR_GREY, "Aby otrzymac ten produkt, potrzebujesz 1000 punktów premium.");
			PlayerInfo[playerid][pPremiumPoints] -= 1000;
			Update(playerid, pPremiumPointsx);
		} else {
		    if(GetPlayerCash(playerid) < 350) return SCM(playerid, -1, "Nu ai $2.500!");
		    GivePlayerCash(playerid, -350);		
			BizzInfo[12][bBalance] += 350;
			format(string,sizeof(string),"UPDATE `bizz` SET `Till`='%d',`Products`='%d' WHERE `ID`='12'",BizzInfo[12][bBalance],BizzInfo[12][bProducts]);
			mysql_query(SQL,string);		
		}
		CarColor[playerid] = 0;
		format(string, sizeof(string), "Gratulacje! Kupiles kolory (%d, %d) ze swojego sklepu na swój osobisty pojazd.", pColor1[playerid], pColor2[playerid]);
		SCM(playerid, COLOR_GOLD, string);
		new idd = pCar[playerid];
		CarInfo[idd][cColorOne] = pColor1[playerid];
		CarInfo[idd][cColorTwo] = pColor2[playerid];
		ChangeVehicleColor(GetPlayerVehicleID(playerid), pColor1[playerid], pColor2[playerid]);
		mysql_format(SQL, string, sizeof(string), "UPDATE cars SET ColorOne = %d, ColorTwo = %d WHERE ID=%d", pColor1[playerid], pColor2[playerid], idd);
		mysql_tquery(SQL, string, "", "");
    	SetCameraBehindPlayer(playerid), SetPlayerInterior(playerid, pInteriorID[playerid]), SetVehiclePos(GetPlayerVehicleID(playerid), pPos[playerid][0], pPos[playerid][1], pPos[playerid][2]);
		SetPlayerVirtualWorld(playerid, 0);
  		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
		TextDrawHideForPlayer(playerid, HiddTD[0]);
		TextDrawHideForPlayer(playerid, HiddTD[1]);
		TextDrawHideForPlayer(playerid, HiddTD[2]);
		TextDrawHideForPlayer(playerid, HiddTD[3]);
		TextDrawHideForPlayer(playerid, HiddTD[4]);
		PlayerTextDrawHide(playerid, HiddTDs[0]);
		PlayerTextDrawHide(playerid, HiddTDs[1]);
		PlayerTextDrawHide(playerid, HiddTDs[2]);
		InShop[playerid] = 0;
		CancelSelectTextDraw(playerid);
	}
	if(playertextid == ShopTDs[1]) {
		if(CreateHouse[playerid] == 0) {
			if(PlayerInfo[playerid][pPremiumPoints] < 2500) return SCM(playerid, COLOR_GREY, "Ai nevoie de 2500 puncte premium dla a lua acest produs.");
			HideShopTDs(playerid), SetCameraBehindPlayer(playerid), SetPlayerPosEx(playerid, pPos[playerid][0], pPos[playerid][1], pPos[playerid][2]);
			SetPlayerVirtualWorld(playerid, pVirtual[playerid]);
			new bouse = PlayerInfo[playerid][pHouse],playername[25], i = SInterior[playerid]-1;
			GetPlayerName(playerid, playername, sizeof(playername));
			if (bouse != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
			{
			    PlayerInfo[playerid][pPremiumPoints] -= 2500;
			    Update(playerid, pPremiumPointsx);
				HouseInfo[bouse][hExitx] = InteriorPos[i][0];
				HouseInfo[bouse][hExity] = InteriorPos[i][1];
				HouseInfo[bouse][hExitz] = InteriorPos[i][2];
				HouseInfo[bouse][hInterior] = GetPlayerInterior(playerid);
				HUpdate(bouse, hExitxx);
				HUpdate(bouse, hExityx);
				HUpdate(bouse, hExitzx);
				HUpdate(bouse, hInteriorx);
				PlayerInfo[playerid][pPremiumPoints]-=45;
				Update(playerid, pPremiumPointsx);
				SCM(playerid, COLOR_GOLD, "Gratulacje, kupiles wnetrze ze sklepu.");
				foreach(Player, x) {
					if(InHouse[x] == bouse && IsPlayerConnected(x)) {
						SCM(x, COLOR_YELLOW, "Zostales przeniesiony do nowego domu, poniewaz wlasciciel domu kupil nowy ze sklepu.");
						SpawnPlayer(x);
					}
				}
				SetPlayerInterior(playerid, pInteriorID[playerid]);
				SInterior[playerid] = 0;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem domu."), SetPlayerInterior(playerid, pInteriorID[playerid]);
		}
		else {
		    new x = SInterior[playerid]-1;
		    new xQuery[1024];
			mysql_format(SQL, xQuery, sizeof(xQuery),"INSERT INTO houses (`Entrancex`, `Entrancey`, `Entrancez`, `Exitx`, `Exity`, `Exitz`, `Interior`, `Value`) VALUES ('%f', '%f', '%f', '%f', '%f', '%f', '%d', '%d')",
			pPos[playerid][0], pPos[playerid][1], pPos[playerid][2], InteriorPos[x][0], InteriorPos[x][1], InteriorPos[x][2], GetPlayerInterior(playerid), pNivel[playerid], pPret[playerid]);
			new Cache: result = mysql_query(SQL, xQuery);
			new i = cache_insert_id();
			cache_delete(result);
			HouseInfo[i][hID] = i;
			HouseInfo[i][hOwned] = 1;
			format(HouseInfo[i][hOwner], 64, "Panstwo");
			HouseInfo[i][hExitx] = InteriorPos[x][0];
			HouseInfo[i][hExity] = InteriorPos[x][1];
			HouseInfo[i][hExitz] = InteriorPos[x][2];
			HouseInfo[i][hEntrancex] = pPos[playerid][0];
			HouseInfo[i][hEntrancey] = pPos[playerid][1];
			HouseInfo[i][hEntrancez] = pPos[playerid][2];
			HouseInfo[i][hLock] = 1;
			HouseInfo[i][hVirtual] = i;
			format(string, sizeof(string), "UPDATE `houses` SET `Virtual`='%d', `Lockk`='1' WHERE `ID`='%d'", i, i);
			mysql_query(SQL, string);
			HouseInfo[i][hValue] = pPret[playerid];
			HouseInfo[i][hInterior] = GetPlayerInterior(playerid);

			HUpdate(i, hExitxx);
			HUpdate(i, hExityx);
			HUpdate(i, hExitzx);
			HUpdate(i, hInteriorx);
			UpdateLabel(1, i);
			SCM(playerid, COLOR_GOLD, "Dom zostal stworzony z powodzeniem!");
			format(string, sizeof(string), "Informacje: Wnetrze %d, Cena $%s.", x, FormatNumber(pPret[playerid]));
			SCM(playerid, COLOR_GOLD, string);
			HideShopTDs(playerid), SetCameraBehindPlayer(playerid), SetPlayerPosEx(playerid, pPos[playerid][0], pPos[playerid][1], pPos[playerid][2]);
			SetPlayerVirtualWorld(playerid, pVirtual[playerid]);
			SetPlayerInterior(playerid, pInteriorID[playerid]);
			CreateHouse[playerid] = 0;
			SInterior[playerid] = 0;
			CancelSelectTextDraw(playerid);
			housess = GetLastHouse();
		}
	}
    return 1;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(JobWorking[playerid] == 1 && PlayerInfo[playerid][pAdmin] < 6) return 1;
	if(PlayerInfo[playerid][pAdmin] > 0)
	{
	    if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, fX, fY, fZ+5);
		}
		else
		{
			SetPlayerPosFindZ(playerid, fX, fY, fZ+5);
		}
	}
    return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	if(PlayerInfo[playerid][pAdmin] >= 1 && playerid != clickedplayerid)
	{
		new giveplayer[30],string[100];
	    if(clickedplayerid != INVALID_PLAYER_ID)
	    {
	        Spectate[playerid] = clickedplayerid;
			SpecPlayers[playerid] ++;
			if(SpecPlayers[playerid] == 1) {
				GetPlayerPos(playerid, SpecPos[playerid][0], SpecPos[playerid][1], SpecPos[playerid][2]);
				IsPlayerSpec[playerid] = 1;
				pInteriorID[playerid] = GetPlayerInterior(playerid);
				pVirtual[playerid] = GetPlayerVirtualWorld(playerid);
			}
			pInteriorID[playerid] = GetPlayerInterior(playerid);
			pVirtual[playerid] = GetPlayerVirtualWorld(playerid);
			new cash = GetPlayerCash(Spectate[playerid]);
			format(string, sizeof(string), "Obserwujesz: (%d) %s $%s",Spectate[playerid],giveplayer,FormatNumber(cash));
			SendClientMessage(playerid, COLOR_GREEN, string);
			TogglePlayerSpectating(playerid, 1);
			if(IsPlayerInAnyVehicle(Spectate[playerid]))
			{
			    new carid = GetPlayerVehicleID(Spectate[playerid]);
			    PlayerSpectateVehicle(playerid, carid);
			}
			else
			{
			    PlayerSpectatePlayer(playerid, Spectate[playerid]);
			}
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
    return 1;
}

public WantedTime2()
{
	foreach(Player,i)
	{
		if(IsPlayerConnected(i) && PlayerInfo[i][pWantedLevel] >= 1)
		{
			if(PlayerInfo[i][pWantedLevel] >= 1)
			{
				WantedTime[i] ++;
				
			}
		}
	}
	return 1;
}


public FreezeEX(playerid)
{
    TogglePlayerControllable(playerid, 0);
    return 1;
}  



public WantedDown()
{
	new string[128], caption[32];
	foreach(Player,i)
	{
		if(IsPlayerConnected(i))
		{
		if(IsPlayerLogged[i] == 1){
		if(PlayerInfo[i][pRapidFire] >= 5) {
		format(string,sizeof(string), "AdmCmd: %s(%d) moze miec rapid-fire.",GetName(i),i);
		SendAdminMessage(COLOR_LOGS,string,1);
		}
		PlayerInfo[i][pRapidFire] = 0;
			if(PlayerInfo[i][pWantedLevel] >= 1 && WantedTime[i] == 60)
			{
			    new str[256];
       			WantedTime[i] = 0;
			    PlayerInfo[i][pWantedLevel] --;
			    Update(i,pWantedLevelx);
			    if(PlayerInfo[i][pWantedLevel] == 0)
			    {
			    	SCM(i, COLOR_YELLOW, "Jestes czysty ale dalej uwazaj na psy!");
			    	PlayerTextDrawHide(i, WantedTD[i]);
			    }
			    else
				{
					format(str, sizeof(str), "Twój WL zostal zniwelowany! Wanted: %d", PlayerInfo[i][pWantedLevel]);
			    	SCM(i, COLOR_YELLOW, str);
				}
			}
		    if(GetPlayerState(i) == PLAYER_STATE_SPECTATING && PlayerInfo[i][pAdmin] == 0)
		    {
		        format(string, sizeof(string), "AdmCmd: %s wlaczyl speca chociaz nie jest adminem CHEAT", GetName(i));
				SendAdminMessage(COLOR_LOGS, string, -1);
		        return 1;
		    }
		if(PlayerInfo[i][pBWTime] > 0)//BW
        {
            if(GetPVarInt(i, "bw-sync") != 1 && GetPlayerState(i) == PLAYER_STATE_ONFOOT)
			{
				OnePlayAnim(i, "CRACK", "crckidle1",4.0,1,0,0,0,0);
				//ApplyAnimation(i, "CRACK", "crckidle1", 4.0, 1, 0, 1, 1, 1);
                SetPVarInt(i, "bw-sync", 1);
            }
            PlayerInfo[i][pBWTime]-=1;
		    new Float:px,Float:py,Float:pz;
		    GetPlayerPos(i, px, py, pz);
			PlayerInfo[i][pBWpos][0] = px;
			PlayerInfo[i][pBWpos][1] = py;
			PlayerInfo[i][pBWpos][2] = pz;
			ShowBWStatus(i);
			Update(i, pBWTimex);
            if(PlayerInfo[i][pBWTime] <= 0)
            {
                PlayerInfo[i][pBWTime]= 0;
                TogglePlayerControllable(i, 1);
                ClearAnimations(i);
				TextDrawHideForPlayer(i, TDEditor_TD[0]);
                GameTextForPlayer(i, "Wstales po BW!", 5000, 5);
                SetPVarInt(i, "bw-sync", 0);
				Update(i, pBWTimex);
				}
            }
        }
		}
	}
	return 1;
}

stock hideDialog( playerid )
    return ShowPlayerDialog( playerid, -1, 0, "","", "", "" ), 1;
    
	
function Camera(playerid) {
	TogglePlayerSpectating(playerid, false);
	InterpolateCameraPos(playerid, 1530.337036, -1683.392456, 121.663619, 1786.570556, -1228.436889, 100.507751, 40000);
	InterpolateCameraLookAt(playerid, 1534.019653, -1680.195434, 120.560531, 1782.446289, -1230.540893, 102.395431, 500);	
	return 1;
}
	
function DestroyProgress(playerid, bar) {
	HidePlayerProgressBar(playerid, HudProgress[playerid][bar]);
	PlayerTextDrawHide(playerid, HudTD[bar]);
	return 1;
}
	
function UpdateProgress(playerid, bar) {
	new string[64];
	switch(bar) {
		case 0: {
			format(string, sizeof(string), "Level: %d-%d ( %d/%d RP )", PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pLevel]+1, PlayerInfo[playerid][pExp], PlayerInfo[playerid][pLevel]*levelexp);
			PlayerTextDrawSetString(playerid, HudTD[bar], string);
			PlayerTextDrawShow(playerid, HudTD[bar]);
			SetPlayerProgressBarMaxValue(playerid, HudProgress[playerid][bar], PlayerInfo[playerid][pLevel]*levelexp);
			SetPlayerProgressBarValue(playerid, HudProgress[playerid][bar], PlayerInfo[playerid][pExp]);
			SetPlayerProgressBarColor(playerid, HudProgress[playerid][bar], GetHudColor(PlayerInfo[playerid][pShowHud][3]));	
		}
		case 1: {
			if(PlayerInfo[playerid][pMember] == 0) {
				PlayerInfo[playerid][pShowHud][4] = 0;
				UpdateVar(playerid, "ShowHud4", 0);
				SCM(playerid, COLOR_GRAD2, "Opcja podgladu postepu raportu zostala wylaczona automatycznie!");
				DestroyProgress(playerid, bar);
				return 1;
			}
			if(PlayerInfo[playerid][pRank] >= 5) format(string, sizeof(string), "Raport: %d ( %d/%d )", PlayerInfo[playerid][pRank], PlayerInfo[playerid][pCommands], GetNeedPointsR(playerid));
			else format(string, sizeof(string), "Raport: %d-%d ( %d/%d )", PlayerInfo[playerid][pRank], PlayerInfo[playerid][pRank]+1, PlayerInfo[playerid][pCommands], GetNeedPointsR(playerid));
			PlayerTextDrawSetString(playerid, HudTD[bar], string);
			PlayerTextDrawShow(playerid, HudTD[bar]);
			SetPlayerProgressBarMaxValue(playerid, HudProgress[playerid][bar], GetNeedPointsR(playerid));
			SetPlayerProgressBarValue(playerid, HudProgress[playerid][bar], PlayerInfo[playerid][pCommands]);
			SetPlayerProgressBarColor(playerid, HudProgress[playerid][bar], GetHudColor(PlayerInfo[playerid][pShowHud][4]));		
		}
	}
	ShowPlayerProgressBar(playerid, HudProgress[playerid][bar]);
	return 1;
}
	
public OnPlayerConnect(playerid)
{
	if(IsPlayerNPC(playerid)) return 1;
	GetPlayerName(playerid, PlayerInfo[playerid][pUsername], MAX_PLAYER_NAME);
	if(!IsValidRpName(GetName(playerid))) {
	SCM(playerid, COLOR_RED, "Nie posiadasz poprawnego nicku np. Imie_Nazwisko!");
	KickEx(playerid);
	return 1;
	}
	foreach(Player, i) {
		if(IsPlayerConnected(i) && i != playerid) {
			if(strcmp(GetName(playerid), GetName(i), true) == 0) Kick(playerid);
	    }
	}
	SetPlayerColor(playerid, COLOR_GREY);
	ShowBarStats(playerid);  
	TextDrawShowForPlayer(playerid, Login[0]);
	TextDrawShowForPlayer(playerid, Login[1]);
	TogglePlayerSpectating(playerid, 1);

	AntiFlood_InitPlayer( playerid );
	XDeaths[playerid] = 0;
    LastDeath[playerid] = 0;

    KillTimer(login[playerid]);

	RemoveObj(playerid);
	ResetVariables(playerid);
	PlayerTextdraws(playerid);
	GivePlayerCash(playerid,PlayerInfo[playerid][pCash]);

	// ANTI WEAPON CHEAT
	WeaponData[playerid][0] = false; 			WeaponData[playerid][1] = false;
	WeaponData[playerid][2] = false;			WeaponData[playerid][3] = false;
	WeaponData[playerid][4] = false; 			WeaponData[playerid][5] = false;
	WeaponData[playerid][6] = false; 			WeaponData[playerid][7] = false;
	WeaponData[playerid][8] = false; 			WeaponData[playerid][9] = false;
	WeaponData[playerid][10] = false; 			WeaponData[playerid][11] = false;
	WeaponData[playerid][12] = false;
	
	WybranyNumer[playerid] = 0;
	CurrentCCTV[playerid] = -1; //CCTV

	// ANTI MONEY CHEAT
	TimerAtuPlayer[playerid] = SetTimerEx("UpdatePlayer", 2000, true, "d", playerid);

    // COLOR ON LOGIN
	SetPlayerColor(playerid,COLOR_GRAD2);

	// RESET WANTED
	ClearWanted(playerid);

	// PLAYER LOGIN
 	new pnamee[25];
	new qstr[612];
	GetPlayerName(playerid, pnamee, sizeof(pnamee));
	format(qstr,sizeof(qstr),"SELECT * FROM users WHERE `name`='%s'",pnamee);
	mysql_query(SQL,qstr);
	mysql_store_result();
	if(mysql_num_rows()) gPlayerAccount[playerid] = 1;
	else gPlayerAccount[playerid] = 0;
	mysql_free_result();
	/*
	
	STADION
	
	*/
	RemoveBuildingForPlayer(playerid, 17512, 2737.7500, -1760.0625, 26.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 17582, 2739.2188, -1770.0859, 17.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 17583, 2739.5469, -1770.0625, 13.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 17745, 2739.2188, -1770.0859, 17.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 2767.7578, -1819.9453, 12.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2719.4766, -1841.3672, 9.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2713.1094, -1839.4297, 9.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 678, 2709.9063, -1839.0703, 9.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2711.5625, -1839.1797, 9.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2701.7266, -1835.6172, 9.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 678, 2699.4688, -1834.9609, 9.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2747.2578, -1844.2344, 9.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2742.3359, -1845.3438, 9.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2743.9063, -1845.2734, 9.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2757.8984, -1840.8438, 9.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2759.9766, -1839.8125, 9.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2767.9063, -1836.7109, 9.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 678, 2766.6875, -1838.3984, 9.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2688.5703, -1826.4297, 9.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 678, 2686.3203, -1825.7734, 9.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2694.4219, -1831.0703, 9.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2778.3359, -1832.3984, 9.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2779.3125, -1830.8672, 9.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2678.6875, -1815.9297, 9.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2799.6953, -1813.6719, 9.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2803.0469, -1810.8359, 9.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2806.0313, -1805.3672, 9.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2666.6641, -1724.6797, 9.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2806.6250, -1803.2031, 9.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 17511, 2737.7500, -1760.0625, 26.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2669.1563, -1716.9922, 9.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 2676.0234, -1707.8125, 7.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2682.2813, -1700.9922, 9.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2707.7188, -1684.3828, 9.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2764.9766, -1681.3594, 9.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2775.6094, -1686.0313, 9.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2724.2031, -1678.5938, 9.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 2738.5781, -1677.6172, 7.4375, 0.25);
	/*
	
	STADION koniec
	
	*/
	SetTimerEx("OdpalLogowanie", 200, 0, "d", playerid);
	return 1;
}

stock PlayerTextdraws(playerid) {

	PlayerTextDrawPanel[playerid] = CreatePlayerTextDraw(playerid, 65.000000, 234.000000, "OFF~n~~n~OFF~n~~n~OFF~n~~n~OFF~n~~n~OFF~n~~n~OFF");
	PlayerTextDrawBackgroundColor(playerid, PlayerTextDrawPanel[playerid], 0);
	PlayerTextDrawFont(playerid, PlayerTextDrawPanel[playerid], 2);
	PlayerTextDrawLetterSize(playerid, PlayerTextDrawPanel[playerid], 0.149999, 0.783999);
	PlayerTextDrawColor(playerid, PlayerTextDrawPanel[playerid], -206);
	PlayerTextDrawSetOutline(playerid, PlayerTextDrawPanel[playerid], 0);
	PlayerTextDrawSetProportional(playerid, PlayerTextDrawPanel[playerid], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextDrawPanel[playerid], 1);
	
	SpecTD = CreatePlayerTextDraw(playerid, 215.666778, 343.481872, "~y~s (d)~n~~w~~h~Zycie: ~r~.1f  ~w~~h~Armour: ~r~.1f~n~~w~~h~Wanted: ~r~s~w~~h~  ~w~~h~AJ/Paka: ~r~s~n~~w~~h~Vehicle ID: ~r~d");
	PlayerTextDrawLetterSize(playerid, SpecTD, 0.400000, 1.600000);
	PlayerTextDrawAlignment(playerid, SpecTD, 1);
	PlayerTextDrawColor(playerid, SpecTD, -1);
	PlayerTextDrawSetShadow(playerid, SpecTD, 0);
	PlayerTextDrawSetOutline(playerid, SpecTD, 1);
	PlayerTextDrawBackgroundColor(playerid, SpecTD, 255);
	PlayerTextDrawFont(playerid, SpecTD, 2);
	PlayerTextDrawSetProportional(playerid, SpecTD, 1);
	PlayerTextDrawSetShadow(playerid, SpecTD, 0);
	
	/*QuestTD = CreatePlayerTextDraw(playerid, 92.666549, 196.222229, "Object 50 nearby");
	PlayerTextDrawLetterSize(playerid, QuestTD, 0.240666, 1.620738);
	PlayerTextDrawAlignment(playerid, QuestTD, 2);
	PlayerTextDrawColor(playerid, QuestTD, -1);
	PlayerTextDrawSetShadow(playerid, QuestTD, 1);
	PlayerTextDrawSetOutline(playerid, QuestTD, 1);
	PlayerTextDrawBackgroundColor(playerid, QuestTD, 108);
	PlayerTextDrawFont(playerid, QuestTD, 2);
	PlayerTextDrawSetProportional(playerid, QuestTD, 1);
	PlayerTextDrawSetShadow(playerid, QuestTD, 1);*/

	HUDTXDINFO = CreatePlayerTextDraw(playerid, 601.000000, 2.000000, "~y~[ID: 1]~w~ Norbert Gierczak.");
	PlayerTextDrawFont(playerid, HUDTXDINFO, 1);
	PlayerTextDrawLetterSize(playerid, HUDTXDINFO, 0.245829, 1.100000);
	PlayerTextDrawTextSize(playerid, HUDTXDINFO, 404.500000, 19.500000);
	PlayerTextDrawSetOutline(playerid, HUDTXDINFO, 1);
	PlayerTextDrawSetShadow(playerid, HUDTXDINFO, 0);
	PlayerTextDrawAlignment(playerid, HUDTXDINFO, 3);
	PlayerTextDrawColor(playerid, HUDTXDINFO, -1);
	PlayerTextDrawBackgroundColor(playerid, HUDTXDINFO, 255);
	PlayerTextDrawBoxColor(playerid, HUDTXDINFO, 50);
	PlayerTextDrawUseBox(playerid, HUDTXDINFO, 0);
	PlayerTextDrawSetProportional(playerid, HUDTXDINFO, 1);
	PlayerTextDrawSetSelectable(playerid, HUDTXDINFO, 0);

	PaintTD = CreatePlayerTextDraw(playerid, 552.333740, 377.481536, "Czas na paintball: 12:00 ~n~ Statystyki: 5 zabójstw i 5 zgonów. ~n~ Najlepsze: EdForGame (wynik: -1)");
	PlayerTextDrawLetterSize(playerid, PaintTD, 0.175666, 0.849184);
	PlayerTextDrawTextSize(playerid, PaintTD, 741.333190, 149.333297);
	PlayerTextDrawAlignment(playerid, PaintTD, 2);
	PlayerTextDrawColor(playerid, PaintTD, -1);
	PlayerTextDrawUseBox(playerid, PaintTD, true);
	PlayerTextDrawBoxColor(playerid, PaintTD, 98);
	PlayerTextDrawSetShadow(playerid, PaintTD, 0);
	PlayerTextDrawSetOutline(playerid, PaintTD, 1);
	PlayerTextDrawBackgroundColor(playerid, PaintTD, 89);
	PlayerTextDrawFont(playerid, PaintTD, 1);
	PlayerTextDrawSetProportional(playerid, PaintTD, 1);
	
	HudTD[0] = CreatePlayerTextDraw(playerid, 554.000000, 148.750000, "Level: 69-69 (69/69 RP)");
	PlayerTextDrawLetterSize(playerid, HudTD[0], 0.228999, 0.681249);
	PlayerTextDrawTextSize(playerid, HudTD[0], 1499.000000, 366.625000);
	PlayerTextDrawAlignment(playerid, HudTD[0], 2);
	PlayerTextDrawColor(playerid, HudTD[0], -1);
	PlayerTextDrawUseBox(playerid, HudTD[0], true);
	PlayerTextDrawBoxColor(playerid, HudTD[0], 0);
	PlayerTextDrawSetShadow(playerid, HudTD[0], 0);
	PlayerTextDrawSetOutline(playerid, HudTD[0], 1);
	PlayerTextDrawBackgroundColor(playerid, HudTD[0], 51);
	PlayerTextDrawFont(playerid, HudTD[0], 1);
	PlayerTextDrawSetProportional(playerid, HudTD[0], 1);

	HudTD[1] = CreatePlayerTextDraw(playerid, 554.000000, 168.562500, "Raport: 69 (69/69)");
	PlayerTextDrawLetterSize(playerid, HudTD[1], 0.228999, 0.681249);
	PlayerTextDrawTextSize(playerid, HudTD[1], 1499.000000, 366.625000);
	PlayerTextDrawAlignment(playerid, HudTD[1], 2);
	PlayerTextDrawColor(playerid, HudTD[1], -1);
	PlayerTextDrawUseBox(playerid, HudTD[1], true);
	PlayerTextDrawBoxColor(playerid, HudTD[1], 0);
	PlayerTextDrawSetShadow(playerid, HudTD[1], 0);
	PlayerTextDrawSetOutline(playerid, HudTD[1], 1);
	PlayerTextDrawBackgroundColor(playerid, HudTD[1], 51);
	PlayerTextDrawFont(playerid, HudTD[1], 1);
	PlayerTextDrawSetProportional(playerid, HudTD[1], 1);

	CleoTD[playerid][0] = CreatePlayerTextDraw(playerid, 3.000005, 431.407684, "100");
	PlayerTextDrawLetterSize(playerid, CleoTD[playerid][0], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, CleoTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, CleoTD[playerid][0], -65281);
	PlayerTextDrawSetShadow(playerid, CleoTD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, CleoTD[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, CleoTD[playerid][0], 51);
	PlayerTextDrawFont(playerid, CleoTD[playerid][0], 3);
	PlayerTextDrawSetProportional(playerid, CleoTD[playerid][0], 1);

	CleoTD[playerid][1] = CreatePlayerTextDraw(playerid, 576.999023, 65.711311, "100");
	PlayerTextDrawLetterSize(playerid, CleoTD[playerid][1], 0.302999, 1.006815);
	PlayerTextDrawAlignment(playerid, CleoTD[playerid][1], 2);
	PlayerTextDrawColor(playerid, CleoTD[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, CleoTD[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, CleoTD[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, CleoTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, CleoTD[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, CleoTD[playerid][1], 1);

	CleoTD[playerid][2] = CreatePlayerTextDraw(playerid, 576.332458, 45.140953, "100");
	PlayerTextDrawLetterSize(playerid, CleoTD[playerid][2], 0.302999, 1.006815);
	PlayerTextDrawAlignment(playerid, CleoTD[playerid][2], 2);
	PlayerTextDrawColor(playerid, CleoTD[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, CleoTD[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, CleoTD[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, CleoTD[playerid][2], 255);
	PlayerTextDrawFont(playerid, CleoTD[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, CleoTD[playerid][2], 1);
	
	RentTD = CreatePlayerTextDraw(playerid, 33.265197, 305.083160, ""); // fare
	PlayerTextDrawLetterSize(playerid, RentTD, 0.321155, 1.308333);
	PlayerTextDrawAlignment(playerid, RentTD, 1);
	PlayerTextDrawColor(playerid, RentTD, -1);
	PlayerTextDrawSetShadow(playerid, RentTD, 0);
	PlayerTextDrawSetOutline(playerid, RentTD, 1);
	PlayerTextDrawBackgroundColor(playerid, RentTD, 255);
	PlayerTextDrawFont(playerid, RentTD, 3);
	PlayerTextDrawSetProportional(playerid, RentTD, 1);
	
	BGunTD[6] = CreatePlayerTextDraw(playerid, 431.165466, 338.666687, "usebox");
	PlayerTextDrawLetterSize(playerid, BGunTD[6], 0.000000, 7.655553);
	PlayerTextDrawTextSize(playerid, BGunTD[6], 211.177169, 0.000000);
	PlayerTextDrawAlignment(playerid, BGunTD[6], 1);
	PlayerTextDrawColor(playerid, BGunTD[6], 0);
	PlayerTextDrawUseBox(playerid, BGunTD[6], true);
	PlayerTextDrawBoxColor(playerid, BGunTD[6], 102);
	PlayerTextDrawSetShadow(playerid, BGunTD[6], 0);
	PlayerTextDrawSetOutline(playerid, BGunTD[6], 0);
	PlayerTextDrawFont(playerid, BGunTD[6], 0);

	BGunTD[7] = CreatePlayerTextDraw(playerid, 427.885803, 341.000000, "usebox");
	PlayerTextDrawLetterSize(playerid, BGunTD[7], 0.000000, 7.007409);
	PlayerTextDrawTextSize(playerid, BGunTD[7], 213.988296, 0.000000);
	PlayerTextDrawAlignment(playerid, BGunTD[7], 1);
	PlayerTextDrawColor(playerid, BGunTD[7], 0);
	PlayerTextDrawUseBox(playerid, BGunTD[7], true);
	PlayerTextDrawBoxColor(playerid, BGunTD[7], 102);
	PlayerTextDrawSetShadow(playerid, BGunTD[7], 0);
	PlayerTextDrawSetOutline(playerid, BGunTD[7], 0);
	PlayerTextDrawFont(playerid, BGunTD[7], 0);

	BGunTD[0] = CreatePlayerTextDraw(playerid, 319.531646, 345.333312, "Desert Eagle");
	PlayerTextDrawLetterSize(playerid, BGunTD[0], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, BGunTD[0], 2);
	PlayerTextDrawColor(playerid, BGunTD[0], -1);
	PlayerTextDrawSetShadow(playerid, BGunTD[0], 0);
	PlayerTextDrawSetOutline(playerid, BGunTD[0], 1);
	PlayerTextDrawBackgroundColor(playerid, BGunTD[0], 255);
	PlayerTextDrawFont(playerid, BGunTD[0], 3);
	PlayerTextDrawSetProportional(playerid, BGunTD[0], 1);

	BGunTD[1] = CreatePlayerTextDraw(playerid, 316.720397, 363.416748, "~g~$5.000");
	PlayerTextDrawLetterSize(playerid, BGunTD[1], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, BGunTD[1], 2);
	PlayerTextDrawColor(playerid, BGunTD[1], -1);
	PlayerTextDrawSetShadow(playerid, BGunTD[1], 0);
	PlayerTextDrawSetOutline(playerid, BGunTD[1], 1);
	PlayerTextDrawBackgroundColor(playerid, BGunTD[1], 255);
	PlayerTextDrawFont(playerid, BGunTD[1], 3);
	PlayerTextDrawSetProportional(playerid, BGunTD[1], 1);

	BGunTD[2] = CreatePlayerTextDraw(playerid, 224.016357, 358.583312, "LD_BEAT:left");
	PlayerTextDrawLetterSize(playerid, BGunTD[2], -0.173352, -1.954166);
	PlayerTextDrawTextSize(playerid, BGunTD[2], 25.768692, 26.833332);
	PlayerTextDrawAlignment(playerid, BGunTD[2], 1);
	PlayerTextDrawColor(playerid, BGunTD[2], -1);
	PlayerTextDrawUseBox(playerid, BGunTD[2], true);
	PlayerTextDrawBoxColor(playerid, BGunTD[2], 255);
	PlayerTextDrawSetShadow(playerid, BGunTD[2], 0);
	PlayerTextDrawSetOutline(playerid, BGunTD[2], 0);
	PlayerTextDrawFont(playerid, BGunTD[2], 4);
	PlayerTextDrawSetSelectable(playerid, BGunTD[2], true);

	BGunTD[3] = CreatePlayerTextDraw(playerid, 303.133392, 387.333251, " ~y~Kup");
	PlayerTextDrawLetterSize(playerid, BGunTD[3], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, BGunTD[3], 1);
	PlayerTextDrawColor(playerid, BGunTD[3], -1);
	PlayerTextDrawSetShadow(playerid, BGunTD[3], 0);
	PlayerTextDrawSetOutline(playerid, BGunTD[3], 1);
	PlayerTextDrawBackgroundColor(playerid, BGunTD[3], 255);
	PlayerTextDrawFont(playerid, BGunTD[3], 3);
	PlayerTextDrawSetProportional(playerid, BGunTD[3], 1);
	PlayerTextDrawSetSelectable(playerid, BGunTD[3], true);

	BGunTD[4] = CreatePlayerTextDraw(playerid, 389.341369, 357.583282, "LD_BEAT:right");
	PlayerTextDrawLetterSize(playerid, BGunTD[4], -0.173352, -1.954166);
	PlayerTextDrawTextSize(playerid, BGunTD[4], 25.768692, 26.833332);
	PlayerTextDrawAlignment(playerid, BGunTD[4], 1);
	PlayerTextDrawColor(playerid, BGunTD[4], -1);
	PlayerTextDrawUseBox(playerid, BGunTD[4], true);
	PlayerTextDrawBoxColor(playerid, BGunTD[4], 255);
	PlayerTextDrawSetShadow(playerid, BGunTD[4], 0);
	PlayerTextDrawSetOutline(playerid, BGunTD[4], 0);
	PlayerTextDrawFont(playerid, BGunTD[4], 4);
	PlayerTextDrawSetSelectable(playerid, BGunTD[4], true);

	BGunTD[5] = CreatePlayerTextDraw(playerid, 418.389770, 328.999969, "LD_BEAT:cross");
	PlayerTextDrawLetterSize(playerid, BGunTD[5], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, BGunTD[5], 16.866790, 16.333309);
	PlayerTextDrawAlignment(playerid, BGunTD[5], 1);
	PlayerTextDrawColor(playerid, BGunTD[5], -1);
	PlayerTextDrawSetShadow(playerid, BGunTD[5], 0);
	PlayerTextDrawSetOutline(playerid, BGunTD[5], 0);
	PlayerTextDrawFont(playerid, BGunTD[5], 4);
	PlayerTextDrawSetSelectable(playerid, BGunTD[5], true);

	BGunTD[8] = CreatePlayerTextDraw(playerid, 284.861236, 323.750122, "Kup bron");
	PlayerTextDrawLetterSize(playerid, BGunTD[8], 0.607423, 1.920832);
	PlayerTextDrawAlignment(playerid, BGunTD[8], 1);
	PlayerTextDrawColor(playerid, BGunTD[8], -1);
	PlayerTextDrawSetShadow(playerid, BGunTD[8], 0);
	PlayerTextDrawSetOutline(playerid, BGunTD[8], 1);
	PlayerTextDrawBackgroundColor(playerid, BGunTD[8], 255);
	PlayerTextDrawFont(playerid, BGunTD[8], 0);
	PlayerTextDrawSetProportional(playerid, BGunTD[8], 1);
	
	UndercoverTD = CreatePlayerTextDraw(playerid, 317.333343, 413.170288, "~r~ZAMASKOWANY!");
	PlayerTextDrawLetterSize(playerid, UndercoverTD, 0.382999, 1.475555);
	PlayerTextDrawAlignment(playerid, UndercoverTD, 2);
	PlayerTextDrawColor(playerid, UndercoverTD, -1);
	PlayerTextDrawSetShadow(playerid, UndercoverTD, 0);
	PlayerTextDrawSetOutline(playerid, UndercoverTD, 1);
	PlayerTextDrawBackgroundColor(playerid, UndercoverTD, 68);
	PlayerTextDrawFont(playerid, UndercoverTD, 3);
	PlayerTextDrawSetProportional(playerid, UndercoverTD, 1);
	PlayerTextDrawSetShadow(playerid, UndercoverTD, 0);
	
	FindTD = CreatePlayerTextDraw(playerid, 319.666595, 348.874298, "Nazwa: ~r~Edison (60)~w~~n~Dystans: ~r~1000.2m (LS)");
	PlayerTextDrawLetterSize(playerid, FindTD, 0.260332, 1.687110);
	PlayerTextDrawAlignment(playerid, FindTD, 2);
	PlayerTextDrawColor(playerid, FindTD, -1);
	PlayerTextDrawSetShadow(playerid, FindTD, 0);
	PlayerTextDrawSetOutline(playerid, FindTD, 1);
	PlayerTextDrawBackgroundColor(playerid, FindTD, 114);
	PlayerTextDrawFont(playerid, FindTD, 2);
	PlayerTextDrawSetProportional(playerid, FindTD, 1);
	PlayerTextDrawSetShadow(playerid, FindTD, 0);

	RPTextdraw[0] = CreatePlayerTextDraw(playerid, 265.651672, 417.666900, "256");
	PlayerTextDrawLetterSize(playerid, RPTextdraw[0], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, RPTextdraw[0], 3);
	PlayerTextDrawColor(playerid, RPTextdraw[0], -1);
	PlayerTextDrawSetShadow(playerid, RPTextdraw[0], 0);
	PlayerTextDrawSetOutline(playerid, RPTextdraw[0], 2);
	PlayerTextDrawBackgroundColor(playerid, RPTextdraw[0], 255);
	PlayerTextDrawFont(playerid, RPTextdraw[0], 3);
	PlayerTextDrawSetProportional(playerid, RPTextdraw[0], 1);

	RPTextdraw[1] = CreatePlayerTextDraw(playerid, 351.453491, 417.500244, "257");
	PlayerTextDrawLetterSize(playerid, RPTextdraw[1], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, RPTextdraw[1], 1);
	PlayerTextDrawColor(playerid, RPTextdraw[1], -1);
	PlayerTextDrawSetShadow(playerid, RPTextdraw[1], 0);
	PlayerTextDrawSetOutline(playerid, RPTextdraw[1], 2);
	PlayerTextDrawBackgroundColor(playerid, RPTextdraw[1], 255);
	PlayerTextDrawFont(playerid, RPTextdraw[1], 3);
	PlayerTextDrawSetProportional(playerid, RPTextdraw[1], 1);
	PlayerTextDrawSetSelectable(playerid, RPTextdraw[1], true);

	RPTextdraw[2] = CreatePlayerTextDraw(playerid, 308.287384, 432.249786, "RP: 350/2500");
	PlayerTextDrawLetterSize(playerid, RPTextdraw[2], 0.239631, 0.999166);
	PlayerTextDrawAlignment(playerid, RPTextdraw[2], 2);
	PlayerTextDrawColor(playerid, RPTextdraw[2], -1);
	PlayerTextDrawSetShadow(playerid, RPTextdraw[2], 0);
	PlayerTextDrawSetOutline(playerid, RPTextdraw[2], 1);
	PlayerTextDrawBackgroundColor(playerid, RPTextdraw[2], 255);
	PlayerTextDrawFont(playerid, RPTextdraw[2], 2);
	PlayerTextDrawSetProportional(playerid, RPTextdraw[2], 1);

	FareTD[0] = CreatePlayerTextDraw(playerid, 158.485656, 213.250030, "usebox");
	PlayerTextDrawLetterSize(playerid, FareTD[0], 0.000000, 9.275930);
	PlayerTextDrawTextSize(playerid, FareTD[0], 28.922229, 0.000000);
	PlayerTextDrawAlignment(playerid, FareTD[0], 1);
	PlayerTextDrawColor(playerid, FareTD[0], 0);
	PlayerTextDrawUseBox(playerid, FareTD[0], true);
	PlayerTextDrawBoxColor(playerid, FareTD[0], 164);
	PlayerTextDrawSetShadow(playerid, FareTD[0], 0);
	PlayerTextDrawSetOutline(playerid, FareTD[0], 0);
	PlayerTextDrawBackgroundColor(playerid, FareTD[0], 511);
	PlayerTextDrawFont(playerid, FareTD[0], 0);

	FareTD[1] = CreatePlayerTextDraw(playerid, 46.852077, 226.916625, "Taxi Corp");
	PlayerTextDrawLetterSize(playerid, FareTD[1], 0.375504, 1.366666);
	PlayerTextDrawAlignment(playerid, FareTD[1], 1);
	PlayerTextDrawColor(playerid, FareTD[1], -65281);
	PlayerTextDrawSetShadow(playerid, FareTD[1], 0);
	PlayerTextDrawSetOutline(playerid, FareTD[1], 1);
	PlayerTextDrawBackgroundColor(playerid, FareTD[1], 255);
	PlayerTextDrawFont(playerid, FareTD[1], 1);
	PlayerTextDrawSetProportional(playerid, FareTD[1], 1);

	FareTD[2] = CreatePlayerTextDraw(playerid, 40.824260, 248.916656, "Dystans: 0.0 Km~n~Taryfa: ~g~20~w~~n~Koszt: ~g~20");
	PlayerTextDrawLetterSize(playerid, FareTD[2], 0.290234, 1.121666);
	PlayerTextDrawAlignment(playerid, FareTD[2], 1);
	PlayerTextDrawColor(playerid, FareTD[2], -1);
	PlayerTextDrawSetShadow(playerid, FareTD[2], 0);
	PlayerTextDrawSetOutline(playerid, FareTD[2], 1);
	PlayerTextDrawBackgroundColor(playerid, FareTD[2], 255);
	PlayerTextDrawFont(playerid, FareTD[2], 1);
	PlayerTextDrawSetProportional(playerid, FareTD[2], 1);

	WantedTD[playerid] = CreatePlayerTextDraw(playerid, 554.999755, 124.044372, "SZANSA WANTED W~N~~r~5 MINUT");
	PlayerTextDrawLetterSize(playerid, WantedTD[playerid], 0.233000, 1.533630);
	PlayerTextDrawAlignment(playerid, WantedTD[playerid], 2);
	PlayerTextDrawColor(playerid, WantedTD[playerid], -1);
	PlayerTextDrawSetShadow(playerid, WantedTD[playerid], 0);
	PlayerTextDrawSetOutline(playerid, WantedTD[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, WantedTD[playerid], 70);
	PlayerTextDrawFont(playerid, WantedTD[playerid], 2);
	PlayerTextDrawSetProportional(playerid, WantedTD[playerid], 1);
	PlayerTextDrawSetShadow(playerid, WantedTD[playerid], 0);
	
	FriendsTD = CreatePlayerTextDraw(playerid, 91.666687, 271.303710, "Twój przyjaciel, Edison, juz sie zalogowal!");
	PlayerTextDrawLetterSize(playerid, FriendsTD, 0.243999, 0.940444);
	PlayerTextDrawTextSize(playerid, FriendsTD, 0.000000, 124.000000);
	PlayerTextDrawAlignment(playerid, FriendsTD, 2);
	PlayerTextDrawColor(playerid, FriendsTD, -1);
	PlayerTextDrawUseBox(playerid, FriendsTD, 1);
	PlayerTextDrawBoxColor(playerid, FriendsTD, 255);
	PlayerTextDrawSetShadow(playerid, FriendsTD, 0);
	PlayerTextDrawSetOutline(playerid, FriendsTD, 0);
	PlayerTextDrawBackgroundColor(playerid, FriendsTD, 255);
	PlayerTextDrawFont(playerid, FriendsTD, 1);
	PlayerTextDrawSetProportional(playerid, FriendsTD, 1);
	PlayerTextDrawSetShadow(playerid, FriendsTD, 0);
	
	HiddTDs[0] = CreatePlayerTextDraw(playerid, 264.231353, 354.500061, "Color_1:_255");
	PlayerTextDrawLetterSize(playerid, HiddTDs[0], 0.400000, 1.600000);
	PlayerTextDrawAlignment(playerid, HiddTDs[0], 1);
	PlayerTextDrawColor(playerid, HiddTDs[0], -1);
	PlayerTextDrawSetShadow(playerid, HiddTDs[0], 0);
	PlayerTextDrawSetOutline(playerid, HiddTDs[0], 1);
	PlayerTextDrawBackgroundColor(playerid, HiddTDs[0], 255);
	PlayerTextDrawFont(playerid, HiddTDs[0], 2);
	PlayerTextDrawSetProportional(playerid, HiddTDs[0], 1);
	PlayerTextDrawSetShadow(playerid, HiddTDs[0], 0);

	HiddTDs[1] = CreatePlayerTextDraw(playerid, 279.692474, 407.583251, "Kupowac");
	PlayerTextDrawLetterSize(playerid, HiddTDs[1], 0.529779, 1.576665);
	PlayerTextDrawTextSize(playerid, HiddTDs[1], 359.000000, 15.000000);
	PlayerTextDrawAlignment(playerid, HiddTDs[1], 1);
	PlayerTextDrawColor(playerid, HiddTDs[1], -1);
	PlayerTextDrawSetShadow(playerid, HiddTDs[1], 0);
	PlayerTextDrawSetOutline(playerid, HiddTDs[1], 1);
	PlayerTextDrawBackgroundColor(playerid, HiddTDs[1], 255);
	PlayerTextDrawFont(playerid, HiddTDs[1], 3);
	PlayerTextDrawSetProportional(playerid, HiddTDs[1], 1);
	PlayerTextDrawSetShadow(playerid, HiddTDs[1], 0);
	PlayerTextDrawSetSelectable(playerid, HiddTDs[1], true);

	HiddTDs[2] = CreatePlayerTextDraw(playerid, 262.825714, 378.999969, "Color_2:_255");
	PlayerTextDrawLetterSize(playerid, HiddTDs[2], 0.400000, 1.600000);
	PlayerTextDrawAlignment(playerid, HiddTDs[2], 1);
	PlayerTextDrawColor(playerid, HiddTDs[2], -1);
	PlayerTextDrawSetShadow(playerid, HiddTDs[2], 0);
	PlayerTextDrawSetOutline(playerid, HiddTDs[2], 1);
	PlayerTextDrawBackgroundColor(playerid, HiddTDs[2], 255);
	PlayerTextDrawFont(playerid, HiddTDs[2], 2);
	PlayerTextDrawSetProportional(playerid, HiddTDs[2], 1);
	PlayerTextDrawSetShadow(playerid, HiddTDs[2], 0);

	ShopTDs[0] = CreatePlayerTextDraw(playerid, 258.609130, 360.333251, "Interior ID: 5");
	PlayerTextDrawLetterSize(playerid, ShopTDs[0], 0.318944, 1.570832);
	PlayerTextDrawAlignment(playerid, ShopTDs[0], 1);
	PlayerTextDrawColor(playerid, ShopTDs[0], -1);
	PlayerTextDrawSetShadow(playerid, ShopTDs[0], 0);
	PlayerTextDrawSetOutline(playerid, ShopTDs[0], 1);
	PlayerTextDrawBackgroundColor(playerid, ShopTDs[0], 255);
	PlayerTextDrawFont(playerid, ShopTDs[0], 2);
	PlayerTextDrawSetProportional(playerid, ShopTDs[0], 1);
	PlayerTextDrawSetShadow(playerid, ShopTDs[0], 0);

	ShopTDs[1] = CreatePlayerTextDraw(playerid, 265.636871, 381.916564, "Kupowac");
	PlayerTextDrawLetterSize(playerid, ShopTDs[1], 0.529779, 1.576666);
	PlayerTextDrawTextSize(playerid, ShopTDs[1], 359.000000, 15.000000);
	PlayerTextDrawAlignment(playerid, ShopTDs[1], 1);
	PlayerTextDrawColor(playerid, ShopTDs[1], -1);
	PlayerTextDrawSetShadow(playerid, ShopTDs[1], 0);
	PlayerTextDrawSetOutline(playerid, ShopTDs[1], 1);
	PlayerTextDrawBackgroundColor(playerid, ShopTDs[1], 255);
	PlayerTextDrawFont(playerid, ShopTDs[1], 3);
	PlayerTextDrawSetProportional(playerid, ShopTDs[1], 1);
	PlayerTextDrawSetShadow(playerid, ShopTDs[1], 0);
	PlayerTextDrawSetSelectable(playerid, ShopTDs[1], true);

	// ------------------------------ Dealership TextDraw ------------------------------ //
	InfoDS = CreatePlayerTextDraw(playerid, 483.045471, 230.416671, "Model: Perennial ~n~Max predkosc: 133 km/h~n~Cena: ~g~$3,000~n~~w~Typ: ~g~Normalny");
	PlayerTextDrawLetterSize(playerid, InfoDS, 0.389092, 1.308333);
	PlayerTextDrawAlignment(playerid, InfoDS, 1);
	PlayerTextDrawColor(playerid, InfoDS, -1);
	PlayerTextDrawSetShadow(playerid, InfoDS, 0);
	PlayerTextDrawSetOutline(playerid, InfoDS, 1);
	PlayerTextDrawBackgroundColor(playerid, InfoDS, 255);
	PlayerTextDrawFont(playerid, InfoDS, 1);
	PlayerTextDrawSetProportional(playerid, InfoDS, 1);

	MainColor = CreatePlayerTextDraw(playerid, 522.401489, 308.583343, "Glowny kolor");
	PlayerTextDrawLetterSize(playerid, MainColor, 0.426573, 1.249999);
	PlayerTextDrawAlignment(playerid, MainColor, 1);
	PlayerTextDrawColor(playerid, MainColor, -1);
	PlayerTextDrawSetShadow(playerid, MainColor, 0);
	PlayerTextDrawSetOutline(playerid, MainColor, 1);
	PlayerTextDrawBackgroundColor(playerid, MainColor, 255);
	PlayerTextDrawFont(playerid, MainColor, 1);
	PlayerTextDrawSetProportional(playerid, MainColor, 1);

	SecColor = CreatePlayerTextDraw(playerid, 527.618164, 323.583404, "Drugi kolor");
	PlayerTextDrawLetterSize(playerid, SecColor, 0.426573, 1.249999);
	PlayerTextDrawAlignment(playerid, SecColor, 1);
	PlayerTextDrawColor(playerid, SecColor, -1);
	PlayerTextDrawSetShadow(playerid, SecColor, 0);
	PlayerTextDrawSetOutline(playerid, SecColor, 1);
	PlayerTextDrawBackgroundColor(playerid, SecColor, 255);
	PlayerTextDrawFont(playerid, SecColor, 1);
	PlayerTextDrawSetProportional(playerid, SecColor, 1);

	BackColorMain = CreatePlayerTextDraw(playerid, 507.877319, 307.416503, "<");
	PlayerTextDrawLetterSize(playerid, BackColorMain, 0.440629, 1.454166);
	PlayerTextDrawTextSize(playerid, BackColorMain, 519.121643, 10.333330);
	PlayerTextDrawAlignment(playerid, BackColorMain, 1);
	PlayerTextDrawColor(playerid, BackColorMain, -1);
	PlayerTextDrawSetShadow(playerid, BackColorMain, 0);
	PlayerTextDrawSetOutline(playerid, BackColorMain, 1);
	PlayerTextDrawBackgroundColor(playerid, BackColorMain, 255);
	PlayerTextDrawFont(playerid, BackColorMain, 1);
	PlayerTextDrawSetProportional(playerid, BackColorMain, 1);
	PlayerTextDrawSetSelectable(playerid, BackColorMain, true);

	NextColorMain = CreatePlayerTextDraw(playerid, 606.329711, 308.416564, ">");
	PlayerTextDrawLetterSize(playerid, NextColorMain, 0.440629, 1.454166);
	PlayerTextDrawTextSize(playerid, NextColorMain, 618.447998, 10.833335);
	PlayerTextDrawAlignment(playerid, NextColorMain, 1);
	PlayerTextDrawColor(playerid, NextColorMain, -1);
	PlayerTextDrawSetShadow(playerid, NextColorMain, 0);
	PlayerTextDrawSetOutline(playerid, NextColorMain, 1);
	PlayerTextDrawBackgroundColor(playerid, NextColorMain, 255);
	PlayerTextDrawFont(playerid, NextColorMain, 1);
	PlayerTextDrawSetProportional(playerid, NextColorMain, 1);
	PlayerTextDrawSetSelectable(playerid, NextColorMain, true);

	BackColorSec = CreatePlayerTextDraw(playerid, 507.940246, 322.416503, "<");
	PlayerTextDrawLetterSize(playerid, BackColorSec, 0.440629, 1.454166);
	PlayerTextDrawTextSize(playerid, BackColorSec, 519.121337, 10.499984);
	PlayerTextDrawAlignment(playerid, BackColorSec, 1);
	PlayerTextDrawColor(playerid, BackColorSec, -1);
	PlayerTextDrawSetShadow(playerid, BackColorSec, 0);
	PlayerTextDrawSetOutline(playerid, BackColorSec, 1);
	PlayerTextDrawBackgroundColor(playerid, BackColorSec, 255);
	PlayerTextDrawFont(playerid, BackColorSec, 1);
	PlayerTextDrawSetProportional(playerid, BackColorSec, 1);
	PlayerTextDrawSetSelectable(playerid, BackColorSec, true);

	NextColorSec = CreatePlayerTextDraw(playerid, 607.329650, 322.833190, ">");
	PlayerTextDrawLetterSize(playerid, NextColorSec, 0.440629, 1.454166);
	PlayerTextDrawTextSize(playerid, NextColorSec, 618.447875, 10.416666);
	PlayerTextDrawAlignment(playerid, NextColorSec, 1);
	PlayerTextDrawColor(playerid, NextColorSec, -1);
	PlayerTextDrawSetShadow(playerid, NextColorSec, 0);
	PlayerTextDrawSetOutline(playerid, NextColorSec, 1);
	PlayerTextDrawBackgroundColor(playerid, NextColorSec, 255);
	PlayerTextDrawFont(playerid, NextColorSec, 1);
	PlayerTextDrawSetProportional(playerid, NextColorSec, 1);
	PlayerTextDrawSetSelectable(playerid, NextColorSec, true);

	CarsCategory = CreatePlayerTextDraw(playerid, 0.937097, 228.666549, "Auta");
	PlayerTextDrawLetterSize(playerid, CarsCategory, 0.507159, 1.512497);
	PlayerTextDrawTextSize(playerid, CarsCategory, 38.418746, 8.416666);
	PlayerTextDrawAlignment(playerid, CarsCategory, 1);
	PlayerTextDrawColor(playerid, CarsCategory, -1);
	PlayerTextDrawSetShadow(playerid, CarsCategory, 0);
	PlayerTextDrawSetOutline(playerid, CarsCategory, 1);
	PlayerTextDrawBackgroundColor(playerid, CarsCategory, 255);
	PlayerTextDrawFont(playerid, CarsCategory, 1);
	PlayerTextDrawSetProportional(playerid, CarsCategory, 1);
	PlayerTextDrawSetSelectable(playerid, CarsCategory, true);

	BikesCategory = CreatePlayerTextDraw(playerid, 0.531533, 246.583190, "Rowery");
	PlayerTextDrawLetterSize(playerid, BikesCategory, 0.507158, 1.512496);
	PlayerTextDrawTextSize(playerid, BikesCategory, 44.040996, 8.916666);
	PlayerTextDrawAlignment(playerid, BikesCategory, 1);
	PlayerTextDrawColor(playerid, BikesCategory, -1);
	PlayerTextDrawSetShadow(playerid, BikesCategory, 0);
	PlayerTextDrawSetOutline(playerid, BikesCategory, 1);
	PlayerTextDrawBackgroundColor(playerid, BikesCategory, 255);
	PlayerTextDrawFont(playerid, BikesCategory, 1);
	PlayerTextDrawSetProportional(playerid, BikesCategory, 1);
	PlayerTextDrawSetSelectable(playerid, BikesCategory, true);

	BoatsCategory = CreatePlayerTextDraw(playerid, 0.594491, 263.333099, "Lodzie");
	PlayerTextDrawLetterSize(playerid, BoatsCategory, 0.507158, 1.512496);
	PlayerTextDrawTextSize(playerid, BoatsCategory, 48.726203, 8.000000);
	PlayerTextDrawAlignment(playerid, BoatsCategory, 1);
	PlayerTextDrawColor(playerid, BoatsCategory, -1);
	PlayerTextDrawSetShadow(playerid, BoatsCategory, 0);
	PlayerTextDrawSetOutline(playerid, BoatsCategory, 1);
	PlayerTextDrawBackgroundColor(playerid, BoatsCategory, 255);
	PlayerTextDrawFont(playerid, BoatsCategory, 1);
	PlayerTextDrawSetProportional(playerid, BoatsCategory, 1);
	PlayerTextDrawSetSelectable(playerid, BoatsCategory, true);

	AirCategory = CreatePlayerTextDraw(playerid, 0.188927, 280.666473, "Samoloty");
	PlayerTextDrawLetterSize(playerid, AirCategory, 0.507158, 1.512496);
	PlayerTextDrawTextSize(playerid, AirCategory, 74.026351, 8.166666);
	PlayerTextDrawAlignment(playerid, AirCategory, 1);
	PlayerTextDrawColor(playerid, AirCategory, -1);
	PlayerTextDrawSetShadow(playerid, AirCategory, 0);
	PlayerTextDrawSetOutline(playerid, AirCategory, 1);
	PlayerTextDrawBackgroundColor(playerid, AirCategory, 255);
	PlayerTextDrawFont(playerid, AirCategory, 1);
	PlayerTextDrawSetProportional(playerid, AirCategory, 1);
	PlayerTextDrawSetSelectable(playerid, AirCategory, true);

	/*SpecialCategory = CreatePlayerTextDraw(playerid, 0.251885, 297.999877, "Specjalne");
	PlayerTextDrawLetterSize(playerid, SpecialCategory, 0.507158, 1.512496);
	PlayerTextDrawTextSize(playerid, SpecialCategory, 60.439231, 8.666667);
	PlayerTextDrawAlignment(playerid, SpecialCategory, 1);
	PlayerTextDrawColor(playerid, SpecialCategory, -1);
	PlayerTextDrawSetShadow(playerid, SpecialCategory, 0);
	PlayerTextDrawSetOutline(playerid, SpecialCategory, 1);
	PlayerTextDrawBackgroundColor(playerid, SpecialCategory, 255);
	PlayerTextDrawFont(playerid, SpecialCategory, 1);
	PlayerTextDrawSetProportional(playerid, SpecialCategory, 1);
	PlayerTextDrawSetSelectable(playerid, SpecialCategory, true);*/

	RotLeft = CreatePlayerTextDraw(playerid, 189.751113, 329.583343, "Lewo");
	PlayerTextDrawLetterSize(playerid, RotLeft, 0.361449, 1.273333);
	PlayerTextDrawTextSize(playerid, RotLeft, 244.568038, 8.166666);
	PlayerTextDrawAlignment(playerid, RotLeft, 1);
	PlayerTextDrawColor(playerid, RotLeft, -1);
	PlayerTextDrawSetShadow(playerid, RotLeft, 0);
	PlayerTextDrawSetOutline(playerid, RotLeft, 1);
	PlayerTextDrawBackgroundColor(playerid, RotLeft, 255);
	PlayerTextDrawFont(playerid, RotLeft, 1);
	PlayerTextDrawSetProportional(playerid, RotLeft, 1);
	PlayerTextDrawSetSelectable(playerid, RotLeft, true);

	RotRight = CreatePlayerTextDraw(playerid, 361.293212, 328.833282, "Prawo");
	PlayerTextDrawLetterSize(playerid, RotRight, 0.361449, 1.273333);
	PlayerTextDrawTextSize(playerid, RotRight, 423.543579, 8.416656);
	PlayerTextDrawAlignment(playerid, RotRight, 1);
	PlayerTextDrawColor(playerid, RotRight, -1);
	PlayerTextDrawSetShadow(playerid, RotRight, 0);
	PlayerTextDrawSetOutline(playerid, RotRight, 1);
	PlayerTextDrawBackgroundColor(playerid, RotRight, 255);
	PlayerTextDrawFont(playerid, RotRight, 1);
	PlayerTextDrawSetProportional(playerid, RotRight, 1);
	PlayerTextDrawSetSelectable(playerid, RotRight, true);

	BuyModel = CreatePlayerTextDraw(playerid, 186.471466, 362.833404, "Kup ten model");
	PlayerTextDrawLetterSize(playerid, BuyModel, 0.593367, 1.897500);
	PlayerTextDrawTextSize(playerid, BuyModel, 295.636871, 15.333333);
	PlayerTextDrawAlignment(playerid, BuyModel, 1);
	PlayerTextDrawColor(playerid, BuyModel, -1);
	PlayerTextDrawSetShadow(playerid, BuyModel, 0);
	PlayerTextDrawSetOutline(playerid, BuyModel, 1);
	PlayerTextDrawBackgroundColor(playerid, BuyModel, 255);
	PlayerTextDrawFont(playerid, BuyModel, 1);
	PlayerTextDrawSetProportional(playerid, BuyModel, 1);
	PlayerTextDrawSetSelectable(playerid, BuyModel, true);

	TestModel = CreatePlayerTextDraw(playerid, 306.476196, 362.666839, "Jazda testowa");
	PlayerTextDrawLetterSize(playerid, TestModel, 0.593367, 1.897500);
	PlayerTextDrawTextSize(playerid, TestModel, 419.326416, 15.083343);
	PlayerTextDrawAlignment(playerid, TestModel, 1);
	PlayerTextDrawColor(playerid, TestModel, -1);
	PlayerTextDrawSetShadow(playerid, TestModel, 0);
	PlayerTextDrawSetOutline(playerid, TestModel, 1);
	PlayerTextDrawBackgroundColor(playerid, TestModel, 255);
	PlayerTextDrawFont(playerid, TestModel, 1);
	PlayerTextDrawSetProportional(playerid, TestModel, 1);
	PlayerTextDrawSetSelectable(playerid, TestModel, true);

	ExitDS = CreatePlayerTextDraw(playerid, 280.770416, 384.083496, "Anuluj");
	PlayerTextDrawLetterSize(playerid, ExitDS, 0.593367, 1.897500);
	PlayerTextDrawTextSize(playerid, ExitDS, 317.657379, 15.416665);
	PlayerTextDrawAlignment(playerid, ExitDS, 1);
	PlayerTextDrawColor(playerid, ExitDS, -1);
	PlayerTextDrawSetShadow(playerid, ExitDS, 0);
	PlayerTextDrawSetOutline(playerid, ExitDS, 1);
	PlayerTextDrawBackgroundColor(playerid, ExitDS, 255);
	PlayerTextDrawFont(playerid, ExitDS, 1);
	PlayerTextDrawSetProportional(playerid, ExitDS, 1);
	PlayerTextDrawSetSelectable(playerid, ExitDS, true);

	BackCar = CreatePlayerTextDraw(playerid, 158.360183, 362.833404, "<");
	PlayerTextDrawLetterSize(playerid, BackCar, 0.628038, 2.066666);
	PlayerTextDrawTextSize(playerid, BackCar, 176.163955, 20.583334);
	PlayerTextDrawAlignment(playerid, BackCar, 1);
	PlayerTextDrawColor(playerid, BackCar, -1);
	PlayerTextDrawSetShadow(playerid, BackCar, 0);
	PlayerTextDrawSetOutline(playerid, BackCar, 1);
	PlayerTextDrawBackgroundColor(playerid, BackCar, 255);
	PlayerTextDrawFont(playerid, BackCar, 1);
	PlayerTextDrawSetProportional(playerid, BackCar, 1);
	PlayerTextDrawSetSelectable(playerid, BackCar, true);

	NextCar = CreatePlayerTextDraw(playerid, 433.445190, 360.916717, ">");
	PlayerTextDrawLetterSize(playerid, NextCar, 0.628038, 2.066666);
	PlayerTextDrawTextSize(playerid, NextCar, 449.780273, 20.333337);
	PlayerTextDrawAlignment(playerid, NextCar, 1);
	PlayerTextDrawColor(playerid, NextCar, -1);
	PlayerTextDrawSetShadow(playerid, NextCar, 0);
	PlayerTextDrawSetOutline(playerid, NextCar, 1);
	PlayerTextDrawBackgroundColor(playerid, NextCar, 255);
	PlayerTextDrawFont(playerid, NextCar, 1);
	PlayerTextDrawSetProportional(playerid, NextCar, 1);
	PlayerTextDrawSetSelectable(playerid, NextCar, true);
	// ------------------------------ Dealership TextDraw ------------------------------ //

	ShowTD = CreatePlayerTextDraw(playerid, 89.004348, 315.416473, "FPS: ~y~Ladowanie...~w~~h~~n~Ping: ~y~Ladowanie..");
	PlayerTextDrawLetterSize(playerid, ShowTD, 0.274904, 1.121667);
	PlayerTextDrawAlignment(playerid, ShowTD, 2);
	PlayerTextDrawColor(playerid, ShowTD, -21);
	PlayerTextDrawSetShadow(playerid, ShowTD, 1);
	PlayerTextDrawSetOutline(playerid, ShowTD, 0);
	PlayerTextDrawBackgroundColor(playerid, ShowTD, 255);
	PlayerTextDrawFont(playerid, ShowTD, 1);
	PlayerTextDrawSetProportional(playerid, ShowTD, 1);
	PlayerTextDrawSetShadow(playerid, ShowTD, 1);
	


	JobTD = CreatePlayerTextDraw(playerid, 540.999633, 378.740631, "Terytorium zaatakowane przez %s~n~%s - %s~n~Wynik: %.1f - %.1f~n~Czas wojny: %s~n~Zabicia: %d Zgonów: %d Wynik: %d");
	PlayerTextDrawLetterSize(playerid, JobTD, 0.188666, 0.786961);
	PlayerTextDrawTextSize(playerid, JobTD, 0.000000, 132.000000);
	PlayerTextDrawAlignment(playerid, JobTD, 2);
	PlayerTextDrawColor(playerid, JobTD, -1);
	PlayerTextDrawUseBox(playerid, JobTD, 1);
	PlayerTextDrawBoxColor(playerid, JobTD, 227);
	PlayerTextDrawSetShadow(playerid, JobTD, 0);
	PlayerTextDrawSetOutline(playerid, JobTD, 0);
	PlayerTextDrawBackgroundColor(playerid, JobTD, 255);
	PlayerTextDrawFont(playerid, JobTD, 1);
	PlayerTextDrawSetProportional(playerid, JobTD, 1);
	PlayerTextDrawSetShadow(playerid, JobTD, 0);

	InfosTD = CreatePlayerTextDraw(playerid, 304.992889, 386.000122, "");
	PlayerTextDrawLetterSize(playerid, InfosTD, 0.240234, 1.110000);
	PlayerTextDrawTextSize(playerid, InfosTD, 0.000000, 303.000000);
	PlayerTextDrawAlignment(playerid, InfosTD, 2);
	PlayerTextDrawColor(playerid, InfosTD, -1);
	PlayerTextDrawSetShadow(playerid, InfosTD, 0);
	PlayerTextDrawSetOutline(playerid, InfosTD, 1);
	PlayerTextDrawBackgroundColor(playerid, InfosTD, 248);
	PlayerTextDrawFont(playerid, InfosTD, 1);
	PlayerTextDrawSetProportional(playerid, InfosTD, 1);
	PlayerTextDrawSetShadow(playerid, InfosTD, 0);

	Speedo = CreatePlayerTextDraw(playerid, 550.999816, 169.674087, "Szybkosc: 100 km/h~n~Paliwo: 100%~n~Drzwi: Otwarte~n~Drogomierz: 1002 km");
	PlayerTextDrawLetterSize(playerid, Speedo, 0.277999, 1.189332);
	PlayerTextDrawAlignment(playerid, Speedo, 2);
	PlayerTextDrawColor(playerid, Speedo, -1);
	PlayerTextDrawSetShadow(playerid, Speedo, 1);
	PlayerTextDrawSetOutline(playerid, Speedo, 1);
	PlayerTextDrawBackgroundColor(playerid, Speedo, 108);
	PlayerTextDrawFont(playerid, Speedo, 1);
	PlayerTextDrawSetProportional(playerid, Speedo, 1);
	PlayerTextDrawSetShadow(playerid, Speedo, 1);
	
	/*InfoTD = CreatePlayerTextDraw(playerid, 22.028377, 352.999908, "~r~999~n~~w~TICK~n~~n~~g~999~n~~w~FPS~n~~n~~p~999~n~~w~PING");
	PlayerTextDrawLetterSize(playerid, InfoTD, 0.268514, 0.849066);
	PlayerTextDrawTextSize(playerid, InfoTD, 1587.199707, 420.266662);
	PlayerTextDrawAlignment(playerid, InfoTD, 2);
	PlayerTextDrawColor(playerid, InfoTD, -1);
	PlayerTextDrawUseBox(playerid, InfoTD, true);
	PlayerTextDrawBoxColor(playerid, InfoTD, 0);
	PlayerTextDrawSetShadow(playerid, InfoTD, 0);
	PlayerTextDrawSetOutline(playerid, InfoTD, 1);
	PlayerTextDrawBackgroundColor(playerid, InfoTD, 51);
	PlayerTextDrawFont(playerid, InfoTD, 2);
	PlayerTextDrawSetProportional(playerid, InfoTD, 1);*/
	
	
	
	
	return 1;
}

stock RemoveObj(playerid) {
	// * RemoveBuildingForPlayer * //
	// mower
	RemoveBuildingForPlayer(playerid, 739, 2011.2266, -1218.9844, 19.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1935.6875, -1217.3516, 17.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1953.2656, -1234.1797, 17.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2004.3516, -1240.0938, 20.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2029.7500, -1227.7031, 19.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1990.1250, -1226.6875, 19.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2036.6953, -1214.1875, 21.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2009.7422, -1212.5156, 17.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2018.4297, -1206.6563, 19.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1927.5156, -1191.4922, 18.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1989.0469, -1171.1172, 19.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1998.6328, -1177.2188, 17.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1998.6641, -1168.8828, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 714, 1906.4141, -1152.2578, 22.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1880.1250, -1152.1328, 20.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1871.6563, -1147.4063, 26.1016, 0.25);
	//farm
	RemoveBuildingForPlayer(playerid, 3276, -94.5234, 31.6172, 2.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -90.5313, 42.1484, 2.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -81.8984, 56.8516, 2.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -71.8359, 58.8750, 2.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3374, -92.8672, 58.3438, 3.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 3374, -91.9453, 47.8125, 3.5703, 0.25);
	//
	RemoveBuildingForPlayer(playerid, 3574, 2092.6875, -2043.3984, 15.0703, 0.25); // garbage
    RemoveBuildingForPlayer(playerid, 12956, 96.3281, -261.1953, 3.8594, 0.25); // job trucker
	return 1;
}

stock ResetVariables(playerid) {	
	// VARIABILELE
	ResetBlockList(playerid);
	toglicitatie[playerid] = 1;
	TotalMoney[playerid] = 0;
	HaveHelp[playerid] = -1;
	AcceptedReport[playerid] = -1;
	Ajutor[playerid] = 0;
	RobMoney[playerid] = 0;
	Robbery[playerid] = 0;
 	lastpremium[playerid] = 0;
    DMVCar[playerid] = 0;
    SpecPlayers[playerid] = 0;	
    CarColor[playerid] = 0;
    PlayerTime10[playerid] = 0;
    VehicleKey[playerid] = 0;
    Accepted[playerid] = -1;
    AdTimer[playerid] = 0;
	JobDuty[playerid] = 0;
    InitFly(playerid);
	InDealer[playerid] = 0;
    CreateHouse[playerid] = 0;
	InShop[playerid] = 0;
	PlayerTime[playerid] = 0;
	PlayerTime2[playerid] = 0;	
	PlayerTime3[playerid] = 0;
	PlayerTime4[playerid] = 0;
	PlayerTime5[playerid] = 0;
	PlayerTime6[playerid] = 0;
	WantedTime[playerid] = 0;
    PlayerTime7[playerid] = 0;
    PlayerTime8[playerid] = 0;
    Reply[playerid] = -1;
    Robbed[playerid] = 0;
    TaxiDriver[playerid] = -1;
    ClanDuty[playerid] = 0;	
	pDrunkLevelLast[playerid]	= 0;
	FPS2[playerid]			= 0;
    TruckerRoute[playerid] = 15;
	TruckerStep[playerid] = 0;	
	gPlayerUsingLoopingAnim[playerid] = 0;
	UsedContract[playerid] = 0;
	PlayerHit[playerid] = -1;
	SetPVarInt(playerid, "Przykrywka", 0);  HidePM[playerid] = 0;
	PhoneOnline[playerid] = 0; 				
	UsingDrugs[playerid] = 0; 				CurrentMoney[playerid] = 0;
	UsedFind[playerid] = 0; 				CP[playerid] = 0;
	//SpawnChange[playerid] = 1;				
	RepairOffer[playerid] = 999; 			RepairPrice[playerid] = 0;
	RepairCar[playerid] = 0; 				TalkingLive[playerid] = 255;
	LiveOffer[playerid] = 999; 				TakingLesson[playerid] = 0;
	RefillOffer[playerid] = 999; 			RefillPrice[playerid] = 0;
	DrugOffer[playerid] = 999; 				PlayerCuffed[playerid] = 0;
	PlayerCuffedTime[playerid] = 0; 		DrugPrice[playerid] = 0;
	RegistrationStep[playerid] = 0; 		PlayerCuffed2[playerid] = 0;
	DrugGram[playerid] = 0; 				HouseOffer[playerid] = 999;
	HouseID[playerid] = 0;				 	HousePrice[playerid] = 0;
	JailPrice[playerid] = 0; 				MedicTime[playerid] = 0;
	NeedMedicTime[playerid] = 0; 			PlacedNews[playerid] = 0;
	OnDuty[playerid] = 0; 					Diceid[playerid] = 999;
	MedicCall[playerid] = -1;
	SafeTime[playerid] = 60; 				TransportDuty[playerid] = 0;
	PlayerTied[playerid] = 0; 				TaxiCallTime[playerid] = 0;
	TaxiCall[playerid] = -1; 				MedicCallTime[playerid] = 0;
	MechanicCallTime[playerid] = 0;
	Mobile[playerid] = 255; 				MechanicCall[playerid] = -1;
	Spectate[playerid] = 255; 				PlayerDrunk[playerid] = 0;
	PlayerDrunkTime[playerid] = 0; 			Unspec[playerid][sLocal] = 255;
	ConsumingMoney[playerid] = 0;
	IsCollectingRubbish[playerid] = 0; 		GarbageEndTime[playerid] = 0;
	GarbageTime[playerid] = 0; 				BinTime[playerid] = 0;
    gLastCar[playerid] = 0; 				FirstSpawn[playerid] = 0;
	gOoc[playerid] = 0;
	gNews[playerid] = 0; 					BigEar[playerid] = 0;
	gDice[playerid] = 0; 					gFam[playerid] = 0;
	IsPlayerLogged[playerid] = 0;
	gPlayerLogTries[playerid] = 0; 			gPlayerAccount[playerid] = 0;
	gPlayerSpawned[playerid] = 0; 			FreeOffer[playerid] = -1;
	FreePrice[playerid] = 0; 				PlayerTazeTime[playerid] = 0;
	PlayerStoned[playerid] = 0; 			AcceptOffer[playerid] = -1;
	AcceptPrice[playerid] = 0; 				TicketOffer[playerid] = 999;
	TicketMoney[playerid] = 0; 				TutTime[playerid] = 0;
	TaxiAccepted[playerid] = 999;
	LicensesAccepted[playerid] = 999;
	PlayerInfo[playerid][pCash] = dollah;
	NoFuel[playerid] = 0;
	HireCar[playerid] = -1; 				gPlayerAnimLibsPreloaded[playerid] = 0;
	TransportValue[playerid] = 0; 			TransportMoney[playerid] = 0;
	TransportCost[playerid] = 0;
	TransportDriver[playerid] = 999; 		TransferOffer[playerid] = 999;
	TransferMoney[playerid] = 0; 			
	AfterTutorial[playerid] = 0;
	IsSmoking[playerid] = 0;
	InHouse[playerid] = -1; 				InBussines[playerid] = -1;
	targetfind[playerid] = -1; 				helpmeaccepted[playerid] = -1;
	helpmesend[playerid] = -1; 				adminacceptedhelp[playerid] = -1;
	playerhavehelp[playerid] = -1; 			licenseaccepted[playerid] = -1;
	licensesend[playerid] = -1;			 	MatsHolding[playerid] = 0;
	MatsOffer[playerid] = -1; 				MatsPrice[playerid] = 0;
	MatsAmmo[playerid] = 0; 				SellgunOffer[playerid] = -1;
	SellgunPrice[playerid] = 0; 			SellgunMats[playerid] = 0;
	SellgunAmmo[playerid] = 0; 				SellgunID[playerid] = 0;
	togfind[playerid] = 0;				 	SwitchKey[playerid] = 2;
	bizid[playerid] = 0; 					bizprice[playerid] = 0;
	bizoffer[playerid] = 999; 				biztype[playerid] = 0;
	playerDeath[playerid] = 0; 				curatj[playerid] = 0;
	tazer[playerid] = 0; 					togip[playerid] = 0;
	Speedlimit[playerid] = 0;				WTToggle[playerid] = false;
	WTChannel[playerid] = 0.0; 				Clanidoff[playerid] = 999;
	Radaron[playerid] = 0;
	Radarlimit[playerid] = 0; 				balem[playerid] = 0;
	wantedlost[playerid] = 1800;			
	Dicem[playerid] = 999; 					pingsound[playerid] = 1;
	Refueling[playerid] = 0;				InHQ[playerid] = -1;
	toglc[playerid] = 0;					explosion[playerid] = 0;
	taxim[playerid] = 0;					Wartimeon[playerid] = 1;
	towcarm[playerid] = 0;					shotTime[playerid] = 0;
    shot[playerid] = 0;						tuningenter[playerid] = 0;
    KillP[playerid] = 0;					DeathP[playerid] = 0;
	return 1;
}	

public ClearCrime(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[50];
		format(string, sizeof(string), "********");
		strmid(PlayerInfo[playerid][pVictim], string, 0, strlen(string), 255);
		strmid(PlayerInfo[playerid][pAccused], string, 0, strlen(string), 255);
		format(string, sizeof(string), "Bez przestepstwa");
		strmid(PlayerInfo[playerid][pCrime1], string, 0, strlen(string), 255);
		strmid(PlayerInfo[playerid][pCrime2], string, 0, strlen(string), 255);
		strmid(PlayerInfo[playerid][pCrime3], string, 0, strlen(string), 255);
		Update(playerid,pCrime1x);
		Update(playerid,pCrime2x);
		Update(playerid,pCrime3x);
		Update(playerid,pAccusedx);
		Update(playerid,pVictimx);
	}
	return 1;
}

public SendLeaderMessage(leader, color, string[])
{
	foreach(Player, i)
	{
	    if(PlayerInfo[i][pLeader] == leader)
	    {
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}

stock GetDays( timestamp )
{
	return ( gettime( ) - timestamp ) / 86400;
}

// ONPLAYERDISCONNECT
public OnPlayerDisconnect(playerid, reason)
{
	if(CurrentCCTV[playerid] != -1) {
	CurrentCCTV[playerid] = -1; //CCTV
	} else {
	//zapisywanie pozycji 
	new Float: pos[3], mysql[256];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	format(mysql, 256, "UPDATE `users` SET `Pos_x`='%f', `Pos_y`='%f',`Pos_z`='%f', `last_vw`='%d' WHERE ID='%d'", pos[0], pos[1], pos[2], GetPlayerVirtualWorld(playerid), PlayerInfo[playerid][pSQLID]);
	mysql_query(SQL, mysql);
	}
	
	DestroyPlayerProgressBar(playerid, HudProgress[playerid][0]);
	DestroyPlayerProgressBar(playerid, HudProgress[playerid][1]);
	
	DestroyDynamic3DTextLabel(Opis[playerid]);
	
	DestroyDynamic3DTextLabel(PlayerInfo[playerid][Player3DText]);
	
	/*if(reason == 1 && UsedWeap[playerid] > 0){
	Thing[Thing[UsedWeapThing[playerid]][t_uid]][t_number] = 0;
	DBUpdateThing(Thing[UsedWeapThing[playerid]][t_uid]);
	} zerowanie amunicji gdy oponent da /q z wyciagnieta bronia*/
	PlayerInfo[playerid][pSpawned] = 0;
	DBUnloadPlayerThings(playerid);
	ResetPlayerWeaponsEx(playerid);
 	Thing[UsedWeapThing[playerid]][t_used] = 0;
	Thing[SelectedThing[playerid]][t_used] = 0;
	UsedSlot[playerid] = -1;
    UsedWeap[playerid] = 0;
	LoadThing[playerid] = 0;
	PlayerInfo[playerid][pRapidFire] = 0;//anyczit
    UsedWeapThing[playerid] = 0;//usuwanie zmiennych przedmiotów po /q
    if(DMVCar[playerid] != 0) DestroyVehicle(DMVCar[playerid]), DMVCar[playerid] = 0;
    Update(playerid,pWantedLevelx);
	
	if(CurrentCCTV[playerid] > -1)
	{
	    KillTimer(KeyTimer[playerid]);
	    TextDrawHideForPlayer(playerid, TD);
	}
	
	new count, names[180];
	if(PlayerInfo[playerid][pWantedLevel] != 0) {
		foreach(Player,i) {
			if(GetPVarInt(i, "OfferBy") == playerid) {
				SCM(playerid, -1, "Biznes zostal odwolany! ");
				SCM(i, -1, "Biznes zostal odwolany! ");
				SetPVarInt(i, "OfferBy", -1);		
			}		
			if(IsACop(i) && CrimInRange(50.0, playerid,i) && OnDuty[i] == 1) {
				count = 1;
				ConsumingMoney[i] = 1;
				GivePlayerCash(i, PlayerInfo[playerid][pWantedLevel] * 380);
				Update(i, pCashx);
				PlayerInfo[i][pCommands] ++;
				new rquery[256];
				format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[i][pCommands], PlayerInfo[i][pSQLID]);
				mysql_query(SQL, rquery);
				format(names, 256, "%s %s", names, GetName(i));
			}
			if(count == 1) {
				if(ProxDetectorS(30.0, i, playerid)) {
					new string[128];
					format(string, sizeof(string), "* %s zostal umieszczony w wiezieniu. Umiescil: %s", GetName(playerid), names);
					SCM(i, COLOR_PURPLE, string);
				}
			}				
		}
	}	
	if(count == 1) {					
		GivePlayerCash(playerid, - PlayerInfo[playerid][pWantedLevel] * 380);
		PlayerInfo[playerid][pWantedDeaths] += 1;
		PlayerInfo[playerid][pJailed] = 1;
		PlayerInfo[playerid][pJailTime] = (PlayerInfo[playerid][pWantedLevel])*(150);
		new string[128];
		format(string, sizeof(string), "* Jestes w wiezieniu przez %d sekund i straciles $%d.", PlayerInfo[playerid][pJailTime], PlayerInfo[playerid][pWantedLevel] * 380);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		
		TogglePlayerControllable(playerid, 0);
		SetTimerEx("UnFreezeStation", 1000, false, "i", playerid);
		WantedPoints[playerid] = 0;
		PlayerInfo[playerid][pWantedLevel] = 0;
		SetPlayerWantedLevel(playerid, 0);
		Update(playerid,pWantedLevelx);
		Update(playerid,pJailedx);
		Update(playerid,pJailTimex);
		ClearCrime(playerid);			
	}	
		
	foreach(Player, i) {
		if(IsPlayerConnected(i)) {
			if(HaveHelp[i] == playerid && PlayerInfo[playerid][pHelper] == 0 && HaveHelp[i] != -1) {
				new string[256];
				format(string, sizeof(string), "AdmCmd: %s wyszedl, podczas pytania gracza %s.", GetName(playerid), GetName(i));
				SendAdminMessage(COLOR_LOGS, string, 1);
				SendClientMessage(i, COLOR_YELLOW, "Gracz z pytaniem wyszedl.");
				HaveHelp[i] = -1;
			}
			if(HaveHelp[playerid] == i && PlayerInfo[playerid][pHelper] >= 1 && HaveHelp[playerid] != -1) {
				new string[256];
				format(string, sizeof(string), "AdmCmd: Helper %s odlaczyl sie, gdy mial swoje pytanie od %s.", GetName(playerid), GetName(i));
				SendAdminMessage(COLOR_LOGS, string, 1);
				SendClientMessage(i, COLOR_YELLOW, "Pomocnik, który mial ci odpowiedziec, rozlaczyl sie. Zaczekaj na odpowiedz od innego pomocnika.");
				OnHelper[i] = 0;
			}
			if(AcceptedReport[i] == playerid) {
				AcceptedReport[i] = -1;
				SCM(i, COLOR_YELLOW, "Konwersacja zakonczona! (Wyjscie)");
			}	
			
		    if(Spectate[i] == playerid) {
		        Spectate[i] = 255;
		        SCM(i, -1, "Obserwowany gracz sie rozlaczyl!");
				TogglePlayerControllable(i, 1);
				TogglePlayerSpectating(i, 0);
				SetPlayerInterior(i,Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				Unspec[i][sLocal] = 255;
				gTeam[i] = PlayerInfo[i][pTeam];
				SendClientMessage(i, COLOR_GREEN, "Nie jeste juz na specatate.");
				PlayerTextDrawHide(i, SpecTD);
				SpawnPlayer(i);
		    }
		}
	}
	
  	if(TakingLesson[playerid] == 1)
	{
    	TakingLesson[playerid] = 0;
	   	new engine,lights,alarm,bonnet,boot,objective;
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,0,bonnet,boot,objective);
    	DisablePlayerCheckpoint(playerid);
    	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
    	PlayerTextDrawHide(playerid, InfosTD);
		CP[playerid] = 0;
		if(DMVCar[playerid] != 0) DestroyVehicle(DMVCar[playerid]), DMVCar[playerid] = 0;
	}
    	
	if(EditHouse[playerid] == 1) {
 		DestroyDynamicObject(ObjectEdited[playerid]);
		EditHouse[playerid] = 0;
 	}

	/*for(new i = 0; i < 10; i++) {
		if(PlayerInfo[playerid][pCarKey][i] != 0) DestroyPlayerCar(PlayerInfo[playerid][pCarKey][i]);
	} USUWANIE AUTA PO /q*/

	if(JobWorking[playerid] == 1) {
		JobWorking[playerid] = 0;
		if(JobVehicle[playerid] != 0) { DestroyVehicle(JobVehicle[playerid]); JobVehicle[playerid] = 0; }
		if(Trailer[playerid] != 0) { DestroyVehicle(Trailer[playerid]); Trailer[playerid] = 0; TruckerRoute[playerid] = 15; }
		PlayerTextDrawHide(playerid, InfosTD);
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
		NaczepaStart[playerid] = 0;
		JobVehicle[playerid] = 0;
		HideFarmerObjects(playerid);
		HideMowerObjects(playerid);
	}

	// PAYDAY SAVE
    if(IsPlayerLogged[playerid] != 0)
	{
		new query[256];
		format(query, 256, "UPDATE `users` SET `LastTimeOn`='%d' WHERE ID='%d'", gettime( ), PlayerInfo[playerid][pSQLID]);
		mysql_query(SQL, query);

		OnPlayerDateUpdateX2(playerid);
		Update(playerid, pPayDayHadx);
		Update(playerid, pPayDayx);
		Update(playerid, pPayCheckx);
		Update(playerid, pFpunishx);
		Update(playerid, pConnectTimex);
		Update(playerid, pLawyerx);
		Update(playerid, pTowx);
		printf("Z gry wyszedl gracz %s, wplacilem mu do banku %d", Nick(playerid), PlayerInfo[playerid][pAccount]);
		Update(playerid, pBank);
		Update(playerid, pCashx);
		Update(playerid, pRP);
		Update(playerid, pJailTimex);
		Update(playerid, pLevelx);
		
		new str[256];
		mysql_format(SQL, str,128,"UPDATE `users` SET `Seconds`='%f' WHERE `ID`='%d' LIMIT 1",PlayerInfo[playerid][pSeconds],PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, str, "", "");		
	}

    if(PlayerInfo[playerid][pMember] != 0)
	{
	    new namex[25],disc[84];
	    GetPlayerName(playerid,namex,sizeof(namex));
		switch(reason)
	    {
	        case 0: format(disc,sizeof(disc),"%s z twojej grupy wyszedl (crash).",namex);
	        case 1: format(disc,sizeof(disc),"%s z twojej grupy wyszedl (/q).",namex);
	        case 2: format(disc,sizeof(disc),"%s z twojej grupy wyszedl (kick/ban).",namex);
	    }
	    SendLeaderMessage(PlayerInfo[playerid][pMember], COLOR_CLIENT, disc); // send faction message
	}

	new qqerry[128],wakaname[25];
	GetPlayerName(playerid,wakaname,sizeof(wakaname));
	format(qqerry, sizeof(qqerry), "UPDATE `users` SET `Status` = '0' WHERE `name`='%s'", wakaname);
    mysql_query(SQL,qqerry);

    RemovePlayerAttachedObject(playerid,0);
    RemovePlayerAttachedObject(playerid,1);
    RemovePlayerAttachedObject(playerid,2);
    RemovePlayerAttachedObject(playerid,3);
    RemovePlayerAttachedObject(playerid,4);

	// TIMER MONEY
	KillTimer(TimerAtuPlayer[playerid]);

	// Ultima logare
	new y,m,d,h,mi;
	getdate(y,m,d);
	gettime(h,mi);
	new str[128];
	format(str,sizeof(str), "UPDATE users SET `lastOn`='%02d.%02d.%d %02d:%02d' WHERE `ID`='%d'",d,m,y,h,mi,PlayerInfo[playerid][pSQLID]);
	mysql_query(SQL,str);

	// MESAJ DECONECTARE
 	new wakaname2[25];
	new string2[64];
	GetPlayerName(playerid, wakaname2, sizeof(wakaname2));
	switch(reason)
    {
        case 0: format(string2,sizeof(string2),"%s opuscil serwer (Crash).",wakaname2);
        case 1: format(string2,sizeof(string2),"%s opuscil serwer (/q).",wakaname2);
        case 2: format(string2,sizeof(string2),"%s opuscil serwer (kick/ban).",wakaname2);
    }
    ProxDetector(20.0, playerid, string2, COLOR_CLIENT,COLOR_CLIENT,COLOR_CLIENT,COLOR_CLIENT,COLOR_CLIENT);
	Thing[SelectedThing[playerid]][t_used] = 0;
	// TAXI
	if(PlayerHit[playerid] != -1) {
		UsedContract[PlayerHit[playerid]] = 0;
		PlayerHit[playerid] = -1;
	} 
	if(Contract[playerid] == 1) {
		foreach(Player, i) {
			if(PlayerHit[i] == playerid) {
				PlayerHit[i] = -1;
				PlayerTextDrawHide(i, FindTD);
			}
		}
	}	
	foreach(Player,i)
	{
		if(TransportDuty[playerid] == 1) {
			if(TaxiDriver[i] == playerid)
			{
				TaxiDriver[i] = -1;
				TaxiDist[i] = 0.0; TransportMoney[i] = 0;
				for(new j = 0; j <= 2; j++) PlayerTextDrawHide(i, FareTD[j]);
			}
		}
		if(IsPlayerConnected(Mobile[playerid]))
		{
			if(Mobile[playerid] < 255)
			{
				CellTime[Mobile[playerid]] = 0;
				CellTime[playerid] = 0;
				Mobile[Mobile[playerid]] = 255;
				SetPlayerSpecialAction(Mobile[playerid],SPECIAL_ACTION_STOPUSECELLPHONE);
				Mobile[playerid] = 255;
				PlayerInfo[playerid][pSpeaker] = 0;
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
		}
		if(targetfind[i] == playerid)
		{
		    targetfind[i] = -1;
		    UsedFind[i] = 0;
		    DisablePlayerCheckpoint(i);
	        GameTextForPlayer(i, "~r~Twój cel opuscil gre.", 5000, 1);
		}
	    if(TaxiAccepted[i] < 999)
        {
	        if(TaxiAccepted[i] == playerid)
	        {
	            TaxiAccepted[i] = 999;
	            GameTextForPlayer(i, "~w~Rozmówca~n~~r~~h~ opuscil serwer", 5000, 1);
	            TaxiCallTime[i] = 0;
	            DisablePlayerCheckpoint(i);
	        }
        }
	    if(LicensesAccepted[i] < 999)
        {
	        if(LicensesAccepted[i] == playerid)
	        {
	            LicensesAccepted[i] = 999;
	            GameTextForPlayer(i, "~w~Rozmówca~n~~r~~h~ opuscil serwer", 5000, 1);
	            LicensesCallTime[i] = 0;
	            DisablePlayerCheckpoint(i);
	        }
        }
	}
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999) {
	    if(IsPlayerConnected(TransportDriver[playerid])) {

		    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
		    TransportCost[TransportDriver[playerid]] = 0;
		}
	}

	
    if(TransportDuty[playerid] == 1) TaxiDrivers -= 1;
	
	ResetVariables(playerid);
    return 1;
}

public SetPlayerSpawn(playerid)
{
	if(IsPlayerNPC(playerid)) return 1;
	if(IsPlayerConnected(playerid))
	{
		InHouse[playerid] = -1;
		InBussines[playerid] = -1;
		InHQ[playerid] = -1;
		SetPlayerVirtualWorld(playerid,0);
		if(PlayerInfo[playerid][pChar] != 0) {
		SetPlayerSkinEx(playerid, PlayerInfo[playerid][pChar]);
		} else {
		SetPlayerSkinEx(playerid, PlayerInfo[playerid][pModel]);
		}
	    if(PlayerInfo[playerid][pTut] == 0)
	    {
			gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1;
			TogglePlayerControllable(playerid, 0);
			RegistrationStep[playerid] = 1;
			for( new j = 0; j <= 50; j++) SendClientMessage(playerid, COLOR_WHITE, "");
			SendClientMessage(playerid, COLOR_SERVER, "Zarejestruj sie: {FFFFFF} Witamy, odpowiedz na poni¿sze pytania.");
			ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_MSGBOX, "Wybierz p³eæ: "," Twoja p³eæ bêdzie? "," Mezczyzna "," Kobieta ");
            SetPlayerInterior(playerid, 0);
			SetTimerEx("Camera", 500, 0, "d", playerid);
	    }
		new house = PlayerInfo[playerid][pHouse];
		SetTimerEx("UpdateSecondary", 3000, false, "i", playerid);
		if(PlayerInfo[playerid][pJailed] == 1)
		{
			PutPlayerInJail(playerid);
			SetPlayerVirtualWorld(playerid, 1);
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 2)
		{
			PutPlayerInFederalJail(playerid);
			SetPlayerVirtualWorld(playerid, 0);
			return 1;
		}
		if(PlayerInfo[playerid][pBWTime] > 0)//BW
        {
		SetPlayerPosEx(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pPos_vw]);
		PlayerInfo[playerid][pSpawned] = 1;
        TogglePlayerControllable(playerid, 0);
		OnePlayAnim(playerid, "CRACK", "crckidle1",4.0,1,0,0,0,0);
		//SCM(playerid, COLOR_LIGHTBLUE, "Twoje BW wcionsz trwa!");
		return 1;
        }
		if(house != 999 && PlayerInfo[playerid][pSpawnMode] == 1)
		{
				if(PlayerInfo[playerid][pLastPos] == 1)
				{
					if(PlayerInfo[playerid][pSpawned] == 0){
						SetPlayerPosEx(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pPos_vw]);
						PlayerInfo[playerid][pSpawned] = 1;
						PlayerInfo[playerid][pLastPos] = 0;
						return 1;
								}
							}
				SetPlayerInterior(playerid,HouseInfo[house][hInterior]);
				SetPlayerPosEx(playerid, HouseInfo[house][hExitx], HouseInfo[house][hExity],HouseInfo[house][hExitz]);
                SetPlayerVirtualWorld(playerid, HouseInfo[house][hVirtual]);
				PlayerInfo[playerid][pLocal] = house;
				PlayerInfo[playerid][pInt] = HouseInfo[house][hInterior];
				InHouse[playerid] = house;
				UpdateHouseRadio(house);
				return 1;
		} else {
				if(PlayerInfo[playerid][pLastPos] == 1)
				{
					if(PlayerInfo[playerid][pSpawned] == 0){
						SetPlayerPosEx(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pPos_vw]);
						PlayerInfo[playerid][pSpawned] = 1;
						PlayerInfo[playerid][pSpawnMode] = 0;
						PlayerInfo[playerid][pLastPos] = 0;
						return 1;
								}
							}
			PlayerInfo[playerid][pSpawnMode] = 0;
			Update(playerid, pSpawnModex);
			PlayerInfo[playerid][pSpawned] = 1;
			FactionSpawn(playerid);
			if(PlayerInfo[playerid][pMember] == 0) {
				SetPlayerPosEx(playerid, 513.0836, -1510.9513, 14.5667);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pSpawnMode] = 0;
				Update(playerid, pSpawnModex);
				return 1;
			}
		}
		if(PlayerInfo[playerid][pSpawnMode] == 0)
		{
		if(PlayerInfo[playerid][pLastPos] == 1)
		{
			if(PlayerInfo[playerid][pSpawned] == 0){
				SetPlayerPosEx(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pPos_vw]);
				PlayerInfo[playerid][pSpawned] = 1;
				PlayerInfo[playerid][pLastPos] = 0;
				return 1;
						}
					}
			FactionSpawn(playerid);
			PlayerInfo[playerid][pSpawned] = 1;
			if(PlayerInfo[playerid][pMember] == 0) {
				SetPlayerPosEx(playerid, 513.0836, -1510.9513, 14.5667);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
				return 1;
			}
		}
	}
	return 1;
}

public UpdateSecondary(playerid)
{
    if(IsPlayerLogged[playerid] != 0)
	{
		Update(playerid, pConnectTimex);
		Update(playerid, pBank);
		Update(playerid, pCashx);
		Update(playerid, pRP);
		Update(playerid, pPayDayx);
		Update(playerid, pJailTimex);
		OnPlayerDateUpdateX2(playerid);
	}
	return 1;
}

public OnPlayerDateUpdateX2(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new playerName[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playerName, sizeof(playerName));
		new var[556];
		{
			format(var,sizeof(var),"UPDATE `users` SET `CarLic`='%d',`FlyLic`='%d',`BoatLic`='%d',`FishLic`='%d',`GunLic`='%d',`CarLicT`='%d',`FlyLicT`='%d',`BoatLicT`='%d',`FishLicT`='%d',`GunLicT`='%d',`Rob`='%d',`Jailed`='%d',`Muted`='%d',`MuteTime`='%d' WHERE `ID`='%d'",
			PlayerInfo[playerid][pCarLic],
			PlayerInfo[playerid][pFlyLic],
			PlayerInfo[playerid][pBoatLic],
			PlayerInfo[playerid][pFishLic],
			PlayerInfo[playerid][pGunLic],
			PlayerInfo[playerid][pCarLicT],
	  		PlayerInfo[playerid][pFlyLicT],
			PlayerInfo[playerid][pBoatLicT],
			PlayerInfo[playerid][pFishLicT],
			PlayerInfo[playerid][pGunLicT],
			PlayerInfo[playerid][pRob],
			PlayerInfo[playerid][pJailed],
			PlayerInfo[playerid][pMuted],
			PlayerInfo[playerid][pMuteTime],
			PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL,var);
		}
	}
	return 1;
}

stock IsVehicleUpsideDown(vehicleid)
{
    new Float:quat_w,Float:quat_x,Float:quat_y,Float:quat_z;
    GetVehicleRotationQuat(vehicleid,quat_w,quat_x,quat_y,quat_z);
    new Float:y = atan2(2*((quat_y*quat_z)+(quat_w*quat_x)),(quat_w*quat_w)-(quat_x*quat_x)-(quat_y*quat_y)+(quat_z*quat_z));
    return (y > 90 || y < -90);
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	/*new Float:vehiclehealth;
	GetVehicleHealth(vehicleid, vehiclehealth);
	//CarInfo[PersonalCar(playerid)][cHP] = vehiclehealth/10;
	//saveCar(PersonalCar(playerid));
	if(vehiclehealth <= 250)
	{
		SetVehicleHealth(vehicleid, 250);
		new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
        SetVehicleParamsEx(vehicleid,0,lights,alarm,doors,bonnet,boot,objective);
    	vehEngine[vehicleid] = 0;
        SetPVarInt(playerid, "Engine", 0);
	}*/
  	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
 	new engine,lights,alarm,doors,bonnet,boot,objective, string[25];
	Silnik[vehicleid] = 0;
	Swiatla[vehicleid] = 0;
	Maska[vehicleid] = 0;
	Bagaznik[vehicleid] = 0;
	new carid = FindSpawnID(vehicleid);
	if (CarInfo[carid][Spawned] && carid != 0){
	CarInfo[carid][cHP] = 25;
	saveCar(carid);
	DestroyPlayerCar(carid);
	}
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
 	if(IsABike(vehicleid)) SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
		if(Carspawn[vehicleid] != 0)
		{
			DestroyVehicle(Carspawn[vehicleid]);
			Carspawn[vehicleid] = 0;
			Silnik[vehicleid] = 0;
			Swiatla[vehicleid] = 0;
			Maska[vehicleid] = 0;
			Bagaznik[vehicleid] = 0;
		}
		StopAudioStreamForPlayersInCar(vehicleid);
 	return 1;
}

public OnVehicleUpdate()
{
		foreach(Player,j) {
	    if(IsPlayerConnected(j))
	    {
		if(IsPlayerInAnyVehicle(j)) {
		if(JobWorking[j] == 1 && PlayerInfo[j][pJob] == 1 && NaczepaStart[j] == 1) {
		if(GetVehicleTrailer(GetPlayerVehicleID(j)) == 0) {
		    SCM(j, COLOR_GOLD, "Misja nie powiodla sie, straciles naczepe!");
			JobWorking[j] = 0;
			PlayerTextDrawHide(j, JobTD);
			if(JobVehicle[j] != 0) { DestroyVehicle(JobVehicle[j]); JobVehicle[j] = 0; }
			if(Trailer[j] != 0) { DestroyVehicle(Trailer[j]); Trailer[j] = 0; TruckerRoute[j] = 15; }
			Delete3DTextLabel(Trucker[Trailer[j]][Truck3D]);
			Update3DTextLabelText(Trucker[Trailer[j]][Truck3D], COLOR_WHITE, " ");
			DestroyDynamic3DTextLabel(Trucker[Trailer[j]][Truck3D]);
			PlayerTextDrawHide(j, InfosTD);
			DisablePlayerCheckpoint(j);
			CP[j] = 0;
			JobVehicle[j] = 0;
			PlayerTime2[j] = 3;
			NaczepaStart[j] = 0;
			}
		}
		new Float: vHealth, veh;
		veh = GetPlayerVehicleID(j);
		GetVehicleHealth(veh, vHealth);
		CarInfo[FindSpawnID(veh)][cHP] = vHealth/10;
		saveCar(FindSpawnID(veh));
		if(vHealth <= 240)
		{
			if(IsVehicleUpsideDown(veh)){
						Silnik[veh] = 0;
		                Swiatla[veh] = 0;
						Maska[veh] = 0;
						Bagaznik[veh] = 0;
						SCM(j, COLOR_GREY, "Pojazd zostal odspawnowany aby uniknac wybuchu!");
						CarInfo[FindSpawnID(veh)][cHP] = 25;
						saveCar(FindSpawnID(veh));
						DestroyPlayerCar(FindSpawnID(veh));
				} else {
							SetVehicleHealth(veh, 250);
							new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(veh,0,lights,alarm,doors,bonnet,boot,objective);
							Silnik[veh] = 0;
							CarInfo[FindSpawnID(veh)][cHP] = 25;
							saveCar(FindSpawnID(veh));
						}
					}
				}
			}
		}
return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
	if(issuerid != INVALID_PLAYER_ID)
    {
		for(new sf = 0; sf < MAX_SAFEZONES; sf++)
		{
			if(SafeZone[sf][szRange] >= 15) {
				if(PlayerToPoint(SafeZone[sf][szRange], playerid, SafeZone[sf][szX], SafeZone[sf][szY], SafeZone[sf][szZ]))
				{
					if(IsACop(playerid) && PlayerInfo[issuerid][pWantedLevel] >= 1) return 1;
					
					new Float: health;
					GetPlayerHealth( issuerid, health );
					SetPlayerHealthEx( issuerid, health );
					return 1;
				}
			}
	    }

		if(amount < 0)
		{
			new string[128],sendername[25];
		    GetPlayerName(issuerid,sendername,sizeof(sendername));
			format(string,sizeof(string),"AdmCmd: %s(%d) byc moze ma czit, zabral %.2f hp.",sendername,issuerid,amount);
			SendAdminMessage(COLOR_LOGS,string,1);
			Kick(issuerid);
			return 1;
		}
		if(weaponid == 54 && GetPlayerState(issuerid) != PLAYER_STATE_DRIVER)
		{
		    if(playerDeath[issuerid] == 0)
		    {
				new Float:HP, Float:AP, Float:remainHP;
			 	GetPlayerHealthEx(issuerid,HP);
			 	GetPlayerArmourEx(issuerid,AP);
				if ( AP >= amount )
				{
					SetPlayerArmourEx( issuerid, AP - amount );
					SetPlayerHealthEx( issuerid, HP );
				}
				else if ( AP <= 0 )
				{
					remainHP = HP - amount;
					SetPlayerHealthEx( issuerid, remainHP );
					if ( remainHP <= 0 && playerDeath[issuerid] == 0 )
					{
						
						OnPlayerDeath( playerid, issuerid, weaponid );
						playerDeath[playerid] = 1;
					}
				}
				else
				{
					remainHP = HP + ( AP - amount );
					SetPlayerArmourEx( issuerid, 0.0 );
					SetPlayerHealthEx( issuerid, remainHP );
					if ( remainHP <= 0 && playerDeath[issuerid] == 0 )
					{
						OnPlayerDeath( playerid, issuerid, weaponid );
						playerDeath[issuerid] = 1;
					}
				}
			}
		}
	}
	if(weaponid == 49 || weaponid == 50 || weaponid == 51 || weaponid == 52 || weaponid == 53 || weaponid == 54 || GetPlayerState(issuerid) == PLAYER_STATE_DRIVER)
	{
	    if(playerDeath[playerid] == 0)
	    {
			new Float:HP, Float:AP, Float:remainHP;
		 	GetPlayerHealthEx(playerid,HP);
		 	GetPlayerArmourEx(playerid,AP);
			if ( AP >= amount )
			{
				SetPlayerArmourEx( playerid, AP - amount );
				SetPlayerHealthEx( playerid, HP );
			}
			else if ( AP <= 0 )
			{
				remainHP = HP - amount;
				SetPlayerHealthEx( playerid, remainHP );
				if ( remainHP <= 0 && playerDeath[playerid] == 0 )
				{
					OnPlayerDeath( playerid, issuerid, weaponid );
					playerDeath[playerid] = 1;
				}
			}
			else
			{
				remainHP = HP + ( AP - amount );
				SetPlayerArmourEx( playerid, 0.0 );
				SetPlayerHealthEx( playerid, remainHP );
				if ( remainHP <= 0 && playerDeath[playerid] == 0 )
				{
					OnPlayerDeath( playerid, issuerid, weaponid );
					playerDeath[playerid] = 1;
				}
			}
		}
	}
	return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)
{
	new Float: healthshot;
	GetPlayerHealth( damagedid, healthshot );
	if(damagedid != INVALID_PLAYER_ID)
    {
		for(new sf = 0; sf < MAX_SAFEZONES; sf++) {
			if(SafeZone[sf][szRange] >= 15) {
				if(PlayerToPoint(SafeZone[sf][szRange], playerid, SafeZone[sf][szX], SafeZone[sf][szY], SafeZone[sf][szZ])) {
					if(!IsPlayerInAnyVehicle(playerid) && !IsACop(playerid) && PlayerHit[playerid] != damagedid) {
						SCM(playerid, COLOR_LIGHTRED, "Zostales zamrozony na 2 sekundy poniewaz zaatakowales kogos w safe-zone!");
						TogglePlayerControllable(playerid, 0);
						SetTimerEx("UnFreezeStation", 2000, false, "i", playerid);
						SetPlayerArmedWeapon(playerid, 0);
						new Float: HP;
						GetPlayerHealthEx(damagedid,HP);
						SetPlayerHealthEx(damagedid, HP);						
					}
				}
			}	
		}	
		if(PlayerInfo[damagedid][pBWTime] > 0)
		{
			SetPlayerHealthEx( damagedid, healthshot + amount );
		}
	    PlayerInfo[playerid][pRapidFire]++;
	 	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return 1;
		if(GetPlayerSurfingVehicleID(playerid) != INVALID_VEHICLE_ID) return 1;
		if(amount < 0)
		{
			new string[128],sendername[25];
		    GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string,sizeof(string),"AdmCmd: %s(%d) posiada jakiegos cheata na zabijanie, zabral %.2f hp.",sendername,playerid,amount);
			SendAdminMessage(COLOR_LOGS,string,1);
			Kick(playerid);
			return 1;
		}
		if(playerDeath[damagedid] == 0)
		{
			if(weaponid == 34)
		    {
		        SetPlayerHealthEx(damagedid, 0.0);
		        SetPlayerArmourEx(damagedid, 0.0);
		        OnPlayerDeath(damagedid,playerid,weaponid);
				playerDeath[damagedid] = 1;
				return 1;
		    }
		 	new Float: HP, Float: AP ;
			GetPlayerHealthEx(damagedid,HP);
			GetPlayerArmourEx(damagedid,AP);
			if ( AP >= amount )
			{
				SetPlayerArmourEx ( damagedid, AP - amount );
			}
			else if ( AP <= 0 )
			{
				new const Float: remainHP = HP - amount;
				SetPlayerHealthEx ( damagedid, remainHP );
				if ( remainHP <= 0 )
				{
					OnPlayerDeath( damagedid, playerid, weaponid );
					playerDeath[damagedid] = 1;
					return 1;
				}
			}
			else
			{
				new const Float: remainHP = HP + ( AP - amount );
				SetPlayerArmourEx ( damagedid, 0.0 );
				SetPlayerHealthEx ( damagedid, remainHP );
				if ( remainHP <= 0 )
				{
					OnPlayerDeath( damagedid, playerid, weaponid );
					playerDeath[damagedid] = 1;
					return 1;
				}
			}
			if(pingsound[playerid] == 1)
		    {
				PlayerPlaySound(playerid, 17802, 0.0, 0.0, 0.0);
			}
			if(PlayerCuffed[damagedid] == 1 || PlayerCuffed2[damagedid] == 1)
			{
				SetPlayerHealthEx(damagedid, healthshot + amount);
			}
			if(PlayerInfo[damagedid][pSleeping] == 1 || IsPlayerPaused(playerid))
			{
				SetPlayerHealthEx(damagedid, healthshot + amount);
			}
			if(tazer[playerid] == 1 && IsACop(playerid) && weaponid == 24)
			{
				if(IsACop(damagedid)) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nale¿y do korpusu s³u¿b porzadkowych.");
				if(PlayerCuffed[damagedid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz jest juz sparalizowany.");
				if(PlayerInfo[damagedid][pSleeping] == 1) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz jest AFK, nie mo¿esz go sparalizowaæ!");
				if(GetDistanceBetweenPlayers(playerid,damagedid) < 15)
				{
					new string[126];
					format(string, sizeof(string), "* Zostales porazony przez %s na 20 sekund.", Nick(playerid));
					SendClientMessage(damagedid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Porazasz pradem %s na 20 sekund.", Nick(damagedid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s strzela paralizatorem do %s.", Nick(playerid),Nick(damagedid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(damagedid, "~r~~h~PARALIZ", 2500, 3);
					TogglePlayerControllable(damagedid, 0);
					PlayerCuffed[damagedid] = 1;
					PlayerCuffedTime[damagedid] = 20;
					SetPlayerHealthEx(damagedid,100);
				}
			}
		}
	}
	return 1;
}

forward CheckKeyPress(playerid); //CCTV
public CheckKeyPress(playerid)
{
    new keys, updown, leftright;
    GetPlayerKeys(playerid, keys, updown, leftright);
	if(CurrentCCTV[playerid] > -1 && PlayerMenu[playerid] == -1)
	{
	    if(leftright == KEY_RIGHT)
	  	{
	  	    if(keys == KEY_SPRINT)
			{
	 	    	CCTVDegree[playerid] = (CCTVDegree[playerid] - 2.0);
			}
			else
			{
			    CCTVDegree[playerid] = (CCTVDegree[playerid] - 0.5);
			}
	  	    if(CCTVDegree[playerid] < 0)
	  	    {
	  	        CCTVDegree[playerid] = 359;
			}
	  	    MovePlayerCCTV(playerid);

		}
	    if(leftright == KEY_LEFT)
	    {
	        if(keys == KEY_SPRINT)
			{
	 	    	CCTVDegree[playerid] = (CCTVDegree[playerid] + 2.0);
			}
			else
			{
			    CCTVDegree[playerid] = (CCTVDegree[playerid] + 0.5);
			}
			if(CCTVDegree[playerid] >= 360)
	  	    {
	  	        CCTVDegree[playerid] = 0;
			}
	        MovePlayerCCTV(playerid);

	    }
	    if(updown == KEY_UP)
	    {
	        if(CCTVRadius[playerid] < 25)
	        {
		        if(keys == KEY_SPRINT)
				{
				    CCTVRadius[playerid] =  (CCTVRadius[playerid] + 0.5);
		        	MovePlayerCCTV(playerid);
				}
				else
				{
				    CCTVRadius[playerid] =  (CCTVRadius[playerid] + 0.1);
		        	MovePlayerCCTV(playerid);
				}
			}
		}
		if(updown == KEY_DOWN)
	    {
			if(keys == KEY_SPRINT)
			{
			    if(CCTVRadius[playerid] >= 0.6)
	        	{
				    CCTVRadius[playerid] =  (CCTVRadius[playerid] - 0.5);
			       	MovePlayerCCTV(playerid);
				}
			}
			else
			{
			    if(CCTVRadius[playerid] >= 0.2)
	        	{
				    CCTVRadius[playerid] =  (CCTVRadius[playerid] - 0.1);
			       	MovePlayerCCTV(playerid);
				}
			}
		}
		if(keys == KEY_CROUCH)
		{
			TogglePlayerControllable(playerid, 0);
			SetPlayerVirtualWorld(playerid, LastPosCCTV[playerid][LVirtual]);
		    SetPlayerPosEx(playerid, LastPosCCTV[playerid][LX], LastPosCCTV[playerid][LY], LastPosCCTV[playerid][LZ]);
			SetPlayerFacingAngle(playerid, LastPosCCTV[playerid][LA]);
	        SetPlayerInterior(playerid, LastPosCCTV[playerid][LInterior]);
			SetTimerEx("UnFreezeStation", 2000, false, "i", playerid);	
		    KillTimer(KeyTimer[playerid]);
		    SetCameraBehindPlayer(playerid);
		    TextDrawHideForPlayer(playerid, TD);
            CurrentCCTV[playerid] = -1;
		}
	}
	MovePlayerCCTV(playerid);
}

stock MovePlayerCCTV(playerid)
{
	CCTVLA[playerid][0] = CCTVLAO[CurrentCCTV[playerid]][0] + (floatmul(CCTVRadius[playerid], floatsin(-CCTVDegree[playerid], degrees)));
	CCTVLA[playerid][1] = CCTVLAO[CurrentCCTV[playerid]][1] + (floatmul(CCTVRadius[playerid], floatcos(-CCTVDegree[playerid], degrees)));
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerCameraLookAt(playerid, CCTVLA[playerid][0], CCTVLA[playerid][1], CCTVLA[playerid][2]);
}
	

stock AddCCTV(name[], Float:X, Float:Y, Float:Z, Float:Angle)
{
	if(TotalCCTVS >= MAX_CCTVS) return 0;
	format(CameraName[TotalCCTVS], 32, "%s", name);
	CCTVCP[TotalCCTVS][0] = X;
	CCTVCP[TotalCCTVS][1] = Y;
	CCTVCP[TotalCCTVS][2] = Z;
	CCTVCP[TotalCCTVS][3] = Angle;
	CCTVLAO[TotalCCTVS][0] = X;
	CCTVLAO[TotalCCTVS][1] = Y;
	CCTVLAO[TotalCCTVS][2] = Z-10;
	TotalCCTVS++;
	return TotalCCTVS-1;
} //CCTV

SetPlayerToCCTVCamera(playerid, CCTV)
{
	if(CCTV >= TotalCCTVS)
	{
	    SendClientMessage(playerid, COLOR_GREY, "Nieprawid³owa kamera!");
	    return 1;
	}
	if(CurrentCCTV[playerid] == -1)
    {
		new mysql[256];
	    GetPlayerPos(playerid, LastPosCCTV[playerid][LX], LastPosCCTV[playerid][LY], LastPosCCTV[playerid][LZ]);
		GetPlayerFacingAngle(playerid, LastPosCCTV[playerid][LA]);
		LastPosCCTV[playerid][LVirtual] = GetPlayerVirtualWorld(playerid);
        LastPosCCTV[playerid][LInterior] = GetPlayerInterior(playerid);
		format(mysql, 256, "UPDATE `users` SET `Pos_x`='%f', `Pos_y`='%f',`Pos_z`='%f', `last_vw`='%d' WHERE ID='%d'", LastPosCCTV[playerid][LX], LastPosCCTV[playerid][LY], LastPosCCTV[playerid][LZ], GetPlayerVirtualWorld(playerid), PlayerInfo[playerid][pSQLID]);
		mysql_query(SQL, mysql);
	}
	else
	{
		KillTimer(KeyTimer[playerid]);
	}
	CurrentCCTV[playerid] = CCTV;
    TogglePlayerControllable(playerid, 0);
	//SetPlayerPos(playerid, CCTVCP[CCTV][0], CCTVCP[CCTV][1], (CCTVCP[CCTV][2]-50));
	SetPlayerCameraPos(playerid, CCTVCP[CCTV][0], CCTVCP[CCTV][1], CCTVCP[CCTV][2]);
	SetPlayerCameraLookAt(playerid, CCTVLAO[CCTV][0], (CCTVLAO[CCTV][1]+0.2), CCTVLAO[CCTV][2]);
	SetPlayerPosEx(playerid, CCTVCP[CCTV][0], CCTVCP[CCTV][1]-50, CCTVLAO[CCTV][2]-200.0);
	CCTVLA[playerid][0] = CCTVLAO[CCTV][0];
	CCTVLA[playerid][1] = CCTVLAO[CCTV][1]+0.2;
	CCTVLA[playerid][2] = CCTVLAO[CCTV][2];
	CCTVRadius[playerid] = 12.5;
	CCTVDegree[playerid] = CCTVCP[CCTV][3];
	MovePlayerCCTV(playerid);
   // KeyTimer[playerid] = SetTimerEx("CheckKeyPress", 75, 1, "i", playerid);
    TextDrawShowForPlayer(playerid, TD);
	return 1;
}


stock GetName(playerid)
{
    new
        pName[256];

	format(pName, 256, PlayerInfo[playerid][pUsername]);
    return pName;
}

stock Nick(playerid)
{
    new
        pName[256];

	format(pName, 256, PlayerInfo[playerid][pUsername]);
    for(new i = 0; i < MAX_PLAYER_NAME; i++)
    {
        if(pName[i] == '_') pName[i] = ' ';
    }
    return pName;
}

function Float:DistanceToPlayer(playerid, targetid) {
	new Float: Pos[3], Float: distance;
	GetPlayerPos(targetid, Pos[0], Pos[1], Pos[2]);
	distance = GetPlayerDistanceFromPoint(playerid, Pos[0], Pos[1], Pos[2]);
	return distance;
}



public OnPlayerDeath(playerid, killerid, reason)
{

	ResetPlayerWeaponsEx(playerid);
	RemovePlayerAttachedObject(playerid, 1);
	PlayerInfo[playerid][pMasked] = 0;
 	Thing[UsedWeapThing[playerid]][t_used] = 0;
	Thing[SelectedThing[playerid]][t_used] = 0;

	new dstring[125], deathreason[65];
	if(reason == 0) {format(deathreason, sizeof(deathreason), "Piesci");}
    if(reason == 1) {format(deathreason, sizeof(deathreason), "Kastet");}
    if(reason == 2) {format(deathreason, sizeof(deathreason), "Kij golfowy");}
    if(reason == 3) {format(deathreason, sizeof(deathreason), "Nite Stick");}
    if(reason == 4) {format(deathreason, sizeof(deathreason), "Nóz");}
    if(reason == 5) {format(deathreason, sizeof(deathreason), "Kij bejzbolowy");}
    if(reason == 6) {format(deathreason, sizeof(deathreason), "Lopata");}
    if(reason == 7) {format(deathreason, sizeof(deathreason), "Pool Cue");}
    if(reason == 8) {format(deathreason, sizeof(deathreason), "Katana");}
    if(reason == 9) {format(deathreason, sizeof(deathreason), "Pila");}
    if(reason == 10){format(deathreason, sizeof(deathreason), "Dildo");}
    if(reason == 11){format(deathreason, sizeof(deathreason), "Maly wibrator");}
    if(reason == 12){format(deathreason, sizeof(deathreason), "Ogromny Wibrator");}
    if(reason == 13){format(deathreason, sizeof(deathreason), "Wibrator");}
    if(reason == 14){format(deathreason, sizeof(deathreason), "Kwaity");}
    if(reason == 15){format(deathreason, sizeof(deathreason), "Cane");}
    if(reason == 16){format(deathreason, sizeof(deathreason), "Granat");}
    if(reason == 17){format(deathreason, sizeof(deathreason), "Granat dymny");}
    if(reason == 18){format(deathreason, sizeof(deathreason), "Koktajl molovota");}
    if(reason == 19){format(deathreason, sizeof(deathreason), "Vehicle Weapon");}
    if(reason == 20){format(deathreason, sizeof(deathreason), "Flara z odrzutowca");}
    if(reason == 21){format(deathreason, sizeof(deathreason), "Jetpack");}
    if(reason == 22){format(deathreason, sizeof(deathreason), "9mm Pistol");}
    if(reason == 23){format(deathreason, sizeof(deathreason), "Silenced 9mm Pistol");}
    if(reason == 24){format(deathreason, sizeof(deathreason), "Desert Eagle");}
    if(reason == 25){format(deathreason, sizeof(deathreason), "Shotgun");}
    if(reason == 26){format(deathreason, sizeof(deathreason), "Sawnoff Shotgun");}
    if(reason == 27){format(deathreason, sizeof(deathreason), "Combat Shotgun");}
    if(reason == 28){format(deathreason, sizeof(deathreason), "Micro SMG");}
    if(reason == 29){format(deathreason, sizeof(deathreason), "MP5");}
    if(reason == 30){format(deathreason, sizeof(deathreason), "AK47");}
    if(reason == 31){format(deathreason, sizeof(deathreason), "M4");}
    if(reason == 32){format(deathreason, sizeof(deathreason), "Tec-9");}
    if(reason == 33){format(deathreason, sizeof(deathreason), "Rifle");}
    if(reason == 34){format(deathreason, sizeof(deathreason), "Sniper Rifle");}
    if(reason == 35){format(deathreason, sizeof(deathreason), "Rocket Launcherr");}
    if(reason == 36){format(deathreason, sizeof(deathreason), "Rocket Launcher");}
    if(reason == 37){format(deathreason, sizeof(deathreason), "Ogniomiotacz");}
    if(reason == 38){format(deathreason, sizeof(deathreason), "Minigun");}
    if(reason == 39){format(deathreason, sizeof(deathreason), "Satchels");}
    if(reason == 40){format(deathreason, sizeof(deathreason), "Detonator");}
    if(reason == 41){format(deathreason, sizeof(deathreason), "Spraycan");}
    if(reason == 42){format(deathreason, sizeof(deathreason), "Fire Extinguisher");}
    if(reason == 43){format(deathreason, sizeof(deathreason), "Camera");}
    if(reason == 44){format(deathreason, sizeof(deathreason), "Nightvision Goggles");}
    if(reason == 45){format(deathreason, sizeof(deathreason), "Infrared Goggles");}
    if(reason == 46){format(deathreason, sizeof(deathreason), "Parachute");}
    if(reason == 47){format(deathreason, sizeof(deathreason), "!>>> Unknown 47 <<<!");}
    if(reason == 48){format(deathreason, sizeof(deathreason), "!>>> Unknown 48 <<<!");}
    if(reason == 49){format(deathreason, sizeof(deathreason), "Pojazd");}
    if(reason == 50){format(deathreason, sizeof(deathreason), "Helicopter Blades");}
    if(reason == 51){format(deathreason, sizeof(deathreason), "Explosion");}
    if(reason == 52){format(deathreason, sizeof(deathreason), "!>>> Unknown 52 <<<!");}
    if(reason == 53){format(deathreason, sizeof(deathreason), "!>>> Unknown 53 <<<!");}
    if(reason == 54){format(deathreason, sizeof(deathreason), "!>>> Unknown 54 <<<!");}
    if(reason == 55){format(deathreason, sizeof(deathreason), "!>>> Unknown 55 <<<!");}
    if(reason == 255){format(deathreason, sizeof(deathreason), "FAKEKILL!! (255)");}
	format(dstring,sizeof(dstring),"AdmCmd: %s [%d] zostal zabity przez %s [%d] z broni %s (/spec) ", GetName(playerid), playerid, GetName(killerid), killerid, deathreason);
	SendAdminMessage(COLOR_YELLOW, dstring,1);

  	if(TakingLesson[playerid] == 1)
	{
    	TakingLesson[playerid] = 0;
	   	new engine,lights,alarm,bonnet,boot,objective;
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,0,bonnet,boot,objective);
    	DisablePlayerCheckpoint(playerid);
    	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
    	PlayerTextDrawHide(playerid, InfosTD);
    	CP[playerid] = 0;
    	if(DMVCar[playerid] != 0) DestroyVehicle(DMVCar[playerid]), DMVCar[playerid] = 0;
	}
	/*if(killerid == INVALID_PLAYER_ID) ADeathMessage(INVALID_PLAYER_ID, playerid, 47);
	else ADeathMessage(playerid, killerid, reason);	*/
	
	if(PlayerInfo[playerid][pWantedLevel] != 0 && PlayerInfo[playerid][pWantedLevel] < 6) {
		new count, names[180], string[128];
		foreach(Player,i) {
			if(IsACop(i) && CrimInRange(50.0, playerid,i) && OnDuty[i] == 1) {
				count = 1;
				format(string, sizeof(string), "Przestepca zneutralizowany!!");
				GameTextForPlayer(i, string, 3000, 1);
				ConsumingMoney[i] = 1;
				GivePlayerCash(i, PlayerInfo[playerid][pWantedLevel] * 380);
				Update(i, pCashx);
				PlayerInfo[i][pCommands] ++;
				new rquery[256];
				format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[i][pCommands], PlayerInfo[i][pSQLID]);
				mysql_query(SQL, rquery);
				format(names, 256, "%s %s", names, GetName(i));
			}
			if(count == 1) {
				if(ProxDetectorS(30.0, i, playerid)) {
					format(string, sizeof(string), "* %s zostal umieszczony w areszcie przez: %s", GetName(playerid), names);
					SCM(i, COLOR_PURPLE, string);
				}
			}				
		}	
		if(count == 1) {	
			if(killerid == INVALID_PLAYER_ID) format(string, sizeof(string), "Wysylanie: %s zostal zneutralizowany przez NIKOGO i zostal umieszczony w wiezieniu na %d sekund.", GetName(playerid), (PlayerInfo[playerid][pWantedLevel])*(150));
			else format(string, sizeof(string), "HQ: %s zostal zneutralizowany przez %s i zostal uwieziony przez %d sekund.", GetName(playerid), GetName(killerid), (PlayerInfo[playerid][pWantedLevel])*(150));
			SendTeamMessage(1, COLOR_DBLUE, string);
			SendTeamMessage(2, COLOR_DBLUE, string);
			SendTeamMessage(3, COLOR_DBLUE, string);			
			
			GivePlayerCash(playerid, - PlayerInfo[playerid][pWantedLevel] * 380);
			PlayerInfo[playerid][pWantedDeaths] += 1;
			PlayerInfo[playerid][pJailed] = 1;
			PlayerInfo[playerid][pJailTime] = (PlayerInfo[playerid][pWantedLevel])*(150);
			format(string, sizeof(string), "* Jestes w areszcie na %d sekund i straciles $%d.", PlayerInfo[playerid][pJailTime], PlayerInfo[playerid][pWantedLevel] * 380);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			
			TogglePlayerControllable(playerid, 0);
			SetTimerEx("UnFreezeStation", 1000, false, "i", playerid);
			WantedPoints[playerid] = 0;
			PlayerInfo[playerid][pWantedLevel] = 0;
			SetPlayerWantedLevel(playerid, 0);
			Update(playerid,pWantedLevelx);
			Update(playerid,pJailedx);
			Update(playerid,pJailTimex);
			ClearCrime(playerid);				
		}
	}	
	if(PlayerInfo[playerid][pWantedLevel] != 0 && PlayerInfo[playerid][pWantedLevel] >= 5) {
		new count, names[180], string[128];
		foreach(Player,i) {
			if(IsACop(i) && CrimInRange(50.0, playerid,i) && OnDuty[i] == 1) {
				count = 1;
				format(string, sizeof(string), "Powazny przestepca zneutralizowany!!");
				GameTextForPlayer(i, string, 3000, 1);
				ConsumingMoney[i] = 1;
				GivePlayerCash(i, PlayerInfo[playerid][pWantedLevel] * 380);
				Update(i, pCashx);
				PlayerInfo[i][pCommands] ++;
				new rquery[256];
				format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[i][pCommands], PlayerInfo[i][pSQLID]);
				mysql_query(SQL, rquery);
				format(names, 256, "%s %s", names, GetName(i));
			}
			if(count == 1) {
				if(ProxDetectorS(30.0, i, playerid)) {
					format(string, sizeof(string), "* %s zostal umieszczony w wiezieniu federalnym przez: %s", GetName(playerid), names);
					SCM(i, COLOR_PURPLE, string);
				}
			}				
		}	
		if(count == 1) {	
			if(killerid == INVALID_PLAYER_ID) format(string, sizeof(string), "HQ: %s zostal zneutralizowany przez NIKOGO i zostal umieszczony w wiezieniu na %d sekund.", GetName(playerid), (PlayerInfo[playerid][pWantedLevel])*(150));
			else format(string, sizeof(string), "HQ: %s zostal zneutralizowany przez %s i zostal uwieziony przez %d sekund.", GetName(playerid), GetName(killerid), (PlayerInfo[playerid][pWantedLevel])*(150));
			SendTeamMessage(1, COLOR_DBLUE, string);
			SendTeamMessage(2, COLOR_DBLUE, string);
			SendTeamMessage(3, COLOR_DBLUE, string);			
			
			GivePlayerCash(playerid, - PlayerInfo[playerid][pWantedLevel] * 380);
			PlayerInfo[playerid][pWantedDeaths] += 1;
			PlayerInfo[playerid][pJailed] = 2;
			PlayerInfo[playerid][pJailTime] = (PlayerInfo[playerid][pWantedLevel])*(150);
			format(string, sizeof(string), "* Jestes w wiezieniu federalnym na %d sekund i straciles $%d.", PlayerInfo[playerid][pJailTime], PlayerInfo[playerid][pWantedLevel] * 380);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			
			TogglePlayerControllable(playerid, 0);
			SetTimerEx("UnFreezeStation", 1000, false, "i", playerid);
			WantedPoints[playerid] = 0;
			PlayerInfo[playerid][pWantedLevel] = 0;
			SetPlayerWantedLevel(playerid, 0);
			Update(playerid,pWantedLevelx);
			Update(playerid,pJailedx);
			Update(playerid,pJailTimex);
			ClearCrime(playerid);				
		}

	}
	
	if(killerid != INVALID_PLAYER_ID) //system bw
	{
	    if((IsACop(killerid)) || PlayerInfo[killerid][pMember] == 6 || PlayerInfo[killerid][pLeader] == 6 || PlayerInfo[killerid][pMember] == 4 || PlayerInfo[killerid][pLeader] == 4 || PlayerInfo[killerid][pMember] == 5 || PlayerInfo[killerid][pLeader] == 5 || PlayerInfo[killerid][pMember] == 11 || PlayerInfo[killerid][pLeader] == 11)
        {
		new Float:x, Float:y, Float:z, Float: pos[3], mysql[256];
        GetPlayerPos(playerid, x, y, z);
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);//drug forma zapisu
		PlayerInfo[playerid][pBWTime] = 90;
		Update(playerid, pBWTimex);
		TogglePlayerControllable(playerid, 0);
		PlayerInfo[playerid][pPos_x] = x;
		PlayerInfo[playerid][pPos_y] = y;
		PlayerInfo[playerid][pPos_z] = z;
		OnePlayAnim(playerid, "CRACK", "crckidle1",4.0,1,0,0,0,0);
		format(mysql, 256, "UPDATE `users` SET `Pos_x`='%f', `Pos_y`='%f',`Pos_z`='%f', `last_vw`='%d' WHERE ID='%d'", pos[0], pos[1], pos[2], GetPlayerVirtualWorld(playerid), PlayerInfo[playerid][pSQLID]);
		mysql_query(SQL, mysql);
		}
		
		if(PlayerHit[killerid] == playerid) {
			new string[200];
			PlayerPlaySound(killerid,17802,0.0,0.0,0.0);
			
			new wname[30];
			GetWeaponName(reason, wname, sizeof(wname));
			if(reason == 0) wname = "Pieci";
			
			GivePlayerCash(killerid, HeadValue[playerid]);	
			UsedContract[playerid] = 0;
			PlayerHit[killerid] = -1;
			Contract[playerid] = 0;
						
			if(DistanceToPlayer(killerid, playerid) >= 200) GivePlayerCash(killerid, HeadValue[playerid]);
			format(string, sizeof(string), "* Pomyslnie ukonczyles kontrakt na %s (%d). Otrzymales: %s%.", GetName(playerid), playerid, FormatNumber(HeadValue[playerid]));
			SendClientMessage(killerid, COLOR_MONEY, string);

			if(PhoneOnline[killerid] == 1 && PlayerInfo[killerid][pMasked] == 1) {
				PlayerInfo[killerid][pCommands] ++, UpdateVar(killerid, "Commands", PlayerInfo[killerid][pCommands]);
				format(string, sizeof(string), "* Nieznajomy_%s ukonczyl kontrakt na %s (%0.1fm) z bronia %s.", PlayerInfo[killerid][pMaskName], GetName(playerid), DistanceToPlayer(killerid, playerid), wname);					
				SendFactionMessage(11, COLOR_LIGHTBLUE, string);
			}	
			else {
				format(string, sizeof(string), "* %s zakonczyl kontrakt na %s (%0.1fm) z %s. [blad: telefon zwykly/tajny]", GetName(killerid), GetName(playerid), DistanceToPlayer(killerid, playerid), wname);					
				SendFactionMessage(11, COLOR_LIGHTBLUE, string);			
			}
				
							
			HeadValue[playerid] = 0;
		}
		
		if(PlayerInfo[killerid][pJailTime] != 0 && PlayerInfo[playerid][pJailTime] != 0) {
			PlayerInfo[killerid][pJailTime] += 120;
			SCM(killerid, COLOR_RED, "Masz jeszcze 2 dodatkowe minuty, bo zabiles kogos w pace.");
		}
		if(PlayerInfo[playerid][pJailTime] > 0) {
			SetPlayerVirtualWorld(playerid, 1);
			SCM(killerid, COLOR_RED, "Wracasz do wiezienia!");
		}
	    if(GetDistanceBetweenPlayers(killerid,playerid) > 90 && reason != 34)
	    {
	        new string[128],gunname[50];
		   	GetWeaponNameEx(reason,gunname,sizeof(gunname));
	        format(string,sizeof(string),"AdmCmd: %s zabil %s z %.0f metrów uzywajac %s.",GetName(killerid),GetName(playerid),GetDistanceBetweenPlayers(killerid,playerid),gunname);
			SendAdminMessage(COLOR_LOGS,string,1);
	    }
		new name[MAX_PLAYER_NAME];
		new string[500];
		new Float:px,Float:py,Float:pz;
		gPlayerUsingLoopingAnim[playerid] = 0;
		gPlayerSpawned[playerid] = 0;
		GetPlayerName(playerid, name, sizeof(name));
		PlayerInfo[playerid][pLocal] = 255;
		GetPlayerPos(playerid, px, py, pz);
 	   	new currentveh = GetPlayerVehicleID(playerid);
		printf("DEATH: %s was killed by %s with gun %d",name,GetName(killerid),reason);
		playerDeath[playerid] = 0;
		curatj[playerid] = 0;
		PlayerEnterTime[playerid]+=221;
		if(CP[playerid] == 50)
		{
			CP[playerid] = 0;
			RemovePlayerAttachedObject(playerid,0);
			DisablePlayerCheckpoint(playerid);
			RemovePlayerAttachedObject(playerid,1);
			Robbed[playerid] = 0;
		}
		if(GetPlayerState(killerid) == PLAYER_STATE_DRIVER && !IsAPlane(currentveh))
		{
		    GetPlayerName(playerid,name,sizeof(name));
		    new kill[25];
		    GetPlayerName(killerid,kill,sizeof(kill));
	        format(string, sizeof(string), "AdmCmd: Gracz %s (%d) zosta³ zabity przez %s (%d) drive-by.", name,playerid,kill,killerid);
			SendAdminMessage(COLOR_LOGS,string,1);
		}
	    if(XDeaths[playerid] == 0)
	    {
	       LastDeath[playerid] = gettime();
	    }
		if(PlayerCuffed2[playerid] == 1)
		{
		    PlayerCuffed2[playerid] = 0;
	    	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	    	RemovePlayerAttachedObject(playerid,1);
		}
		if(reason == 38 && GetPlayerState(killerid) != PLAYER_STATE_DRIVER)
		{
			new kickname[25];
			if(IsPlayerConnected(killerid))
			{
				GetPlayerName(killerid, kickname, sizeof(kickname));
				format(string, 256, "AdmCmd: [%d]%s zabil kogos z minigunem.",killerid,kickname);
				SendAdminMessage(COLOR_LOGS,string,1);
			}
		}
  	  	if(TakingLesson[playerid] == 1)
   		{
        	TakingLesson[playerid] = 0;
		   	new engine,lights,alarm,bonnet,boot,objective;
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,0,bonnet,boot,objective);
	    	DisablePlayerCheckpoint(playerid);
        	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
        	PlayerTextDrawHide(playerid, InfosTD);
        	CP[playerid] = 0;
        	if(DMVCar[playerid] != 0) DestroyVehicle(DMVCar[playerid]), DMVCar[playerid] = 0;
    	}
		if(gPlayerUsingLoopingAnim[playerid])
		{
        	gPlayerUsingLoopingAnim[playerid] = 0;
		}
		if(PlayerInfo[playerid][pCarLicT] == 0 && PlayerInfo[playerid][pCarLic] == 1)
		{
            PlayerInfo[playerid][pCarLic] = 0;
			PlayerInfo[playerid][pCarLicT] = 0;
			new str[128];
			format(str,128,"UPDATE users SET `CarLic`='0',`CarLicT`='0' WHERE `name`='%s'",GetName(playerid));
			mysql_query(SQL,str);
			SCM(playerid,COLOR_GRAD1,"Twoje prawo jazdy wygaslo.");
		}
		if(PlayerInfo[playerid][pFlyLicT] == 0 && PlayerInfo[playerid][pFlyLic] == 1)
		{
		    PlayerInfo[playerid][pFlyLic] = 0;
		    PlayerInfo[playerid][pFlyLicT] = 0;
			new str[128];
			format(str,128,"UPDATE users SET `FlyLic`='0',`FlyLicT`='0' WHERE `name`='%s'",GetName(playerid));
			mysql_query(SQL,str);
			SCM(playerid,COLOR_GRAD1,"Licencja lotnicza wygasla.");
		}
		if(PlayerInfo[playerid][pBoatLicT] == 0 && PlayerInfo[playerid][pBoatLic] == 1)
		{
		    PlayerInfo[playerid][pBoatLic] = 0;
		    PlayerInfo[playerid][pBoatLic] = 0;
			new str[128];
			format(str,128,"UPDATE users SET `BoatLic`='0',`BoatLicT`='0' WHERE `name`='%s'",GetName(playerid));
			mysql_query(SQL,str);
			SCM(playerid,COLOR_GRAD1,"Licencja na statek wygasla. ");
		}
		if(PlayerInfo[playerid][pFishLicT] == 0 && PlayerInfo[playerid][pFishLic] == 1)
		{
		    PlayerInfo[playerid][pFishLic] = 0;
		    PlayerInfo[playerid][pFishLicT] = 0;
			new str[128];
			format(str,128,"UPDATE users SET `FishLic`='0',`FishLicT`='0' WHERE `name`='%s'",GetName(playerid));
			mysql_query(SQL,str);
			SCM(playerid,COLOR_GRAD1,"Licencja wedkarska wygasla.");
		}
		if(PlayerInfo[playerid][pGunLicT] == 0 && PlayerInfo[playerid][pGunLic] == 1)
		{
		    PlayerInfo[playerid][pGunLic] = 0;
		    PlayerInfo[playerid][pGunLicT] = 0;
			new str[128];
			format(str,128,"UPDATE users SET `GunLic`='0',`GunLicT`='0' WHERE `name`='%s'",GetName(playerid));
			mysql_query(SQL,str);
			SCM(playerid,COLOR_GRAD1,"Licencja na bron wygasla.");
		}
	    new fpm,fkm;
    	fpm = PlayerInfo[playerid][pMember];
    	fkm = PlayerInfo[killerid][pMember];
		if (gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
		}
		new caller = Mobile[playerid];
		if(caller != 255)
		{
			if(caller < 255)
			{
				SendClientMessage(caller,  COLOR_GRAD2, "Polaczenie zostalo przerwane .....");
				CellTime[caller] = 0;
				CellTime[playerid] = 0;
				Mobile[caller] = 255;
			}
			Mobile[playerid] = 255;
			CellTime[playerid] = 0;
		}
		if(PlayerInfo[killerid][pJailed] == 0 && !IsACop(killerid) && !IsACop(playerid)) {
			if(PlayerInfo[playerid][pMember] != PlayerInfo[killerid][pMember]) {
				format(WantedName[playerid], 256, GetName(killerid));
				WantedReason[playerid] = reason;
				SendClientMessage(playerid,COLOR_CLIENT,"Zostales zabity przez gracza. Masz jedna minute, aby uzyc /call 122");
				WantedTimer[playerid] = SetTimerEx("ClearWanted",60000, false,"d", playerid);
			}
		}		
		killerid = INVALID_PLAYER_ID;
	}
	return 1;
}

new legalmods[48][22] = {
        {400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
        {404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
		{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
        {439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
        {477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
        {491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
        {492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
        {500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
        {517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
        {518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
        {527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
        {534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
        {535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
        {536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
        {540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
        {542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
        {547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
        {550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
        {551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
        {558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
        {559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
        {560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
        {561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
        {562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
        {565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
        {567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
        {575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
        {600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};

public OnVehicleMod(playerid, vehicleid, componentid)
{
    if(GetPlayerInterior(playerid) == 0 && PlayerInfo[playerid][pAdmin] < 1)
    {
		new name[25],string[100];
		GetPlayerName(playerid,name,sizeof(name));
		format(string,sizeof(string), "AdmCmd: %s(%d) ma %d nieprawidlowe elementy w pojezdzie.",name,playerid,vehicleid);
		SendAdminMessage(COLOR_LOGS,string,1);
		RemoveVehicleComponent(vehicleid,componentid);
		Kick(playerid);
    }
    new vehicleide = GetVehicleModel(vehicleid);
    new modok = islegalcarmod(vehicleide, componentid);
    new PName[24];

    GetPlayerName(playerid, PName, 24);
    if (!modok)
	{
        BanEx(playerid, "Request");
    }
    
	new idd = FindSpawnID(vehicleid);
	new component;
	new query[256];
	component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 0);
	mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod0='%d' WHERE id=%d",component,idd);
	mysql_tquery(SQL, query, "", "");
	CarInfo[idd][mod0] = component;
	component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 1);
	mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod1='%d' WHERE id=%d",component,idd);
	mysql_tquery(SQL, query, "", "");
	CarInfo[idd][mod1] = component;
	component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 2);
	mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod2='%d' WHERE id=%d",component,idd);
	mysql_tquery(SQL, query, "", "");
	CarInfo[idd][mod2] = component;
	component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 3);
	mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod3='%d' WHERE id=%d",component,idd);
	mysql_tquery(SQL, query, "", "");
	CarInfo[idd][mod3] = component;
	component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 4);
	mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod4='%d' WHERE id=%d",component,idd);
	mysql_tquery(SQL, query, "", "");
	CarInfo[idd][mod4] = component;
	component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 5);
	mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod5='%d' WHERE id=%d",component,idd);
	mysql_tquery(SQL, query, "", "");
	CarInfo[idd][mod5] = component;
	component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 6);
	mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod6='%d' WHERE id=%d",component,idd);
	mysql_tquery(SQL, query, "", "");
	CarInfo[idd][mod6] = component;
	component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 7);
	mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod7='%d' WHERE id=%d",component,idd);
	mysql_tquery(SQL, query, "", "");
	CarInfo[idd][mod7] = component;
	component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 8);
	mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod8='%d' WHERE id=%d",component,idd);
	mysql_tquery(SQL, query, "", "");
	CarInfo[idd][mod8] = component;
	component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 9);
	mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod9='%d' WHERE id=%d",component,idd);
	mysql_tquery(SQL, query, "", "");
	CarInfo[idd][mod9] = component;
	component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 10);
	mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod10='%d' WHERE id=%d",component,idd);
	mysql_tquery(SQL, query, "", "");
	CarInfo[idd][mod10] = component;
	component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 11);
	mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod11='%d' WHERE id=%d",component,idd);
	mysql_tquery(SQL, query, "", "");
	CarInfo[idd][mod11] = component;
	component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 12);
	mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod12='%d' WHERE id=%d",component,idd);
	mysql_tquery(SQL, query, "", "");
	CarInfo[idd][mod12] = component;
	component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 13);
	mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod13='%d' WHERE id=%d",component,idd);
	mysql_tquery(SQL, query, "", "");
	CarInfo[idd][mod13] = component;
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	return 1;
}

stock iswheelmodel(modelid) {

    new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};

    for(new I = 0, b = sizeof(wheelmodels); I != b; ++I) {
        if (modelid == wheelmodels[I])
            return true;

    }

    return false;
}

stock IllegalCarNitroIde(carmodel) {

    new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };

    for(new I = 0, b = sizeof(illegalvehs); I != b; ++I) {

        if (carmodel == illegalvehs[I])
            return true;

    }

    return false;
}

// assumes player is in a car - make sure it is.
stock illegal_nos_vehicle(PlayerID) {

    new carid = GetPlayerVehicleID(PlayerID);
    new playercarmodel = GetVehicleModel(carid);

    return IllegalCarNitroIde(playercarmodel);

}

stock islegalcarmod(vehicleide, componentid) {

    new modok = false;

    // stereo, hydraulics & nos (1x 2x 3x) are special.
    if ( (iswheelmodel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010))) {

        new nosblocker = IllegalCarNitroIde(vehicleide);

        if (!nosblocker)
            modok = true;

    } else {

        // check if the specified model CAN use this particular mod.
        for(new I = 0, b = sizeof(legalmods); I != b; ++I) {

            if (legalmods[I][0] == vehicleide) { // first is car IDE

                for(new J = 1; J < 22; J++) { // start with 1
                    if (legalmods[I][J] == componentid)
                        modok = true;
                }

            }

        }

    }

    return modok;
}

function CheckSpec(playerid) {
    if(IsPlayerSpec[playerid] == 1) {
		SetPlayerPosEx(playerid, SpecPos[playerid][0], SpecPos[playerid][1], SpecPos[playerid][2]), IsPlayerSpec[playerid] = 0;
        SetPlayerInterior(playerid, pInteriorID[playerid]);
        SetPlayerVirtualWorld(playerid, pVirtual[playerid]);
        SpecPlayers[playerid] = 0;
	}
	return 1;
}

function ShowBarStats(playerid) {
	new string[180];
	format(string, sizeof(string), 
		"Zarejestrowanych kont: ~y~%s~w~ > Graczy dzisiaj ~y~%d~w~ > Rekord graczy: ~y~%d (%s)", FormatNumber(Accounts()), PlayersLoggedDay(), MaxPlayers, MaxPlayersDate);
	TextDrawSetString(Login[2], string);
	TextDrawShowForPlayer(playerid, Login[2]);
	return 1;
}

function ShowBWStatus(playerid) {
	new string[180];
	format(string, sizeof(string), 
		"Pozostaly_czas_BW_%d_sek", PlayerInfo[playerid][pBWTime]);
	TextDrawSetString(TDEditor_TD[0], string);
	TextDrawShowForPlayer(playerid, TDEditor_TD[0]);
	return 1;
}

function ShowWejscieTD(playerid) {
	new string[180];
	TextDrawShowForPlayer(playerid, TDWejscie[0]);
	format(string, sizeof(string), "%s ~y~(ID %d)", Wejscie[GetPVarInt(playerid, "WejscieID")][wtext], GetPVarInt(playerid, "WejscieID"));
	TextDrawSetString(TDWejscie[1], string);
	TextDrawShowForPlayer(playerid, TDWejscie[1]);
	TextDrawShowForPlayer(playerid, TDWejscie[2]);
	TextDrawShowForPlayer(playerid, TDWejscie[3]);
	return 1;
}

function HidePayDay(playerid) {

TextDrawHideForPlayer(playerid, payday_box);
TextDrawHideForPlayer(playerid, wyplata_title);
TextDrawHideForPlayer(playerid, stankonta);
TextDrawHideForPlayer(playerid, stankonta_hajs);
TextDrawHideForPlayer(playerid, podatek);
TextDrawHideForPlayer(playerid, podatek_hajs);
TextDrawHideForPlayer(playerid, wyplata);
TextDrawHideForPlayer(playerid, wyplata_hajs);
TextDrawHideForPlayer(playerid, odsetki);
TextDrawHideForPlayer(playerid, odsetki_hajs);
TextDrawHideForPlayer(playerid, nowesaldo);
TextDrawHideForPlayer(playerid, nowesaldo_hajs);
}

function SaveInfo() {
	new 
		szQuery[1024],
		szDate[180], Year, Month, Day, Hour, Minute, Second;
		
	getdate(Year, Month, Day);
	gettime(Hour, Minute, Second);
	format(szDate, sizeof(szDate), "%02d/%02d/%d - %02d:%02d:%02d", Day, Month, Year, Hour, Minute, Second);
	
	format(szQuery, sizeof(szQuery), "UPDATE `stuff` SET `MaxPlayers`='%d', `MaxPlayersDate`='%s'",MaxPlayers, szDate);
	mysql_query(SQL, szQuery);
	
	format(MaxPlayersDate, 256, szDate);
	return 1;
}

function Accounts() return ServerAccounts;
function PlayersLoggedDay() {
	new players, szQuery[256];
    format(szQuery, sizeof(szQuery), "SELECT * FROM `users` WHERE `DayLogin` = '1'");
    new Cache: result = mysql_query(SQL, szQuery);
 	players = cache_get_row_count ();
    cache_delete(result);
	return players;
}

public OnPlayerSpawn(playerid)
{
  if(IsPlayerNPC(playerid))
  {
    new npcname[MAX_PLAYER_NAME];
    GetPlayerName(playerid, npcname, sizeof(npcname)); 
    if(!strcmp(npcname, "Pociong", true))
    {
			PutPlayerInVehicle(playerid, pociong, 0);
			SetPlayerColor(playerid, COLOR_ADMCHAT);
			SetPlayerSkin(playerid, 124);
			PutPlayerInVehicle(playerid, pociong, 0);
			printf("pociong startuje zaraz");	
			return 1;
    }
  }
  printf("proboje zrespic %s %d", Nick(playerid), playerid);
	TextDrawShowForPlayer(playerid, SanNews); 
	TextDrawShowForPlayer(playerid, SanNewsInfo); 
	Freezed[playerid] = 0;
    SetTimerEx("CheckSpec",500,0,"d",playerid);
   
  	if(TakingLesson[playerid] == 1)
	{
    	TakingLesson[playerid] = 0;
	   	new engine,lights,alarm,bonnet,boot,objective;
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,0,bonnet,boot,objective);
    	DisablePlayerCheckpoint(playerid);
    	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
    	PlayerTextDrawHide(playerid, InfosTD);
    	if(DMVCar[playerid] != 0) DestroyVehicle(DMVCar[playerid]), DMVCar[playerid] = 0;
    	
	}
	
	if(UsedFly[playerid] == 1) {
		StopFly(playerid);
		UsedFly[playerid] = 0;
		SetPlayerHealthEx(playerid, 100);
	}
	
	if(InShop[playerid] == 1) {
	    new carid = pCarID[playerid];
    	SetCameraBehindPlayer(playerid), SetPlayerInterior(playerid, pInteriorID[playerid]), SetVehiclePos(carid, pPos[playerid][0], pPos[playerid][1], pPos[playerid][2]);
		SetPlayerVirtualWorld(playerid, 0);
		SetVehicleVirtualWorld(carid, 0);
		TextDrawHideForPlayer(playerid, HiddTD[0]);
		TextDrawHideForPlayer(playerid, HiddTD[1]);
		TextDrawHideForPlayer(playerid, HiddTD[2]);
		TextDrawHideForPlayer(playerid, HiddTD[3]);
		TextDrawHideForPlayer(playerid, HiddTD[4]);
		PlayerTextDrawHide(playerid, HiddTDs[0]);
		PlayerTextDrawHide(playerid, HiddTDs[1]);
		PlayerTextDrawHide(playerid, HiddTDs[2]);
		CancelSelectTextDraw(playerid);
		InShop[playerid] = 0;
	}
	if(InDealer[playerid] >= 1) {
		DestroyVehicle(DealerCar[playerid]);
		InDealer[playerid] = 0, DealerCarType[playerid] = -1, DealerCar[playerid] = 0;
		KillTimer(DSTimer[playerid]);
		SendClientMessage(playerid, COLOR_YELLOW, "Test zostal zawieszony, poniewaz  porzuciles pojazd. ");
		SetPlayerPosEx(playerid, 327.9443, -1512.6609, 36.1366);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		TestingModel[playerid] = 0;
	}

	if(ClanDuty[playerid] == 1) {
		SendClientMessage(playerid, -1, "Nie jeste juz na duty clanu!");
		ClanProces[playerid] = 0;
		ClanDuty[playerid] = 0;
	}

	TextDrawShowForPlayer(playerid, Time);

    SetPlayerHealthEx(playerid, 100);
    SetPlayerArmourEx(playerid, 0);
    SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
    SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	if(!gPlayerAnimLibsPreloaded[playerid])
	{
   		PreloadAnimLib(playerid,"BOMBER");
   		PreloadAnimLib(playerid,"RAPPING");
    	PreloadAnimLib(playerid,"SHOP");
   		PreloadAnimLib(playerid,"BEACH");
   		PreloadAnimLib(playerid,"SMOKING");
    	PreloadAnimLib(playerid,"FOOD");
    	PreloadAnimLib(playerid,"ON_LOOKERS");
    	PreloadAnimLib(playerid,"DEALER");
    	PreloadAnimLib(playerid,"MISC");
    	PreloadAnimLib(playerid,"SWEET");
    	PreloadAnimLib(playerid,"RIOT");
    	PreloadAnimLib(playerid,"PED");
    	PreloadAnimLib(playerid,"POLICE");
		PreloadAnimLib(playerid,"CRACK");
		PreloadAnimLib(playerid,"CARRY");
		PreloadAnimLib(playerid,"COP_AMBIENT");
		PreloadAnimLib(playerid,"PARK");
		PreloadAnimLib(playerid,"INT_HOUSE");
		PreloadAnimLib(playerid,"FOOD");
		gPlayerAnimLibsPreloaded[playerid] = 1;
	}
	gTeam[playerid] = PlayerInfo[playerid][pTeam];
	if(gTeam[playerid] == 4)
	{
		gTeam[playerid] = 4;
	}
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
	{
		gTeam[playerid] = 2;
		PlayerInfo[playerid][pTeam] = 2;
	}
	if(IsPlayerLogged[playerid] == 0 && GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
	{
    	SendClientMessage(playerid, COLOR_LIGHTRED, "** Musisz sie najpierw zalogowac **");
    	KickEx(playerid);
		return 1;
 	}
	
	SetPlayerSpawn(playerid);	
	
	playerDeath[playerid] = 0;
	SetPlayerTeam(playerid,4);
	return 1;
}

// LOGS
/*public Adminlog(string[])
{
	new query[500];
	new y,m,d,h,mi,s;
    getdate(y,m,d);
    gettime(h,mi,s);
	format(query,500,"INSERT INTO log_admin (`log`,`time`) VALUES ('%s','%02d/%02d/%d %02d:%02d:%02d')",string,d,m,y,h,mi,s);
	mysql_query(SQL,query);
	return 1;
}*/


stock AdminLog(const logfile[], logstring[]) {
	new File:hFile, Hour, Minute, Second, Year, Month, Day, string[128];
	getdate(Year, Month, Day);
	gettime(Hour, Minute, Second);
	hFile = fopen(logfile, io_append);
	format(string, sizeof(string), "[%02d/%02d/%d %02d:%02d:%02d] %s\n", Day, Month, Year, Hour, Minute, Second, logstring);
	fwrite(hFile, string);
	fclose(hFile);
}


public Warnlog(ip[],psql,asql,reason[])
{
	new query[500];
	new y,m,d,h,mi,s;
    getdate(y,m,d);
    gettime(h,mi,s);
	format(query,sizeof(query),"INSERT INTO warnlog (`ip`,`player`,`admin`,`reason`,`time`) VALUES ('%s','%d','%d','%s','%02d/%02d/%d %02d:%02d:%02d')",ip,psql,asql,reason,d,m,y,h,mi,s);
	mysql_query(SQL,query);
	return 1;
}

public Banlog(ip[],name1[],name2[],reason[],day)
{
	new query[500];
	new y,m,d,h,mi,s;
    getdate(y,m,d);
    gettime(h,mi,s);
	format(query,sizeof(query),"INSERT INTO banlog (`ip`,`player`,`admin`,`reason`,`day`,`time`) VALUES ('%s','%s','%s','%s','%d','%02d/%02d/%d %02d:%02d:%02d')",ip,name1,name2,reason,day,d,m,y,h,mi,s);
	mysql_query(SQL,query);
	return 1;
}

public Factionlog(factionid,psql,action[])
{
	new query[500];
	new y,m,d,h,mi,s;
    getdate(y,m,d);
    gettime(h,mi,s);
	format(query,sizeof(query),"INSERT INTO factionlog (`factionid`,`player`,`action`,`time`) VALUES ('%d','%d','%s','%02d/%02d/%d %02d:%02d:%02d')",factionid,psql,action,d,m,y,h,mi,s);
	mysql_query(SQL,query);
	return 1;
}

public Jaillog(ip[],psql,asql,reason[],min)
{
	new query[500];
	new y,m,d,h,mi,s;
    getdate(y,m,d);
    gettime(h,mi,s);
	format(query,sizeof(query),"INSERT INTO jaillog (`ip`,`player`,`admin`,`reason`,`min`,`time`) VALUES ('%s','%d','%d','%s','%d','%02d/%02d/%d %02d:%02d:%02d')",ip,psql,asql,reason,min,d,m,y,h,mi,s);
	mysql_query(SQL,query);
	return 1;
}

public Mutelog(psql,asql,reason[],min)
{
	new query[500];
	new y,m,d,h,mi,s;
    getdate(y,m,d);
    gettime(h,mi,s);
	format(query,sizeof(query),"INSERT INTO mutelog (`player`,`admin`,`reason`,`min`,`time`) VALUES ('%d','%d','%s','%d','%02d/%02d/%d %02d:%02d:%02d')",psql,asql,reason,min,d,m,y,h,mi,s);
	mysql_query(SQL,query);
	return 1;
}

public Transferlog(ip1[],ip2[],psql1,psql2,money)
{
	new query[500];
	new y,m,d,h,mi,s;
    getdate(y,m,d);
    gettime(h,mi,s);
	format(query,sizeof(query),"INSERT INTO transferlog (`ip1`,`ip2`,`psql1`,`psql2`,`money`,`time`) VALUES ('%s','%s','%d','%d','%d','%02d/%02d/%d %02d:%02d:%02d')",ip1,ip2,psql1,psql2,money,d,m,y,h,mi,s);
	mysql_query(SQL,query);
	return 1;
}


public LogIP(string[],psql)
{
	new query[500];
	new y,m,d,h,mi,s;
    getdate(y,m,d);
    gettime(h,mi,s);
	format(query,500,"INSERT INTO iplogs (`ip`,`playerid`,`time`) VALUES ('%s','%d','%02d/%02d/%d %02d:%02d:%02d')",string,psql,d,m,y,h,mi,s);
	mysql_query(SQL,query);
	return 1;
}


public odpalanie(playerid)
{
	new idcar = GetPlayerVehicleID(playerid);
	new engine, lights, alarm, doors, bonnet, boot, objective, Float:health, sendername[MAX_PLAYER_NAME], string[256];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetVehicleHealth(GetPlayerVehicleID(playerid), health);
 	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine, lights ,alarm, doors, bonnet, boot, objective);
 	OdpalanieSpam[playerid] = 0;
	if(Gas[GetPlayerVehicleID(playerid)] > 3)
	{
		new rand = random(1000);
		if(rand <= health)
		{
	        GetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,boot,objective);
	        SetVehicleParamsEx(idcar,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	        new vehicle;
	        vehicle = GetVehicleModel(idcar) - 400;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* silnik odpalil (( %s ))", sendername);
			SetPlayerChatBubble(playerid,string,COLOR_FADE1,10.0,8000);
			ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
      		SetVehicleParamsEx(GetPlayerVehicleID(playerid) , 1, lights, alarm, doors, bonnet, boot, objective);
			Silnik[idcar] = 1;
			UpdatePlayerVehicleParams(playerid);
		}
		else
		{
		    format(string, sizeof(string), "* silnik nie odpalil (( %s ))", sendername);
			SetPlayerChatBubble(playerid,string,COLOR_FADE1,10.0,8000);
			ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	else
	{
	 	format(string, sizeof(string), "* na desce rozdzielczej pojawia sie informacja o braku paliwa (( %s ))", sendername);
		SetPlayerChatBubble(playerid,string,COLOR_FADE1,10.0,8000);
		ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return 1;
}

public odpalanie2(playerid)
{
	new idcar = GetPlayerVehicleID(playerid);
	new engine, lights, alarm, doors, bonnet, boot, objective, Float:health, sendername[MAX_PLAYER_NAME], string[256];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetVehicleHealth(GetPlayerVehicleID(playerid), health);
 	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine, lights ,alarm, doors, bonnet, boot, objective);
 	OdpalanieSpam[playerid] = 0;
	if(Gas[GetPlayerVehicleID(playerid)] > 3)
	{
		new rand = random(1000);
		if(rand <= health)
		{
	        GetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,boot,objective);
	        SetVehicleParamsEx(idcar,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	        new vehicle;
	        vehicle = GetVehicleModel(idcar) - 400;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* silnik odpalil (( %s ))", sendername);
			SetPlayerChatBubble(playerid,string,COLOR_FADE1,10.0,8000);
			ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
      		SetVehicleParamsEx(GetPlayerVehicleID(playerid) , 1, lights, alarm, doors, bonnet, boot, objective);
			Silnik[idcar] = 1;
		}
		else
		{
		    format(string, sizeof(string), "* silnik nie odpalil (( %s ))", sendername);
			SetPlayerChatBubble(playerid,string,COLOR_FADE1,10.0,8000);
			ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	else
	{
	 	format(string, sizeof(string), "* na desce rozdzielczej pojawia sie informacja o braku paliwa (( %s ))", sendername);
		SetPlayerChatBubble(playerid,string,COLOR_FADE1,10.0,8000);
		ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return 1;
}

// OnPlayerEnterRaceCheckpoint
public OnPlayerEnterRaceCheckpoint(playerid)
{
    new engine,lights,alarm,bonnet,boot,objective;
	new ccar = IsPlayerInAnyVehicle(playerid);
	if(CP[playerid] == 99)
	{
	   DisablePlayerCheckpoint(playerid);
	   CP[playerid] = 0;
	}
	else if(CP[playerid] == 100 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0, 1181.8229,-1818.4159,13.1255,1182.0245,-1726.4169,13.1742,4.0);
		CP[playerid] = 101;
	}
	else if(CP[playerid] == 101 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1182.0245,-1726.4169,13.1742,1144.1211,-1710.3591,13.5083,4.0);
		CP[playerid] = 102;
	}
	else if(CP[playerid] == 102 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1144.1211,-1710.3591,13.5083,1063.7954,-1710.3434,13.1099,4.0);
		CP[playerid] = 103;
	}
	else if(CP[playerid] == 103 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1063.7954,-1710.3434,13.1099,1039.7800,-1636.7633,13.1099,4.0);
		CP[playerid] = 104;
	}
	else if(CP[playerid] == 104 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1039.7800,-1636.7633,13.1099,1047.9036,-1514.0215,13.1078,4.0);
		CP[playerid] = 105;
	}
	else if(CP[playerid] == 105 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1047.9036,-1514.0215,13.1078,1060.5886,-1375.7631,13.1501,4.0);
		CP[playerid] = 106;
	}
	else if(CP[playerid] == 106 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1060.5886,-1375.7631,13.1501,1061.0813,-1253.2260,14.4973,4.0);
		CP[playerid] = 107;
	}
	else if(CP[playerid] == 107 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1061.0813,-1253.2260,14.4973,1060.2582,-1160.4926,23.4265,4.0);
		CP[playerid] = 108;
	}
	else if(CP[playerid] == 108 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1060.2582,-1160.4926,23.4265,1141.2633,-1148.6298,23.3833,4.0);
		CP[playerid] = 109;
	}
	else if(CP[playerid] == 109 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1141.2633,-1148.6298,23.3833,1266.2111,-1148.4596,23.3819,4.0);
		CP[playerid] = 110;
    }
	else if(CP[playerid] == 110 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1266.2111,-1148.4596,23.3819,1335.5951,-1148.8831,23.3837,4.0);
		CP[playerid] = 111;
	}
	else if(CP[playerid] == 111 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1335.5951,-1148.8831,23.3837,1340.0590,-1238.2341,13.2530,4.0);
		CP[playerid] = 112;
	}
	else if(CP[playerid] == 112 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
	    DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1340.0590,-1238.2341,13.2530,1340.3630,-1360.4055,13.1100,4.0);
		CP[playerid] = 113;
	}
	else if(CP[playerid] == 113 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
	    DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1340.3630,-1360.4055,13.1100,1315.7874,-1502.7319,13.1119,4.0);
		CP[playerid] = 114;
	}
	else if(CP[playerid] == 114 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
	    DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1315.7874,-1502.7319,13.1119,1295.0879,-1605.6080,13.1099,4.0);
		CP[playerid] = 115;
	}
	else if(CP[playerid] == 115 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
	    DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1295.0879,-1605.6080,13.1099,1295.1113,-1763.6598,13.1099,4.0);
		CP[playerid] = 116;
	}
	else if(CP[playerid] == 116 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
	    DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1295.1113,-1763.6598,13.1099,1389.311523, -1792.946289, 13.382812,4.0);
		CP[playerid] = 117;
	}
	else if(CP[playerid] == 117 && ccar)
	{
	    new str[256];
	    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: %d/19", CP[playerid]+1-100);
	    PlayerTextDrawSetString(playerid, InfosTD, str);
	    PlayerTextDrawShow(playerid, InfosTD);
	    DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpointEx(playerid, 0,1389.311523, -1792.946289, 13.382812,1389.311523, -1792.946289, 13.382812,4.0);//ostatni punkt dmv
		CP[playerid] = 118;
	}
	else if(CP[playerid] == 118 && ccar)
	{
 		DestroyVehicle(DMVCar[playerid]), DMVCar[playerid] = 0;
		Silnik[DMVCar[playerid]] = 0;
		Swiatla[DMVCar[playerid]] = 0;
		Maska[DMVCar[playerid]] = 0;
		Bagaznik[DMVCar[playerid]] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		PlayerInfo[playerid][pCarLic] = 1;
		PlayerInfo[playerid][pCarLicT] = 100;
		TakingLesson[playerid] = 0;
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,0,bonnet,boot,objective);
		new str1[128];
		format(str1,sizeof(str1),"UPDATE users SET `CarLic`='1',`CarLicT`='100' WHERE `ID`='%d'",PlayerInfo[playerid][pSQLID]);
		mysql_query(SQL,str1);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Gratulacje, zdales test i dostales pozwolenie na 100 godzin.");
		PlayerTextDrawHide(playerid, InfosTD);
		CP[playerid] = 0;
	}
    return 1;
}

// OnPlayerEnterCheckpoint
public OnPlayerEnterCheckpoint(playerid)
{
	if(JobWorking[playerid] == 1) {
	    CheckSeconds(playerid);
	    JobTime[playerid] = GetTickCount();
	}
    
	new string[500], Float: Pos[3];
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
	{
	    TaxiAccepted[playerid] = 999;
		TaxiCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
        Accepted[playerid] = -1;
	}
	else if(LicensesCallTime[playerid] > 0 && LicensesAccepted[playerid] < 999)
	{
	    LicensesAccepted[playerid] = 999;
		LicensesCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
		Accepted[playerid] = -1;
	}
	else if(MedicCallTime[playerid] > 0)
	{
		GameTextForPlayer(playerid, "~w~~h~Osiagnales cel", 5000, 1);
		MedicCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(MechanicCallTime[playerid] > 0)
	{
		GameTextForPlayer(playerid, "~w~~h~Osiagnales cel", 5000, 1);
		MechanicCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(CP[playerid] == 34) // tow car
	{
		if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return 1;
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
		new towedcar;
		towedcar = GetVehicleTrailer(GetPlayerVehicleID(playerid));
		SetVehicleToRespawn(towedcar);
		GivePlayerCash(playerid, 5000);
		SCM(playerid,COLOR_WHITE,"{FFFF00}Zarobiles 5000$ za swoja prace.");
		Update(playerid, pCashx);
		PlayerInfo[playerid][pTow] -= 1;
		Update(playerid,pTowx);
		PlayerInfo[playerid][pCommands] ++;
		new rquery[256];
		format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
		mysql_query(SQL, rquery);
	}
	else if(CP[playerid] == 43) // disable point
	{
		CP[playerid] = 0;
		targetfind[playerid] = -1;
	    DisablePlayerCheckpoint(playerid);
	}
	else if(CP[playerid] == 69) {
		CP[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
			case CHECKPOINT_LOCATE:
		    {
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
			}
		}
	}
	switch(CP[playerid]) {
		case 1612: {
			if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "Zejdz z pojazdu!");
			DisablePlayerCheckpoint(playerid);
			RemovePlayerAttachedObject(playerid, 2);
			format(string, sizeof(string), "Skonczyles z powodzeniem swoj napad! Otrzymales $%s.", FormatNumber(BagMoney[playerid]));
			SCM(playerid, COLOR_MONEY, string);
			GivePlayerCash(playerid, BagMoney[playerid]);
			CP[playerid] = 0;
			Robbery[playerid] = 0;		
		}
		case 1613: {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			format(string, sizeof(string), "* Skonczyles rabunek i dostales $%s!", FormatNumber(RobMoney[playerid]));
			GivePlayerCash(playerid, RobMoney[playerid]);
			SCM(playerid, COLOR_MONEY, string);		
		}
		case 51: {
			if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SCM(playerid, COLOR_YELLOW2, "{FFFFCC}Blad: Nie masz przyczepionej przyczepki do strzelania!");
			DestroyVehicle(Trailer[playerid]);
			Trailer[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			NaczepaStart[playerid] = 0;
			CP[playerid] = 52;
			TruckerStep[playerid] = 1;
			SetPlayerCheckpointEx(playerid, 80.3614, -251.1722, 1.5355, 6.0);
		}
		case 52: {
		    DisablePlayerCheckpoint(playerid);
			CP[playerid] = 51;
			new salar;
			/*switch(TruckerRoute[playerid]) {
				case 0: salar = 3000+GetPlayerSkill(playerid)*250+random(100);
				case 1: salar = 2100+GetPlayerSkill(playerid)*250+random(100);
				case 2: salar = 2300+GetPlayerSkill(playerid)*250+random(100);
				case 3: salar = 2350+GetPlayerSkill(playerid)*250+random(100);
				case 4: salar = 2200+GetPlayerSkill(playerid)*250+random(100);
				case 5: salar = 1800+GetPlayerSkill(playerid)*250+random(100);
				case 6: salar = 1700+GetPlayerSkill(playerid)*250+random(100);
				case 7: salar = 2000+GetPlayerSkill(playerid)*250+random(100);
				case 8: salar = 2200+GetPlayerSkill(playerid)*250+random(100);
				case 9: salar = 1600+GetPlayerSkill(playerid)*250+random(100);
				case 10: salar = 1900+GetPlayerSkill(playerid)*250+random(100);
				case 11: salar = 1950+GetPlayerSkill(playerid)*250+random(100);
				case 12: salar = 1980+GetPlayerSkill(playerid)*250+random(100);
				case 13: salar = 1990+GetPlayerSkill(playerid)*250+random(100);
				case 14: salar = 2300+GetPlayerSkill(playerid)*250+random(100);
			}*/
			switch(GetPlayerSkill(playerid)) {
				case 1: salar = 100;
				case 2: salar = 120;
				case 3: salar = 160;
				case 4: salar = 200;
				case 5: salar = 240;
				case 6: salar = 280;
			}
			if(PlayerInfo[playerid][pPremiumAccount] >= 1) salar += salar/4;
			if(TruckerRoute[playerid] == 14 || TruckerRoute[playerid] == 13|| TruckerRoute[playerid] == 12 && IsAMember(playerid)) {
		    format(string, sizeof(string), "(+) Otrzymujesz dodatek w wysokosci 500$ za nielegalny przewóz oraz 50 materialów!", FormatNumber(salar));
			SCM(playerid, COLOR_MONEY, string);
			GivePlayerCash(playerid, 500);
			GivePlayerThing(playerid, 107, 50, 0, 0);
			}
			TruckerStep[playerid] = 0;
			TruckerRoute[playerid] = 15;
			/*PlayerTextDrawSetString(playerid, InfosTD, "~y~Ladowanie ...");
			PlayerTextDrawShow(playerid, InfosTD);
			format(string, sizeof(string), "Creek (LV)\nSkrzyzowanie Pilsona (LV)\nBattery Point (SF)\nOcean Docks (LS)\n\
			Whetstone (SF)\nFlint County (SF)\nDoherty (SF)\nPalisades (SF)\nBayside (SF)\nCommerce (LS)\n\
			Las Payasadas (LV)\nLas Venturas Airport (LV)\nEast Los Santos (LS)\nLinden Side (LV)\nAngel Pine (SF)");
			ShowPlayerDialog(playerid, DIALOG_TRUCKER, DIALOG_STYLE_LIST, "Wybór misji", string, "Wybierz", "");*/
		    GivePlayerCash(playerid, salar);
		    format(string, sizeof(string), "(+) Otrzymales $%s za towar dostarczony przez Ciebie.", FormatNumber(salar));
			SCM(playerid, COLOR_MONEY, string);
			MoneyEarned[playerid] += salar;
			PlayerTextDrawDestroy(playerid, InfosTD);
			CurseFacute[playerid] ++;
			format(string, sizeof(string), "~g~+$%s", FormatNumber(salar));
			GameTextForPlayer(playerid, string, 1000, 1);
			PlayerInfo[playerid][pTruckerSkill] ++;
			Update(playerid, pTruckerSkillx);
			if(PlayerInfo[playerid][pTruckerSkill] == 50)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Truckera sa teraz na poziomie 2. Zarobisz wiecej pieniedzy. ");
				JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill2Veh], Pos[0], Pos[1], Pos[2], 90.0000, 1, 1, 100);
			    PutPlayerInVehicle(playerid, JobVehicle[playerid], 0);
			}
			else if(PlayerInfo[playerid][pTruckerSkill] == 100)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Truckera sa teraz na poziomie 3. Zarobisz wiecej pieniedzy. ");
				JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill3Veh], Pos[0], Pos[1], Pos[2], 90.0000, 1, 1, 100);
			    PutPlayerInVehicle(playerid, JobVehicle[playerid], 0);
			}
			else if(PlayerInfo[playerid][pTruckerSkill] == 200)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Truckera sa teraz na poziomie 4. Zarobisz wiecej pieniedzy. ");
				JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill4Veh], Pos[0], Pos[1], Pos[2], 90.0000, 1, 1, 100);
			    PutPlayerInVehicle(playerid, JobVehicle[playerid], 0);
			}
			else if(PlayerInfo[playerid][pTruckerSkill] == 400)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Truckera sa teraz na poziomie 5. Zarobisz wiecej pieniedzy. ");
				JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill5Veh], Pos[0], Pos[1], Pos[2], 90.0000, 1, 1, 100);
			    PutPlayerInVehicle(playerid, JobVehicle[playerid], 0);
			}
			PlayerTime2[playerid] = 3;
		}
		case 53: {
		    DisablePlayerCheckpoint(playerid);
		    CP[playerid] = 0;
		}
		case 54: {
		    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "Nie musisz byc w samochodzie, kiedy bierzesz worek na smieci.");
			DisablePlayerCheckpoint(playerid);
			new randkg = 2 + random(4);
			if(randkg + GunoiKG[playerid] > GetPlayerSkill(playerid)*25) GunoiKG[playerid] = GetPlayerSkill(playerid)*25;
			else GunoiKG[playerid] += randkg;
			SetPlayerAttachedObject(playerid, 2, 1265, 6, 0.127215, -0.104084, 0.017073, 21.390180, 243.148254, 89.988159, 0.510235, 1.000000, 0.768688);
			InHand[playerid] = 1;
			format(string, sizeof(string), "Otrzymales %d kilogramow smieci (%d/%d)~n~Wroc do kosza i nacisnij przycisk Y, aby umiescic torbe!", randkg, GunoiKG[playerid], GetPlayerSkill(playerid)*25);
			PlayerTextDrawSetString(playerid, InfosTD, string);
			PlayerTextDrawShow(playerid, InfosTD);
		    SetTimerEx("HideTextdraw", 3000, 0, "%d", playerid);
		}
		case 55: {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			InHand[playerid] = 0;
			new salar;
			switch(GetPlayerSkill(playerid)) {
				case 1: salar = 100;
				case 2: salar = 130;
				case 3: salar = 200;
				case 4: salar = 250;
				case 5: salar = 280;
				case 6: salar = 300;
			}
			if(PlayerInfo[playerid][pPremiumAccount] >= 1) salar += salar/4;
		    format(string, sizeof(string), "(+) Otrzymales $%s za wykonana przez ciebie prace.", FormatNumber(salar));
			SCM(playerid, COLOR_MONEY, string);
			format(string, sizeof(string), "~g~+$%s", FormatNumber(salar));
			GameTextForPlayer(playerid, string, 1000, 1);
			GivePlayerCash(playerid, salar);
			GunoiKG[playerid] = 0;
			PlayerInfo[playerid][pGarbageSkill] ++;
			Update(playerid, pGarbageSkillx);
			if(PlayerInfo[playerid][pGarbageSkill] == 50)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy smieciarza sa teraz na poziomie 2. Mozesz zebrac wiecej smieci."); }
			else if(PlayerInfo[playerid][pGarbageSkill] == 100)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy smieciarza sa teraz na poziomie 3. Mozesz zebrac wiecej smieci."); }
			else if(PlayerInfo[playerid][pGarbageSkill] == 200)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy smieciarza sa teraz na poziomie 4. Mozesz zebrac wiecej smieci."); }
			else if(PlayerInfo[playerid][pGarbageSkill] == 400)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy smieciarza sa teraz na poziomie 5. Mozesz zebrac wiecej smieci."); }
		    DestroyVehicle(JobVehicle[playerid]);
			JobVehicle[playerid] = 0, JobWorking[playerid] = 0;
			PlayerTextDrawHide(playerid, JobTD);
			PlayerTime2[playerid] = 3;
		}
		case 56: {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			new salar;
			switch(GetPlayerSkill(playerid)) {
				case 1: salar = 170;
				case 2: salar = 245;
				case 3: salar = 370;
				case 4: salar = 430;
				case 5: salar = 580;
				case 6: salar = 750;
			}
			if(PlayerInfo[playerid][pPremiumAccount] >= 1) salar += salar/4;
		    format(string, sizeof(string), "(+) Otrzymales $%s za wykonana przez ciebie prace.", FormatNumber(salar));
			SCM(playerid, COLOR_MONEY, string);
			format(string, sizeof(string), "~g~+$%s", FormatNumber(salar));
			GameTextForPlayer(playerid, string, 1000, 1);
			GivePlayerCash(playerid, salar);
			GunoiKG[playerid] = 0;
			PlayerInfo[playerid][pFarmerSkill] ++;
			Update(playerid, pFarmerSkillx);
			if(PlayerInfo[playerid][pFarmerSkill] == 50)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Farmera sa teraz na poziomie 2. Dostaniesz wiecej pieniedzy."); }
			else if(PlayerInfo[playerid][pFarmerSkill] == 100)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Farmera sa teraz na poziomie 3. Dostaniesz wiecej pieniedzy."); }
			else if(PlayerInfo[playerid][pFarmerSkill] == 200)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Farmera sa teraz na poziomie 4. Dostaniesz wiecej pieniedzy."); }
			else if(PlayerInfo[playerid][pFarmerSkill] == 400)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Farmera sa teraz na poziomie 5. Dostaniesz wiecej pieniedzy."); }
		    DestroyVehicle(JobVehicle[playerid]);
			JobVehicle[playerid] = 0, JobWorking[playerid] = 0;
			PlayerTextDrawHide(playerid, JobTD);
			PlayerTime2[playerid] = 3;
		}
		case 57: {
			SetPlayerCheckpointEx(playerid, 843.6625,909.2266,13.574, 5.0);
			CP[playerid] = 58;
		}
		case 58: {
		    DisablePlayerCheckpoint(playerid);
			CP[playerid] = 57;
			StartingWork[playerid] = 1;
			// ++
			if(StartingWork[playerid] == 1) {
			    new salar;
			    switch(GetPlayerSkill(playerid)) {
			        case 1: salar = 800;
			        case 2: salar = 2000;
			        case 3: salar = 3500;
			        case 4: salar = 4700;
			        case 5: salar = 5500;
			    }
			    if(PlayerInfo[playerid][pPremiumAccount] >= 1) salar += salar/4;
				format(string, sizeof(string), "~g~+$%s", FormatNumber(salar));
				GameTextForPlayer(playerid, string, 1000, 1);
				GivePlayerCash(playerid, salar);

				PlayerInfo[playerid][pConstructorSkill] ++;
				Update(playerid, pConstructorSkillx);
				if(PlayerInfo[playerid][pConstructorSkill] == 50)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w Constructor sa teraz na poziomie 2. Dostaniesz wiecej pieniedzy."); }
				else if(PlayerInfo[playerid][pConstructorSkill] == 100)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w Constructor sa teraz na poziomie 3. Dostaniesz wiecej pieniedzy."); }
				else if(PlayerInfo[playerid][pConstructorSkill] == 200)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w Constructor sa teraz na poziomie 4. Dostaniesz wiecej pieniedzy."); }
				else if(PlayerInfo[playerid][pConstructorSkill] == 400)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w Constructor sa teraz na poziomie 5. Dostaniesz wiecej pieniedzy."); }
				CurseFacute[playerid] ++;
				MoneyEarned[playerid] += salar;

				new rand = random(2);
				if(rand == 0) SetPlayerCheckpointEx(playerid, 541.8474,850.2049,-41.9586, 5.0);
				else if(rand == 1) SetPlayerCheckpointEx(playerid, 580.2501,915.7686,-42.8712, 5.0);
				else if(rand == 2) SetPlayerCheckpointEx(playerid, 677.5947,838.3197,-42.7415, 5.0);
				CP[playerid] = 57;
				PlayerTime2[playerid] = 3;
			}
		}
		case 60: {
			if(!IsPlayerInAnyVehicle(playerid)) return 1;
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			JobWorking[playerid] = 0;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		    new salar;
		    switch(GetPlayerSkill(playerid)) {
		        case 1: salar = 800;
		        case 2: salar = 1000;
		        case 3: salar = 1200;
		        case 4: salar = 1400;
		        case 5: salar = 1600;
		    }
		    if(PlayerInfo[playerid][pPremiumAccount] >= 1) salar += salar/4;
			format(string, sizeof(string), "~g~+$%s", FormatNumber(salar));
			GameTextForPlayer(playerid, string, 1000, 1);
			GivePlayerCash(playerid, salar);

			PlayerInfo[playerid][pHotSkill] ++;
			Update(playerid, pHotSkillx);
			if(PlayerInfo[playerid][pHotSkill] == 50)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w Hot Cars sa teraz na poziomie 2. Dostaniesz wiecej pieniedzy."); }
			else if(PlayerInfo[playerid][pHotSkill] == 100)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w Hot Cars sa teraz na poziomie 3. Dostaniesz wiecej pieniedzy."); }
			else if(PlayerInfo[playerid][pHotSkill] == 200)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w Hot Cars sa teraz na poziomie 4. Dostaniesz wiecej pieniedzy."); }
			else if(PlayerInfo[playerid][pHotSkill] == 400)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w Hot Cars sa teraz na poziomie 5. Dostaniesz wiecej pieniedzy."); }
			PlayerTime2[playerid] = 3;
		}
		case 61: {
			switch(Step[playerid]) {
				case 0: SetPlayerCheckpointEx(playerid, -1999.8694,316.1261,35.1302, 5.0);
				case 1: SetPlayerCheckpointEx(playerid, -1999.8356,536.8410,35.1184, 5.0);
				case 2: SetPlayerCheckpointEx(playerid, -2167.0220,569.8458,35.1155, 5.0);
				case 3: SetPlayerCheckpointEx(playerid, -2328.0381,569.7625,29.7557, 5.0);
				case 4: SetPlayerCheckpointEx(playerid, -2510.5417,569.6587,14.5731, 5.0);
				case 5: SetPlayerCheckpointEx(playerid, -2528.5273,527.0248,14.5610, 5.0);
				case 6: SetPlayerCheckpointEx(playerid, -2648.1716,470.5067,12.8173, 5.0);
				case 7: SetPlayerCheckpointEx(playerid, -2707.6816,428.1252,4.2822, 5.0);
				case 8: SetPlayerCheckpointEx(playerid, -2751.6663,375.3984,4.2436, 5.0);
				case 9: SetPlayerCheckpointEx(playerid, -2708.3240,309.5139,4.2795, 5.0);
				case 10: SetPlayerCheckpointEx(playerid, -2707.8677,120.1897,4.2798, 5.0);
				case 11: SetPlayerCheckpointEx(playerid, -2708.8049,-194.1222,4.2776, 5.0);
				case 12: SetPlayerCheckpointEx(playerid, -2607.2778,-212.7758,4.2806, 5.0);
				case 13: SetPlayerCheckpointEx(playerid, -2486.9602,-212.2885,26.6300, 5.0);
				case 14: SetPlayerCheckpointEx(playerid, -2419.2102,-107.2762,35.2707, 5.0);
				case 15: SetPlayerCheckpointEx(playerid, -2374.6777,-98.1236,35.2697, 5.0);
				case 16: SetPlayerCheckpointEx(playerid, -2308.3799,-192.5982,35.2710, 5.0);
				case 17: SetPlayerCheckpointEx(playerid, -2165.1389,-129.4374,35.2717, 5.0);
				case 18: SetPlayerCheckpointEx(playerid, -2123.1519,-72.4176,35.2776, 5.0);
				case 19: SetPlayerCheckpointEx(playerid, -2004.3259,-18.3976,34.9474, 5.0);
				case 20: SetPlayerCheckpointEx(playerid, -1994.5149,100.9529,27.6356, 5.0), CP[playerid] = 62;
			}
			Step[playerid] ++;
		}
		case 62: {
		    DisablePlayerCheckpoint(playerid);
		    CP[playerid] = 0;
		    DestroyVehicle(JobVehicle[playerid]);
			JobVehicle[playerid] = 0, JobWorking[playerid] = 0;
		    new salar;
		    switch(GetPlayerSkill(playerid)) {
		        case 1: salar = 750;
		        case 2: salar = 1500;
		        case 3: salar = 2250;
		        case 4: salar = 3000;
		        case 5: salar = 4000;
		    }
		    if(PlayerInfo[playerid][pPremiumAccount] >= 1) salar += salar/4;
			format(string, sizeof(string), "~g~+$%s", FormatNumber(salar));
			GameTextForPlayer(playerid, string, 1000, 1);
			GivePlayerCash(playerid, salar);

			PlayerInfo[playerid][pBusSkill] ++;
			Update(playerid, pBusSkillx);
			if(PlayerInfo[playerid][pBusSkill] == 50)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci jako kierowca autobusów sa teraz na poziomie 2. Dostaniesz wiecej pieniedzy."); }
			else if(PlayerInfo[playerid][pBusSkill] == 100)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci jako kierowca autobusów sa teraz na poziomie 3. Dostaniesz wiecej pieniedzy."); }
			else if(PlayerInfo[playerid][pBusSkill] == 200)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci jako kierowca autobusów sa teraz na poziomie 4. Dostaniesz wiecej pieniedzy."); }
			else if(PlayerInfo[playerid][pBusSkill] == 400)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci jako kierowca autobusów sa teraz na poziomie 5. Dostaniesz wiecej pieniedzy."); }
			PlayerTime2[playerid] = 3;
		}
		case 63: {
		    DisablePlayerCheckpoint(playerid);
		    CP[playerid] = 0;
		    DestroyVehicle(JobVehicle[playerid]);
			JobVehicle[playerid] = 0, JobWorking[playerid] = 0;
		    new salar = GetPlayerSkill(playerid)*100;
		    if(PlayerInfo[playerid][pPremiumAccount] >= 1) salar += salar/4;
			format(string, sizeof(string), "~g~+$%s", FormatNumber(salar));
			GameTextForPlayer(playerid, string, 1000, 1);
			GivePlayerCash(playerid, salar);
            PlayerInfo[playerid][pMatSkill] += 1;
			new str[128];
			format(str,sizeof(str),"UPDATE users SET `Materials`='%d',`MatSkill`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pMats],PlayerInfo[playerid][pMatSkill],PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL,str);
			PlayerTime2[playerid] = 3;
		}
		case 64: {
		    DisablePlayerCheckpoint(playerid);
		    CP[playerid] = 0;
		    DestroyVehicle(JobVehicle[playerid]);
			JobVehicle[playerid] = 0, JobWorking[playerid] = 0;
		    new salar = GetPlayerSkill(playerid)*100;
		    if(PlayerInfo[playerid][pPremiumAccount] >= 1) salar += salar/4;
			format(string, sizeof(string), "~g~+$%s", FormatNumber(salar));
			GameTextForPlayer(playerid, string, 1000, 1);
			GivePlayerCash(playerid, salar);
			PlayerInfo[playerid][pDrugsSkill] ++;
			if(PlayerInfo[playerid][pDrugsSkill] == 50)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Dealera narkotyków sa teraz na poziomie 2, mozesz kupic wiecej gramów narkotyków. "); }
			else if(PlayerInfo[playerid][pDrugsSkill] == 100)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Dealera narkotyków sa teraz na poziomie 3, mozesz kupic wiecej gramów narkotyków. "); }
			else if(PlayerInfo[playerid][pDrugsSkill] == 200)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Dealera narkotyków sa teraz na poziomie 4, mozesz kupic wiecej gramów narkotyków. "); }
			else if(PlayerInfo[playerid][pDrugsSkill] == 400)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Dealera narkotyków sa teraz na poziomie 5, mozesz kupic wiecej gramów narkotyków. "); }
			new str[128];
			format(str,sizeof(str),"UPDATE users SET `DrugsSkill`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pDrugsSkill],PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL,str);
			PlayerTime2[playerid] = 3;
		}
		case 79: {
	        CP[playerid] = 79;
	        new rand = random(housess) +2;
			if(LastCP[playerid] == rand) rand = 1;
	        SetPlayerCheckpointEx(playerid, HouseInfo[rand][hEntrancex], HouseInfo[rand][hEntrancey], HouseInfo[rand][hEntrancez], 5.0);
		    new salar = 300 * GetPlayerSkill(playerid);
		    if(PlayerInfo[playerid][pPremiumAccount] >= 1) salar += salar/4;
		    PlayerInfo[playerid][pPizzaSkill] ++;
		    Update(playerid, pPizzaSkillx);
		}
	}
	return 1;
}


public OnPlayerSelectedMenuRow(playerid, row)
{
	new Menu:Current = GetPlayerMenu(playerid);
	for(new menu; menu<TotalMenus; menu++)
	{
		
		if(Current == CCTVMenu[menu])
		{
		    if(MenuType[PlayerMenu[playerid]] == 1)
		    {
		        if(row == 11)
		        {
		            ShowMenuForPlayer(CCTVMenu[menu+1], playerid);
		            TogglePlayerControllable(playerid, 0);
		            PlayerMenu[playerid] = (menu+1);
				}
				else
				{
				    if(PlayerMenu[playerid] == 0)
				    {
				    	SetPlayerToCCTVCamera(playerid, row);
				    	PlayerMenu[playerid] = -1;
					}
					else
					{
					    SetPlayerToCCTVCamera(playerid, ((PlayerMenu[playerid]*11)+row));
					    PlayerMenu[playerid] = -1;
					}
				}
			}
			else
			{
			    if(PlayerMenu[playerid] == 0)
			    {
			    	SetPlayerToCCTVCamera(playerid, row);
			    	PlayerMenu[playerid] = -1;
				}
				else
				{
				    SetPlayerToCCTVCamera(playerid, ((PlayerMenu[playerid]*11)+row));
				    PlayerMenu[playerid] = -1;
				}
			}
		}
	}
		            
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	new Menu:CurrentMenu = GetPlayerMenu(playerid);
	if(!IsValidMenu(CurrentMenu)) return 1;
	TogglePlayerControllable(playerid,1);
	HideMenuForPlayer(CurrentMenu, playerid);
	PlayerMenu[playerid] = -1;//CCTV
	return 1;
}

public SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerCheckpointEx(i,allx,ally,allz, radi);
			if (num != 255)
			{
				gPlayerCheckpointStatus[i] = num;
			}
		}
	}
	return 1;
}

public SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(gTeam[i] == 2)
			{
				SetPlayerCheckpointEx(i,allx,ally,allz, radi);
			}
		}
	}
	return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(PlayerCuffed2[playerid] == 1){
	SCM(playerid, COLOR_NEWS, "W takim stanie nie mo¿esz wsiadaæ do pojazdów!");
	ClearAnimations(playerid);
	return 1;
	}
	new idd, car, string[256];
	car = GetClosestVehicle(playerid);
	idd = FindSpawnID(car);
	if(CarInfo[idd][cLock] == 1)
	{
			new engine,lights,alarm,doors,bonnet,boot,objective;
			format(string, sizeof(string), "Ten pojazd jest zamkniety!");
			SCM(playerid, COLOR_NEWS, string);
			ClearAnimations(playerid);
			return 1;
		}
	if(!ispassenger) {
	if(PlayerInfo[playerid][pAdmin] == 20) {
	format(string, sizeof(string), "Wsiadles do pojazdu jako administrator!");
	} else {
		if(ServerVehicles[vehicleid][vuuid] != 0) {
		 if(ServerVehicles[vehicleid][vJob] != PlayerInfo[playerid][pJob] && ServerVehicles[vehicleid][vJob] != 0) {
	            format(string, sizeof(string), "Pojazd ten moze byc prowadzony tylko przez czlonków pracy %s.", GetJobName(ServerVehicles[vehicleid][vJob]));
				SCM(playerid, COLOR_GREY, string);
				SlapPlayer(playerid);
		    }	
			if(PlayerInfo[playerid][pJob] == 7 && ServerVehicles[vehicleid][vSkill] > PlayerInfo[playerid][pMechSkill]) {
		            format(string, sizeof(string), "Ten pojazd moze byc prowadzony wylacznie przez MECHANIKÓW ze skillem na poziomie %d.", ServerVehicles[vehicleid][vSkill]);
					SCM(playerid, COLOR_GREY, string);
			        SlapPlayer(playerid);
			 }
			if(PlayerInfo[playerid][pJob] == 1 && ServerVehicles[vehicleid][vSkill] > PlayerInfo[playerid][pTruckerSkill]) {
		            format(string, sizeof(string), "Ten pojazd moze byc prowadzony wylacznie przez TRUCKERÓW ze skillem na poziomie %d.", ServerVehicles[vehicleid][vSkill]);
					SCM(playerid, COLOR_GREY, string);
			        SlapPlayer(playerid);
			 }
		    if(ServerVehicles[vehicleid][vFaction] != PlayerInfo[playerid][pMember] && ServerVehicles[vehicleid][vFaction] != 0) {
	            format(string, sizeof(string), "Pojazd ten moze byc prowadzony tylko przez czlonków frakcji %s.", GetFactionName(ServerVehicles[vehicleid][vFaction]));
				SCM(playerid, COLOR_GREY, string);
				SlapPlayer(playerid);
		    }
		    else {
				if(IsACopCar(vehicleid)) {
					if(OnDuty[playerid] == 0 && IsACop(playerid)) {
						SCM(playerid, COLOR_DBLUE, "Nie mozesz uzywac pojazdów frakcyjnych, jesli nie jeste na s³u¿bie!");
						SlapPlayer(playerid);
						return 1;
					}
				}			
		        if(ServerVehicles[vehicleid][vRank] > PlayerInfo[playerid][pRank]) {
		            format(string, sizeof(string), "Ten pojazd moze byc prowadzony wylacznie przez czlonków z ranga %d.", ServerVehicles[vehicleid][vRank]);
					SCM(playerid, COLOR_GREY, string);
			        SlapPlayer(playerid);
			    }
		    if(ServerVehicles[vehicleid][vFaction] != PlayerInfo[playerid][pMember] && ServerVehicles[vehicleid][vFaction] != 0) {
	            format(string, sizeof(string), "Pojazd ten moze byc prowadzony tylko przez czlonków frakcji %s.", GetFactionName(ServerVehicles[vehicleid][vFaction]));
				SCM(playerid, COLOR_GREY, string);
				SlapPlayer(playerid);
				}   
			}
		}
	}	
}
	return 1;
}



function LoadSVehicles()
{
	new cars,servervehs = 0, model, Float:loc[4], color[2];
	cars = cache_get_row_count();
	for(new i = 1; i <= cars; i++)
	{
		new j = i - 1;
		servervehs ++;
		model 			= cache_get_field_content_int(j, "vModel");
		loc[0] 			= cache_get_field_content_float(j, "LocationX");
		loc[1]			= cache_get_field_content_float(j, "LocationY");
		loc[2]			= cache_get_field_content_float(j, "LocationZ");
		loc[3] 			= cache_get_field_content_float(j, "Angle");
		color[0]		= cache_get_field_content_int(j, "Color1");
		color[1] 		= cache_get_field_content_int(j, "Color2");
		
		if(model >= 400 && model <= 611)
		{
			new carid = CreateVehicleEx(model,loc[0],loc[1],loc[2],loc[3],color[0],color[1],-1);
			ServerVehicles[carid][vuuid] 			= cache_get_field_content_int(j, "id");
			ServerVehicles[carid][vModel] 			= cache_get_field_content_int(j, "vModel");
			ServerVehicles[carid][vLocation][0] 	= cache_get_field_content_float(j, "LocationX");
			ServerVehicles[carid][vLocation][1]		= cache_get_field_content_float(j, "LocationY");
			ServerVehicles[carid][vLocation][2]		= cache_get_field_content_float(j, "LocationZ");
			ServerVehicles[carid][vAngle] 			= cache_get_field_content_float(j, "Angle");
			ServerVehicles[carid][vColor][0] 		= cache_get_field_content_int(j, "Color1");
			ServerVehicles[carid][vColor][1] 		= cache_get_field_content_int(j, "Color2");
			ServerVehicles[carid][vFaction] 		= cache_get_field_content_int(j, "Faction");
			ServerVehicles[carid][vRank] 			= cache_get_field_content_int(j, "Rank");
			ServerVehicles[carid][vJob] 			= cache_get_field_content_int(j, "Job");
			ServerVehicles[carid][vSkill] 			= cache_get_field_content_int(j, "Skill");
			ServerVehicles[carid][sOpis] 			= cache_get_field_content_int(j, "SIsOpis");
			cache_get_field_content(j, "NumberPlate", ServerVehicles[carid][vNumberPlate], SQL, 129);
			cache_get_field_content(j, "SOpis", ServerVehicles[carid][sdbOpis], SQL, 129);
			SetVehicleNumberPlate(carid, ServerVehicles[carid][vNumberPlate]);
			
			if(ServerVehicles[carid][vFaction] == 1 || ServerVehicles[carid][vFaction] == 2 || ServerVehicles[carid][vFaction] == 3) {
				if(ServerVehicles[carid][vModel] == 411) {
					new policecar2 = CreateObject(19327, 1534.2373, -1643.2886, 5.9373, -87.6999, 90.4001, -87.1805);
					SetObjectMaterialText(policecar2, "POLICE", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
				    new lspdcar2 = CreateObject(19419,0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000);
					AttachObjectToVehicle(policecar2, carid, 0.0, -1.9, 0.3, 270.0, 0.0, 0.0);
				    AttachObjectToVehicle(lspdcar2, carid, 0.0646, 0.1661, 0.6957, 0.0000, 0.0000, 0.0000);
				}
                if(ServerVehicles[carid][vModel] == 541) {
				    new lspdcar2 = CreateObject(19419,0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000);
				    AttachObjectToVehicle(lspdcar2, carid, 0.0646, 0.1661, 0.6957, 0.0000, 0.0000, 0.0000);
                }
			}
			if(ServerVehicles[carid][vFaction] == 13) {
				if(ServerVehicles[carid][vModel] == 560) {
				    new taxiobj = CreateObject(19308, 0.00000, 0.00000, 0.00000,0.00000, 0.00000, 0.00000);
					AttachObjectToVehicle(taxiobj, carid, -0.00930, -0.23880, 0.92300,0.00000, 0.00000, 0.00000);
				}
			}
			if(ServerVehicles[carid][vModel] == 525) {
				new object1 = CreateObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
				new object2 = CreateObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
				AttachObjectToVehicle(object1, carid, -0.600000,-0.485000,1.450000,0.000000,0.000000,0.000000);
				AttachObjectToVehicle(object2, carid, 0.600000,-0.485000,1.450000,0.000000,0.000000,0.000000);
			}	
			if(ServerVehicles[carid][sOpis] == 1) {
			ServerVehicles[carid][svOpis] = CreateDynamic3DTextLabel(ServerVehicles[carid][sdbOpis],0xC2A2DAAA, ServerVehicles[carid][vLocation][0],ServerVehicles[carid][vLocation][1], ServerVehicles[carid][vLocation][2]-0.2, 20.0, INVALID_PLAYER_ID, carid, 1, -1, -1, -1, 100.00);
			}
		}
	}
	printf("[MYSQL SAuta] %d pojazdów", cars);
	return 1;
	}
	
public LoadActors()
{
	new Cache: db = mysql_query(SQL, "SELECT * FROM `aktorzy` ORDER BY `aktorzy`.`ID` ASC");
	new actorsize = 0, x, result[256], string[256];
 	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
	    actorsize ++;
       	cache_get_field_content(i, "ID", result); x = strval(result);
		cache_get_field_content(i, "ID", result); Aktor[x][aID] = strval(result);
       	cache_get_field_content(i, "LocationX", result); Aktor[x][aPos][0] = floatstr(result);
     	cache_get_field_content(i, "LocationY", result); Aktor[x][aPos][1] = floatstr(result);
      	cache_get_field_content(i, "LocationZ", result); Aktor[x][aPos][2] = floatstr(result);
       	cache_get_field_content(i, "Facing", result); Aktor[x][aPos][3] = floatstr(result);
       	cache_get_field_content(i, "Skin", result); Aktor[x][aSkin]  = strval(result);
		cache_get_field_content(i, "Type", result); Aktor[x][aType]  = strval(result);
		cache_get_field_content(i, "Animation", result); Aktor[x][aAnimation]  = strval(result);
		cache_get_field_content(i, "Action", result); Aktor[x][aAction]  = strval(result);
		cache_get_field_content(i, "VW", result); Aktor[x][aVW]  = strval(result);
		cache_get_field_content(i, "Nickname", Aktor[x][actor_name], SQL, 129);
		cache_get_field_content(i, "aOpis", Aktor[x][aOpis], SQL, 129);
		cache_get_field_content(i, "AnimLib", Aktor[x][aAnimLib], SQL, 129);
		cache_get_field_content(i, "AnimName", Aktor[x][aAnimName], SQL, 129);
		
		Aktor[x][aNumer] = CreateDynamicActor(Aktor[x][aSkin], Aktor[x][aPos][0], Aktor[x][aPos][1], Aktor[x][aPos][2], Aktor[x][aPos][3], 0, 100, Aktor[x][aVW], 0);
		
		ApplyDynamicActorAnimation(Aktor[x][aNumer], Aktor[x][aAnimLib], Aktor[x][aAnimName], 4.1, 1, 0, 0, 0, 0);
		
		format(string, sizeof(string), "%s (ID: %d)", Aktor[x][actor_name], Aktor[x][aID]);
		Aktor[x][actor_nametag] = CreateDynamic3DTextLabel(string, COLOR_GREY, Aktor[x][aPos][0], Aktor[x][aPos][1], Aktor[x][aPos][2]+1.0, 10.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, Aktor[x][aVW], 0, -1, 100.0);
		Aktor[x][actor_opis] = CreateDynamic3DTextLabel(SMessage(Aktor[x][aOpis]),COLOR_PURPLE,Aktor[x][aPos][0],Aktor[x][aPos][1],Aktor[x][aPos][2]+0.4,10.0,INVALID_PLAYER_ID, INVALID_PLAYER_ID,0, Aktor[Aktor[x][aID]][aVW], 0, -1, 100.0);
	}
	printf("[MySQL Aktorzy]: %d zaladowano.", actorsize);
	cache_delete(db);
	return 1;
}

function LoadActors2()
{
	new actorss,string[256],actorsize = 0;
	actorss = cache_get_row_count();
	for(new i = 1; i <= actorss; i++)
	{
		new j = i - 1;
		actorsize ++;
		Aktor[i][aID]				= i;
		Aktor[i][aID] 				= cache_get_field_content_int(j, "ID");
		Aktor[i][aPos][0] 			= cache_get_field_content_float(j, "LocationX");
		Aktor[i][aPos][1]			= cache_get_field_content_float(j, "LocationY");
		Aktor[i][aPos][2]			= cache_get_field_content_float(j, "LocationZ");
		Aktor[i][aPos][3]			= cache_get_field_content_float(j, "Facing");
		Aktor[i][aSkin] 			= cache_get_field_content_int(j, "Skin");
		Aktor[i][aType]				= cache_get_field_content_int(j, "Type");
		Aktor[i][aAnimation]		= cache_get_field_content_int(j, "Animation");
		Aktor[i][aAction]			= cache_get_field_content_int(j, "Action");
		Aktor[i][aVW]				= cache_get_field_content_int(j, "VW");
		Aktor[i][aOwner]			= cache_get_field_content_int(j, "Owner");
		cache_get_field_content(j, "Nickname", Aktor[i][actor_name], SQL, 129);
		cache_get_field_content(j, "aOpis", Aktor[i][aOpis], SQL, 129);
		cache_get_field_content(j, "AnimLib", Aktor[i][aAnimLib], SQL, 129);
		cache_get_field_content(j, "AnimName", Aktor[i][aAnimName], SQL, 129);
		
		Aktor[i][aNumer] = CreateActor(Aktor[i][aSkin], Aktor[i][aPos][0], Aktor[i][aPos][1], Aktor[i][aPos][2], Aktor[i][aPos][3]);
		
		ApplyDynamicActorAnimation(Aktor[i][aNumer], Aktor[i][aAnimLib], Aktor[i][aAnimName], 4.1, 1, 0, 0, 0, 0);
		
		printf("%d", i);
		
		format(string, sizeof(string), "%s (ID: %d)", Aktor[i][actor_name], Aktor[i][aID]);
		printf("%s", string);
		Aktor[Aktor[i][aID]][actor_nametag] = CreateDynamic3DTextLabel(string, COLOR_GREY, Aktor[i][aPos][0], Aktor[i][aPos][1], Aktor[i][aPos][2]+1.0, 10.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, Aktor[i][aVW], 0, -1, 100.0);
		Aktor[Aktor[i][aID]][actor_opis] = CreateDynamic3DTextLabel(SMessage(Aktor[i][aOpis]),COLOR_PURPLE,Aktor[i][aPos][0],Aktor[i][aPos][1],Aktor[i][aPos][2],10.0,INVALID_PLAYER_ID, INVALID_PLAYER_ID,0, Aktor[Aktor[i][aID]][aVW], 0, -1, 100.0);
		
	}
	printf("[MYSQL] AKTORZY: %d", actorss);
	return 1;
	}
	
/*function LoadSVehicles()
{
	new Cache: db = mysql_query (SQL, "SELECT * FROM `svehicles` ORDER BY `svehicles`.`id` ASC");
	new
		x,
		servervehs = 0,
		result[256];

 	for (new i, j = cache_get_row_count (); i != j; ++i)
	{
	    servervehs ++;
		cache_get_field_content(i, "id", result); 				x = strval(result);
		ServerVehicles[x][vuuid] = x;
		cache_get_field_content(i, "vID", result); 			ServerVehicles[x][vID] = strval(result);
       	cache_get_field_content(i, "vModel", result); 			ServerVehicles[x][vModel] = strval(result);
     	cache_get_field_content(i, "LocationX", result); 		ServerVehicles[x][vLocation][0] = floatstr(result);
      	cache_get_field_content(i, "LocationY", result); 		ServerVehicles[x][vLocation][1] = floatstr(result);
       	cache_get_field_content(i, "LocationZ", result); 		ServerVehicles[x][vLocation][2] = floatstr(result);
       	cache_get_field_content(i, "Angle", result); 			ServerVehicles[x][vAngle] = floatstr(result);
       	cache_get_field_content(i, "Color1", result); 			ServerVehicles[x][vColor][0] = strval(result);
      	cache_get_field_content(i, "Color2", result); 			ServerVehicles[x][vColor][1] = strval(result);
     	cache_get_field_content(i, "Faction", result); 			ServerVehicles[x][vFaction] = strval(result);
	  	cache_get_field_content(i, "Rank", result); 			ServerVehicles[x][vRank] = strval(result);
		cache_get_field_content(i, "Job", result); 			ServerVehicles[x][vJob] = strval(result);
		cache_get_field_content(i, "Skill", result); 			ServerVehicles[x][vSkill] = strval(result);
       	cache_get_field_content(i, "NumberPlate", result); 		format(ServerVehicles[x][vNumberPlate], 64, result);

		if(ServerVehicles[x][vModel] >= 400 && ServerVehicles[x][vModel] <= 611)
		{
			ServerVehicles[x][vSpawned] = CreateVehicleEx(ServerVehicles[x][vModel], ServerVehicles[x][vLocation][0], ServerVehicles[x][vLocation][1], ServerVehicles[x][vLocation][2], ServerVehicles[x][vAngle], ServerVehicles[x][vColor][0], ServerVehicles[x][vColor][1], -1);
			ServerVehicles[x][vID] = ServerVehicles[x][vSpawned];
			//CreateVehicleEx(ServerVehicles[x][vModel], ServerVehicles[x][vLocation][0], ServerVehicles[x][vLocation][1], ServerVehicles[x][vLocation][2], ServerVehicles[x][vAngle], ServerVehicles[x][vColor][0], ServerVehicles[x][vColor][1], -1);
			SetVehicleNumberPlate(x, ServerVehicles[x][vNumberPlate]);
			if(ServerVehicles[x][vFaction] == 1 || ServerVehicles[x][vFaction] == 2 || ServerVehicles[x][vFaction] == 3) {
				if(ServerVehicles[x][vModel] == 411) {
					new policecar2 = CreateObject(19327, 1534.2373, -1643.2886, 5.9373, -87.6999, 90.4001, -87.1805);
					SetObjectMaterialText(policecar2, "POLICE", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
				    new lspdcar2 = CreateObject(19419,0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000);
					AttachObjectToVehicle(policecar2, x, 0.0, -1.9, 0.3, 270.0, 0.0, 0.0);
				    AttachObjectToVehicle(lspdcar2, x, 0.0646, 0.1661, 0.6957, 0.0000, 0.0000, 0.0000);
				}
                if(ServerVehicles[x][vModel] == 541) {
				    new lspdcar2 = CreateObject(19419,0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000);
				    AttachObjectToVehicle(lspdcar2, x, 0.0646, 0.1661, 0.6957, 0.0000, 0.0000, 0.0000);
                }
			}
			if(ServerVehicles[x][vFaction] == 13) {
				if(ServerVehicles[x][vModel] == 560) {
				    new taxiobj = CreateObject(19308, 0.00000, 0.00000, 0.00000,0.00000, 0.00000, 0.00000);
					AttachObjectToVehicle(taxiobj, x, -0.00930, -0.23880, 0.92300,0.00000, 0.00000, 0.00000);
				}
			}
			if(ServerVehicles[x][vModel] == 525) {
				new object1 = CreateObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
				new object2 = CreateObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
				AttachObjectToVehicle(object1, x, -0.600000,-0.485000,1.450000,0.000000,0.000000,0.000000);
				AttachObjectToVehicle(object2, x, 0.600000,-0.485000,1.450000,0.000000,0.000000,0.000000);
			}			
		}
	}
	printf("[MySQL Vehicles]: %d zaladowane pojazdy serwerowe.", servervehs);
	cache_delete(db);
	return 1;
}*/



function IsACopCar(carid) {
	if(ServerVehicles[carid][vFaction] == 1) return 1;
	if(ServerVehicles[carid][vFaction] == 2) return 1;
	if(ServerVehicles[carid][vFaction] == 3) return 1;
	return 0;
}

function IsACopSkin(skinid)
{
if(skinid >= 280 && skinid <=289) return 1;
else return 0;
}

function IsATir(tirid)
{
if(GetVehicleModel(tirid) == 403) return 1;
if(GetVehicleModel(tirid) == 515) return 1;
if(GetVehicleModel(tirid) == 514) return 1;
return 0;
}

function SetCheckpoint(playerid) {
	new rand = random(2);
	switch(rand) {
	    case 0: SetPlayerCheckpointEx(playerid, 1907.9275, 2427.6040, 11.3469, 5.0);
	    case 1: SetPlayerCheckpointEx(playerid, 1087.9221, 1340.5326, 10.9512, 5.0);
	    case 2: SetPlayerCheckpointEx(playerid, 1663.7466, 710.6304, 10.8749, 5.0);
	}
	CP[playerid] = 60;
	return 1;
}

function SetPlayerCheckpointEx(playerid, Float:x, Float:y, Float:z, Float:size) {
	SetPlayerCheckpoint(playerid, x, y, z, size);
	CheckpointPos[playerid][0] = x;
	CheckpointPos[playerid][1] = y;
	CheckpointPos[playerid][2] = z;
	return 1;
}

function SetPlayerRaceCheckpointEx(playerid, type, Float:x, Float:y, Float:z, Float:nextx, Float:nexty, Float:nextz, Float:size) {
	SetPlayerRaceCheckpoint(playerid, type, Float:x, Float:y, Float:z, Float:nextx, Float:nexty, Float:nextz, Float:size);
	CheckpointPos[playerid][0] = x;
	CheckpointPos[playerid][1] = y;
	CheckpointPos[playerid][2] = z;
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(IsPlayerNPC(playerid)) return 1;
	new string[500];
	new vehicleid = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_DRIVER)
	{
	if(PlayerInfo[playerid][pAdmin] == 20) {
	format(string, sizeof(string), "Wsiadles do pojazdu jako administrator!");
	SCM(playerid, COLOR_RED, string);
	} else {
				if(ServerVehicles[vehicleid][vuuid] != 0) {
		 if(ServerVehicles[vehicleid][vJob] != PlayerInfo[playerid][pJob] && ServerVehicles[vehicleid][vJob] != 0) {
	            format(string, sizeof(string), "Pojazd ten moze byc prowadzony tylko przez czlonków pracy %s.", GetJobName(ServerVehicles[vehicleid][vJob]));
				SCM(playerid, COLOR_GREY, string);
				SlapPlayer(playerid);
		    }	
			if(PlayerInfo[playerid][pJob] == 7 && ServerVehicles[vehicleid][vSkill] > PlayerInfo[playerid][pMechSkill]) {
		            format(string, sizeof(string), "Ten pojazd moze byc prowadzony wylacznie przez MECHANIKÓW ze skillem na poziomie %d.", ServerVehicles[vehicleid][vSkill]);
					SCM(playerid, COLOR_GREY, string);
			        SlapPlayer(playerid);
			 }
			if(PlayerInfo[playerid][pJob] == 1 && ServerVehicles[vehicleid][vSkill] > PlayerInfo[playerid][pTruckerSkill]) {
		            format(string, sizeof(string), "Ten pojazd moze byc prowadzony wylacznie przez TRUCKERÓW ze skillem na poziomie %d.", ServerVehicles[vehicleid][vSkill]);
					SCM(playerid, COLOR_GREY, string);
			        SlapPlayer(playerid);
			 }
			 }
		if(ServerVehicles[vehicleid][vuuid] != 0) {
		    if(ServerVehicles[vehicleid][vFaction] != PlayerInfo[playerid][pMember] && ServerVehicles[vehicleid][vFaction] != 0) {
	            format(string, sizeof(string), "Pojazd ten moze byc prowadzony tylko przez czlonków frakcji1 %s.", GetFactionName(ServerVehicles[vehicleid][vFaction]));
				SCM(playerid, COLOR_GREY, string);
				RemovePlayerFromVehicle(playerid);
		    }
		    else {
				if(IsACopCar(vehicleid)) {
					if(OnDuty[playerid] == 0 && IsACop(playerid)) {
						SCM(playerid, COLOR_DBLUE, "Nie mozesz uzywac pojazdów frakcyjnych, jesli nie jeste na s³u¿bie!");
						SlapPlayer(playerid);
						return 1;
					}
				}			
		        if(ServerVehicles[vehicleid][vRank] > PlayerInfo[playerid][pRank]) {
		            format(string, sizeof(string), "Ten pojazd moze byc prowadzony wylacznie przez czlonków z ranga %d.", ServerVehicles[vehicleid][vRank]);
					SCM(playerid, COLOR_GREY, string);
			        RemovePlayerFromVehicle(playerid);
			    }

		    }
		}
		}
	
		new newcar = GetPlayerVehicleID(playerid);
		switch(CarRadio[newcar])
		{
            case 0: StopAudioStreamForPlayer(playerid), PlayerRadio[playerid] = 0;
			case 1: PlayAudioStreamForPlayer(playerid, "http://live.radiotaraf.com:8181"), PlayerRadio[playerid] = 1;//radyjko
			case 2: PlayAudioStreamForPlayer(playerid, "http://radiofunky.ro/live.pls"), PlayerRadio[playerid] = 2;
			case 3: PlayAudioStreamForPlayer(playerid, "http://live.radiogangsta.ro:8800"), PlayerRadio[playerid] = 3;
			case 4: PlayAudioStreamForPlayer(playerid, "http://dance.radiogangsta.ro:8800"), PlayerRadio[playerid] = 4;
			case 5: PlayAudioStreamForPlayer(playerid, "http://rbandit.dyndns.tv:8000"), PlayerRadio[playerid] = 5;
			case 6: PlayAudioStreamForPlayer(playerid, "http://live.radiohot.ro:8000"), PlayerRadio[playerid] = 6;
			case 7: PlayAudioStreamForPlayer(playerid, "http://www.radiotequila.ro/hiphop.m3u"), PlayerRadio[playerid] = 7;
			case 8: PlayAudioStreamForPlayer(playerid, "http://80.86.106.136/listen.pls"), PlayerRadio[playerid] = 8;
			case 9: PlayAudioStreamForPlayer(playerid, "http://stream.radiozu.ro:8020"), PlayerRadio[playerid] = 9;
			case 10: PlayAudioStreamForPlayer(playerid, "http://nextgen.go.ro:8012"), PlayerRadio[playerid] = 10;
			case 11: PlayAudioStreamForPlayer(playerid, "http://stream.profm.ro:8012/profm.mp3"), PlayerRadio[playerid] = 11;
			case 12: PlayAudioStreamForPlayer(playerid, "http://live.radioclubmix.ro:9999"), PlayerRadio[playerid] = 12;
			case 13: PlayAudioStreamForPlayer(playerid, "http://livemp3.radiopopular.ro:7777"), PlayerRadio[playerid] = 13;
		}
		new carid = FindSpawnID(vehicleid);
		if(CarInfo[carid][Userid] == PlayerInfo[playerid][pSQLID]) {
	 		SendClientMessage(playerid, COLOR_WHITE, "Ten pojazd nalezy do Ciebie: wpisz /lock lub nacisnij N, aby go zablokowac.");
		}
		else if(CarInfo[carid][cID] != -2 && carid != 0) {
			format(string, sizeof(string), "* Pojazd %s nalezacy do %s.", aVehicleNames[CarInfo[carid][cModel]-400],CarInfo[carid][cOwner]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}

	    if(!IsABoat(newcar))
	    {
			PlayerEnterTime[playerid] = GetTickCount();
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		if(Gas[newcar] == 0)
		{
	        TogglePlayerControllable(playerid, 0);
	        NoFuel[playerid] = 1;
		}

		if(IsABoat(newcar))
		{
		    if(PlayerInfo[playerid][pBoatLic] < 1 && InDealer[playerid] == 0)
			{
                if(TakingLesson[playerid] == 2) { }
                else {
			    SendClientMessage(playerid,COLOR_GREY, "Nie masz licencji na lódz.");
			    RemovePlayerFromVehicleEx(playerid);
			    TogglePlayerControllable(playerid, 1); }
			}
		}
		else if(IsAPlane(newcar))
		{
		    if(PlayerInfo[playerid][pFlyLic] < 1 && InDealer[playerid] == 0)
			{
			    if(TakingLesson[playerid] == 2) { }
			    else {
			    SendClientMessage(playerid, COLOR_GREY, "Nie masz licencji na latanie.");
			    RemovePlayerFromVehicleEx(playerid);
				TogglePlayerControllable(playerid, 1); }
			}
		}
		else
		{
			if(PlayerInfo[playerid][pCarLic] < 1 && InDealer[playerid] == 0)
			{
			    if(IsABike(newcar) || DMVCar[playerid] == newcar) { }
			    else
			    {
					if(TakingLesson[playerid] == 1) { }
					else if(InDealer[playerid] == 0) {
				 	SendClientMessage(playerid,COLOR_GREY, "Nie masz prawa jazdy.");
                    RemovePlayerFromVehicleEx(playerid);
                    TogglePlayerControllable(playerid, 1);
					SetTimerEx("UnFreezeStation", 500, 0, "i", playerid);
				  }
				}
			}
		}
		if(newcar == scooter[1] || newcar == scooter[2] || newcar == scooter[3] || newcar == scooter[4] || newcar == scooter[5]) {
			foreach(Player, i) {
				if(IsPlayerConnected(i) && HireCar[i] == vehicleid && i != playerid) HireCar[i] = -1, SCM(i, -1, "Wynajmowany pojazd zostal zabrany przez innego gracza!");
			}
			HireCar[playerid] = vehicleid;
			RentPrice[playerid] =0;
			PlayerTextDrawSetString(playerid, RentTD, "  Wynajmij auto: ~g~$0");
			PlayerTextDrawShow(playerid, RentTD);
		}
		else if(newcar == rentls[1] || newcar == rentls[2] || newcar == rentls[3] || newcar == rentls[4] || newcar == rentls[5] || newcar == rentls[6]  || newcar == rentls[7] || newcar == rentls[8] || newcar == rentls[9]
		|| newcar == rentls[10] || newcar == rentls[11] || newcar == rentls[12] || newcar == rentls[13] || newcar == rentls[14] || newcar == rentls[15])
		{
			foreach(Player, i) {
				if(IsPlayerConnected(i) && HireCar[i] == vehicleid && i != playerid) HireCar[i] = -1, SCM(i, -1, "Wynajmowany pojazd zostal zabrany przez innego gracza!");
			}
			HireCar[playerid] = vehicleid;
			RentPrice[playerid] =0;
			PlayerTextDrawSetString(playerid, RentTD, "  Wynajmij auto: ~g~$0");
			PlayerTextDrawShow(playerid, RentTD);
		}		
		//Done with car check
		/*if(JobWorking[playerid] == 1 && PlayerInfo[playerid][pJob] == 12) {
			new x = GetPlayerSkill(playerid);
			if(x == 1 && CarInfo[carid][Spawned] == 0 && !IsAFLYCar(newcar) && !IsABOATCar(newcar)) {
			    SetCheckpoint(playerid);
				PlayerTextDrawSetString(playerid, InfosTD, "Idz do punktu kontrolnego, aby zdobyc pieniadze");
				PlayerTextDrawShow(playerid, InfosTD);
				SetTimerEx("HideTextdraw", 5000, 0, "%d", playerid);
			}
			else if(x == 2 && CarInfo[carid][Spawned] != 0 && !IsAFLYCar(newcar) && !IsABOATCar(newcar)) {
			    SetCheckpoint(playerid);
				PlayerTextDrawSetString(playerid, InfosTD, "Idz do punktu kontrolnego, aby zdobyc pieniadze");
				PlayerTextDrawShow(playerid, InfosTD);
				SetTimerEx("HideTextdraw", 5000, 0, "%d", playerid);
			}
			else if(x == 3 && IsAGangCar(newcar)) {
			    SetCheckpoint(playerid);
				PlayerTextDrawSetString(playerid, InfosTD, "Idz do punktu kontrolnego, aby zdobyc pieniadze");
				PlayerTextDrawShow(playerid, InfosTD);
				SetTimerEx("HideTextdraw", 5000, 0, "%d", playerid);
			}
			else if(x == 4) {
			    SetCheckpoint(playerid);
				PlayerTextDrawSetString(playerid, InfosTD, "Idz do punktu kontrolnego, aby zdobyc pieniadze");
				SetTimerEx("HideTextdraw", 5000, 0, "%d", playerid);
			}
			else if(x == 5 && IsACopCar(newcar) || IsAFbiCar(newcar) || IsANgCar(newcar)) {
			    SetCheckpoint(playerid);
				PlayerTextDrawSetString(playerid, InfosTD, "Idz do punktu kontrolnego, aby zdobyc pieniadze");
				PlayerTextDrawShow(playerid, InfosTD);
				SetTimerEx("HideTextdraw", 5000, 0, "%d", playerid);
			}
			return 1;
		}*/
		new engine,lights,alarm,doors,bonnet,boot,objective;
		if(IsABike(newcar))
		{
            TogglePlayerControllable(playerid, 1);
            Silnik[vehicleid] = 1;
            GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		    SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
		}

        if(DMVCar[playerid] == newcar)
		{
		    if(TakingLesson[playerid] == 1)
		    {
                TakingLesson[playerid] = 1;
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Postepuj zgodnie z punktami kontrolnymi.");
			    CP[playerid] = 100;
			    SetPlayerRaceCheckpointEx(playerid, 0, 1213.9325,-1843.5657,13.1099, 1181.8229,-1818.4159,13.1255,4.0);
      		}
      		else
			{
				RemovePlayerFromVehicleEx(playerid);
			}
		}
		gLastCar[playerid] = newcar;
		gLastDriver[newcar] = playerid;
	}
	if(newstate == PLAYER_STATE_SPAWNED)
	{
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		if((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1)) //the highest land point in sa = 526.8
		{
			SetPlayerSpawn(playerid);
		}
		if(WantedPoints[playerid] > 0)
		{
		    PlayerInfo[playerid][pWantedDeaths] += 1;
		}
		if(PlayerInfo[playerid][pPremiumAccount] >= 1)
		{
		    SetPlayerHealthEx(playerid, 100.0);
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		gPlayerSpawned[playerid] = 1;
		SafeTime[playerid] = 60;
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		RentPrice[playerid] = 0;
		PlayerTextDrawHide(playerid, Speedo);
		PlayerTextDrawHide(playerid, RentTD);
	  	if(TakingLesson[playerid] == 1)
		{
	    	TakingLesson[playerid] = 0;
		   	new engine,lights,alarm,bonnet,boot,objective;
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,0,bonnet,boot,objective);
	    	DisablePlayerCheckpoint(playerid);
	    	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    	PlayerTextDrawHide(playerid, InfosTD);
			CP[playerid] = 0;
			if(DMVCar[playerid] != 0){ 
			DestroyVehicle(DMVCar[playerid]);
			Silnik[DMVCar[playerid]] = 0;
			Swiatla[DMVCar[playerid]] = 0;
			Maska[DMVCar[playerid]] = 0;
			Bagaznik[DMVCar[playerid]] = 0;
			DMVCar[playerid] = 0;
			}
		}
		if(JobWorking[playerid] == 1 && PlayerInfo[playerid][pJob] == 11) {
			JobWorking[playerid] = 0;
			CP[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			SCM(playerid, COLOR_LIGHTBLUE, "Wysiadles z samochodu, praca niezaliczona!!");
            PlayerTime2[playerid] = 3;
		}
		if(JobWorking[playerid] == 1 && PlayerInfo[playerid][pJob] != 2 && PlayerInfo[playerid][pJob] != 10 && PlayerInfo[playerid][pJob] != 11) {
		    SCM(playerid, COLOR_GOLD, "Misja nie powiodla sie, wysiadles z pojazdu.");
			JobWorking[playerid] = 0;
			PlayerTextDrawHide(playerid, JobTD);
			if(JobVehicle[playerid] != 0) { DestroyVehicle(JobVehicle[playerid]); JobVehicle[playerid] = 0; }
			if(Trailer[playerid] != 0) { DestroyVehicle(Trailer[playerid]); Trailer[playerid] = 0; TruckerRoute[playerid] = 15; }
			Delete3DTextLabel(Trucker[Trailer[playerid]][Truck3D]);
			Update3DTextLabelText(Trucker[Trailer[playerid]][Truck3D], COLOR_WHITE, " ");
			DestroyDynamic3DTextLabel(Trucker[Trailer[playerid]][Truck3D]);
			PlayerTextDrawHide(playerid, InfosTD);
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			NaczepaStart[playerid] = 0;
			JobVehicle[playerid] = 0;
			HideFarmerObjects(playerid);
			PlayerTime2[playerid] = 3;
			HideMowerObjects(playerid);
		    for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
		    {
		        if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
		    }
		}
	    if(TransportDuty[playerid] > 0)
		{
		    if(TransportDuty[playerid] == 1)
		    {
		        TaxiDrivers -= 1;
		    }
		    TransportDuty[playerid] = 0;
			format(string, sizeof(string), "* Fare zostalo wylaczone, zarobiles $%s.", FormatNumber(TransportMoney[playerid]));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, TransportMoney[playerid]);
			ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
	    	foreach(Player, i)
			{
				if(TaxiDriver[i] == playerid)
				{
					TaxiDriver[i] = -1;
					TaxiDist[i] = 0.0; TransportMoney[i] = 0;
					for(new j = 0; j <= 2; j++) PlayerTextDrawHide(i, FareTD[j]);
				}
			}
			TaxiDist[playerid] = 0.0;
			for(new j = 0; j <= 2; j++) PlayerTextDrawHide(playerid, FareTD[j]);
		}
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
				if(TaxiDist[playerid] > 1.0) {
					PlayerInfo[TransportDriver[playerid]][pCommands] ++;
					new rquery[256];
					format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[TransportDriver[playerid]][pCommands], PlayerInfo[TransportDriver[playerid]][pSQLID]);
					mysql_query(SQL, rquery);
				}
				TransportCost[playerid] = 0;
				TransportDriver[playerid] = 999;
				TaxiDist[playerid] = 0.0;
				TaxiDriver[playerid] = -1;
				TransportMoney[playerid] = 0;
				Update(playerid, pCashx);
				for(new j = 0; j <= 2; j++) PlayerTextDrawHide(playerid, FareTD[j]);
			}
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if(newstate == PLAYER_STATE_PASSENGER) // TAXI & BUSSES
	{
	    new name[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name, sizeof(name));
	    new newcar = GetPlayerVehicleID(playerid);
		switch(CarRadio[newcar])
		{
            case 0: StopAudioStreamForPlayer(playerid), PlayerRadio[playerid] = 0;
			case 1: PlayAudioStreamForPlayer(playerid, "http://live.radiotaraf.com:8181"), PlayerRadio[playerid] = 1;
			case 2: PlayAudioStreamForPlayer(playerid, "http://radiofunky.ro/live.pls"), PlayerRadio[playerid] = 2;
			case 3: PlayAudioStreamForPlayer(playerid, "http://live.radiogangsta.ro:8800"), PlayerRadio[playerid] = 3;
			case 4: PlayAudioStreamForPlayer(playerid, "http://dance.radiogangsta.ro:8800"), PlayerRadio[playerid] = 4;
			case 5: PlayAudioStreamForPlayer(playerid, "http://rbandit.dyndns.tv:8000"), PlayerRadio[playerid] = 5;
			case 6: PlayAudioStreamForPlayer(playerid, "http://live.radiohot.ro:8000"), PlayerRadio[playerid] = 6;
			case 7: PlayAudioStreamForPlayer(playerid, "http://www.radiotequila.ro/hiphop.m3u"), PlayerRadio[playerid] = 7;
			case 8: PlayAudioStreamForPlayer(playerid, "http://80.86.106.136/listen.pls"), PlayerRadio[playerid] = 8;
			case 9: PlayAudioStreamForPlayer(playerid, "http://stream.radiozu.ro:8020"), PlayerRadio[playerid] = 9;
			case 10: PlayAudioStreamForPlayer(playerid, "http://nextgen.go.ro:8012"), PlayerRadio[playerid] = 10;
			case 11: PlayAudioStreamForPlayer(playerid, "http://stream.profm.ro:8012/profm.mp3"), PlayerRadio[playerid] = 11;
			case 12: PlayAudioStreamForPlayer(playerid, "http://live.radioclubmix.ro:9999"), PlayerRadio[playerid] = 12;
			case 13: PlayAudioStreamForPlayer(playerid, "http://livemp3.radiopopular.ro:7777"), PlayerRadio[playerid] = 13;
		}
		foreach(Player,i)
	    {
            if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
            {
                if(GetPlayerCash(playerid) < TransportValue[i])
                {
                    format(string, sizeof(string), "* Aby wejsc, potrzebujesz $%d.", TransportValue[i]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					RemovePlayerFromVehicleEx(playerid);
                }
                else
                {
                    if(TransportDuty[i] == 1)
                    {
						if(IsInBlacklist(playerid, 11))
						return SCM(playerid, -1, "Jestes na czarnej liscie tej frakcji, nie mozesz korzystac z uslug tej frakcji!"), RemovePlayerFromVehicleEx(playerid);
                        /*format(string, sizeof(string), "* Ai platit $%d Taksówkarzui.", TransportValue[i]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);*/
						format(string, sizeof(string), "* Pasazer %s wsiadl do taksówki.", name);
						SendClientMessage(i, COLOR_LIGHTBLUE, string);
                    	TransportCost[playerid] = TransportValue[i];
                    	TransportCost[i] = TransportValue[i];
                    	TransportDriver[playerid] = i;
                    	TransportMoney[playerid] = 0;
                    	TaxiDist[playerid] = 0.0;
                    	TransportMoney[playerid] = 0;
                    	TaxiDriver[playerid] = i;
						GivePlayerCash(playerid, - TransportValue[i]);
						TransportMoney[i] += TransportValue[i];
						TransportMoney[playerid] += TransportValue[i];
						Update(playerid, pCashx);
						ShowFareForTaxi(playerid);
                    }
                    else if(TransportDuty[i] == 2)
                    {
                        format(string, sizeof(string), "* Zaplaciles $%d kierowcy autobusu.", TransportValue[i]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    }
                }
			}
	    }
        new gun,tmp;
        GetPlayerWeaponData(playerid,5,gun,tmp);
        #pragma unused tmp
        if(gun)SetPlayerArmedWeapon(playerid,gun);
        else SetPlayerArmedWeapon(playerid,0);
	    return 1;
	}
    /*if(oldstate == PLAYER_STATE_DRIVER)
    {
		if((GetTickCount()-PlayerEnterTime[playerid]) < 220)
        {
			new anticar[100];
			format(anticar,sizeof(anticar), "AdmCmd: %s(%d) use vehicle teleporter(Car Circle, Floating Cars,etc).",GetName(playerid),playerid);
			SendAdminMessage(COLOR_LOGS,anticar,1);
			Kick(playerid);
		}
		return 1;
    }*/
	return 1;
}

public CarCheck()
{
	foreach(Player,j)
	{
	    if(IsPlayerConnected(j))
	    {
		    new Float:health;
		    GetPlayerHealthEx(j, health);
			SetPlayerHealthEx(j, health - 0.5);
		}
	}
	PlaceADDS();
	return 1;
}

public CarTow(carid)
{
	foreach(Player,i)
	{
		if(IsPlayerInVehicle(i, carid))
		{
			return 0;
		}
	}
	return 1;
}

public SendJobMessage(job, color, string[])
{
	foreach(Player, i)
	{
	    if(PlayerInfo[i][pJob] == job)
	    {
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
    if(!success)
    {
        new pip[16],string[100],name[25];
        foreach(Player, i)
        {
            GetPlayerIp(i, pip, sizeof(pip));
            if(!strcmp(ip, pip, true))
           	{
				GetPlayerName(i, name, sizeof(name));
		        format(string,sizeof(string),"AdmCmd: %s(%d) z IP(%s) wprowadzil nie prawidlowe haslo RCON.",name,i,ip);
                SendAdminMessage(COLOR_LOGS,string,4);
                Kick(i);
                return 1;
            }
        }
    }
    else if(success)
    {
        new pip[16],string[100],name[25];
        foreach(Player, i)
        {
            GetPlayerIp(i, pip, sizeof(pip));
            if(!strcmp(ip, pip, true))
           	{
				GetPlayerName(i, name, sizeof(name));
		        format(string,sizeof(string),"AdmCmd: %s(%d) cu IP(%s) zostal zalogowany z RCON.",name,i,ip);
                SendAdminMessage(COLOR_LOGS,string,5);
                return 1;
            }
        }
	}
    return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	if(InDealer[playerid] >= 1) {
		DestroyVehicle(DealerCar[playerid]);
		InDealer[playerid] = 0, DealerCarType[playerid] = -1, DealerCar[playerid] = 0;
		KillTimer(DSTimer[playerid]);
		SendClientMessage(playerid, COLOR_YELLOW, "Test zakonczony, poniewa¿ wyszed³e z pojazdu. ");
		SetPlayerPosEx(playerid, 327.9443, -1512.6609, 36.1366);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		TestingModel[playerid] = 0;
		Silnik[DealerCar[playerid]] = 0;
		Swiatla[DealerCar[playerid]] = 0;
		Maska[DealerCar[playerid]] = 0;
		Bagaznik[DealerCar[playerid]] = 0;
	}
		
    StopAudioStreamForPlayer(playerid);
	Speedlimit[playerid] = 0;
    new currentveh;
	currentveh = GetPlayerVehicleID(playerid);
	new engine,lights,alarm,doors,bonnet,boot,objective;
    if(TakingLesson[playerid] == 1)
    {
        TakingLesson[playerid] = 0;
	    DisablePlayerRaceCheckpoint(playerid);
        SetVehicleToRespawn(currentveh);
		SendClientMessage(playerid, COLOR_LIGHTRED, "Test nie powiód³ sie poniewa¿ wysiad³e z pojazdu! ");
		if(DMVCar[playerid] != 0) DestroyVehicle(DMVCar[playerid]), DMVCar[playerid] = 0;
		Silnik[currentveh] = 0;
		Swiatla[currentveh] = 0;
		Maska[currentveh] = 0;
		Bagaznik[currentveh] = 0;
		GetVehicleParamsEx(currentveh,engine,lights,alarm,doors,bonnet,boot,objective);
    	SetVehicleParamsEx(currentveh,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
    	CP[playerid] = 0;
    	PlayerTextDrawHide(playerid, InfosTD);
		CP[playerid] = 0;
    }
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	if(IsPlayerLogged[playerid] == 1)
	{
		if(PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] == 0 && PlayerInfo[playerid][pJailed] == 0)
		{
			new query[184];
            format(query, sizeof(query), "UPDATE users SET `Model`='%d' WHERE `ID`='%d'",GetPlayerSkin(playerid),PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL,query);
		}
    }
    return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	if(IsPlayerNPC(playerid)) return 1;
	return 1;
}

public Logink(playerid)
{
	KickEx(playerid);
	return 1;
}

public SetupPlayerForClassSelection(playerid)
{
	switch (gTeam[playerid])
	{
		case TEAM_BLUE:
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPosEx(playerid,323.4,305.6,999.1);
			SetPlayerFacingAngle(playerid, 90.0);
		    SetPlayerCameraPos(playerid, 1460.0, -1324.0, 287.2);
		    SetPlayerCameraLookAt(playerid,1374.5, -1291.1, 239.0);
		}
		case TEAM_ADMIN:
		{
		    SetPlayerInterior(playerid,0);
			SetPlayerPosEx(playerid,-2654.4,1424.2,912.4);
			SetPlayerFacingAngle(playerid, 90.0);
		    SetPlayerCameraPos(playerid, 1460.0, -1324.0, 287.2);
		    SetPlayerCameraLookAt(playerid,1374.5, -1291.1, 239.0);
		}
		default:
		{
            SetPlayerPosEx(playerid,1642.4734, -2239.2910, 13.5285);
		    SetPlayerInterior(playerid,0);
		    SetPlayerFacingAngle(playerid, 90.0);
		    SetPlayerCameraPos(playerid, 1460.0, -1324.0, 287.2);
		    SetPlayerCameraLookAt(playerid,1374.5, -1291.1, 239.0);
		}
	}
}

public SetPlayerTeamFromClass(playerid,classid)
{
 	if (classid >= 1 && classid <= 15)
	{
		gTeam[playerid] = 15; //admin
		PlayerInfo[playerid][pTeam] = 15;
	}
	else
	{
	    gTeam[playerid] = 3;
	    PlayerInfo[playerid][pTeam] = 3;
	}
}

// SetPlayerCriminal(playerid,255, "Stealing A Police Vehicle");
public SetPlayerCriminal(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
	    PlayerInfo[playerid][pCrimes] += 1;
	    Update(playerid,pCrimesx);
	    new points = WantedPoints[playerid];
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new wantedmes[128];
		new ini;
		ini = PlayerInfo[playerid][pWantedLevel];
		GetPlayerName(playerid, turned, sizeof(turned));
		if(declare == 255)
		{
			format(turner, sizeof(turner), "Nieznany");
			strmid(PlayerInfo[playerid][pVictim], turner, 0, strlen(turner), 255);
			Update(playerid,pVictimx);
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerInfo[playerid][pVictim], turner, 0, strlen(turner), 255);
				Update(playerid,pVictimx);
			}
		}
		new string[184];
		new y,m,d,h,mi;
		getdate(y,m,d);
		gettime(h,mi);
		if(strcmp(PlayerInfo[playerid][pCrime1], "Bez przestepstw", true) == 0)
		{
			format(string,sizeof(string),"- %s on %02d.%02d.%02d %02d:%02d, zglaszajacy: %s.",reason,y,m,d,h,mi,turner);
			strmid(PlayerInfo[playerid][pCrime1], string, 0, strlen(string), 255);
			Update(playerid,pCrime1x);
		}
		else if(strcmp(PlayerInfo[playerid][pCrime2], "Bez przestepstw", true) == 0)
		{
			format(string,sizeof(string),"- %s on %02d.%02d.%02d %02d:%02d, zglaszajacy: %s.",reason,y,m,d,h,mi,turner);
			strmid(PlayerInfo[playerid][pCrime2], string, 0, strlen(string), 255);
			Update(playerid,pCrime2x);
		}
		else if(strcmp(PlayerInfo[playerid][pCrime3], "Bez przestepstw", true) == 0)
		{
			format(string,sizeof(string),"- %s on %02d.%02d.%02d %02d:%02d, zglaszajacy: %s.",reason,y,m,d,h,mi,turner);
		    strmid(PlayerInfo[playerid][pCrime3], string, 0, strlen(string), 255);
			Update(playerid,pCrime3x);
		}
		else if(strcmp(PlayerInfo[playerid][pCrime1],  "Bez przestepstw", true) == 0 && strcmp(PlayerInfo[playerid][pCrime2], "Bez przestepstw", true) == 0 && strcmp(PlayerInfo[playerid][pCrime3], "Bez przestepstw", true) == 0) { }
		else
		{
			format(string,sizeof(string),"- %s on %02d.%02d.%02d %02d:%02d, zglaszajacy: %s.",reason,y,m,d,h,mi,turner);
		    strmid(PlayerInfo[playerid][pCrime1], string, 0, strlen(string), 255);
			Update(playerid,pCrime1x);
			format(string, sizeof(string), "Bez przestepstw");
			strmid(PlayerInfo[playerid][pCrime2], string, 0, strlen(string), 255);
			strmid(PlayerInfo[playerid][pCrime3], string, 0, strlen(string), 255);
			Update(playerid,pCrime2x);
			Update(playerid,pCrime3x);
		}
		format(turnmes, sizeof(turnmes), "Popelniles nowe przestepstwo (%s). Zglaszajacy: %s.",reason,turner);
		SendClientMessage(playerid, COLOR_LIGHTRED, turnmes);
		if(points > 0) {
			new yesno;
			yesno = 1;
			if(points >= 1 && points <= 3) {
				if(PlayerInfo[playerid][pWantedLevel] != 1) PlayerInfo[playerid][pWantedLevel] = 1;
			}
			else if(points >= 4 && points <= 5) {
				if(PlayerInfo[playerid][pWantedLevel] != 2) PlayerInfo[playerid][pWantedLevel] = 2;
			}
			else if(points >= 6 && points <= 7) {
				if(PlayerInfo[playerid][pWantedLevel] != 3) PlayerInfo[playerid][pWantedLevel] = 3;
			}
			else if(points >= 8 && points <= 9) {
				if(PlayerInfo[playerid][pWantedLevel] != 4) PlayerInfo[playerid][pWantedLevel] = 4;
			}
			else if(points >= 10 && points <= 11) {
				if(PlayerInfo[playerid][pWantedLevel] != 5) PlayerInfo[playerid][pWantedLevel] = 5;
			}
			else if(points >= 12 && points <= 13) {
				if(PlayerInfo[playerid][pWantedLevel] != 6) PlayerInfo[playerid][pWantedLevel] = 6;
			}
			if(PlayerInfo[playerid][pWantedLevel] >= 1) {
				if(gTeam[playerid] == 3) gTeam[playerid] = 3;
			}
			WantedTime[playerid] = 0;
			Update(playerid,pWantedLevelx);
			
			if(yesno) {
				format(wantedmes, sizeof(wantedmes), "Wanted level: %d.", PlayerInfo[playerid][pWantedLevel]);
				SendClientMessage(playerid, COLOR_YELLOW, wantedmes);
				ini = PlayerInfo[playerid][pWantedLevel]-ini;
				foreach(Player,i) {
					if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {
						if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3) {
							format(cbjstore, sizeof(turnmes), "HQ: Zglaszajacy: %s, Przestepstwo: %s, W:+%d(%d), Podejrzany: %s(%d).",turner,reason,ini,PlayerInfo[playerid][pWantedLevel],turned,playerid);
							SendClientMessage(i, COLOR_DBLUE, cbjstore);
						}
					}
				}
			}
		}
	}
	return 1;
}

public SetPlayerFree(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
		ClearCrime(playerid);
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		if (declare == 255)
		{
			format(turner, sizeof(turner), "911");
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
			}
		}
		GetPlayerName(playerid, turned, sizeof(turned));
	}
	return 1;
}

public OnPlayerUpdate(playerid) {

	// handle fps counters.
	new drunknew;
	drunknew = GetPlayerDrunkLevel(playerid);
	if (drunknew < 100) { // go back up, keep cycling.
		SetPlayerDrunkLevel(playerid, 2000);
	} else {

		if (pDrunkLevelLast[playerid] != drunknew) {

			new wfps = pDrunkLevelLast[playerid] - drunknew;

			if ((wfps > 0) && (wfps < 200))
				FPS2[playerid] = wfps;

			pDrunkLevelLast[playerid] = drunknew;
		}

	}
	  if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING  (PlayerInfo[playerid][pAdmin] = 0  PlayerInfo[playerid][pHelper] = 0); {
		KickPlayer(playerid, "System", "Invisible (%d)", GetPlayerState(playerid);
	  }
    return 1; 
}

function SetVariable(playerid, id) {
	objstats[playerid][id] = 1;
	return 1;
}

function TaxiUpdate(playerid) {
	foreach(Player,i)
	{
	    if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1)
	    {
	        if(TransportDuty[i] == 1) {
	            new spe = Carspeed(i);
	        	TaxiDist[i] += (spe*0.27)/100;
	        }
			if(TaxiDriver[i] != -1)
			{
			    new gString[256];
			    new spe = Carspeed(i);
				new money = TransportValue[TaxiDriver[i]];
				TaxiDist[i] += (spe*0.27)/100;
				new Float: test = (spe*0.27)/100;
				new nmoney = floatround(TaxiDist[i])/10*TransportValue[TaxiDriver[i]];
                if(test > 0.1) {
					TransportMoney[i] += TransportValue[TaxiDriver[i]];
					GivePlayerCash(i, -TransportValue[TaxiDriver[i]]);
					TransportMoney[TaxiDriver[i]] += TransportValue[TaxiDriver[i]];
				}
				if(nmoney > GetPlayerCash(i))
				{
					format(gString, sizeof(gString), "~w~Koszt przejazdu~n~~r~$%s",FormatNumber(money));
					GameTextForPlayer(i, gString, 5000, 1);
					format(gString, sizeof(gString), "~w~Pasazer wysiadl z pojazdu~n~",FormatNumber(money));
					GameTextForPlayer(TaxiDriver[i], gString, 5000, 1);
					GivePlayerCash(i, -money);
					TransportMoney[TaxiDriver[i]] += TransportValue[TaxiDriver[i]];
					TaxiDriver[i] = -1;
					TaxiDist[i] = 0.0; TransportMoney[i] = 0;
					RemovePlayerFromVehicle(i);
					for(new j = 0; j <= 2; j++) PlayerTextDrawHide(i, FareTD[j]);
				}
			}
			if(TransportDuty[i] == 1 || TaxiDriver[i] != -1) ShowFareForTaxi(i);
		}
	}
	return 1;
}


function PlayersOnline() {
	new x;
	foreach(Player, i) {
		if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) x++;
	}
	return x;
}


function FreeHouses() {
	new x;
	for(new i = 1; i < housess; i++) {
		if(strcmp(HouseInfo[i][hOwner], "Panstwo", true) == 0 && HouseInfo[i][hOwned] == 1) x++;
	}
	return x;
}

function GetHouseID() {
	for(new i = 1; i < housess; i++) {
		if(strcmp(HouseInfo[i][hOwner], "Panstwo", true) == 0 && HouseInfo[i][hOwned] == 1) return i;
	}
	return 0;
}

function FreeBusinesses() {
	new x;
	for(new i = 1; i < bussines; i++) {
		if(strcmp(BizzInfo[i][bOwner], "Panstwo", true) == 0 && BizzInfo[i][bOwned] == 1) x++;
	}
	return x;
}

function GetBizzID() {
	for(new i = 1; i < bussines; i++) {
		if(strcmp(BizzInfo[i][bOwner], "Panstwo", true) == 0 && BizzInfo[i][bOwned] == 1) return i;
	}
	return 0;
}


/*function GameTextForPaint(string[], paint) {
	foreach(Player, i) {
		if(IsPlayerConnected(i) && PaintType[i] == paint+1) {
			GameTextForPlayer(i, string, 1500, 4);	
		}
	}
	return 1;
}*/

function nearPNS(playerid) {
	new const Float:paynspray[][] = {
	{1025.05, -1024.23, 32.1}, // LS Temple
	{487.68, -1740.87, 11.13}, // LS Santa Maria
			{-1420.73, 2583.37, 55.56}, // El Quebrados
			{-1904.39, 284.97, 40.75}, // Wang Cars
			{-2425.91, 1022.33, 50.10}, // Juniper Hill
			{1975.60, 2162.16, 10.77}, // LV Redsands
			{2065.38, -1831.51, 13.25}, // Idlewood
			{-99.55, 1118.36, 19.44}, // Fort Carson
			{721.07, -455.94, 16.04}, // Dillimore
			{2393.74, 1493.01, 10.52} // LV Unused (Pyramid)
	};
	for(new i=0; i<sizeof(paynspray); i++) {
		if(IsPlayerInRangeOfPoint(playerid, 10, paynspray[i][0], paynspray[i][1], paynspray[i][2])) return 1;
	}
	return 0;
}
function nearPNS2(playerid) {
	new const Float:paynspray[][] = {
	{1025.05, -1024.23, 32.1}, // LS Temple
	{487.68, -1740.87, 11.13}, // LS Santa Maria
			{-1420.73, 2583.37, 55.56}, // El Quebrados
			{-1904.39, 284.97, 40.75}, // Wang Cars
			{-2425.91, 1022.33, 50.10}, // Juniper Hill
			{1975.60, 2162.16, 10.77}, // LV Redsands
			{2065.38, -1831.51, 13.25}, // Idlewood
			{-99.55, 1118.36, 19.44}, // Fort Carson
			{721.07, -455.94, 16.04}, // Dillimore
			{2393.74, 1493.01, 10.52} // LV Unused (Pyramid)
	};
	for(new i=0; i<sizeof(paynspray); i++) {
		if(IsPlayerInRangeOfPoint(playerid, 50, paynspray[i][0], paynspray[i][1], paynspray[i][2])) return 1;
	}
	return 0;
}

public SetPlayerUnjail()
{
	// Licytacje
	new year, month, day, string[256];
	getdate(year, month, day);
	new days[180];
	format(days, sizeof(days), GetWeekDay(day, month, year));	
	new hour,minute,second;
	gettime(hour,minute,second);	
	if(strcmp(days,"Sobota",true) == 0 || strcmp(days,"Niedziela",true) == 0) {
		if(hour == 20 && Licitatie == 0 || hour == 21 && Licitatie == 0) {
			if(FreeBusinesses() > 0) {
				new id = GetBizzID();
				Licitatie = 1;
				TipLicitatie = 2;
				TimpLicitatie = 5*60;
				TotalBani = 0;
				foreach(Player, i) {
					if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) TotalMoney[i] = 0;
				}
				IDLicitatie = id;
				LastPlayer = -1;

				switch(TipLicitatie) {
					case 1: format(string, sizeof(string), "[BID] Mozesz teraz ubiegac sie o dom z identyfikatorem  %d", id);
					case 2: format(string, sizeof(string), "[BID] Mozesz teraz licytowac biznes o identyfikatorze %d", id);
				}
				WiadomoscLicytacja(0x483d8bFF, string);
				format(string, sizeof(string), "[BID] Mozesz uzyc /togbid aby pokazywac/ukrywac stawki innych graczy.");
				WiadomoscLicytacja(0x8470ffFF, string);
				format(string, sizeof(string), "[BID] Mozesz uzyc opcji /bid, by licytowac. Gdy licytujesz, zostaniesz powstrzymany przez swoje konto po zakonczeniu aukcji.");
				WiadomoscLicytacja(0x8470ffFF, string);
				format(string, sizeof(string), "[BID] Aukcja jest dostepna przez 5 minut.");
				WiadomoscLicytacja(0x8470ffFF, string);		
			}
			else if(FreeHouses() > 0) {
				new id = GetHouseID();
				Licitatie = 1;
				TipLicitatie = 1;
				TimpLicitatie = 5*60;
				TotalBani = 0;
				foreach(Player, i) {
					if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) TotalMoney[i] = 0;
				}
				IDLicitatie = id;
				LastPlayer = -1;
				
				switch(TipLicitatie) {
					case 1: format(string, sizeof(string), "[BID] Teraz mozesz ubiegac sie o dom (house) o ID 155", id, id);
					case 2: format(string, sizeof(string), "[BID] Teraz mozesz licytowac biznes (bizz) o ID 155", id, id);
				}
				WiadomoscLicytacja(0x483d8bFF, string);
				format(string, sizeof(string), "[BID] Mozesz uzyc /togbid aby pokazywac/ukrywac stawki innych graczy.");
				WiadomoscLicytacja(0x8470ffFF, string);
				format(string, sizeof(string), "[BID] Mozesz uzyc opcji /bid, by licytowac. Gdy licytujesz, zostaniesz powstrzymany przez swoje konto po zakonczeniu aukcji.");
				WiadomoscLicytacja(0x8470ffFF, string);
				format(string, sizeof(string), "[BID] Aukcja jest dostepna przez 5 minut.");
				WiadomoscLicytacja(0x8470ffFF, string);	
			}			
			else if(minute == 0 && second == 0) SendAdminMessage(COLOR_LOGS, "SYSTEM: Brak nieruchomosci, które mozesz licytowac", 1);
		}
	}
	
	if(Licitatie == 1) {
		new query[256];
		TimpLicitatie --;
		if(TimpLicitatie == 0) {
			Licitatie = 0;
			if(LastPlayer == -1) SendClientMessageToAll(COLOR_YELLOW, "Aukcja zostala anulowana, poniewaz zadna kwota nie zostala zalicytowana.");
			else {
				if(!IsPlayerConnected(LastPlayer) && TotalMoney[LastPlayer] == 0) SendClientMessageToAll(COLOR_YELLOW, "Aukcja zostala anulowana, poniewaz ostatni uczestnik licytacji nie jest juz online.");
				else {
					WiadomoscLicytacja(0x483d8bFF, "[TERMINOWANY PRZETARG]");
					GivePlayerCash(LastPlayer, -TotalBani);
					switch(TipLicitatie) {
						case 1: {
							format(string, sizeof(string), "> %s zalicytuj najwyzsza kwote (%s) i wygraj dom %d", GetName(LastPlayer), FormatNumber(TotalMoney[LastPlayer]), IDLicitatie);
							WiadomoscLicytacja(0x483d8bFF, string);						
							format(string, sizeof(string), "Otrzymales  %d dom z powodzeniem. Gratulacje!", IDLicitatie);
							SendClientMessage(LastPlayer, COLOR_YELLOW, string);
							format(query, sizeof(query), "UPDATE `users` SET `House`='999' WHERE `House`='%d'", IDLicitatie);
							mysql_query(SQL, query);
							foreach(Player, i) {
								if(IsPlayerConnected(i) && PlayerInfo[i][pHouse] == IDLicitatie) {
									SendClientMessage(i, COLOR_YELLOW, "Zostales bez domu, poniewaz zostal wystawiony na licytacje. Powód: Prawdopodobnie byles nieaktywny.");
									PlayerInfo[i][pHouse] = 999;
									Update(i,pHousex);
								}
							}
							PlayerInfo[LastPlayer][pHouse] = IDLicitatie;
							PlayerInfo[LastPlayer][pRented] = -1;
							HouseInfo[IDLicitatie][hOwned] = 1;
							HouseInfo[IDLicitatie][hValue] = 0;
							strmid(HouseInfo[IDLicitatie][hOwner], GetName(LastPlayer), 0, strlen(GetName(LastPlayer)), 255);
							Update(LastPlayer,pHousex);
							format(query,sizeof(query),"UPDATE `houses` SET `Owned`='1',`Owner`='%s',`Value`='0' WHERE `ID`='%d'",GetName(LastPlayer),IDLicitatie);
							mysql_query(SQL,query);
							UpdateLabel(1,IDLicitatie);
						}
						case 2: {	
							format(string, sizeof(string), "> %s licytuj najwyzsza kwote (%s) i wygraj firme (bizz) %d", GetName(LastPlayer), FormatNumber(TotalMoney[LastPlayer]), IDLicitatie);
							WiadomoscLicytacja(0x483d8bFF, string);						
						
							format(string, sizeof(string), "Pomyslnie otrzymales %d firmy. Gratulacje!", IDLicitatie);
							SendClientMessage(LastPlayer, COLOR_YELLOW, string);
							format(query, sizeof(query), "UPDATE `users` SET `Bizz`='255' WHERE `Bizz`='%d'", IDLicitatie);
							mysql_query(SQL, query);
							foreach(Player, i) {
								if(IsPlayerConnected(i) && PlayerInfo[i][pBizz] == IDLicitatie) {
									SendClientMessage(i, COLOR_YELLOW, "Nie masz miejsca pracy, poniewaz  zostalo one sprzedane na aukcji. Powód: nieaktywnosc. ");
									PlayerInfo[i][pBizz] = 255;
									Update(i,pBizzx);
								}
							}
							PlayerInfo[LastPlayer][pBizz] = IDLicitatie;
							BizzInfo[IDLicitatie][bOwned] = 1;
							BizzInfo[IDLicitatie][bBuyPrice] = 0;
							strmid(BizzInfo[IDLicitatie][bOwner], GetName(LastPlayer), 0, strlen(GetName(LastPlayer)), 255);
							format(query,sizeof(query),"UPDATE users SET `Money`='%d',`Bizz`='%d' WHERE `ID`='%d'",GetPlayerCash(LastPlayer),PlayerInfo[LastPlayer][pBizz],PlayerInfo[LastPlayer][pSQLID]);
							mysql_query(SQL,query);
							format(query,sizeof(query),"UPDATE `bizz` SET `Owned`='1',`Owner`='%s',`BuyPrice`='0' WHERE `ID`='%d'",BizzInfo[IDLicitatie][bOwner],IDLicitatie);
							mysql_query(SQL,query);
							UpdateLabel(2,IDLicitatie);
						}
					}
					WiadomoscLicytacja(0x483d8bFF, "---");
				}
			}	
		}
	}
	
    //new hours, minutes,seconds,swinner[128];
   // getdate(year, month, day), gettime(hours, minutes, seconds);
    //format(string, sizeof string, "%s%d/%s%d/%s%d~n~%s%d:%s%d:%s%d", ((day < 10) ? ("0") : ("")), day, ((month < 10) ? ("0") : ("")), month, (year < 10) ? ("0") : (""), year, (hours < 10) ? ("0") : (""), hours, (minutes < 10) ? ("0") : (""), minutes, (seconds < 10) ? ("0") : (""), seconds);
   // TextDrawSetString(Time, string);	
	new Float:x, Float:y, Float:z, salar;
	new szTD[512];
	foreach(Player,i)
	{
	    if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1)
	    {	
			if(!PlayerToPoint(100.0, i, LastPos[i][0], LastPos[i][1], LastPos[i][2]) && !IsPlayerInArea(i, -3000, -2274.5, -1776, -859.5) && Exception[i] == 0 && PlayerInfo[i][pAdmin] == 0 && SecondsAFK[i] < 10) {
				WarningsCheat[i] += 2;
				if(WarningsCheat[i] >= 5) { 				
					format(string, sizeof(string), "AdmCmd: %s (%d) jest podejrzany o uzywanie teleportu.", GetName(i), i);
					SendAdminMessage(COLOR_WARNING, string, 1);
				}				
			}
			if(WarningsCheat[i] > 0) WarningsCheat[i] --;
			if(Exception[i] > 0) Exception[i] --;	
			GetPlayerPos(i, LastPos[i][0], LastPos[i][1], LastPos[i][2]);			
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerInterior(i) == 0) {
				if(!nearPNS(i) && PlayerInfo[i][pAdmin] == 0) {
					new Float: vhp;
					GetVehicleHealth(GetPlayerVehicleID(i), vhp);
					if(vhp == 1000) {
						NightBot(i, "Vehicle repair");
						RemovePlayerFromVehicle(i);
					}					
				}
				if(!nearPNS2(i) && NearPNS[i] == 1) DisableRemoteVehicleCollisions(i, 0), NearPNS[i] = 0;
				if(nearPNS2(i)) {
					DisableRemoteVehicleCollisions(i, 1);
					NearPNS[i] = 1;
				}
			}	
			
		    if(PlayerInfo[i][pReportTime] >= 1) PlayerInfo[i][pReportTime] --;	     
			if(PlayerInfo[i][pNewbieMute] >= 1) PlayerInfo[i][pNewbieMute] --;		
			
			/*if(SpecialWeek == 1) {
				if(CheckObjects(i) < 50) {
					szTD = "";
					string = "";
					new objs;
					for(new sq = 0; sq < 50; sq++) {
						if(PlayerInfo[i][pSpecialQuest][sq] == 0) {			
							if(PlayerToPoint(45.0, i, QuestPos[sq][0], QuestPos[sq][1], QuestPos[sq][2])) {
								new Float: oPos[3];
								GetPlayerObjectRot(i, PlayerInfo[i][pObjectQuest][sq], oPos[0], oPos[1], oPos[2]);
								SetPlayerObjectRot(i, PlayerInfo[i][pObjectQuest][sq], oPos[0], oPos[1], oPos[2]+35);
								format(string, sizeof(string), "~g~Objectów %d obok~n~", sq+1), strcat(szTD, string), objs++;						
							}	
							else if(PlayerToPoint(75.0, i, QuestPos[sq][0], QuestPos[sq][1], QuestPos[sq][2])) format(string, sizeof(string), "~y~Objectów %d obok~n~", sq+1), strcat(szTD, string), objs++;
							else if(PlayerToPoint(150.0, i, QuestPos[sq][0], QuestPos[sq][1], QuestPos[sq][2])) format(string, sizeof(string), "~r~Objectów %d obok~n~", sq+1), strcat(szTD, string), objs++;
							
							PlayerTextDrawSetString(i, QuestTD, szTD);
							PlayerTextDrawShow(i, QuestTD);
							
							if(PlayerToPoint(1.0, i, QuestPos[sq][0], QuestPos[sq][1], QuestPos[sq][2])) {
								if(GetPlayerVirtualWorld(i) != 0) return SCM(i, COLOR_LGREEN, "Blad: Nie mozesz wziac tego obiektu, poniewaz  Jestes w innym wirtualnym swiecie!");
								if(QuestDeelay[i] > 0) {
									format(string, sizeof(string), "Blad: Mozesz wziac inny obiekt przez  %d sekund!", QuestDeelay[i]);
									SCM(i, COLOR_LGREEN, string);
								}				
								else {
									if(IsPlayerInAnyVehicle(i)) SCM(i, COLOR_LGREEN, "Blad: Nie mozesz odebrac tego przedmiotu, poniewaz jestes w pojezdzie!");
									else {
										DestroyPlayerObject(i, PlayerInfo[i][pObjectQuest][sq]);
										PlayerInfo[i][pSpecialQuest][sq] = 1;
										SaveQuest(i);
										format(string, sizeof(string), "Ilosc questów: %d/50", CheckObjects(i));
										SCM(i, COLOR_YELLOW, string);	
										SetTimerEx("HideTextdraw", 4000, 0, "%d", i);									
										if(CheckObjects(i) == 50) {
											format(string, sizeof(string), "["QUEST_NAME"] %s zakonczyl kolekcjonowanie wszystkich ukrytych przedmiotów i wygral nagrode specjalna!", GetName(i));
											SendClientMessageToAll(COLOR_YELLOW, string);
											SCM(i, COLOR_YELLOW, "Gratulacje, skonczyles zbierac wszystkie ukryte przedmioty!");
											SCM(i, COLOR_YELLOW, "Otrzymales: 500 punktów premium, 10 RPs, 50 000 $, 20 punktów Rob.");
											GivePlayerCash(i, 50000);
											PlayerInfo[i][pExp] += 10;
											PlayerInfo[i][pPremiumPoints] += 500;
											Update(i, pPremiumPointsx);			
											Update(i, pRP);	
											PlayerInfo[i][pRob] += 20;
											Update(i, pRobx);
											PlayerTextDrawHide(i, QuestTD);	
										}
										QuestDeelay[i] = 60;		
									}	
								}
							}
						}
					}
					if(objs == 0) PlayerTextDrawHide(i, QuestTD);
				}	
				if(QuestDeelay[i] >= 1) QuestDeelay[i] --;
			}*/
			
			/*if(PaintType[i] != 0 && PlayersOnPaint(PaintType[i]-1) >= 2) {
				new pp = PaintType[i]-1;
				if(pp < 2) {
					format(string, sizeof(string), "Paintball: %s~n~Mapa: %s~n~Stats: %d zabic, %d smierci.~n~Wynik: %d~n~Najlepszy gracz: %s (zabic: %d)~n~%d graczy na paintballu.",
					CalculeazaTimp2(PaintTime[pp]), MapName(pp), PKills[i], PDeaths[i], PKills[i]-PDeaths[i], GetName(PaintballWinner[pp]), PKills[PaintballWinner[pp]], PlayersOnPaint(pp));
				}
				else {
					new masadenume[32];
					GetWeaponNameEx(GetPlayerWeapon(i), masadenume, sizeof(masadenume));

					format(string, sizeof(string), "Paintball: %s~n~Mapa: %s~n~Stats: %d zabic, %d smierci.~n~Wynik: %d~n~Level %d, bron: %s~n~Najlepszy gracz: %s (zabic: %d)~n~%d graczy na paintballu.",
					CalculeazaTimp2(PaintTime[pp]), MapName(pp), PKills[i], PDeaths[i], PKills[i]-PDeaths[i], GetPaintLevel(i), masadenume, GetName(PaintballWinner[pp]), PKills[PaintballWinner[pp]], PlayersOnPaint(pp));
				}
				
				if(PaintTime[pp] == 0) {
					for(new m = 0; m < 5; m++) SendDeathMessageToPlayer(i, 1001, 1001, 200);
					format(swinner, 256, "* %s wygral runde z %d zabójstw.", GetName(PaintballWinner[pp]), PKills[PaintballWinner[pp]]);
					SendPaintMessage(PaintType[i], COLOR_YELLOW, swinner);
					format(string, sizeof(string), "Twoje statystyki w tej rundzie: %d zabójstwa i %d smierci.", PKills[i], PDeaths[i]);
					SCM(i, COLOR_YELLOW, string);
					PaintTime[pp] = 300;
					PKills[i] = 0, PDeaths[i] = 0;
					PKills[PaintballWinner[pp]] = 0; PDeaths[PaintballWinner[pp]] = 0;
					SpawnPlayer(PaintballWinner[pp]);
					PaintballWinner[pp] = i;
					PaintballWinnerScore[pp] = 0;
					SpawnPlayer(i);
				}
				if(PaintTime[pp] != 0) {
					PlayerTextDrawSetString(i, PaintTD, string);
					PlayerTextDrawShow(i, PaintTD);
				}	
			}
			else PlayerTextDrawHide(i, PaintTD);
			*/
			if(PlayerInfo[i][pShowHud][3] != 0) UpdateProgress(i, 0);
			if(PlayerInfo[i][pShowHud][4] != 0) UpdateProgress(i, 1);
				
			if(IsPlayerInAnyVehicle(i)) {
				new Float: hpv;
				GetVehicleHealth(GetPlayerVehicleID(i), hpv);
				if(hpv == 1000.0) {
					for(new h = 1; h < sizeof(BizzInfo); h++) {
						if(IsPlayerInRangeOfPoint(i,10.0,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ])) {
							if(h == 14 || h == 15 || h == 16) {
								GivePlayerCash(i,-BizzInfo[h][bFee]);
								BizzInfo[h][bBalance] += BizzInfo[h][bFee];
								Update(i, pCashx);		
							    format(string, sizeof(string), "~r~-$%d", BizzInfo[h][bFee]);
								GameTextForPlayer(i, string, 1000, 1);							
							}
						}
					}	
					SetVehicleHealth(GetPlayerVehicleID(i), 999);
				}
			}
			
	        if(GetFuckinPower[i] > 0) //DODAWANIE HP PO ZJEDZENIU
	        {
         	   	new Float:php;
				GetPlayerHealth(i, php);
				switch(GetFuckinPower[i])
				{
				    case 100: SetPlayerHealthEx(i, php+10);
				    case 90: SetPlayerHealthEx(i, php+9);
			     	case 80: SetPlayerHealthEx(i, php+8);
			     	case 70: SetPlayerHealthEx(i, php+7);
			     	case 60: SetPlayerHealthEx(i, php+6);
			     	case 50: SetPlayerHealthEx(i, php+5);
			     	case 40: SetPlayerHealthEx(i, php+4);
			     	case 30: SetPlayerHealthEx(i, php+3);
			     	case 20: SetPlayerHealthEx(i, php+2);
			     	case 0..10: SetPlayerHealthEx(i, php+1);
				}
				GetPlayerHealth(i, php);
				if(php >= 100) GetFuckinPower[i] = 0;
				GetFuckinPower[i]--;
	        }
			
			// Record players
			if(PlayersOnline() > MaxPlayers) {
				MaxPlayers = PlayersOnline();
				SaveInfo();
				format(string, sizeof(string), "Informacja: Nowy rekord polaczonych graczy to teraz %d.", MaxPlayers);
				SendAdminMessage(COLOR_WARNING, string, 1);
			}	
	
			new Float: pHealth[MAX_PLAYERS];
		    GetPlayerHealth(i, pHealth[i]);
		    new Float: pArmour[MAX_PLAYERS];
		    GetPlayerArmour(i, pArmour[i]);

		    if(PlayerInfo[i][pShowHud][0] != 0 && pHealth[i] >= 1)
		    {
		        new text[100];
		        format(text, sizeof(text), "%.0f", pHealth[i]);
		        PlayerTextDrawSetString(i, CleoTD[i][1], text);
		        PlayerTextDrawShow(i, CleoTD[i][1]);
				PlayerTextDrawColor(i, CleoTD[i][1], GetHudColor(PlayerInfo[i][pShowHud][0]));
		    }
		    else PlayerTextDrawHide(i, CleoTD[i][1]);

		    if(PlayerInfo[i][pShowHud][1] != 0 && pArmour[i] >= 1)
		    {
		        new text[100];
		        format(text, sizeof(text), "%.0f", pArmour[i]);
		        PlayerTextDrawSetString(i, CleoTD[i][2], text);
		        PlayerTextDrawShow(i, CleoTD[i][2]);
				PlayerTextDrawColor(i, CleoTD[i][2], GetHudColor(PlayerInfo[i][pShowHud][1]));
		    }
		    else PlayerTextDrawHide(i, CleoTD[i][2]);

		    if(PlayerInfo[i][pShowHud][2] == 1)
		    {
		        new text[100];
		        format(text, sizeof(text), "%d", FPS2[i]-1);
		        PlayerTextDrawSetString(i, CleoTD[i][0], text);
		        PlayerTextDrawShow(i, CleoTD[i][0]);
		    }
            else PlayerTextDrawHide(i, CleoTD[i][0]);
			
			if(PlayerInfo[i][pPremiumAccount] != 0) {
			    if(PlayerInfo[i][pPremiumAccount] == 1) {
			        if(7-GetDays(lastpremium[i]) < 0){
					 PlayerInfo[i][pPremiumAccount] = 0;
					 Update(i, pPremiumAccountx);
					 SCM(i, COLOR_GOLD, "* Konto Premium wygaslo! ");
					 }
			    }
				else if(PlayerInfo[i][pPremiumAccount] == 2) {
			        if(7-GetDays(lastpremium[i]) < 0){
					 PlayerInfo[i][pPremiumAccount] = 0;
					 Update(i, pPremiumAccountx);
					 SCM(i, COLOR_GOLD, "* Konto Premium wygaslo! ");
					 }
				}
			}

			if(PlayerInfo[i][pWantedLevel] >= 1)
		    {
				new str1[500];
				format(str1, sizeof(str1),"WL ZNIKNIE ZA ~N~~R~%d MINUT", 60-WantedTime[i]);
				PlayerTextDrawSetString(i, WantedTD[i], str1);
				PlayerTextDrawShow(i, WantedTD[i]);
			}
			else PlayerTextDrawHide(i, WantedTD[i]);
			
			for(new sf = 0; sf < MAX_SAFEZONES; sf++)
			{
				if(SafeZone[sf][szRange] >= 15) {
					if(PlayerToPoint(SafeZone[sf][szRange], i, SafeZone[sf][szX], SafeZone[sf][szY], SafeZone[sf][szZ]) && Showed[i] == 0)
					{
						Showed[i] = 1;
						SFID[i] = sf;
						TextDrawShowForPlayer(i, SafeTD[0]);
						return 1;
					}
					else if(!PlayerToPoint(SafeZone[SFID[i]][szRange], i, SafeZone[SFID[i]][szX], SafeZone[SFID[i]][szY], SafeZone[SFID[i]][szZ]) && Showed[i] == 1)
					{
						Showed[i] = 0;
						SFID[i] = 0;
						TextDrawHideForPlayer(i, SafeTD[0]);
						return 1;
					}
				}
			}
            if(AdTimer[i] != 0) AdTimer[i] --;
			if(IsPlayerPaused(i) == false && PlayerInfo[i][pSleeping] == 0)
			{
				PlayerInfo[i][pSeconds] ++;
			}		
			/*anim = GetPlayerAnimationIndex(i);
			GetPlayerVelocity(i, animpos[0], animpos[1], animpos[2]);
			if(PlayerInfo[i][pAdmin] < 6)
			{
				if(animpos[0] <= -0.800000 || animpos[1] <= -0.800000 || animpos[2] <= -0.800000 && anim == 1008)
				{
					format(string, sizeof(string), "AdmCmd: %s otrzymal kick od SYSTEMU, Powód: mozliwy Fly-Hack", GetNameEx(i));
					SendClientMessageToAll(COLOR_LIGHTRED, string);
					KickEx(i);
				}
			}*/
			if(IsPlayerPaused(i) == true && PlayerInfo[i][pSleeping] == 0)
			{
				if(HelperDuty[i] == 1) {
					if(SecondsAFK[i] == 60) {
						HelperDuty[i] = 0;
						SCM(HaveHelp[i], -1, "Na swoim koncie nie grales %d dni. Po 14 dniach bezczynnosci tracisz swój biznes i dom.");
						Helped[HaveHelp[i]] = 0;
						HaveHelp[i] = -1;						
						SendClientMessage(i, -1, "Nie jeste juz w sluzbie jako pomocnik, poniewaz  Jestes w AFK dluzej niz minute.");
					}
				}
	
				
				SecondsAFK[i] ++;
				if(SecondsAFK[i] == 1800) {
					//format(string, sizeof(string), "AdmCmd: %s otrzymal kicka od SYSTEMU, powód: AFK dluzej niz 30 minut", GetNameEx(i));
					//SendClientMessage(i, COLOR_LIGHTRED, string);
					KickPlayer(i, "System", "AFK (30 minut)");
				}
				if(SecondsAFK[i] == 60) {
				    if(JobWorking[i] == 1) {
					    SCM(i, COLOR_GOLD, "Praca przerwana poniewaz  byles AFK dluzej niz minute.");
						JobWorking[i] = 0;
						PlayerTextDrawHide(i, JobTD);
						if(JobVehicle[i] != 0) { DestroyVehicle(JobVehicle[i]); JobVehicle[i] = 0; }
						if(Trailer[i] != 0) { DestroyVehicle(Trailer[i]); Trailer[i] = 0; TruckerRoute[i] = 15; }
						PlayerTextDrawHide(i, InfosTD);
						DisablePlayerCheckpoint(i);
						CP[i] = 0;
						JobVehicle[i] = 0;
						DestroyVehicle(Trailer[i]);
						HideFarmerObjects(i);
						HideMowerObjects(i);
						RemovePlayerAttachedObject(i, 2);
					    for(new d=0; d<MAX_PLAYER_ATTACHED_OBJECTS; d++)
					    {
					        if(IsPlayerAttachedObjectSlotUsed(i, d)) RemovePlayerAttachedObject(i, d);
					    }
					}
				}
			}
		    else SecondsAFK[i] = 0;

	        if(JobWorking[i] == 1) {
				for(new s=0; s<12; s++) {
					if(objstats[i][s] != 0) {
					    GetPlayerObjectPos(i, mowerobj[i][s], x, y, z);
					    if(PlayerToPoint(6.0, i, x, y, z)) {
							SetPlayerObjectPos(i, mowerobj[i][s], x, y, z-4);
							MovePlayerObject(i, mowerobj[i][s], x, y, z, 1);
							PlayerTextDrawSetString(i, InfosTD, "Z powodzeniem wyczysciles to miejsce. ~n~ Aby uniknac naduzyc, mozesz  ponownie oczyscic ten obszar ~n~ za okolo 5 minut.");
							PlayerTextDrawShow(i, InfosTD);
							SetTimerEx("HideTextdraw", 5000, 0, "%d", i);
							SetTimerEx("SetVariable", 300000, 0, "dd", i, s);
							objstats[i][s] = 0;
							CurseFacute[i]++;
							PlayerInfo[i][pMowerSkill]++;
							Update(i, pMowerSkillx);
							salar = GetPlayerSkill(i)*100;
							if(PlayerInfo[i][pPremiumAccount] >= 1) salar += salar/4;
							MoneyEarned[i] += salar;
							GivePlayerCash(i, salar);
						}
					}
				}

				for(new o=0; o<70; o++) {
					if(farmobj[i][o] != 0) {
					    GetPlayerObjectPos(i, farmobj[i][o], x, y, z);
					    if(PlayerToPoint(3.0, i, x, y, z)) {
							DestroyPlayerObject(i, farmobj[i][o]);
							farmobj[i][o] = 0;
							Farming[i] ++;
							if(Farming[i] == 70) {
							    DisablePlayerCheckpoint(i);
								SetPlayerCheckpointEx(i, -83.3521, 53.2890, 3.1561, 10.0);
								CP[i] = 56;
								PlayerTextDrawSetString(i, InfosTD, "Przejdz do czerwonego punktu na mapie, aby uzyskac~n~wynagrodzenie.");
								SetTimerEx("HideTextdraw", 5000, 0, "%d", i);
								PlayerTextDrawShow(i, InfosTD);
							}
						}
					}
				}
			}
	        //
		    if(PlayerInfo[i][pShowFP] == 1) {
	            format(string, sizeof(string), "FPS: ~y~%d~w~~h~~n~Ping: ~y~%d", FPS2[i]-1, GetPlayerPing(i));
	            PlayerTextDrawSetString(i, ShowTD, string);
	            PlayerTextDrawShow(i, ShowTD);
	        }
	        if(JobWorking[i] == 1 && PlayerInfo[i][pShowJob] == 1) {
	            switch(PlayerInfo[i][pJob]) {
					case 1: {
					    format(string, sizeof(string), "Informacja nt. pracy:~n~W tej pracy masz umiejetnosci %d (%d punktów).~n~Aby levelowac skill, potrzebujesz %d punktów.~n~Zarobione pieniadze: $%s, Ukonczone wyscigi: %d~n~Pracownicy: %d",
					    GetPlayerSkill(i), PlayerInfo[i][pTruckerSkill], GetNeedPoints(i, PlayerInfo[i][pJob]), FormatNumber(MoneyEarned[i]), CurseFacute[i], GetJobWorkers(1));
						PlayerTextDrawSetString(i, JobTD, string);
						PlayerTextDrawShow(i, JobTD);
					}
					case 2: {
					    format(string, sizeof(string), "Informacja nt. pracy:~n~W tej pracy masz umiejetnosci %d (%d punktów).~n~Aby levelowac skill, potrzebujesz %d punktów.~n~Kilogramy smieci: %d/%d~n~Pracownicy: %d",
						GetPlayerSkill(i), PlayerInfo[i][pGarbageSkill], GetNeedPoints(i, PlayerInfo[i][pJob]), GunoiKG[i], GetPlayerSkill(i)*25, GetJobWorkers(2));
						PlayerTextDrawSetString(i, JobTD, string);
						PlayerTextDrawShow(i, JobTD);
					}
					case 3: {
					    format(string, sizeof(string), "Informacja nt. pracy:~n~W tej pracy masz umiejetnosci %d (%d punktów).~n~Aby levelowac skill, potrzebujesz %d punktów.~n~Drzwi: %d/70~n~Pracownicy: %d",
						GetPlayerSkill(i), PlayerInfo[i][pFarmerSkill], GetNeedPoints(i, PlayerInfo[i][pJob]), Farming[i], GetJobWorkers(3));
						PlayerTextDrawSetString(i, JobTD, string);
						PlayerTextDrawShow(i, JobTD);
					}
					case 4: {
					    format(string, sizeof(string), "Informacja nt. pracy:~n~W tej pracy masz umiejetnosci %d (%d punktów).~n~Aby levelowac skill, potrzebujesz %d punktów.~n~Zarobione pieniadze: $%s, Posprzatanych balaganów: %d~n~Pracownicy: %d",
					    GetPlayerSkill(i), PlayerInfo[i][pMowerSkill], GetNeedPoints(i, PlayerInfo[i][pJob]), FormatNumber(MoneyEarned[i]), CurseFacute[i], GetJobWorkers(4));
						PlayerTextDrawSetString(i, JobTD, string);
						PlayerTextDrawShow(i, JobTD);
					}
					case 9: {
					    format(string, sizeof(string), "Informacja nt. pracy:~n~W tej pracy masz umiejetnosci %d (%d punktów).~n~Aby levelowac skill, potrzebujesz %d punktów.~n~Zarobione pieniadze: $%s, Ukonczone jazdy: %d~n~Pracownicy: %d",
					    GetPlayerSkill(i), PlayerInfo[i][pConstructorSkill], GetNeedPoints(i, PlayerInfo[i][pJob]), FormatNumber(MoneyEarned[i]), CurseFacute[i], GetJobWorkers(9));
						PlayerTextDrawSetString(i, JobTD, string);
						PlayerTextDrawShow(i, JobTD);
					}
					case 10: {
					    format(string, sizeof(string), "Informacja nt. pracy:~n~W tej pracy masz umiejetnosci %d (%d punktów).~n~Aby levelowac skill, potrzebujesz %d punktów.~n~Zarobione pieniadze: $%s, Ryby zlowione: %d~n~Pracownicy: %d",
					    GetPlayerSkill(i), PlayerInfo[i][pFishSkill], GetNeedPoints(i, PlayerInfo[i][pJob]), FormatNumber(MoneyEarned[i]), CurseFacute[i], GetJobWorkers(10));
						PlayerTextDrawSetString(i, JobTD, string);
						PlayerTextDrawShow(i, JobTD);
					}
	            }
	        }

	        if(PlayerInfo[i][pShowFaction] == 1) {
	            if(PlayerInfo[i][pRank] == 7) {
					format(string, sizeof(string), "Jestes czescia frakcji %s~n~Jestes liderem w tej frakcji.~n~Raport: Niewymagane (%d)~n~Czlonkowie polaczeni: %d",
					GetFactionName(PlayerInfo[i][pMember]), PlayerInfo[i][pCommands], GetFactionMembersOn(i));
	            }
			   	else if(PlayerInfo[i][pCommands] < GetNeedPointsR(i)) {
					format(string, sizeof(string), "Jestes czescia frakcji %s~n~Masz range %d w tej frakcji.~n~Raport: Niezakonczony (%d/%d)~n~Polaczeni czlonkowie: %d",
				 	GetFactionName(PlayerInfo[i][pMember]), PlayerInfo[i][pRank], PlayerInfo[i][pCommands], GetNeedPointsR(i), GetFactionMembersOn(i));
				}
				else {
					format(string, sizeof(string), "Jestes czescia frakcji %s~n~Masz range %d w tej frakcji.~n~Raport: Gotowe (%d)~n~Polaczeni czlonkowie: %d",
					GetFactionName(PlayerInfo[i][pMember]), PlayerInfo[i][pRank], PlayerInfo[i][pCommands], GetFactionMembersOn(i));
				}					
	        }        
			
			if(TruckerRoute[i] != 15 && JobWorking[i] == 1) {
				if(TruckerStep[i] == 0) {
				    format(string, sizeof(string), "Dystrybucja w punkcie czerwonym ~n~(~y~%s~w~~h~ - %0.1f m)", LocationsName[TruckerRoute[i]], GetPlayerDistanceFromPoint(i, TruckerPos[TruckerRoute[i]][0], TruckerPos[TruckerRoute[i]][1], TruckerPos[TruckerRoute[i]][2]));
				    PlayerTextDrawSetString(i, InfosTD, string);
					PlayerTextDrawShow(i, InfosTD);
				}
				else if(TruckerStep[i] == 1) {
				    PlayerTextDrawSetString(i, InfosTD, "Dostarczyles towar. Wroc do czerwonej kropki, aby zdobyc pieniadze.");
					PlayerTextDrawShow(i, InfosTD);
				}
			}

		    if(SafeTime[i] > 0)
			{
				SafeTime[i]--;
			}
			if(SafeTime[i] == 1)
			{
				if(gPlayerAccount[i] == 1 && IsPlayerLogged[i] == 0)
				{
					new loginname[64];
					new loginstring[128];
					GetPlayerName(i,loginname,64);
					format(loginstring,sizeof(loginstring),"Konto zostalo zarejestrowane, teraz musisz sie zalogowac.",loginname);
					ShowPlayerDialog(i,DIALOG_LOGIN2,DIALOG_STYLE_PASSWORD,"SERVER: Loguj",loginstring,"Login","Anuluj");
				}
			}
			new newcar = GetPlayerVehicleID(i);
			new level = PlayerInfo[i][pLevel];
			if(level >= 0 && level <= 2) { PlayerInfo[i][pPayCheck] += 2; }
			else if(level >= 3 && level <= 4) { PlayerInfo[i][pPayCheck] += 3; }
			else if(level >= 5 && level <= 6) { PlayerInfo[i][pPayCheck] += 4; }
			else if(level >= 7 && level <= 8) { PlayerInfo[i][pPayCheck] += 5; }
			else if(level >= 9 && level <= 10) { PlayerInfo[i][pPayCheck] += 6; }
			else if(level >= 11 && level <= 12) { PlayerInfo[i][pPayCheck] += 7; }
			else if(level >= 13 && level <= 14) { PlayerInfo[i][pPayCheck] += 8; }
			else if(level >= 15 && level <= 16) { PlayerInfo[i][pPayCheck] += 9; }
			else if(level >= 17 && level <= 18) { PlayerInfo[i][pPayCheck] += 10; }
			else if(level >= 19 && level <= 20) { PlayerInfo[i][pPayCheck] += 11; }
			else if(level >= 21) { PlayerInfo[i][pPayCheck] += 12; }
		    if(PlayerInfo[i][pJailed] > 0)
		    {
		        PlayerInfo[i][pJailTime] --;
				if(PlayerInfo[i][pJailTime] <= 0)
				{
				    PlayerInfo[i][pJailTime] = 0;
					if(PlayerInfo[i][pJailed] == 1) PutPlayerInJail(i);
					if(PlayerInfo[i][pJailed] == 2) PutPlayerInFederalJail(i);
					PlayerInfo[i][pJailed] = 0;
                   // SetPlayerPosEx(i, 268.3155,76.2733,1001.0391);
				   	SpawnPlayer(i);
					SetPlayerVirtualWorld(i, 0);
					TogglePlayerControllable(i, 0);
					SetTimerEx("UnFreezeStation", 1500, false, "i", i);	
					SCM(i, COLOR_MONEY,  "Twoj wyrok dobiega konca! Teraz jeste wolny!");
					GameTextForPlayer(i, string, 5000, 1);
     				if(PlayerInfo[i][pChar] > 0)
			        {
						SetPlayerSkinEx(i, PlayerInfo[i][pChar]);
			        }
			        else
			        {
						SetPlayerSkinEx(i, PlayerInfo[i][pModel]);
			        }
					SetPlayerSpecialAction(i,SPECIAL_ACTION_NONE);
			    	RemovePlayerAttachedObject(i,1);
					TextDrawHideForPlayer(i, Jailtime[i]);
					if(PlayerInfo[i][pChar] > 0)
                	{
			    		SetPlayerSkinEx(i, PlayerInfo[i][pChar]);
                	}
                	else
                 	{
				     	SetPlayerSkinEx(i, PlayerInfo[i][pModel]);
                 	}
					ClearCrime(i);
					Update(i,pJailedx);
					Update(i,pJailTimex);
					TogglePlayerControllable(i, 1);
				}
			}
			if(PlayerInfo[i][pSleeping] == 1)
			{
				SetPlayerHealthEx(i, 100);
			}
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER && Speedlimit[i])
			{
				new a, b, c;
				GetPlayerKeys(i, a, b ,c);
				if(a == 8 && GetVehicleSpeed(GetPlayerVehicleID(i), 0) > Speedlimit[i])
				{
					new newspeed = GetVehicleSpeed(GetPlayerVehicleID(i), 0) - Speedlimit[i];
					ModifyVehicleSpeed(GetPlayerVehicleID(i), -newspeed);
				}
			}
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER && !IsAPlane(GetPlayerVehicleID(i))) {
				new speed = Carspeed(i);		
				if(speed > 230 && PlayerInfo[i][pAdmin] < 1 && !IsPlayerInArea(i, -3000, -2274.5, -1776, -859.5))
				{	
					if(GetVehicleModel(i) == 522 && speed < 250) return 1;
					format(string, sizeof(string), "AdmCmd: %s(%d) jechal z %.0d km/h %s.", GetName(i),i,speed,aVehicleNames[GetVehicleModel(GetPlayerVehicleID(i))-400]);
					SendAdminMessage(COLOR_WARNING, string,1);
				}
			}
			
			if(PlayerInfo[i][pMuted] > 0)
		    {
				if(PlayerInfo[i][pMuteTime] > 0)
				{
					PlayerInfo[i][pMuteTime]--;
				}
				if(PlayerInfo[i][pMuteTime] <= 0)
				{
				    PlayerInfo[i][pMuteTime] = 0;
                    SendClientMessage(i, COLOR_LIGHTRED, "* Czas mute minal.");
					PlayerInfo[i][pMuted] = 0;
				}
			}
			if(targetfind[i] >= 0 && UsedFind[i] == 1)
   			{
				new target, j;
				target = targetfind[i];
				if(InBussines[target] > 0) {
					j = InBussines[target];
					SetPlayerCheckpointEx(i,BizzInfo[j][bEntranceX], BizzInfo[j][bEntranceY], BizzInfo[j][bEntranceZ],4);
					format(szTD, sizeof(szTD), "Nazwa: ~r~~h~%s (%d)~w~~h~~n~Dystans: ~r~~h~%0.1f m (%s)", GetName(targetfind[i]), targetfind[i], GetPlayerDistanceFromPoint(i, BizzInfo[j][bEntranceX], BizzInfo[j][bEntranceY], BizzInfo[j][bEntranceZ]), GetCity(target));
					PlayerTextDrawSetString(i, FindTD, szTD);
					PlayerTextDrawShow(i, FindTD);
				}
				else if(InHouse[target] > 0) {
					j = InHouse[target];
					SetPlayerCheckpointEx(i,HouseInfo[j][hEntrancex],HouseInfo[j][hEntrancey],HouseInfo[j][hEntrancez],4);
					format(szTD, sizeof(szTD), "Nazwa: ~r~~h~%s (%d)~w~~h~~n~Dystans: ~r~~h~%0.1f m (%s)", GetName(targetfind[i]), targetfind[i], GetPlayerDistanceFromPoint(i, HouseInfo[j][hEntrancex],HouseInfo[j][hEntrancey],HouseInfo[j][hEntrancez]), GetCity(target));
					PlayerTextDrawSetString(i, FindTD, szTD);
					PlayerTextDrawShow(i, FindTD);
				}
				else if(InHQ[target] > 0) {
					j = InHQ[target];
					SetPlayerCheckpointEx(i,DynamicFactions[j][extX], DynamicFactions[j][extY], DynamicFactions[j][extZ],4);
					format(szTD, sizeof(szTD), "Nazwa: ~r~~h~%s (%d)~w~~h~~n~Dystans: ~r~~h~%0.1f m (%s)", GetName(targetfind[i]), targetfind[i], GetPlayerDistanceFromPoint(i, DynamicFactions[j][extX], DynamicFactions[j][extY], DynamicFactions[j][extZ]), GetCity(target));
					PlayerTextDrawSetString(i, FindTD, szTD);
					PlayerTextDrawShow(i, FindTD);				
				}
				else {
					GetPlayerPos(target,x,y,z);
					SetPlayerCheckpointEx(i,x,y,z,4);
					format(szTD, sizeof(szTD), "Nazwa: ~r~~h~%s (%d)~w~~h~~n~Dystans: ~r~~h~%0.1f m (%s)", GetName(targetfind[i]), targetfind[i], GetPlayerDistanceFromPoint(i, x,y,z), GetCity(target));
					PlayerTextDrawSetString(i, FindTD, szTD);
					PlayerTextDrawShow(i, FindTD);
				}
   			}
   			else PlayerTextDrawHide(i, FindTD);
   			
		    if(IsABoat(newcar))
			{
			    if(PlayerInfo[i][pBoatLic] < 1 && GetPlayerState(i) == 2 && TakingLesson[i] != 2)
				{
				    RemovePlayerFromVehicleEx(i);
				}
			}
			else if(IsAPlane(newcar))
			{
			    if(PlayerInfo[i][pFlyLic] < 1 && GetPlayerState(i) == 2)
				{
				    if(TakingLesson[i] == 1  || TakingLesson[i] == 2) { }
				    else { RemovePlayerFromVehicleEx(i); }
				}
			}
			else
			{
				if(PlayerInfo[i][pCarLic] < 1 && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == 2)
				{
					if(TakingLesson[i] == 1) { }
				}
			}//Done with car check
			if(PlayerInfo[i][pWantedLevel] == 0)
			{
			    SetPlayerWantedLevel(i,0);
			}
	        if(PlayerInfo[i][pWantedLevel] == 1)
			{
			    SetPlayerWantedLevel(i,1);
			}
			if(PlayerInfo[i][pWantedLevel] == 2)
			{
			    SetPlayerWantedLevel(i,2);
			}
			if(PlayerInfo[i][pWantedLevel] == 3)
			{
			    SetPlayerWantedLevel(i,3);
			}
			if(PlayerInfo[i][pWantedLevel] == 4)
			{
			    SetPlayerWantedLevel(i,4);
			}
			if(PlayerInfo[i][pWantedLevel] == 5)
			{
			    SetPlayerWantedLevel(i,5);
			}
			if(PlayerInfo[i][pWantedLevel] >= 6)
			{
			    SetPlayerWantedLevel(i,6);
			}
			if(PlayerTazeTime[i] >= 1)
			{
			    PlayerTazeTime[i] += 1;
			    if(PlayerTazeTime[i] == 15)
			    {
                    PlayerTazeTime[i] = 0;
			    }
			    else
			    {
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					SetPlayerFacingAngle(i, angle + 90);
			    }
			}
			if(PlayerDrunk[i] >= 5)
			{
			    PlayerDrunkTime[i] += 1;
			    if(PlayerDrunkTime[i] == 8)
			    {
			        PlayerDrunkTime[i] = 0;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 15);
					    	SetPlayerDrunkLevel (i, 5000);
						}
					}
					else
					{
					    LoopingAnim(i,"PED","WALK_DRUNK",4.0,1,1,1,1,0);
					    SetPlayerDrunkLevel (i, 5000);
					}
			    }
			}
			if(PlayerStoned[i] >= 2)
			{
			    new Float:angle;
				GetPlayerFacingAngle(i, angle);
				if(IsPlayerInAnyVehicle(i))
				{
					if(GetPlayerState(i) == 2)
					{
					    SetVehicleZAngle(GetPlayerVehicleID(i), angle + 15);
					    SetPlayerDrunkLevel (i, 5000);
					}
				}
				else
				{
					SetPlayerDrunkLevel (i, 5000);
				}
			}
			if(TaxiCallTime[i] > 0)
			{
			    if(TaxiAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(TaxiAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(TaxiAccepted[i], X, Y, Z);
						SetPlayerCheckpointEx(i, X, Y, Z, 5);
				    }
				}
			}
			if(MechanicCallTime[i] > 0)
			{

			}
			if(PlayerCuffed[i] == 1)
			{
			    if(PlayerCuffedTime[i] <= 0)
			    {
			        TogglePlayerControllable(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			        PlayerTazeTime[i] = 1;
			    }
			    else
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			}
			if(PlayerCuffed[i] == 2)
			{
			    if(PlayerCuffedTime[i] <= 0)
			    {
			        GameTextForPlayer(i, "~r~~h~Jestes teraz wolny!", 2500, 3);
			        TogglePlayerControllable(i, 1);
			        PlayerCuffed[i] = 0;
					Dragged[i] = 0;
					Dragging[i] = 0;
					KillTimer(draggedtimer[i]);	
			        PlayerCuffedTime[i] = 0;
			    }
			    else
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			}
		}
	}
	return 1;
}

public Checkvehinfo()
{
	foreach(Player,i)
	{
    	if(IsPlayerConnected(i))
       	{
       	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER && InDealer[i] == 0)
       	    {
	       		new vehicle = GetPlayerVehicleID(i);
                new spe = Carspeed(i);
                new status[256], str[500];
				new engine,lights,alarm,doors,bonnet,boot,objective;
				new carid = FindSpawnID(vehicle);
				GetVehicleParamsEx(vehicle,engine,lights,alarm,doors,bonnet,boot,objective);
				if(doors == 1) { status = "~r~~h~Zablokowane~w~"; }
				else if(doors == 0) { status = "~g~~h~Odblokowane~w~"; }
				else { status = "~g~~h~Odblokowane~w~"; }
				if(CarInfo[carid][cID] != -2 && carid != 0 && !IsAPlane(vehicle)) format(str, sizeof(str), "~n~~n~~n~Szybkosc: %d km/h~n~Paliwo: %d%s~w~~h~~n~Drzwi: %s~h~~n~Drogomierz: %.2f km~w~", spe, Gas[vehicle], "%", status, CarInfo[carid][KM]);
				else format(str, sizeof(str), "~n~~n~~n~Szybkosc: %d km/h~n~Paliwo: %d%s~w~~h~~n~Drzwi: %s", spe, Gas[vehicle], "%", status);
				if(CP[i] != 0 && PlayerInfo[i][pGPS] == 1) {
					new Float: fDistance = GetPlayerDistanceFromPoint(i, CheckpointPos[i][0], CheckpointPos[i][1], CheckpointPos[i][2]);
					new szZone[128];
					GetPlayer3DZone2(CheckpointPos[i][0], CheckpointPos[i][1], CheckpointPos[i][2], szZone, sizeof(szZone));
					format(str, sizeof(str), "%s~n~~y~%s (%0.1fm)", str, szZone, fDistance);
				}	
				PlayerTextDrawSetString(i, Speedo, str);
				PlayerTextDrawShow(i, Speedo);				
			}
    	}
	}
	return 1;
}


public CheckGas()
{
	new engine,lights,alarm,doors,bonnet,boot,objective;
	foreach(Player,i)
	{
   	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
   	    {
       		new vehicle = GetPlayerVehicleID(i), query[256];
			if(Gas[vehicle] >= 1)
			{
	   		    if(Silnik[vehicle] == 1)
	   		    {
					if(IsAPlane(vehicle) || IsABoat(vehicle) || IsABike(vehicle)) { Gas[vehicle] = 101; }
	              	Gas[vehicle]--;
	              	new carid = FindSpawnID(vehicle);
		            if(CarInfo[carid][cID] != -2 && carid != 0)
					{
                        new spe = Carspeed(i);
                        if(IsPlayerPaused(i) == false) {
							if(spe > 5 && GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicle)
							{
							    if(!IsABoat(vehicle) && !IsAPlane(vehicle))
							    {
								    CarInfo[carid][KM] += (spe*0.27)/100; // 1000
								   	format(query, sizeof(query), "UPDATE `cars` SET `KM`='%f' WHERE `ID`='%d'", CarInfo[carid][KM], carid);
									mysql_query(SQL, query);
								}
							}
						}
					}
				}
	   		}
   			else
           	{
              	NoFuel[i] = 1;
              	TogglePlayerControllable(i, 0);
	        	GameTextForPlayer(i,"~w~~n~~n~~n~~n~~n~~n~~n~~n~W tym pojezdzie nie ma juz paliwa.",1500,3);
	        	Silnik[vehicle] = 0;
    			GetVehicleParamsEx(vehicle,engine,lights,alarm,doors,bonnet,boot,objective);
      	    	SetVehicleParamsEx(vehicle,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
			}
		}
	}
	return 1;
}
public OnEnterExitModShop(playerid, enterexit, interiorid)
{
    if(enterexit == 0)
    {
		if(IsPlayerInRangeOfPoint(playerid,10.0,617.5360,-1.9900,1000.6647) || IsPlayerInRangeOfPoint(playerid,10.0,616.7844,-74.8150,997.7675))
		{
			if(GetPlayerCash(playerid) >= BizzInfo[17][bFee])
			{
				GivePlayerCash(playerid,-BizzInfo[17][bFee]);
				Update(playerid, pCashx);
				BizzInfo[17][bBalance] += BizzInfo[17][bFee];
				BizzInfo[17][bProducts]--;
				SBUpdate(17, sbBalancex);
				SBUpdate(17, sbProductsx);
				return 1;
			}
		}
		if(tuningenter[playerid] == 1)
		{
			SetVehiclePos(GetPlayerVehicleID(playerid), 1309.4851,-855.0365,39.2344);
			SetVehicleZAngle(GetPlayerVehicleID(playerid), 270.0336);
			tuningenter[playerid] = 0;
			return 1;
		}
    }
    return 1;
}

public Fillup(playerid)
{
   	if(IsPlayerConnected(playerid))
   	{
	    new VID;
	    new FillUp;
	    new string[256];
	    VID = GetPlayerVehicleID(playerid);
	    FillUp = GasMax - Gas[VID];
	    new Incarcare = GasMax - Gas[VID];
	    FillUp = FillUp * 25;
		if(Refueling[playerid] == 1)
	    {
			if(GetPlayerCash(playerid) >= FillUp)
			{
				Gas[VID] += Incarcare;
			    format(string,sizeof(string),"* Pojazd zatankowany $%s.",FormatNumber(FillUp));
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
                TogglePlayerControllable(playerid, 1);
				GivePlayerCash(playerid, - FillUp);
				BizzInfo[GetGasStationID(playerid)][bBalance] += FillUp;
				Refueling[playerid] = 0;
                new str[184];
				Update(playerid, pCashx);
		    	format(str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='13'",BizzInfo[GetGasStationID(playerid)][bBalance]);
				mysql_query(SQL,str);
			}
		   	else
		   	{
		   	    format(string,sizeof(string),"* Nie masz wystarczajacej ilosci pieniedzy, potrzebujesz $%d, aby zatankowac.",FillUp);
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
			    Refueling[playerid] = 0;
		   	}
	 	}
	}
	return 1;
}

public PrintSBizInfo(playerid,targetid)
{
	if(IsPlayerConnected(playerid))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring),"*** %s ***",BizzInfo[targetid][bMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Zamkniete: %d Cena wejscia: $%s Waluta:$%s.", BizzInfo[targetid][bLocked], FormatNumber(BizzInfo[targetid][bFee]), FormatNumber(BizzInfo[targetid][bBalance]));
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	}
}

public PrintBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring),"*** %s ***",BizzInfo[targetid][bMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Zamkniete: %d Cena wejscia: $%s Waluta:$%s.", BizzInfo[targetid][bLocked], FormatNumber(BizzInfo[targetid][bFee]), FormatNumber(BizzInfo[targetid][bBalance]));
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	}
}

/*

----------------------------------------
| Commands:                            |
----------------------------------------

*/

/*CMD:treasureshop(playerid, params[]) {

	new titlu[MAX_STRING], rand1[MAX_STRING], rand2[MAX_STRING], rand3[MAX_STRING], rand4[MAX_STRING], stringualamare[1000];
	
	format(titlu, sizeof(titlu), "Treasure Points: {FFFABA}%d", PlayerInfo[playerid][pTreasurePoints]);
	format(rand1, sizeof(rand1), "{FFFFFF}$300,000 - {FFFABA}150 {FFFFFF}Treasure Points");
	format(rand2, sizeof(rand2), "{FFFFFF}$500,000 - {FFFABA}250 {FFFFFF}Treasure Points");
	format(rand3, sizeof(rand3), "{FFFFFF}$1,000,000 - {FFFABA}300 {FFFFFF}Treasure Points");
	format(rand4, sizeof(rand3), "{FFFFFF}$2,500,000 - {FFFABA}500 {FFFFFF}Treasure Points");
	format(stringualamare, sizeof(stringualamare), "%s\n%s\n%s\n%s", rand1, rand2, rand3, rand4);
	
	ShowPlayerDialog(playerid, DIALOG_TREASURESHOP, DIALOG_STYLE_LIST, titlu, stringualamare, "Kup", "Wyjdz");
	
	return 1;
}

CMD:gototreasure(playerid, params[])  {

	if(PlayerInfo[playerid][pAdmin] >= 6)
	{

		if(WinnerTreasure == 1) 
				return SendClientMessage(playerid, -1, "* Nie ma spawn dyni.");

		if(GetPlayerState(playerid) == 2) SetVehiclePos(GetPlayerVehicleID(playerid), gRandomPositions[NumberTreasure][0], gRandomPositions[NumberTreasure][1]+5, gRandomPositions[NumberTreasure][2]);
				else SetPlayerPos(playerid, gRandomPositions[NumberTreasure][0], gRandomPositions[NumberTreasure][1]+5, gRandomPositions[NumberTreasure][2]);

		SendClientMessage(playerid, -1, "* Zostales teleportowany.");

		return 1;

	}

	return 0;

}*/

CMD:asellbiz(playerid, params[]) {

	new house, string[180], query[180];
	
	if(sscanf(params, "d", house)) 
			return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/asellbiz <Biz ID>");
			
	if(PlayerInfo[playerid][pAdmin] < 5) 
			return SendClientMessage(playerid, COLOR_GREY, "Nie masz uprawnien, aby to zrobic.");
			
	foreach(Player, i) {
		if(IsPlayerConnected(i) && PlayerInfo[i][pBizz] == house) {
			PlayerInfo[i][pBizz] = 255;
			Update(i, pBizzx);
		}
	}			
	
	BizzInfo[house][bLocked] = 0;
	BizzInfo[house][bOwned] = 1;
	BizzInfo[house][bBuyPrice] = 0;
	
	format(query,sizeof(query),"UPDATE `bizz` SET `Locked`='0',`Owned`='1',`Owner`='The State',`BuyPrice`='0' WHERE `ID`='%d'",house);
	mysql_query(SQL,query);
	format(query,sizeof(query),"UPDATE users SET `Bizz`='255' WHERE `name`='%s'",BizzInfo[house][bOwner]);
	mysql_query(SQL,query);	
	strmid(BizzInfo[house][bOwner], "Panstwo", 0, strlen("Panstwo"), 255);	
	format(string, sizeof(string), "* Biznes %d zostal pomyslnie sprzedany panstwu!", house);
	SendClientMessage(playerid, COLOR_YELLOW, string);
	
	UpdateLabel(2, house);
	
	return 1;
}


CMD:givehouse(playerid, params[]) {

	new house, id, query[256], string[180];
	
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
	
	if(sscanf(params, "ud", id, house)) 
			return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/givehouse <id/nazwa> <house id>");
			
	format(query, sizeof(query), "UPDATE `users` SET `House`='999' WHERE `House`='%d'", id);
	mysql_query(SQL, query);
	
	PlayerInfo[id][pHouse] = house;
	
	format(query, sizeof(query), "UPDATE `users` SET `House`='%d' WHERE `ID`='%d'", house, PlayerInfo[id][pSQLID]);
	mysql_query(SQL, query);	
	
	format(string, sizeof(string), "AdmCmd: %s dal %s (%d) dom %d.", GetName(playerid), GetName(id), id, house);
	SendAdminMessage(COLOR_LOGS, string, 1);
	
	format(string, sizeof(string), "Administrator %s dal Ci dom %d.", GetName(playerid), house);
	SCM(id, COLOR_YELLOW, string);
	
	HouseInfo[house][hOwned] = 1;
	format(HouseInfo[house][hOwner], 256, GetName(id));
	//HouseInfo[house][hValue] = 0;
	UpdateLabel(1, house);
	
	format(query, sizeof(query), "UPDATE `houses` SET `Owned`='1', `Owner`='%s' WHERE `ID`='%d'", GetName(id), house);
	mysql_query(SQL, query);
	
	return 1;
}	

CMD:givebiz(playerid, params[]) {

	new biz, id, query[256], string[180];
	
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
	
	if(sscanf(params, "ud", id, biz)) 
			return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/givebiz <id/nazwa> <biz id>");
			
	format(query, sizeof(query), "UPDATE `users` SET `Bizz`='255' WHERE `Bizz`='%d'", id);
	mysql_query(SQL, query);
	
	PlayerInfo[id][pBizz] = biz;
	
	format(query, sizeof(query), "UPDATE `users` SET `Bizz`='%d' WHERE `ID`='%d'", biz, PlayerInfo[id][pSQLID]);
	mysql_query(SQL, query);	
	
	format(string, sizeof(string), "AdmCmd: %s podarowal graczowi %s(%d) biznes %d.", GetName(playerid), GetName(id), id, biz);
	SendAdminMessage(COLOR_LOGS, string, 1);
	
	format(string, sizeof(string), "Administrator %s dal Ci biznes %d.", GetName(playerid), biz);
	SCM(id, COLOR_YELLOW, string);
	
	BizzInfo[biz][bOwned] = 1;
	format(BizzInfo[biz][bOwner], 256, GetName(id));
	BizzInfo[biz][bBuyPrice] = 0;
	UpdateLabel(2, biz);
	
	format(query, sizeof(query), "UPDATE `bizz` SET `Owned`='1', `Owner`='%s', `BuyPrice`='0' WHERE `ID`='%d'", GetName(id), biz);
	mysql_query(SQL, query);	

	return 1;
}	
	
CMD:asellhouse(playerid, params[]) {

	new house, string[180], query[180];
	
	if(sscanf(params, "d", house)) 
			return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/asellhouse <House ID>");
			
	if(PlayerInfo[playerid][pAdmin] < 5) 
			return SendClientMessage(playerid, COLOR_GREY, "Nie masz uprawnien, aby to zrobic.");
			
	foreach(Player, i) {
		if(IsPlayerConnected(i) && PlayerInfo[i][pHouse] == house) {
			PlayerInfo[i][pHouse] = 999;
			PlayerInfo[i][pRented] = -1;
			Update(i, pHousex);
		}
	}
	
	HouseInfo[house][hHel] = 0;
	HouseInfo[house][hArm] = 0;
	HouseInfo[house][hLock] = 0;
	HouseInfo[house][hOwned] = 1;
	//HouseInfo[house][hValue] = 0;
	
	format(query,sizeof(query),"UPDATE `houses` SET `Hel`='0',`Arm`='0',`Lockk`='0',`Owned`='1',`Owner`='Panstwo' WHERE `ID`='%d'",house);
	mysql_query(SQL,query);
	format(query,sizeof(query),"UPDATE users SET `House`='999' WHERE `name`='%s'",HouseInfo[house][hOwner]);
	mysql_query(SQL,query);	
	
	strmid(HouseInfo[house][hOwner], "Panstwo", 0, strlen("Panstwo"), 255);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	format(string, sizeof(string), "* Dom %d zostal pomyslnie sprzedany panstwu!", house);
	SendClientMessage(playerid, COLOR_YELLOW, string);
	UpdateLabel(1, house);
	
	return 1;
}

CMD:set(playerid, params[]) {
	new valoare, item[50], userid, id[64], query[256], string[180];
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
	if(sscanf(params, "s[64]s[50]i", id, item, valoare)) {
		SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/set <pelna nazwa> <co zmienic> <wartosc>");
		SendClientMessage(playerid, COLOR_WHITE, "Level, Money, Bank, House, Bizz, Job, Hours, PremiumPoints");
		SendClientMessage(playerid, COLOR_WHITE, "Rob, Materiale, Drugs, Member, Leader, Rank, Fwarn, Warn, FPunish, Phone.");
		SendClientMessage(playerid, COLOR_WHITE, "Slot1-10, Vip, Clan, ClanRank, Admin, Helper, OOCName.");
		return 1;
	}
	new cont = MySQLCheckAccount(id);
	if(cont == 0) return SendClientMessage(playerid, COLOR_GREY, "Acest nume nu a fost gasit in baza de date!");	
	userid = GetPlayerID(id);
	if(strcmp(item, "level", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pLevel] = valoare, SetPlayerScore(userid, valoare);
		mysql_real_escape_string(id, hackmysql);
		mysql_format(SQL, string, sizeof(string), "UPDATE users SET `Level`='%d' WHERE `name`='%s' LIMIT 1", valoare, hackmysql);
		mysql_tquery(SQL, string, "", "");
	}		
	else if(strcmp(item, "slot1", true) == 0) {
		if(userid != INVALID_PLAYER_ID) {
			PlayerInfo[userid][pCarKey][0] = valoare;
			if(valoare > 0) {
				format(CarInfo[valoare][cOwner], 256, GetName(userid));
				CarInfo[valoare][Userid] = PlayerInfo[userid][pSQLID];	
				format(query, sizeof(query), "UPDATE `cars` SET `Userid`='%d', `Name`='%s' WHERE `ID`='%d'", PlayerInfo[userid][pSQLID], GetName(userid), PlayerInfo[userid][pCarKey][0]);
				mysql_query(SQL, query);
			}	
		}
		mysql_real_escape_string(id, hackmysql);
		mysql_format(SQL, string, sizeof(string), "UPDATE users SET CarKey1='%d' WHERE `name`='%s' LIMIT 1", valoare, hackmysql);
		mysql_tquery(SQL, string, "", "");
	}
	else if(strcmp(item, "slot2", true) == 0) {
		if(userid != INVALID_PLAYER_ID) {
			PlayerInfo[userid][pCarKey][1] = valoare;
			if(valoare > 0) {
				format(CarInfo[valoare][cOwner], 256, GetName(userid));
				CarInfo[valoare][Userid] = PlayerInfo[userid][pSQLID];	
				format(query, sizeof(query), "UPDATE `cars` SET `Userid`='%d', `Name`='%s' WHERE `ID`='%d'", PlayerInfo[userid][pSQLID], GetName(userid), PlayerInfo[userid][pCarKey][0]);
				mysql_query(SQL, query);
			}				
		}				
		mysql_real_escape_string(id, hackmysql);		
		mysql_format(SQL, string, sizeof(string), "UPDATE users SET CarKey2='%d' WHERE `name`='%s' LIMIT 1", valoare, hackmysql);
		mysql_tquery(SQL, string, "", "");
	}
	else if(strcmp(item, "slot3", true) == 0) {
		if(userid != INVALID_PLAYER_ID) {
			PlayerInfo[userid][pCarKey][2] = valoare;
			if(valoare > 0) {
				format(CarInfo[valoare][cOwner], 256, GetName(userid));
				CarInfo[valoare][Userid] = PlayerInfo[userid][pSQLID];	
				format(query, sizeof(query), "UPDATE `cars` SET `Userid`='%d', `Name`='%s' WHERE `ID`='%d'", PlayerInfo[userid][pSQLID], GetName(userid), PlayerInfo[userid][pCarKey][0]);
				mysql_query(SQL, query);
			}	
		}	
		mysql_real_escape_string(id, hackmysql);	
		mysql_format(SQL, string, sizeof(string), "UPDATE users SET CarKey3='%d' WHERE `name`='%s' LIMIT 1", valoare, hackmysql);
		mysql_tquery(SQL, string, "", "");
	}
	else if(strcmp(item, "slot4", true) == 0) {
		if(userid != INVALID_PLAYER_ID) {
			PlayerInfo[userid][pCarKey][3] = valoare;
			if(valoare > 0) {
				format(CarInfo[valoare][cOwner], 256, GetName(userid));
				CarInfo[valoare][Userid] = PlayerInfo[userid][pSQLID];	
				format(query, sizeof(query), "UPDATE `cars` SET `Userid`='%d', `Name`='%s' WHERE `ID`='%d'", PlayerInfo[userid][pSQLID], GetName(userid), PlayerInfo[userid][pCarKey][0]);
				mysql_query(SQL, query);
			}	
		}
		mysql_real_escape_string(id, hackmysql);			
		mysql_format(SQL, string, sizeof(string), "UPDATE users SET CarKey4='%d' WHERE `name`='%s' LIMIT 1", valoare, hackmysql);
		mysql_tquery(SQL, string, "", "");
	}
	else if(strcmp(item, "slot5", true) == 0) {
		if(userid != INVALID_PLAYER_ID) {
			PlayerInfo[userid][pCarKey][4] = valoare;
			if(valoare > 0) {
				format(CarInfo[valoare][cOwner], 256, GetName(userid));
				CarInfo[valoare][Userid] = PlayerInfo[userid][pSQLID];	
				format(query, sizeof(query), "UPDATE `cars` SET `Userid`='%d', `Name`='%s' WHERE `ID`='%d'", PlayerInfo[userid][pSQLID], GetName(userid), PlayerInfo[userid][pCarKey][0]);
				mysql_query(SQL, query);
			}	
		}
		mysql_real_escape_string(id, hackmysql);			
		mysql_format(SQL, string, sizeof(string), "UPDATE users SET CarKey5='%d' WHERE `name`='%s' LIMIT 1", valoare, hackmysql);
		mysql_tquery(SQL, string, "", "");
	}
	else if(strcmp(item, "slot6", true) == 0) {
		if(userid != INVALID_PLAYER_ID) {
			PlayerInfo[userid][pCarKey][5] = valoare;
			if(valoare > 0) {
				format(CarInfo[valoare][cOwner], 256, GetName(userid));
				CarInfo[valoare][Userid] = PlayerInfo[userid][pSQLID];	
				format(query, sizeof(query), "UPDATE `cars` SET `Userid`='%d', `Name`='%s' WHERE `ID`='%d'", PlayerInfo[userid][pSQLID], GetName(userid), PlayerInfo[userid][pCarKey][0]);
				mysql_query(SQL, query);
			}	
		}
		mysql_real_escape_string(id, hackmysql);
		mysql_format(SQL, string, sizeof(string), "UPDATE users SET CarKey6='%d' WHERE `name`='%s' LIMIT 1", valoare, hackmysql);
		mysql_tquery(SQL, string, "", "");
	}	
	else if(strcmp(item, "slot7", true) == 0) {
		if(userid != INVALID_PLAYER_ID) {
			PlayerInfo[userid][pCarKey][6] = valoare;
			if(valoare > 0) {
				format(CarInfo[valoare][cOwner], 256, GetName(userid));
				CarInfo[valoare][Userid] = PlayerInfo[userid][pSQLID];	
				format(query, sizeof(query), "UPDATE `cars` SET `Userid`='%d', `Name`='%s' WHERE `ID`='%d'", PlayerInfo[userid][pSQLID], GetName(userid), PlayerInfo[userid][pCarKey][0]);
				mysql_query(SQL, query);
			}	
		}
		mysql_real_escape_string(id, hackmysql);		
		mysql_format(SQL, string, sizeof(string), "UPDATE users SET CarKey7='%d' WHERE `name`='%s' LIMIT 1", valoare, hackmysql);
		mysql_tquery(SQL, string, "", "");
	}
	else if(strcmp(item, "slot8", true) == 0) {
		if(userid != INVALID_PLAYER_ID) {
			PlayerInfo[userid][pCarKey][7] = valoare;
			if(valoare > 0) {
				format(CarInfo[valoare][cOwner], 256, GetName(userid));
				CarInfo[valoare][Userid] = PlayerInfo[userid][pSQLID];	
				format(query, sizeof(query), "UPDATE `cars` SET `Userid`='%d', `Name`='%s' WHERE `ID`='%d'", PlayerInfo[userid][pSQLID], GetName(userid), PlayerInfo[userid][pCarKey][0]);
				mysql_query(SQL, query);
			}	
		}
		mysql_real_escape_string(id, hackmysql);	
		mysql_format(SQL, string, sizeof(string), "UPDATE users SET CarKey8='%d' WHERE `name`='%s' LIMIT 1", valoare, hackmysql);
		mysql_tquery(SQL, string, "", "");
	}
	else if(strcmp(item, "slot9", true) == 0) {
		if(userid != INVALID_PLAYER_ID) {
			PlayerInfo[userid][pCarKey][8] = valoare;
			if(valoare > 0) {
				format(CarInfo[valoare][cOwner], 256, GetName(userid));
				CarInfo[valoare][Userid] = PlayerInfo[userid][pSQLID];	
				format(query, sizeof(query), "UPDATE `cars` SET `Userid`='%d', `Name`='%s' WHERE `ID`='%d'", PlayerInfo[userid][pSQLID], GetName(userid), PlayerInfo[userid][pCarKey][0]);
				mysql_query(SQL, query);
			}	
		}
		mysql_real_escape_string(id, hackmysql);			
		mysql_format(SQL, string, sizeof(string), "UPDATE users SET CarKey9='%d' WHERE `name`='%s' LIMIT 1", valoare, hackmysql);
		mysql_tquery(SQL, string, "", "");
	}	
	else if(strcmp(item, "slot10", true) == 0) {
		if(userid != INVALID_PLAYER_ID) {
			PlayerInfo[userid][pCarKey][9] = valoare;
			if(valoare > 0) {
				format(CarInfo[valoare][cOwner], 256, GetName(userid));
				CarInfo[valoare][Userid] = PlayerInfo[userid][pSQLID];	
				format(query, sizeof(query), "UPDATE `cars` SET `Userid`='%d', `Name`='%s' WHERE `ID`='%d'", PlayerInfo[userid][pSQLID], GetName(userid), PlayerInfo[userid][pCarKey][0]);
				mysql_query(SQL, query);
			}	
		}
		mysql_real_escape_string(id, hackmysql);
		mysql_format(SQL, string, sizeof(string), "UPDATE users SET CarKey10='%d' WHERE `name`='%s' LIMIT 1", valoare, hackmysql);
		mysql_tquery(SQL, string, "", "");
	}
	else if(strcmp(item, "admin", true) == 0) {
		if(valoare < 0 || valoare > 6) return SCM(playerid, COLOR_GREY, "Invalid admin level! (0-6)");
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pAdmin] = valoare;
		mysql_real_escape_string(id, hackmysql);		
		format(query, sizeof(query), "UPDATE `users` SET `Admin`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);
	}	
	else if(strcmp(item, "helper", true) == 0) {
		if(valoare < 0 || valoare > 2) return SCM(playerid, COLOR_GREY, "Invalid helper level! (0-2)");
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pHelper] = valoare;
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `Helper`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);
	}		
	else if(strcmp(item, "money", true) == 0) {
		if(userid != INVALID_PLAYER_ID) Cash[userid] = valoare;
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `Money`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);
	}
	else if(strcmp(item, "oocname", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pOOCName] = valoare;
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `pOOCName`='%s' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);
	}
	else if(strcmp(item, "bank", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pAccount] = valoare;
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `Bank`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);
	}
	else if(strcmp(item, "house", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pHouse] = valoare;
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `House`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);
	}
	else if(strcmp(item, "bizz", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pBizz] = valoare;
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `Bizz`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);
	}
	else if(strcmp(item, "job", true) == 0) {
		PlayerInfo[userid][pJob] = valoare;
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `Job`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);
	}
	else if(strcmp(item, "hours", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pConnectTime] = valoare;
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `ConnectedTime`='%0.3f' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);	
	}	
	else if(strcmp(item, "premiumpoints", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pPremiumPoints] = valoare;
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `GoldPoints`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);		
	}
	/*else if(strcmp(item, "treasurepoints", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pTreasurePoints] = valoare;
		format(query, sizeof(query), "UPDATE `users` SET `TreasurePoints`='%d' WHERE `name`='%s'", valoare, id);
		mysql_query(SQL, query);		
	}*/
	else if(strcmp(item, "rob", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pRob] = valoare;
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `Rob`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);		
	}
	else if(strcmp(item, "Materialy", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pMats] = valoare;	
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `Materials`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);	
	}		
	else if(strcmp(item, "drugs", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pDrugs] = valoare;	
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `Drugs`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);	
	}		
	else if(strcmp(item, "member", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pMember] = valoare;
		mysql_real_escape_string(id, hackmysql);		
		format(query, sizeof(query), "UPDATE `users` SET `Member`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);	
	}	
	else if(strcmp(item, "leader", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pLeader] = valoare;	
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `Leader`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);	
	}		
	else if(strcmp(item, "rank", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pRank] = valoare;	
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `Rank`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);	
	}		
	else if(strcmp(item, "fwarn", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pFACWarns] = valoare;	
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `FWarn`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);	
	}		
	else if(strcmp(item, "warn", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pWarns] = valoare;
		mysql_real_escape_string(id, hackmysql);		
		format(query, sizeof(query), "UPDATE `users` SET `Warnings`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);	
	}		
	else if(strcmp(item, "fpunish", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pFpunish] = valoare;	
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `FPunish`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);	
	}			
	else if(strcmp(item, "phone", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pPnumber] = valoare;
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `PhoneNr`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);	
	} 
	else if(strcmp(item, "vip", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pVip] = valoare;	
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `Vip`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);	
	}
	else if(strcmp(item, "clan", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pClan] = valoare;	
		mysql_real_escape_string(id, hackmysql);
		format(query, sizeof(query), "UPDATE `users` SET `Clan`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);	
	}		
	else if(strcmp(item, "clanrank", true) == 0) {
		if(userid != INVALID_PLAYER_ID) PlayerInfo[userid][pClanRank] = valoare;
		mysql_real_escape_string(id, hackmysql);		
		format(query, sizeof(query), "UPDATE `users` SET `ClanRank`='%d' WHERE `name`='%s'", valoare, hackmysql);
		mysql_query(SQL, query);	
	}		
	else {
		SendClientMessage(playerid, COLOR_WHITE, "Level, Money, Bank, House, Bizz, Job, Hours, PremiumPoints.");
		SendClientMessage(playerid, COLOR_WHITE, "Rob, Materiale, Drugs, Member, Leader, Rank, Fwarn, Warn, FPunish, Phone.");
		SendClientMessage(playerid, COLOR_WHITE, "Slot1-10, Vip, Clan, ClanRank, Admin, Helper.");	
		return 1;
	}
	if(userid != INVALID_PLAYER_ID) format(string, sizeof(string), "%s[user:%d]'s %s zostal ustawiony na %d (( Admin %s[admin: %d] ))", GetName(userid), PlayerInfo[userid][pSQLID], item, valoare, GetName(playerid), PlayerInfo[playerid][pAdmin]);	
	else format(string, sizeof(string), "%s's %s zostal ustawiony na %d (( Admin %s[admin: %d] ))", id, item, valoare, GetName(playerid), PlayerInfo[playerid][pAdmin]);	
	SCM(playerid, COLOR_GOLD, string);	
	return 1;
}	

public ShowStats2(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new szDialog[618];
		new ttext[30];
		format(ttext, 30, "%s", GetFactionName(PlayerInfo[targetid][pMember]));

	    new rtext[64];
		if(PlayerInfo[playerid][pMember] != 0) format(rtext, sizeof(rtext), GetRankName(playerid));
		else rtext = "Nic";

        new jtext[100];
        if(PlayerInfo[playerid][pJob] == 0) jtext = "Nie";
        else format(jtext, sizeof(jtext), "%s", JobInfo[PlayerInfo[targetid][pJob]][jName]);
		
		new drank[64];
		if(PlayerInfo[targetid][pPremiumAccount] == 0) { 
			format(drank, sizeof(drank), "Nie", PlayerInfo[targetid][pTotalGold]);
		}
		else if(PlayerInfo[targetid][pPremiumAccount] >= 1) { 
			if(PlayerInfo[targetid][pVip] == 0) format(drank, sizeof(drank), "Tak", PlayerInfo[targetid][pTotalGold]);
			else drank = "Tak"; 
		}

		
		new account = PlayerInfo[targetid][pAccount],
			cash = GetPlayerCash(targetid),
			Float:ptime = PlayerInfo[targetid][pConnectTime],
			crimes = PlayerInfo[targetid][pCrimes],
			arrests = PlayerInfo[targetid][pArrested],
			warrests = PlayerInfo[targetid][pWantedDeaths],
			drugs = PlayerInfo[targetid][pDrugs],
			mats = PlayerInfo[targetid][pMats],
			level = PlayerInfo[targetid][pLevel],
			exp = PlayerInfo[targetid][pExp],
			nxtlevel = PlayerInfo[targetid][pLevel],
			expamount,
			costlevel;

		expamount = nxtlevel*levelexp;
		costlevel = nxtlevel*levelcost;

		new pnumber = PlayerInfo[targetid][pPnumber],
			rob = PlayerInfo[targetid][pRob],
			warn = PlayerInfo[targetid][pWarns],
			hkey = PlayerInfo[targetid][pHouse],
			bkey = PlayerInfo[targetid][pBizz],
			playersip[180];
			
		GetPlayerIp(targetid,playersip,sizeof(playersip));
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		new Float:px,Float:py,Float:pz;
		GetPlayerPos(targetid, px, py, pz);

		new time;
		if(PlayerInfo[targetid][pPremiumAccount] != 0) {
		    if(PlayerInfo[targetid][pPremiumAccount] == 1) {
		        time = 7-GetDays(lastpremium[targetid]);
		    }
			else if(PlayerInfo[targetid][pPremiumAccount] == 2) {
		        time = 30-GetDays(lastpremium[targetid]);
			}
		}
			
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "Nazwa: %s\nLevel: %d\nPieniadze: $%s\nPieniedzy w banku: $%s\nNumer telefonu: %d\n", GetName(targetid), level,FormatNumber(cash),FormatNumber(account), pnumber);
		strcat(szDialog, coordsstring);
		if(PlayerInfo[targetid][pPremiumAccount] == 0) {
			format(coordsstring, sizeof(coordsstring), "Konto premium: %s\nNastepny level: $%s\nPunkty respektu: %d/%d\nOn-line: %0.2f godzin\nPunktów ROB: %d/10\n", drank, FormatNumber(costlevel),exp,expamount,ptime,rob);
			strcat(szDialog, coordsstring);
			format(coordsstring, sizeof(coordsstring), "Praca: %s\nFrakcja: %s\nRanga: %s\nFWarn: %d/3\nFUkaran: %d/40\nWarnów %d/3\n",jtext,ttext,rtext,PlayerInfo[targetid][pFACWarns],PlayerInfo[targetid][pFpunish],warn);
			strcat(szDialog, coordsstring);
			format(coordsstring, sizeof(coordsstring), "Zgony bedac sciganym: %d\nPopelnionych przestepstw: %d\nAresztów: %d\nNarkotyków: %d\nMaterialów: %d\n", warrests,crimes,arrests,drugs,mats);
			strcat(szDialog, coordsstring);
		}
		else {
			format(coordsstring, sizeof(coordsstring), "Konto premium: %s ( %d dni )\nNastepny level: $%s\nPunkty respektu: %d/%d\nOn-line: %0.2f\nPunktów ROB: %d/8\n", drank,time,FormatNumber(costlevel),exp,expamount,ptime,rob);
			strcat(szDialog, coordsstring);
			format(coordsstring, sizeof(coordsstring), "Praca: %s\nFrakcja: %s\nRanga: %s\nFWarn: %d/3\nFUkaran: %d/40\nWarnów %d/3\n",jtext,ttext,rtext,PlayerInfo[targetid][pFACWarns],PlayerInfo[targetid][pFpunish],warn);
			strcat(szDialog, coordsstring);
			format(coordsstring, sizeof(coordsstring), "Zgony bedac sciganym: %d\nPopelnionych przestepstw: %d\nAresztów: %d\nNarkotyków: %d\nMaterialów: %d\n", warrests,crimes,arrests,drugs,mats);
			strcat(szDialog, coordsstring);
		}
		format(coordsstring, sizeof(coordsstring), "Pojazdy: %d/%d\nDom: %d\nBiznes: %d \n", GetVehicles(targetid), GetSlots(targetid), hkey,bkey);
		strcat(szDialog, coordsstring);
	    if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			format(coordsstring, sizeof(coordsstring), "Wynajmowany klucz samochodu: %d\nIP: %s\nInterior ID: %d\nVirtual World: %d\nSQLID: %d",HireCar[targetid],playersip,GetPlayerInterior(targetid),GetPlayerVirtualWorld(targetid),PlayerInfo[targetid][pSQLID]);
			strcat(szDialog, coordsstring);
		}
		ShowPlayerDialog(playerid, 954, DIALOG_STYLE_LIST, "Fox-RP | Statystyki", szDialog, "Ok", "");
	}
}

public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new ttext[30];
		format(ttext, 30, "%s", GetFactionName(PlayerInfo[targetid][pMember]));

	    new rtext[64];
		if(PlayerInfo[playerid][pMember] != 0) format(rtext, sizeof(rtext), GetRankName(playerid));
		else rtext = "Nic";

        new jtext[100];
        if(PlayerInfo[playerid][pJob] == 0) jtext = "Nie";
        else format(jtext, sizeof(jtext), "%s", JobInfo[PlayerInfo[targetid][pJob]][jName]);
		
		new drank[64];
		if(PlayerInfo[targetid][pPremiumAccount] == 0) { 
			format(drank, sizeof(drank), "Nie(%d/1000 za VIP)", PlayerInfo[targetid][pTotalGold]);
		}
		else if(PlayerInfo[targetid][pPremiumAccount] >= 1) { 
			if(PlayerInfo[targetid][pVip] == 0) format(drank, sizeof(drank), "Tak (%d/1000 za VIP)", PlayerInfo[targetid][pTotalGold]);
			else drank = "Tak"; 
		}

		
		new account = PlayerInfo[targetid][pAccount],
			cash = GetPlayerCash(targetid),
			Float:ptime = PlayerInfo[targetid][pConnectTime],
			crimes = PlayerInfo[targetid][pCrimes],
			arrests = PlayerInfo[targetid][pArrested],
			warrests = PlayerInfo[targetid][pWantedDeaths],
			drugs = PlayerInfo[targetid][pDrugs],
			mats = PlayerInfo[targetid][pMats],
			level = PlayerInfo[targetid][pLevel],
			exp = PlayerInfo[targetid][pExp],
			nxtlevel = PlayerInfo[targetid][pLevel],
			expamount,
			costlevel;

		expamount = nxtlevel*levelexp;
		costlevel = nxtlevel*levelcost;

		new pnumber = PlayerInfo[targetid][pPnumber],
			rob = PlayerInfo[targetid][pRob],
			warn = PlayerInfo[targetid][pWarns],
			hkey = PlayerInfo[targetid][pHouse],
			bkey = PlayerInfo[targetid][pBizz],
			playersip[180];
			
		GetPlayerIp(targetid,playersip,sizeof(playersip));
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		new Float:px,Float:py,Float:pz;
		GetPlayerPos(targetid, px, py, pz);

		new time;
		if(PlayerInfo[targetid][pPremiumAccount] != 0) {
		    if(PlayerInfo[targetid][pPremiumAccount] == 1) {
		        time = 7-GetDays(lastpremium[targetid]);
		    }
			else if(PlayerInfo[targetid][pPremiumAccount] == 2) {
		        time = 30-GetDays(lastpremium[targetid]);
			}
		}
			
		new coordsstring[256];
		SendClientMessage(playerid, COLOR_WHITE, "---------------------------------------------------------------------------------------");
		format(coordsstring, sizeof(coordsstring), "(#) Nazwa: ( %s ) | Level: ( %d ) | Pieniadze: ( $%s ) | Pieniedzy w banku: ( $%s ) | Numer telefonu: ( %d )", GetName(targetid), level,FormatNumber(cash),FormatNumber(account), pnumber);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		if(PlayerInfo[targetid][pPremiumAccount] == 0) {
			format(coordsstring, sizeof(coordsstring), "(#) Konto premium: ( %s ) | Nastepny level: ( $%s ) | Punkty respektu: ( %d/%d ) | On-line: ( %0.2f ) | Punktów ROB: ( %d/10 )", drank, FormatNumber(costlevel),exp,expamount,ptime,rob);
			SendClientMessage(playerid, COLOR_WHITE,coordsstring);
			format(coordsstring, sizeof(coordsstring), "(#) Praca: ( %s ) | Frakcja: ( %s ) | Ranga: ( %s ) | FWarn: ( %d/3 ) | FUkaran: ( %d/40 ) | Warnów ( %d/3 )",jtext,ttext,rtext,PlayerInfo[targetid][pFACWarns],PlayerInfo[targetid][pFpunish],warn);
			SendClientMessage(playerid, COLOR_WHITE,coordsstring);
			format(coordsstring, sizeof(coordsstring), "(#) Zgony bedac sciganym: ( %d ) | Popelnionych przestepstw: ( %d ) | Aresztów: ( %d ) | Narkotyków: ( %d ) | Materialów: ( %d )", warrests,crimes,arrests,drugs,mats);
			SendClientMessage(playerid, COLOR_WHITE,coordsstring);
			SendClientMessage(playerid, COLOR_WHITE, "---------------------------------------------------------------------------------------");
		}
		else {
			format(coordsstring, sizeof(coordsstring), "(#) Konto premium: ( %s ( %d dni ) ) | Nastepny level: ( $%s ) | Punkty respektu: ( %d/%d ) | On-line: ( %0.2f ) | Punktów ROB: ( %d/8 )", drank,time,FormatNumber(costlevel),exp,expamount,ptime,rob);
			SendClientMessage(playerid, COLOR_WHITE,coordsstring);
			format(coordsstring, sizeof(coordsstring), "(#) Praca: ( %s ) | Frakcja: ( %s ) | Ranga: ( %s ) | FWarn: ( %d/3 ) | FUkaran: ( %d/40 ) | Warnów ( %d/3 )",jtext,ttext,rtext,PlayerInfo[targetid][pFACWarns],PlayerInfo[targetid][pFpunish],warn);
			SendClientMessage(playerid, COLOR_WHITE,coordsstring);
			format(coordsstring, sizeof(coordsstring), "(#) Zgony bedac sciganym: ( %d ) | Popelnionych przestepstw: ( %d ) | Aresztów: ( %d ) | Narkotyków: ( %d ) | Materialów: ( %d )", warrests,crimes,arrests,drugs,mats);
			SendClientMessage(playerid, COLOR_WHITE,coordsstring);	
			SendClientMessage(playerid, COLOR_WHITE, "---------------------------------------------------------------------------------------");			
		}
		format(coordsstring, sizeof(coordsstring), "(#) Pojazdy: ( %d/%d ) | Dom: ( %d ) | Biznes: ( %d )", GetVehicles(targetid), GetSlots(targetid), hkey,bkey);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);	
		SendClientMessage(playerid, COLOR_WHITE, "---------------------------------------------------------------------------------------");
	    if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			format(coordsstring, sizeof(coordsstring), "(#) Wynajmowany klucz: ( %d ) | IP: ( %s ) | Interior ID: ( %d ) | Virtual World: ( %d ) | SQLID: ( %d )",HireCar[targetid],playersip,GetPlayerInterior(targetid),GetPlayerVirtualWorld(targetid),PlayerInfo[targetid][pSQLID]);
			SendClientMessage(playerid, COLOR_LIGHTRED,coordsstring);
			SendClientMessage(playerid, COLOR_WHITE, "---------------------------------------------------------------------------------------");
		}
	}
}


/*public SetPlayerToTeamColor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsACop(playerid) && OnDuty[playerid] == 0) return SetPlayerColor(playerid, COLOR_WHITE);
	  	SetPlayerColor(playerid,COLOR_WHITE); // Civilian
      	if(PlayerInfo[playerid][pMember] == 1) { SetPlayerColor(playerid, 0x456FCFFF); } // PD
      	if(PlayerInfo[playerid][pLeader] == 1) { SetPlayerColor(playerid, 0x456FCFFF); } // PD
      	if(PlayerInfo[playerid][pMember] == 2) { SetPlayerColor(playerid, 0x456FCFFF); } // FBI
      	if(PlayerInfo[playerid][pLeader] == 2) { SetPlayerColor(playerid, 0x456FCFFF); } // FBI
      	if(PlayerInfo[playerid][pLeader] == 3) { SetPlayerColor(playerid, 0x456FCFFF); } // Natonial Guard
      	if(PlayerInfo[playerid][pMember] == 3) { SetPlayerColor(playerid, 0x456FCFFF); } // Natonial Guard
      	if(PlayerInfo[playerid][pMember] == 4) { SetPlayerColor(playerid, 0x198A13FF); } // Grove Street
      	if(PlayerInfo[playerid][pLeader] == 4) { SetPlayerColor(playerid, 0x198A13FF); } // Grove Street
      	if(PlayerInfo[playerid][pMember] == 5) { SetPlayerColor(playerid, 0xB125E899); } // Ballas
      	if(PlayerInfo[playerid][pLeader] == 5) { SetPlayerColor(playerid, 0xB125E899); } // Ballas
      	if(PlayerInfo[playerid][pMember] == 6) { SetPlayerColor(playerid, 0x2F2F2F99); } // The Russian Mafia
      	if(PlayerInfo[playerid][pLeader] == 6) { SetPlayerColor(playerid, 0x2F2F2F99); } // The Russian Mafia
      	if(PlayerInfo[playerid][pMember] == 7) { SetPlayerColor(playerid, 0xBEFDBDFF); } // Government
      	if(PlayerInfo[playerid][pLeader] == 7) { SetPlayerColor(playerid, 0xBEFDBDFF); } // Government
      	if(PlayerInfo[playerid][pMember] == 8) { SetPlayerColor(playerid, 0xFFFFA8FF); } // Tow Car Company
      	if(PlayerInfo[playerid][pLeader] == 8) { SetPlayerColor(playerid, 0xFFFFA8FF); } // Tow Car Company
      	if(PlayerInfo[playerid][pMember] == 9) { SetPlayerColor(playerid, 0xFFABFCFF); } // News Reporter
      	if(PlayerInfo[playerid][pLeader] == 9) { SetPlayerColor(playerid, 0xFFABFCFF); } // News Reporter
      	if(PlayerInfo[playerid][pMember] == 10) { SetPlayerColor(playerid, 0x086a8799); } // Russian Mafia
      	if(PlayerInfo[playerid][pLeader] == 10) { SetPlayerColor(playerid, 0x086a8799); } // Russian Mafia
      	if(PlayerInfo[playerid][pMember] == 11) { SetPlayerColor(playerid, 0x7E3937FF); } // Hitman
      	if(PlayerInfo[playerid][pLeader] == 11) { SetPlayerColor(playerid, 0x7E3937FF); } // Hitman
      	if(PlayerInfo[playerid][pMember] == 12) { SetPlayerColor(playerid, 0x10E056FF); } // SI
      	if(PlayerInfo[playerid][pLeader] == 12) { SetPlayerColor(playerid, 0x10E056FF); } // SI
      	if(PlayerInfo[playerid][pMember] == 13) { SetPlayerColor(playerid, COLOR_YELLOW); } // TAXI
      	if(PlayerInfo[playerid][pLeader] == 13) { SetPlayerColor(playerid, COLOR_YELLOW); } // TAXI
      	if(PlayerInfo[playerid][pMember] == 14) { SetPlayerColor(playerid, 0xf86448FF); } // fireman
      	if(PlayerInfo[playerid][pLeader] == 14) { SetPlayerColor(playerid, 0xf86448FF); } // fireman
    }
    return 1;
}*/

public GameModeInitExitFunc()
{
	foreach(Player,i)
	{
		if(IsPlayerConnected(i))
		{
			DisablePlayerCheckpoint(i);
			gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
		    SetPlayerCameraPos(i, 1460.0, -1324.0, 287.2);
		    SetPlayerCameraLookAt(i,1374.5, -1291.1, 239.0);
			IsPlayerLogged[i] = 0;
		}
	}
	SetTimer("GameModeExitFunc", 4000, 0);
	return 1;
}

public GameModeExitFunc()
{
	KillTimer(synctimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(checkgastimer);
	KillTimer(checkvehinfotimer);
	KillTimer(pickuptimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(stoppedvehtimer);
	KillTimer(taxitimer);
	for(new i; i<TotalMenus; i++)
	{
		DestroyMenu(CCTVMenu[i]);
	}
	GameModeExit();
}

public OnGameModeExit()
{
	SaveAccounts();
    new qqerry[128];
	/*for(new vsid = 0; vsid < GetLastPCar(); vsid++) {
	mysql_format(SQL, qqerry, sizeof(qqerry), "UPDATE cars SET Spawned='0' WHERE ID=%d", vsid);
	mysql_query(SQL, qqerry);
	printf("%s", qqerry);
	}*/
	format(qqerry, sizeof(qqerry), "UPDATE `users` SET `Status` = '0' WHERE `Status` = '1'");
    mysql_query(SQL,qqerry);
    mysql_close(SQL);
	return 1;
}

public LoadStuff()
{
	new string[256];
	format(string, sizeof(string), "SELECT * FROM `stuff`");
	mysql_query(SQL,string);
	mysql_store_result();
	while(mysql_retrieve_row())
	{
	    mysql_fetch_field_row(string, "Tax"); Tax = strval(string);
	    mysql_fetch_field_row(string, "TaxValue"); TaxValue = strval(string);
		mysql_fetch_field_row(string, "MaxPlayers"); MaxPlayers = strval(string);
		mysql_fetch_field_row(string, "MaxPlayersDate"); format(MaxPlayersDate, 256, string);		
		
	}
	mysql_free_result();
	return 1;
}

public LoadBizz()
{
	new result[100],index = 0;
    mysql_query(SQL,"SELECT * FROM `bizz` ORDER BY `bizz`.`ID` ASC");
    mysql_store_result();
    while(mysql_retrieve_row())
    {
        bussines++;
		index++;
		new i = index;
		mysql_get_field("ID", result);				BizzInfo[i][bID] = strval(result);
        mysql_get_field("Owned", result);			BizzInfo[i][bOwned] = strval(result);
        mysql_get_field("Owner", result);			strmid(BizzInfo[i][bOwner], result, 0, 32, 32);
        mysql_get_field("Message", result);			strmid(BizzInfo[i][bMessage], result, 0, 100, 100);
   	    mysql_get_field("EntranceX", result);		BizzInfo[i][bEntranceX] = floatstr(result);
    	mysql_get_field("EntranceY", result);		BizzInfo[i][bEntranceY] = floatstr(result);
        mysql_get_field("EntranceZ", result);		BizzInfo[i][bEntranceZ] = floatstr(result);
			
		if(i == 20 || i == 21 || i == 22 || i == 23 || i == 24) CreateDynamicMapIcon(BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ],17,0,0,0,-1,500.0);
		if(i == 13 || i == 18 || i == 19) CreateDynamicMapIcon(BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ],27,0,0,0,-1,500.0);
		if(i == 14 || i == 15 || i == 16) CreateDynamicMapIcon(BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ],63,0,0,0,-1,500.0);
		if(i == 25) CreateDynamicMapIcon(BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ],45,0,0,0,-1,500.0);
 		if(i == 26) CreateDynamicMapIcon(BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ],10,0,0,0,-1,500.0);
  		if(i == 27) CreateDynamicMapIcon(BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ],29,0,0,0,-1,500.0);
  		if(i == 28) CreateDynamicMapIcon(BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ],25,0,0,0,-1,500.0);
        if(i == 9) CreateDynamicMapIcon(BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ],23,0,0,0,-1,500.0);        
			   
	    mysql_get_field("ExitX", result);			BizzInfo[i][bExitX] = floatstr(result);
        mysql_get_field("ExitY", result);			BizzInfo[i][bExitY] = floatstr(result);
        mysql_get_field("ExitZ", result);			BizzInfo[i][bExitZ] = floatstr(result);
        mysql_get_field("LevelNeeded", result);		BizzInfo[i][bLevelNeeded] = strval(result);
        mysql_get_field("BuyPrice", result);		BizzInfo[i][bBuyPrice] = strval(result);
        mysql_get_field("EntranceCost", result);	BizzInfo[i][bFee] = strval(result);
        mysql_get_field("Till", result);			BizzInfo[i][bBalance] = strval(result);
        mysql_get_field("Locked", result);			BizzInfo[i][bLocked] = strval(result);
        mysql_get_field("Interior", result);		BizzInfo[i][bInterior] = strval(result);
        mysql_get_field("Virtual", result);			BizzInfo[i][bVirtual] = strval(result);
        mysql_get_field("Gas", result);				BizzInfo[i][bGas] = strval(result);
        mysql_get_field("Static", result);			BizzInfo[i][bStatic] = strval(result);		
	}
	mysql_free_result();
	printf("[MySQL Bussines]: %d", index);
	return 1;
}


	
CMD:hud(playerid, params[]) return ShowPlayerHud(playerid);
stock ShowPlayerHud(playerid) {
	new 
		string[256],
		string2[1024], 
		item = PlayerInfo[playerid][pShowHud][0], 
		item1 = PlayerInfo[playerid][pShowHud][1], 
		item2 = PlayerInfo[playerid][pShowHud][2],
		item3 = PlayerInfo[playerid][pShowHud][3],
		item4 = PlayerInfo[playerid][pShowHud][4];
		
	
	if(item != 0) format(string, 1024, "{FFFFFF}¯ycie: %s\n", HudName[item]);
	else format(string, 1024, "{FFFFFF}¯ycie: {FF9E9E}Dezaktywacja\n", HudName[item]);
	strcat(string2, string);
	
	if(item1 != 0) format(string, 1024, "{FFFFFF}Pancerz: %s\n", HudName[item1]);
	else format(string, 1024, "{FFFFFF}Pancerz: {FF9E9E}Dezaktywacja\n", HudName[item1]);
	strcat(string2, string);
	
	if(item2 != 0) format(string, 1024, "{FFFFFF}FPS: {C8FF9E}Aktywuj\n");
	else format(string, 1024, "{FFFFFF}FPS: {FF9E9E}Dezaktywacja\n");
	strcat(string2, string);

	if(item3 != 0) format(string, 1024, "{FFFFFF}Postep levelowy: %s\n", HudName[item3]);
	else format(string, 1024, "{FFFFFF}Postep levelowy: {FF9E9E}Dezaktywacja\n", HudName[item3]);
	strcat(string2, string);	

	if(item4 != 0) format(string, 1024, "{FFFFFF}Ilosc reportów: %s\n", HudName[item4]);
	else format(string, 1024, "{FFFFFF}Ilosc reportów: {FF9E9E}Dezaktywacja\n", HudName[item4]);
	strcat(string2, string);	
	
	ShowPlayerDialog(playerid,DIALOG_HUD,DIALOG_STYLE_LIST,"Opcje HUD",string2,"Ok","Wyjdz");
	return 1;
}

stock GetHudColor(cid) {
	switch(cid) {
		case 1: return 0xB8BFC2FF;
		case 2: return 0xFF0000FF;
		case 3: return 0x00FF2FFF;
		case 4: return 0x0022FFFF;
		case 5: return 0xFFFB00FF;
		case 6: return 0x8000FFFF;									
	}
	return 1;
}


public LoadFactions()
{
	new result[100],label[128],index = 0;
    mysql_query(SQL,"SELECT * FROM `factions` ORDER BY `factions`.`ID` ASC");
    mysql_store_result();
    while(mysql_retrieve_row())
    {
		index++;
		new i = index;
		mysql_get_field("ID", result);			DynamicFactions[i][fID] = strval(result);
        mysql_get_field("Name", result);		strmid(DynamicFactions[i][fName], result, 0, 100, 100);
		mysql_get_field("IntX", result);		DynamicFactions[i][fcX] = floatstr(result);
   	    mysql_get_field("IntY", result);		DynamicFactions[i][fcY] = floatstr(result);
    	mysql_get_field("IntZ", result);		DynamicFactions[i][fcZ] = floatstr(result);
		mysql_get_field("X", result);			DynamicFactions[i][extX] = floatstr(result);
   	    mysql_get_field("Y", result);			DynamicFactions[i][extY] = floatstr(result);
    	mysql_get_field("Z", result);			DynamicFactions[i][extZ] = floatstr(result);
    	mysql_get_field("VW", result);			DynamicFactions[i][fVW] = strval(result);
    	mysql_get_field("Interior", result);	DynamicFactions[i][fInterior] = strval(result);		
    	mysql_get_field("Mats", result);		DynamicFactions[i][fMats] = strval(result);
    	mysql_get_field("Drugs", result);		DynamicFactions[i][fDrugs] = strval(result);
    	mysql_get_field("Bank", result);		DynamicFactions[i][fBank] = strval(result);
        mysql_get_field("Anunt", result);		strmid(DynamicFactions[i][fAnn], result, 0, 100, 100);
        mysql_get_field("Name1", result);		strmid(fRankNames[i][0], result, 0, 100, 100);
        mysql_get_field("Name2", result);		strmid(fRankNames[i][1], result, 0, 100, 100);		
        mysql_get_field("Name3", result);		strmid(fRankNames[i][2], result, 0, 100, 100);		
        mysql_get_field("Name4", result);		strmid(fRankNames[i][3], result, 0, 100, 100);		
        mysql_get_field("Name5", result);		strmid(fRankNames[i][4], result, 0, 100, 100);		
        mysql_get_field("Name6", result);		strmid(fRankNames[i][5], result, 0, 100, 100);		
        mysql_get_field("Name7", result);		strmid(fRankNames[i][6], result, 0, 100, 100);	
    	mysql_get_field("App", result);			DynamicFactions[i][fApp] = strval(result);
	
		new x = i;
       	cache_get_field_content(i, "Rank1", result); FactionInfo[x][fRank1] = strval(result);
       	cache_get_field_content(i, "Rank2", result); FactionInfo[x][fRank2] = strval(result);
       	cache_get_field_content(i, "Rank3", result); FactionInfo[x][fRank3] = strval(result);
       	cache_get_field_content(i, "Rank4", result); FactionInfo[x][fRank4] = strval(result);
       	cache_get_field_content(i, "Rank5", result); FactionInfo[x][fRank5] = strval(result);
       	cache_get_field_content(i, "Rank6", result); FactionInfo[x][fRank6] = strval(result);	

		/*if(x != 7) {
			format(label, sizeof(label), "%s Centrala\nKliknij Enter, aby wejsc", DynamicFactions[i][fName]);
			Create3DTextLabel(label,0xFFFFFF99,DynamicFactions[x][extX], DynamicFactions[x][extY], DynamicFactions[x][extZ],20.0, 0, 1);
			CreatePickup(1314, 23, DynamicFactions[x][extX], DynamicFactions[x][extY], DynamicFactions[x][extZ]); 
			USUNIETE BO PAWEL TAK CHCE XD
		}*/
	}
	mysql_free_result();
	return 1;
}

CMD:gotohq(playerid, params[]) {
	new id;
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	if(sscanf(params, "i", id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/gotohq <id>");
	if(id < 1 || id > 14) return SendClientMessage(playerid, -1, "Zle ID! (1-14)");
	SetPlayerPosEx(playerid, DynamicFactions[id][extX], DynamicFactions[id][extY], DynamicFactions[id][extZ]);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	return 1;
}

function FactionSpawn(playerid) {
	if(PlayerInfo[playerid][pMember] == 0) return 1;
	new fid = PlayerInfo[playerid][pMember];
	SetPlayerPosEx(playerid, DynamicFactions[fid][fcX], DynamicFactions[fid][fcY], DynamicFactions[fid][fcZ]);
	SetPlayerInterior(playerid, DynamicFactions[fid][fInterior]);
	SetPlayerVirtualWorld(playerid, DynamicFactions[fid][fVW]);
	InHQ[playerid] = fid;
	return 1;
}

/*function EnterFaction(playerid, fid) {
	TogglePlayerControllable(playerid, 0);
	SetPlayerPosEx(playerid, DynamicFactions[fid][fcX], DynamicFactions[fid][fcY], DynamicFactions[fid][fcZ]);
	SetPlayerInterior(playerid, DynamicFactions[fid][fInterior]);
	SetPlayerVirtualWorld(playerid, DynamicFactions[fid][fVW]);
	InHQ[playerid] = fid;
	SetTimerEx("UnFreezeStation", 3000, false, "i", playerid);	
	return 1;
}

USUNIETE BO PAWEL ZROBI W ADASIOWYM SYSTEMIE XD

function ExitFaction(playerid, fid) {
	SetPlayerPosEx(playerid, DynamicFactions[fid][extX], DynamicFactions[fid][extY], DynamicFactions[fid][extZ]);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	InHQ[playerid] = 0;
	return 1;
}*/

CMD:fupdate(playerid, params[]) {
	new szQuery[256], Float: Pos[3];
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	format(szQuery, sizeof(szQuery), "UPDATE `factions` SET `IntX`='%f', `IntY`='%f', `IntZ`='%f', `VW`='%d', `Interior`='%d' WHERE `ID`='%d'", Pos[0], Pos[1], Pos[2], GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), PlayerInfo[playerid][pMember]);
	mysql_query(SQL, szQuery);
	SCM(playerid, COLOR_RED, szQuery);
	return 1;
}

/*function LoadGraffiti()
{
	new Cache: db = mysql_query(SQL, "SELECT * FROM `graffiti` ORDER BY `graffiti`.`ID` ASC");
	new graff = 0, x, result[256], tagname[256];
 	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
	    graff ++;
       	cache_get_field_content(i, "ID", result); x = strval(result); GraffitiInfo[x][gfID] = x;
       	cache_get_field_content(i, "X", result); GraffitiInfo[x][gfX] = floatstr(result);
       	cache_get_field_content(i, "Y", result); GraffitiInfo[x][gfY] = floatstr(result);
     	cache_get_field_content(i, "Z", result); GraffitiInfo[x][gfZ] = floatstr(result);
      	cache_get_field_content(i, "Rot", result); GraffitiInfo[x][gfRot] = floatstr(result);
       	cache_get_field_content(i, "Owned", result); GraffitiInfo[x][gfOwned] = strval(result);

	    GraffitiInfo[x][gfObject] = CreateDynamicObject(19353, GraffitiInfo[x][gfX], GraffitiInfo[x][gfY], GraffitiInfo[x][gfZ], 0.0, 0.0, GraffitiInfo[x][gfRot]);
	    if(GraffitiInfo[x][gfOwned] == 0 ) tagname = "{000000}Nazwa klanu\nTag";
	    else format(tagname, sizeof(tagname), "{00ccff}%s\n%s", ClanInfo[GraffitiInfo[x][gfOwned]][clColor], ClanInfo[GraffitiInfo[x][gfOwned]][clName], ClanInfo[GraffitiInfo[x][gfOwned]][clTag]);
	    SetDynamicObjectMaterialText(GraffitiInfo[x][gfObject], 0, tagname, OBJECT_MATERIAL_SIZE_512x256, "BankGothic Md BT", 60, 1, 0xfff0f0f0, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
	}
	cache_delete(db);
	return 1;
}*/

function LoadClans()
{
	new Cache: db = mysql_query(SQL, "SELECT * FROM `clans` ORDER BY `clans`.`ID` ASC");
	new clans = 0, x, result[256];
 	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
	    clans ++;
       	cache_get_field_content(i, "ID", result); x = strval(result);
       	cache_get_field_content(i, "Owner", result); format(ClanInfo[x][clOwner], 64, result);
       	cache_get_field_content(i, "Name", result); format(ClanInfo[x][clName], 32, result);
     	cache_get_field_content(i, "Motd", result); format(ClanInfo[x][clMotd], 256, result);
      	cache_get_field_content(i, "Tag", result); format(ClanInfo[x][clTag], 32, result);
       	cache_get_field_content(i, "Type", result); ClanInfo[x][clType] = strval(result);
       	cache_get_field_content(i, "RankName1", result); format(ClanInfo[x][clRankName1], 64, result);
       	cache_get_field_content(i, "RankName2", result); format(ClanInfo[x][clRankName2], 64, result);
       	cache_get_field_content(i, "RankName3", result); format(ClanInfo[x][clRankName3], 64, result);
      	cache_get_field_content(i, "RankName4", result); format(ClanInfo[x][clRankName4], 64, result);
     	cache_get_field_content(i, "RankName5", result); format(ClanInfo[x][clRankName5], 64, result);
      	cache_get_field_content(i, "RankName6", result); format(ClanInfo[x][clRankName6], 64, result);
      	//cache_get_field_content(i, "Color", result); format(ClanInfo[x][clColor], 64, result);
      	cache_get_field_content(i, "Slots", result); ClanInfo[x][clSlots] = strval(result);
		cache_get_field_content(i, "RegisterDate", result); format(ClanInfo[x][clRegisterDate], 64, result);
	}
	printf("[MySQL Clans]: %d klanów zaladowano.", clans);
	cache_delete(db);
	return 1;
}

function LoadSafeZones()
{
	new
		Cache: db = mysql_query (SQL, "SELECT * FROM `safezones` ORDER BY `safezones`.`ID` ASC"),
		x,
		sfz,
		result[256];

 	for (new i, j = cache_get_row_count (); i != j; ++i)
	{
	    sfz ++;
       	cache_get_field_content(i, "ID", result); 			x = strval(result);
       	cache_get_field_content(i, "X", result); 			SafeZone[x][szX] = floatstr(result);
       	cache_get_field_content(i, "Y", result); 			SafeZone[x][szY] = floatstr(result);
		cache_get_field_content(i, "Z", result); 			SafeZone[x][szZ] = floatstr(result);
      	cache_get_field_content(i, "Range", result); 		SafeZone[x][szRange] = strval(result);
	}
	printf("[MySQL SafeZone]: %d laduje...", sfz);
	cache_delete(db);
	return 1;
}

public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
//public OnPlayerEditDynamicObject(playerid, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	new string[256];
	new Float:oldX, Float:oldY, Float:oldZ, Float:oldRotX, Float:oldRotY, Float:oldRotZ;
	GetDynamicObjectPos(objectid, oldX, oldY, oldZ);
	GetDynamicObjectRot(objectid, oldRotX, oldRotY, oldRotZ);

	if(response == EDIT_RESPONSE_FINAL)
	{
		if(EditHouse[playerid] == 1) {
		    new szQuery[256];
			mysql_format(SQL, szQuery, 256, "INSERT INTO `fobjects` (`House`) VALUES ('0')");
			new Cache: result = mysql_query(SQL, szQuery);
			new i = cache_insert_id();
			cache_delete(result);
			FurnitureInfo[i][fiModel] = EditModel[playerid];
			FurnitureInfo[i][fiX] = x;
			FurnitureInfo[i][fiY] = y;
			FurnitureInfo[i][fiZ] = z;
			FurnitureInfo[i][fiRotX] = rx;
			FurnitureInfo[i][fiRotY] = ry;
			FurnitureInfo[i][fiRotZ] = rz;
			FurnitureInfo[i][fiVirtual] = GetPlayerVirtualWorld(playerid);
			FurnitureInfo[i][fiHouse] = PlayerInfo[playerid][pHouse];
			SaveObject(i);
			DestroyDynamicObject(ObjectEdited[playerid]);
			FurnitureInfo[i][fiObject] = CreateDynamicObject(FurnitureInfo[i][fiModel], FurnitureInfo[i][fiX], FurnitureInfo[i][fiY], FurnitureInfo[i][fiZ], FurnitureInfo[i][fiRotX], FurnitureInfo[i][fiRotY], FurnitureInfo[i][fiRotZ], FurnitureInfo[i][fiVirtual], -1, -1, 200.0);
            format(szQuery, 256, "Mebel dodany! Razem mebli w domu: %d/50.",  GetHouseObjects(PlayerInfo[playerid][pHouse]));
            SCM(playerid, COLOR_YELLOW, szQuery);
			GivePlayerCash(playerid, -500);
		}
		else if(EditHouse[playerid] == 2) {
		    new i = EditedObjectID[playerid];
			FurnitureInfo[i][fiX] = x;
			FurnitureInfo[i][fiY] = y;
			FurnitureInfo[i][fiZ] = z;
			FurnitureInfo[i][fiRotX] = rx;
			FurnitureInfo[i][fiRotY] = ry;
			FurnitureInfo[i][fiRotZ] = rz;
			FurnitureInfo[i][fiVirtual] = GetPlayerVirtualWorld(playerid);
			FurnitureInfo[i][fiHouse] = PlayerInfo[playerid][pHouse];
			DestroyDynamicObject(FurnitureInfo[i][fiObject]);//
			FurnitureInfo[i][fiObject] = CreateDynamicObject(FurnitureInfo[i][fiModel], FurnitureInfo[i][fiX], FurnitureInfo[i][fiY], FurnitureInfo[i][fiZ], FurnitureInfo[i][fiRotX], FurnitureInfo[i][fiRotY], FurnitureInfo[i][fiRotZ], FurnitureInfo[i][fiVirtual], -1, -1, 200.0);
	        SaveObject(i);
	        SCM(playerid, COLOR_YELLOW, "Pomyslnie przenios³e mebel!");
		} else if(EditO[playerid] == 1) {
				new szQuery[256];
				new i = EditedObjectID[playerid];
				Object[i][ouuid] = EdytowaneOB[playerid];
				Object[i][omodel] = EditOModel[playerid];
				Object[i][onumer] = EditNModel[playerid];
				Object[i][oLoc][0] = x;
				Object[i][oLoc][1] = y;
				Object[i][oLoc][2] = z;
				Object[i][oRot][0] = rx;
				Object[i][oRot][1] = ry;
				Object[i][oRot][2] = rz;
				Object[i][ovw] = GetPlayerVirtualWorld(playerid);
				SetDynamicObjectPos(Object[i][onumer],x,y,z);
				SetDynamicObjectRot(Object[i][onumer],rx,ry,rz);
				SendClientMessage(playerid,COLOR_GREY,"[Foxy-RP Mappers] Obiekt zapisany!");
				//format(string, sizeof(string), "WYKONALEM ZAPIS DO ZMIENNYCH:(%d,%d,%f,%f,%f,%f,%f, %f)",Object[i][omodel],Object[i][oLoc][0],Object[i][oLoc][1],Object[i][oLoc][2],Object[i][oRot][0],Object[i][oRot][1],Object[i][oRot][2]);
				format(string, sizeof(string), "POMYSLNIE ZEDYTOWALES OBIEKT O UUID: %d \tLOC X: %f\tLOC Y: %f \tLOC Z: %f ", EdytowaneOB[playerid], Object[i][oLoc][0], Object[i][oLoc][1], Object[i][oLoc][2]);
				//SendClientMessage(playerid,COLOR_LIGHTRED,string);
				string = "";
				format(string, sizeof(string), "VIRTUALNY SWIAT: %d MODEL: %d ID: %d", Object[i][ovw],Object[i][omodel],Object[i][onumer]);
				SendClientMessage(playerid,COLOR_LIGHTRED,string);
				mysql_format(SQL, szQuery, sizeof(szQuery),
				"UPDATE `obiekty` SET `Model`='%d', `X`='%f', `Y`='%f', `Z`='%f', `RotX`='%f', `RotY`='%f', `RotZ`='%f', `Virtual`='%d' WHERE `ID`='%d'", Object[i][omodel], Object[i][oLoc][0], Object[i][oLoc][1], Object[i][oLoc][2], Object[i][oRot][0], Object[i][oRot][1], Object[i][oRot][2], Object[i][ovw], Object[i][ouuid]);
				mysql_query(SQL, szQuery);
				Object[EdytowaneOB[playerid]][oLoc][0] = x;
				Object[EdytowaneOB[playerid]][oLoc][1] = y;
				Object[EdytowaneOB[playerid]][oLoc][2] = z;
				Object[EdytowaneOB[playerid]][oRot][0] = rx;
				Object[EdytowaneOB[playerid]][oRot][1] = ry;
				Object[EdytowaneOB[playerid]][oRot][2] = rz;

		} else if(EditO[playerid] == 2) {
				new szQuery[256];
				new i = EdytowaneOB[playerid];
				Bramy[i][buuid] = EdytowaneOB[playerid];
				Bramy[i][bmodel] = EditOModel[playerid];
				Bramy[i][bnumer] = EditNModel[playerid];
				Bramy[i][bLoc][0] = BramaX[playerid];
				Bramy[i][bLoc][1] = BramaY[playerid];
				Bramy[i][bLoc][2] = BramaZ[playerid];
				Bramy[i][bRot][0] = RotX[playerid];
				Bramy[i][bRot][1] = RotY[playerid];
				Bramy[i][bRot][2] = RotZ[playerid];
				Bramy[i][bLoc2][0] = x;
				Bramy[i][bLoc2][1] = y;
				Bramy[i][bLoc2][2] = z;
				Bramy[i][bRot2][0] = rx;
				Bramy[i][bRot2][1] = ry;
				Bramy[i][bRot2][2] = rz;
				Bramy[i][bvw] = GetPlayerVirtualWorld(playerid);
				SetDynamicObjectPos(Bramy[i][bnumer],Bramy[i][bLoc][0],Bramy[i][bLoc][1],Bramy[i][bLoc][2]);
				SetDynamicObjectRot(Bramy[i][bnumer],Bramy[i][bRot][0],Bramy[i][bRot][1],Bramy[i][bRot][2]);
				SendClientMessage(playerid,COLOR_LIGHTGREEN,"[Foxy-RP Bramy] Pozycja otwarcia bramy zapisana!");
				mysql_format(SQL, szQuery, sizeof(szQuery),
				"UPDATE `bramy` SET `Model`='%d', `X2`='%f', `Y2`='%f', `Z2`='%f', `RotX2`='%f', `RotY2`='%f', `RotZ2`='%f', `Virtual`='%d' WHERE `ID`='%d'", Bramy[i][bmodel], Bramy[i][bLoc2][0], Bramy[i][bLoc2][1], Bramy[i][bLoc2][2], Bramy[i][bRot2][0], Bramy[i][bRot2][1], Bramy[i][bRot2][2], Bramy[i][bvw], Bramy[i][buuid]);
				mysql_query(SQL, szQuery);
		} else if(EditO[playerid] == 3) {
				new szQuery[256];
				new i = EdytowaneOB[playerid];
				Bramy[i][buuid] = EdytowaneOB[playerid];
				Bramy[i][bmodel] = EditOModel[playerid];
				Bramy[i][bnumer] = EditNModel[playerid];
				Bramy[i][bLoc][0] = x;
				Bramy[i][bLoc][1] = y;
				Bramy[i][bLoc][2] = z;
				Bramy[i][bRot][0] = rx;
				Bramy[i][bRot][1] = ry;
				Bramy[i][bRot][2] = rz;
				Bramy[i][bvw] = GetPlayerVirtualWorld(playerid);
				SetDynamicObjectPos(Bramy[i][bnumer],Bramy[i][bLoc][0],Bramy[i][bLoc][1],Bramy[i][bLoc][2]);
				SetDynamicObjectRot(Bramy[i][bnumer],Bramy[i][bRot][0],Bramy[i][bRot][1],Bramy[i][bRot][2]);
				SendClientMessage(playerid,COLOR_LIGHTGREEN,"[Foxy-RP Bramy] Pozycja wyjsciowa bramy zapisana!");
				mysql_format(SQL, szQuery, sizeof(szQuery),
				"UPDATE `bramy` SET `Model`='%d', `X`='%f', `Y`='%f', `Z`='%f', `RotX`='%f', `RotY`='%f', `RotZ`='%f', `Virtual`='%d' WHERE `ID`='%d'", Bramy[i][bmodel], Bramy[i][bLoc][0], Bramy[i][bLoc][1], Bramy[i][bLoc][2], Bramy[i][bRot][0], Bramy[i][bRot][1], Bramy[i][bRot][2], Bramy[i][bvw], Bramy[i][buuid]);
				mysql_query(SQL, szQuery);
		}
	}

	if(response == EDIT_RESPONSE_CANCEL)
	{
	    if(EditHouse[playerid] == 1) DestroyDynamicObject(ObjectEdited[playerid]), SCM(playerid, -1, "Anulowales!");
	    if(EditHouse[playerid] == 2) SCM(playerid, -1, "Anulowales!");
		if(EditO[playerid] == 1) SCM(playerid, -1, "Anulowales misiu!");
	}
	return 1;
}

stock SaveObject(const id) {
	new szQuery[1024];
	format(szQuery, sizeof(szQuery), "UPDATE `fobjects` SET `Model`='%d', `X`='%f', `Y`='%f', `Z`='%f', `RotX`='%f', `RotY`='%f', `RotZ`='%f', `Virtual`='%d', `House`='%d' WHERE `ID`='%d'",
	FurnitureInfo[id][fiModel], FurnitureInfo[id][fiX], FurnitureInfo[id][fiY], FurnitureInfo[id][fiZ], FurnitureInfo[id][fiRotX], FurnitureInfo[id][fiRotY], FurnitureInfo[id][fiRotZ], FurnitureInfo[id][fiVirtual], FurnitureInfo[id][fiHouse], id);
	mysql_tquery(SQL, szQuery, "", "");
	return 1;
}

stock SaveSObject(const id) {
	new szQuery[1024];
	format(szQuery, sizeof(szQuery), "UPDATE `obiekty` SET `Model`='%d', `X`='%f', `Y`='%f', `Z`='%f', `RotX`='%f', `RotY`='%f', `RotZ`='%f', `Virtual`='0' WHERE `ID`='%d'",
	Object[id][omodel], Object[id][oLoc][0], Object[id][oLoc][1], Object[id][oLoc][2], Object[id][oRot][0], Object[id][oRot][1], Object[id][oRot][2], id);
	mysql_tquery(SQL, szQuery, "", "");
	return 1;
}

stock AddSObject(const id) {
	new szQuery[1024];
	format(szQuery, sizeof(szQuery), "INSERT INTO `obiekty` (`ID`, `Model`, `X`, `Y`, `Z`, `RotX`, `RotY`, `RotZ`, `Virtual`) values ('%d', '%d', %f', '%f', '%f', '%f', '%f', '%f', '0')",
	id, Object[id][omodel], Object[id][oLoc][0], Object[id][oLoc][1], Object[id][oLoc][2], Object[id][oRot][0], Object[id][oRot][1], Object[id][oRot][2]);
	mysql_tquery(SQL, szQuery, "", "");
	return 1;
}

public LoadFurnitures()
{
	new Cache: db = mysql_query(SQL, "SELECT * FROM `fobjects` ORDER BY `fobjects`.`ID` ASC");
	new objects = 0, x, result[256];
 	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
	    objects ++;
       	cache_get_field_content(i, "ID", result); x = strval(result);
       	cache_get_field_content(i, "Model", result); FurnitureInfo[x][fiModel] = strval(result);
       	cache_get_field_content(i, "X", result); FurnitureInfo[x][fiX] = floatstr(result);
     	cache_get_field_content(i, "Y", result); FurnitureInfo[x][fiY] = floatstr(result);
      	cache_get_field_content(i, "Z", result); FurnitureInfo[x][fiZ] = floatstr(result);
       	cache_get_field_content(i, "RotX", result); FurnitureInfo[x][fiRotX] = floatstr(result);
       	cache_get_field_content(i, "RotY", result); FurnitureInfo[x][fiRotY] = floatstr(result);
       	cache_get_field_content(i, "RotZ", result); FurnitureInfo[x][fiRotZ] = floatstr(result);
       	cache_get_field_content(i, "Virtual", result); FurnitureInfo[x][fiVirtual] = strval(result);
	   	cache_get_field_content(i, "House", result); FurnitureInfo[x][fiHouse] = strval(result);
        FurnitureInfo[x][fiObject] = CreateDynamicObject(FurnitureInfo[x][fiModel], FurnitureInfo[x][fiX], FurnitureInfo[x][fiY], FurnitureInfo[x][fiZ], FurnitureInfo[x][fiRotX], FurnitureInfo[x][fiRotY], FurnitureInfo[x][fiRotZ], FurnitureInfo[x][fiVirtual], -1, -1, 200.0);
	}
	printf("[MySQL Furniture]: %d obiektów zaladowano.", objects);
	cache_delete(db);
	return 1;
}

public LoadObjects()
{
	new objects = 0, x, result[256];
	for(new i = 1; i <= cache_get_row_count(); i++)
	{
		new j = i - 1;
	    objects ++;
       	cache_get_field_content(i, "ID", result); x = strval(result);
		//printf("%d", x);
		cache_get_field_content(i, "ID", result); Object[x][ouuid] = strval(result);
       	cache_get_field_content(i, "Model", result); Object[x][omodel] = strval(result);
       	cache_get_field_content(i, "X", result); Object[x][oLoc][0] = floatstr(result);
     	cache_get_field_content(i, "Y", result); Object[x][oLoc][1] = floatstr(result);
      	cache_get_field_content(i, "Z", result); Object[x][oLoc][2] = floatstr(result);
       	cache_get_field_content(i, "RotX", result); Object[x][oRot][0] = floatstr(result);
       	cache_get_field_content(i, "RotY", result); Object[x][oRot][1] = floatstr(result);
       	cache_get_field_content(i, "RotZ", result); Object[x][oRot][2] = floatstr(result);
       	cache_get_field_content(i, "Virtual", result); Object[x][ovw] = strval(result);
		cache_get_field_content(i, "Stworzyl", result); Object[x][oowner] = strval(result);
        Object[x][onumer] = CreateDynamicObject(Object[x][omodel], Object[x][oLoc][0], Object[x][oLoc][1], Object[x][oLoc][2], Object[x][oRot][0], Object[x][oRot][1], Object[x][oRot][2], Object[x][ovw], -1, -1, 200.0);
	}
	printf("[MySQL Obiekty]: %d obiektów zaladowano.", objects);
	return 1;
}

public LoadBramy()
{
	new Cache: db = mysql_query(SQL, "SELECT * FROM `bramy` ORDER BY `bramy`.`ID` ASC");
	new bram = 0, x, result[256];
 	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
	    bram ++;
       	cache_get_field_content(i, "ID", result); x = strval(result);
		cache_get_field_content(i, "ID", result); Bramy[x][buuid] = strval(result);
       	cache_get_field_content(i, "Model", result); Bramy[x][bmodel] = strval(result);
       	cache_get_field_content(i, "X", result); Bramy[x][bLoc][0] = floatstr(result);
     	cache_get_field_content(i, "Y", result); Bramy[x][bLoc][1] = floatstr(result);
      	cache_get_field_content(i, "Z", result); Bramy[x][bLoc][2] = floatstr(result);
       	cache_get_field_content(i, "RotX", result); Bramy[x][bRot][0] = floatstr(result);
       	cache_get_field_content(i, "RotY", result); Bramy[x][bRot][1] = floatstr(result);
       	cache_get_field_content(i, "RotZ", result); Bramy[x][bRot][2] = floatstr(result);
       	cache_get_field_content(i, "X2", result); Bramy[x][bLoc2][0] = floatstr(result);
     	cache_get_field_content(i, "Y2", result); Bramy[x][bLoc2][1] = floatstr(result);
      	cache_get_field_content(i, "Z2", result); Bramy[x][bLoc2][2] = floatstr(result);
       	cache_get_field_content(i, "RotX2", result); Bramy[x][bRot2][0] = floatstr(result);
       	cache_get_field_content(i, "RotY2", result); Bramy[x][bRot2][1] = floatstr(result);
       	cache_get_field_content(i, "RotZ2", result); Bramy[x][bRot2][2] = floatstr(result);
       	cache_get_field_content(i, "Virtual", result); Bramy[x][bvw] = strval(result);
		cache_get_field_content(i, "Stworzyl", result); Bramy[x][bowner] = strval(result);
		cache_get_field_content(i, "Faction", result); Bramy[x][bfaction] = strval(result);
		cache_get_field_content(i, "Faction2", result); Bramy[x][bfaction2] = strval(result);
		cache_get_field_content(i, "Faction3", result); Bramy[x][bfaction3] = strval(result);
		cache_get_field_content(i, "bRange", result); Bramy[x][brange] = strval(result);
        Bramy[x][bnumer]  = CreateDynamicObject(Bramy[x][bmodel], Bramy[x][bLoc][0], Bramy[x][bLoc][1], Bramy[x][bLoc][2], Bramy[x][bRot][0], Bramy[x][bRot][1], Bramy[x][bRot][2], Bramy[x][bvw], -1, -1, 200.0);
		//printf("MoJ OBIEKT KTURY SIE LADUJE TO: %d A UUID MA: %d POZ X: %f", Object[x][onumer], Object[x][ouuid], Object[x][oLoc][0]);
	}
	printf("[MySQL Bramy]: %d bram zaladowano.", bram);
	//printf("[MySQL Obiekty]: %d ostatnim obiektem.", GetLastObject());
	cache_delete(db);
	return 1;
}

public LoadWejscia()
{
	new Cache: db = mysql_query(SQL, "SELECT * FROM `wejscia` ORDER BY `wejscia`.`ID` ASC");
	new entry = 0, x, result[256], text[150], text2[150];
 	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
	    entry ++;
       	cache_get_field_content(i, "ID", result); x = strval(result);
		cache_get_field_content(i, "ID", result); Wejscie[x][wuuid] = strval(result);
       	cache_get_field_content(i, "X", result); Wejscie[x][wLoc][0] = floatstr(result);
     	cache_get_field_content(i, "Y", result); Wejscie[x][wLoc][1] = floatstr(result);
      	cache_get_field_content(i, "Z", result); Wejscie[x][wLoc][2] = floatstr(result);
       	cache_get_field_content(i, "X2", result); Wejscie[x][wLoc2][0] = floatstr(result);
     	cache_get_field_content(i, "Y2", result); Wejscie[x][wLoc2][1] = floatstr(result);
      	cache_get_field_content(i, "Z2", result); Wejscie[x][wLoc2][2] = floatstr(result);
       	cache_get_field_content(i, "Virtual", result); Wejscie[x][wvw] = strval(result);
		cache_get_field_content(i, "Virtual2", result); Wejscie[x][wvw2] = strval(result);
		cache_get_field_content(i, "Interior", result); Wejscie[x][winterior] = strval(result);
		cache_get_field_content(i, "Interior2", result); Wejscie[x][winterior2] = strval(result);
		cache_get_field_content(i, "Stworzyl", result); Wejscie[x][wowner] = strval(result);
		cache_get_field_content(i, "Opis", Wejscie[x][wtext], SQL, 129);
		cache_get_field_content(i, "Faction", result); Wejscie[x][wefaction] = strval(result);
		cache_get_field_content(i, "Faction2", result); Wejscie[x][wefaction2] = strval(result);
		cache_get_field_content(i, "Faction3", result); Wejscie[x][wefaction3] = strval(result);
		format(text, sizeof(text), "%s (ID: %d)\nUzyj /wejdz lub wcisnij 'F' aby wejsc", Wejscie[x][wtext], Wejscie[x][wuuid]);
		//printf("%s", Wejscie[x][wtext]);
        Wejscie[Wejscie[x][wuuid]][wejscie3d] = CreateDynamic3DTextLabel(text, COLOR_GREY, Wejscie[x][wLoc][0], Wejscie[x][wLoc][1], Wejscie[x][wLoc][2], 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 1, Wejscie[x][wvw], Wejscie[x][winterior], -1, 100.00);
		format(text2, sizeof(text2), "Wyjscie (ID: %d)\nUzyj /wyjdz lub wcisnij 'F' aby wyjsc", Wejscie[x][wuuid]);
		Wejscie[Wejscie[x][wuuid]][wyjscie3d] = CreateDynamic3DTextLabel(text2, COLOR_GREY, Wejscie[x][wLoc2][0], Wejscie[x][wLoc2][1], Wejscie[x][wLoc2][2], 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 1, Wejscie[x][wvw2], Wejscie[x][winterior2], -1, 100.00);
		Wejscie[Wejscie[x][wuuid]][wpickup] = CreateDynamicPickup(1239, 23, Wejscie[x][wLoc][0], Wejscie[x][wLoc][1], Wejscie[x][wLoc][2], Wejscie[x][wvw], -1, -1, 100.0); 
	}
	printf("[MySQL Wejscia]: %d wejsc zaladowano.", entry);
	cache_delete(db);
	return 1;
}


function LoadJobs()
{
	new
		Cache: db = mysql_query (SQL, "SELECT * FROM `jobs` ORDER BY `jobs`.`ID` ASC"),
		x,
		jobs,
		result[256],
		string[256];

 	for (new i, j = cache_get_row_count (); i != j; ++i)
	{
	    jobs ++;
       	cache_get_field_content(i, "ID", result); 				x = strval(result);
       	cache_get_field_content(i, "Name", result); 			format(JobInfo[x][jName], 128, result);
     	cache_get_field_content(i, "NeedLevel", result); 		JobInfo[x][jLevel] = strval(result);
       	cache_get_field_content(i, "PosX", result); 			JobInfo[x][jPosX] = floatstr(result);
       	cache_get_field_content(i, "PosY", result); 			JobInfo[x][jPosY] = floatstr(result);
		cache_get_field_content(i, "PosZ", result); 			JobInfo[x][jPosZ] = floatstr(result);
      	cache_get_field_content(i, "Legal", result); 			JobInfo[x][jLegal] = strval(result);
      	cache_get_field_content(i, "Skill1Veh", result); 		JobInfo[x][jSkill1Veh] = strval(result);
      	cache_get_field_content(i, "Skill2Veh", result); 		JobInfo[x][jSkill2Veh] = strval(result);
		cache_get_field_content(i, "Skill3Veh", result); 		JobInfo[x][jSkill3Veh] = strval(result);
		cache_get_field_content(i, "Skill4Veh", result); 		JobInfo[x][jSkill4Veh] = strval(result);
		cache_get_field_content(i, "Skill5Veh", result); 		JobInfo[x][jSkill5Veh] = strval(result);
		cache_get_field_content(i, "Skill6Veh", result); 		JobInfo[x][jSkill6Veh] = strval(result);

		format(string, sizeof(string), "{D10A0A}Praca %s{FFFFFF}\nAby podjac te prace, potrzebujesz poziomu {D10A0A}%d{FFFFFF}.\nWpisz {D10A0A}/getjob{FFFFFF} aby podjac te prace.", JobInfo[x][jName], JobInfo[x][jLevel]);
		JobInfo[x][jLabel] = CreateDynamic3DTextLabel(string, 0xFFFFFF99, JobInfo[x][jPosX], JobInfo[x][jPosY], JobInfo[x][jPosZ], 25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
		JobInfo[x][jPickup] = CreateDynamicPickup(1275, 23, JobInfo[x][jPosX], JobInfo[x][jPosY], JobInfo[x][jPosZ], -1, -1, -1, 100.0);
	}
	printf("[MySQL PRace]: %d laduje...", jobs);
	cache_delete(db);
	return 1;
}

public LoadProperty()
{
	new result[100],index = 0, x;
    mysql_query(SQL,"SELECT * FROM `houses` ORDER BY `houses`.`ID` ASC");
    mysql_store_result();
    while(mysql_retrieve_row())
    {
		index++;
		new i = index;
		mysql_get_field("ID", result); 				x = strval(result);
		mysql_get_field("ID", result);				HouseInfo[x][hID] = strval(result);
   	    mysql_get_field("Entrancex", result);		HouseInfo[x][hEntrancex] = floatstr(result);
    	mysql_get_field("Entrancey", result);		HouseInfo[x][hEntrancey] = floatstr(result);
        mysql_get_field("Entrancez", result);		HouseInfo[x][hEntrancez] = floatstr(result);
        mysql_get_field("Exitx", result);			HouseInfo[x][hExitx] = floatstr(result);
        mysql_get_field("Exity", result);			HouseInfo[x][hExity] = floatstr(result);
        mysql_get_field("Exitz", result);			HouseInfo[x][hExitz] = floatstr(result);
        mysql_get_field("Owner", result);			strmid(HouseInfo[x][hOwner], result, 0, 32, 32);
        mysql_get_field("Discription", result);		strmid(HouseInfo[x][hDiscription], result, 0, 24, 24);
        mysql_get_field("Value", result);			HouseInfo[x][hValue] = strval(result);
        mysql_get_field("Hel", result);				HouseInfo[x][hHel] = strval(result);
        mysql_get_field("Arm", result);				HouseInfo[x][hArm] = strval(result);
        mysql_get_field("Interior", result);		HouseInfo[x][hInterior] = strval(result);
        mysql_get_field("Lockk", result);			HouseInfo[x][hLock] = strval(result);
        mysql_get_field("Owned", result);			HouseInfo[x][hOwned] = strval(result);
        mysql_get_field("Rent", result);			HouseInfo[x][hRent] = strval(result);
        mysql_get_field("Rentabil", result);		HouseInfo[x][hRentabil] = strval(result);
        mysql_get_field("Takings", result);			HouseInfo[x][hTakings] = strval(result);
        mysql_get_field("Virtual", result);			HouseInfo[x][hVirtual] = strval(result);
	}
	mysql_free_result();
	printf("[MySQL Domy]: %d domów", index);
	housess = GetLastHouse();
	return 1;
}

stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,PX,PY,PZ);
	    GetVehiclePos(vehicleid, X,Y,Z);
	    new Float:SDistance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	    if(SDistance <= radi*radi)
	    {
	        return 1;
	    }
	}
	return 0;
}


new Float:JailSpawns[20][4] = { //CELE - SPAWNY - ARESZT
{172.1669,-203.2810,342.9163,4.0120},
{167.3739,-203.3728,342.9163,1.1293},
{162.7048,-203.1434,342.9163,1.6098},
{157.6633,-203.3787,342.9163,4.9729},
{171.8841,-181.2247,342.9163,177.5977},
{167.0560,-181.8071,342.9163,180.0000},
{162.3061,-181.5653,342.9163,181.4414},
{157.5824,-181.7088,342.9163,180.4805},
{171.3581,-202.8537,346.9174,354.5467},
{167.2576,-202.8443,346.9174,0.7925},
{162.5787,-202.7310,346.9174,2.2338},
{157.9245,-203.2501,346.9174,2.7143},
{152.9730,-203.3318,346.9174,358.3903},
{148.1369,-203.2624,346.9174,355.0271},
{148.2460,-182.7622,346.9174,179.6632},
{152.7247,-182.6222,346.9174,174.8587},
{157.4455,-182.7536,346.9174,188.7917},
{162.0473,-182.9957,346.9174,181.5850},
{167.4720,-182.8368,346.9174,174.8587},
{171.3321,-183.0900,346.9174,177.2609}
};

new Float:FederalSpawns[5][4] = { //CELE - SPAWNY - ARESZT
{4242.150878,-2049.229492,54.325698,82.15},
{4242.772949, -2055.586181, 54.325698, 84.08},
{4242.247558, -2061.466064, 54.325698, 87.07},
{4242.350097, -2070.271240, 54.319999, 89.58},
{4241.835937, -2076.269775, 54.319999, 266.95}
};


new cell[21];
stock Cele() {
	cell[2] = CreateObject(2930, 147.358, -184.27, 348.54, 0.00, 0.00, 90.00); 
	cell[3] = CreateObject(2930, 152.128, -200.26, 348.55, 0.00, 0.00, 90.00); 
	cell[4] = CreateObject(2930, 152.168, -184.27, 348.54, 0.00, 0.00, 90.00); 
	cell[5] = CreateObject(2930, 156.818, -200.27, 344.53, 0.00, 0.00, 90.00); 
	cell[6] = CreateObject(2930, 156.848, -184.22, 344.53, 0.00, 0.00, 90.00); 
	cell[7] = CreateObject(2930, 156.868, -184.29, 348.54, 0.00, 0.00, 90.00); 
	cell[8] = CreateObject(2930, 156.908, -200.29, 348.55, 0.00, 0.00, 90.00); 
	cell[9] = CreateObject(2930, 161.568, -200.25, 344.53, 0.00, 0.00, 90.00); 
	cell[10] = CreateObject(2930, 161.658, -200.25, 348.55, 0.00, 0.00, 90.00); 
	cell[11] = CreateObject(2930, 161.668, -184.21, 344.53, 0.00, 0.00, 90.00); 
	cell[12] = CreateObject(2930, 161.668, -184.23, 348.54, 0.00, 0.00, 90.00); 
	cell[13] = CreateObject(2930, 166.328, -184.24, 348.54, 0.00, 0.00, 90.00); 
	cell[14] = CreateObject(2930, 166.368, -184.25, 344.53, 0.00, 0.00, 90.00); 
	cell[15] = CreateObject(2930, 166.368, -200.25, 348.55, 0.00, 0.00, 90.00); 
	cell[16] = CreateObject(2930, 166.368, -200.26, 344.53, 0.00, 0.00, 90.00); 
	cell[17] = CreateObject(2930, 170.558, -184.32, 348.54, 0.00, 0.00, 90.00); 
	cell[18] = CreateObject(2930, 170.578, -200.25, 348.55, 0.00, 0.00, 90.00); 
	cell[19] = CreateObject(2930, 170.878, -184.23, 344.53, 0.00, 0.00, 90.00); 
	cell[20] = CreateObject(2930, 170.878, -200.29, 344.53, 0.00, 0.00, 90.00);
}
	// areszt z interiors.inc
	//CreateDynamicObject(2930, 1099.10, 345.86, 585.41, 0.00, 0.00, 90.00, 1, -1, -1, 300.00, 300.00);   bramy dodane z /dodajbrame
	//CreateDynamicObject(2930, 1123.38, 329.6960, 585.35, 0.00, 0.00, 0.00, 1, -1, -1, 300.00, 300.00);  // To jails +1.224

main() {
	CreateVehicle(561, 0.0, 0.0, 0.0, 0.0, 0, 0, 0);
}

// ONGAMEMODEINIT
public OnGameModeInit()
{
	mysql_query (SQL, "SET NAMES cp1251;" ) ; 
	//mysql_query (SQL, "SET SESSION character_set_server = 'utf8';" ) ;
	pociong = AddStaticVehicleEx(538, 1466.8977, 2632.2500,12.1256,270.0000,1,1, 120);
	ConnectNPC("Pociong","trainbot");
	
	Cele();
	
	CreateDynamicObject(970, 266.37939, 82.12314, 1000.48004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 266.37939, 82.12314, 1001.25946,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 266.37939, 82.12314, 1002.01904,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 266.37939, 82.12314, 1002.83704,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 266.37354, 77.59760, 1000.47998,   0.00000, 0.00000, 89.94000);
	CreateDynamicObject(970, 266.37354, 77.59760, 1001.25946,   0.00000, 0.00000, 89.94000);
	CreateDynamicObject(970, 266.37354, 77.59760, 1002.03833,   0.00000, 0.00000, 89.94000);
	CreateDynamicObject(970, 266.37354, 77.59760, 1002.81781,   0.00000, 0.00000, 89.94000);
	CreateDynamicObject(970, 266.36737, 86.60525, 1000.48004,   0.00000, 0.00000, 90.29999);
	CreateDynamicObject(970, 266.36737, 86.60525, 1001.27924,   0.00000, 0.00000, 90.29999);
	CreateDynamicObject(970, 266.36737, 86.60525, 1002.07922,   0.00000, 0.00000, 90.29999);
	CreateDynamicObject(970, 266.36737, 86.60525, 1002.85907,   0.00000, 0.00000, 90.29999);

    CreateDynamicObject(3095, 166.58797, 1849.71204, 26.68690,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1496, 1780.61328, -1569.65259, 1737.62109,   0.00000, 0.00000, -88.43999); // usa
 
  
	// ROB!
	CreateDynamicObject(14576, -296.85858154297, 1494.0521240234, 1078.1756591797, 0, 0, 0);
	CreateDynamicObject(2634, -296.79376220703, 1501.7164306641, 1071.6612548828, 0, 0, 180);
	CreateDynamicObject(2332, -299.64529418945, 1517.2493896484, 1070.4569091797, 0, 0, 0);
	CreateDynamicObject(2332, -298.7919921875, 1517.2420654297, 1070.4569091797, 0, 0, 0);
	CreateDynamicObject(2332, -297.92276000977, 1517.2474365234, 1070.4569091797, 0, 0, 0);
	CreateDynamicObject(2332, -297.0446472168, 1517.2532958984, 1070.4569091797, 0, 0, 0);
	CreateDynamicObject(2332, -296.16833496094, 1517.26953125, 1070.4569091797, 0, 0, 0);
	CreateDynamicObject(2332, -295.28771972656, 1517.3234863281, 1070.4569091797, 0, 0, 0);
	CreateDynamicObject(2332, -294.40380859375, 1517.3400878906, 1070.4569091797, 0, 0, 0);
	CreateDynamicObject(2332, -299.50650024414, 1517.0925292969, 1071.3913574219, 0, 0, 0);
	CreateDynamicObject(2332, -298.72805786133, 1517.0700683594, 1071.3913574219, 0, 0, 0);
	CreateDynamicObject(2332, -297.94815063477, 1517.1951904297, 1071.3913574219, 0, 0, 0);
	CreateDynamicObject(2332, -297.0751953125, 1517.1483154297, 1071.3913574219, 0, 0, 0);
	CreateDynamicObject(2332, -296.12149047852, 1517.2202148438, 1071.3913574219, 0, 0, 0);
	CreateDynamicObject(2332, -295.23345947266, 1517.2153320313, 1071.3913574219, 0, 0, 0);
	CreateDynamicObject(2332, -294.41537475586, 1517.4155273438, 1071.3913574219, 0, 0, 0);
	CreateDynamicObject(2754, -290.54275512695, 1493.1734619141, 1071.0080566406, 0, 0, 0);
	CreateDynamicObject(2180, -292.33065795898, 1497.4266357422, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2180, -294.31716918945, 1497.3857421875, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2180, -296.32635498047, 1497.4061279297, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2180, -298.34826660156, 1497.4069824219, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2180, -300.37774658203, 1497.4206542969, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2180, -302.3835144043, 1497.4039306641, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2180, -304.87002563477, 1499.376953125, 1070.1059570313, 0, 0, 270);
	CreateDynamicObject(2180, -304.87603759766, 1501.3273925781, 1070.1059570313, 0, 0, 270);
	CreateDynamicObject(2180, -290.44012451172, 1498.3767089844, 1070.1059570313, 0, 0, 90);
	CreateDynamicObject(2180, -290.41708374023, 1500.3509521484, 1070.1059570313, 0, 0, 90);
	CreateDynamicObject(2309, -300.53225708008, 1498.4547119141, 1070.1059570313, 0, 0, 180);
	CreateDynamicObject(2309, -298.62414550781, 1498.4822998047, 1070.1059570313, 0, 0, 179.99450683594);
	CreateDynamicObject(2309, -296.85922241211, 1498.494140625, 1070.1059570313, 0, 0, 179.99450683594);
	CreateDynamicObject(2309, -295.17156982422, 1498.6375732422, 1070.1059570313, 0, 0, 179.99450683594);
	CreateDynamicObject(2309, -293.26782226563, 1498.6136474609, 1070.1059570313, 0, 0, 179.99450683594);
	CreateDynamicObject(2309, -291.59939575195, 1498.7593994141, 1070.1059570313, 0, 0, 179.99450683594);
	CreateDynamicObject(1649, -292.86682128906, 1497.2641601563, 1073.5322265625, 0, 0, 0);
	CreateDynamicObject(1649, -296.59625244141, 1497.3249511719, 1073.5714111328, 0, 0, 0);
	CreateDynamicObject(1649, -300.78131103516, 1497.3314208984, 1073.5513916016, 0, 0, 0);
	CreateDynamicObject(1491, -304.36709594727, 1497.1517333984, 1070.1419677734, 0, 0, 0);
	CreateDynamicObject(2180, -304.36709594727, 1497.5606689453, 1072.4119873047, 0, 0, 0);
	CreateDynamicObject(3260, -303.89990234375, 1497.4362792969, 1074.2059326172, 0, 0, 0);
	CreateDynamicObject(1649, -305.39376831055, 1499.4538574219, 1073.8479003906, 0, 0, 270);
	CreateDynamicObject(1649, -290.15014648438, 1499.8581542969, 1073.5062255859, 0, 0, 90);
	CreateDynamicObject(2754, -290.54351806641, 1493.9809570313, 1071.0080566406, 0, 0, 0);
	CreateDynamicObject(2754, -290.54168701172, 1494.7744140625, 1071.0080566406, 0, 0, 0);
	CreateDynamicObject(2754, -304.90341186523, 1493.2034912109, 1071.0153808594, 0, 0, 180);
	CreateDynamicObject(2754, -304.90866088867, 1493.9771728516, 1071.0080566406, 0, 0, 179.99450683594);
	CreateDynamicObject(2754, -304.9248046875, 1494.7788085938, 1071.0056152344, 0, 0, 180);
	CreateDynamicObject(2771, -300.58331298828, 1497.1810302734, 1071.1298828125, 0, 0, 0);
	CreateDynamicObject(2771, -298.56274414063, 1497.2697753906, 1071.1298828125, 0, 0, 0);
	CreateDynamicObject(2771, -296.6213684082, 1497.3538818359, 1071.1298828125, 0, 0, 0);
	CreateDynamicObject(2771, -295.02041625977, 1497.2557373047, 1071.1298828125, 0, 0, 0);
	CreateDynamicObject(2771, -293.24566650391, 1497.4337158203, 1071.1298828125, 0, 0, 0);
	CreateDynamicObject(2771, -291.58123779297, 1497.4664306641, 1071.1298828125, 0, 0, 0);
	CreateDynamicObject(2614, -296.94174194336, 1481.5251464844, 1073.6715087891, 0, 0, 180);
	CreateDynamicObject(2614, -296.79406738281, 1501.4273681641, 1074.1142578125, 0, 0, 0);
	CreateDynamicObject(2957, -297.67880249023, 1481.3848876953, 1071.3101806641, 0, 0, 0);
	CreateDynamicObject(1892, -297.18051147461, 1482.3099365234, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(1892, -303.97128295898, 1495.9926757813, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2894, -294.09530639648, 1497.2047119141, 1070.9769287109, 0, 0, 0);
	CreateDynamicObject(1622, -291.38186645508, 1491.8608398438, 1074.1547851563, 0, 0, 0);
	CreateDynamicObject(1627, -291.01019287109, 1491.9876708984, 1073.0720214844, 0, 0, 0);
	CreateDynamicObject(1616, -291.35781860352, 1496.8079833984, 1074.1136474609, 0, 0, 0);
	CreateDynamicObject(1550, -302.4655456543, 1497.7889404297, 1070.4992675781, 0, 0, 0);
	CreateDynamicObject(3389, -304.92987060547, 1489.1530761719, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(3389, -304.91171264648, 1488.1590576172, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(3389, -304.93658447266, 1490.1348876953, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(3389, -304.93856811523, 1491.0897216797, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2009, -305.70278930664, 1483.0612792969, 1070.1059570313, 0, 0, 270);
	CreateDynamicObject(2120, -305.58801269531, 1482.1243896484, 1070.7437744141, 0, 0, 180);
	CreateDynamicObject(14532, -307.78625488281, 1481.8435058594, 1071.0886230469, 0, 0, 0);

	CreateDynamicObject(14576, -296.85858154297, 1494.0521240234, 1078.1756591797, 0, 0, 0);
	CreateDynamicObject(2634, -296.79376220703, 1501.7164306641, 1071.6612548828, 0, 0, 180); //This is the vault door, script it to blow open!
	CreateDynamicObject(2332, -299.64529418945, 1517.2493896484, 1070.4569091797, 0, 0, 0);
	CreateDynamicObject(2332, -298.7919921875, 1517.2420654297, 1070.4569091797, 0, 0, 0);
	CreateDynamicObject(2332, -297.92276000977, 1517.2474365234, 1070.4569091797, 0, 0, 0);
	CreateDynamicObject(2332, -297.0446472168, 1517.2532958984, 1070.4569091797, 0, 0, 0);
	CreateDynamicObject(2332, -296.16833496094, 1517.26953125, 1070.4569091797, 0, 0, 0);
	CreateDynamicObject(2332, -295.28771972656, 1517.3234863281, 1070.4569091797, 0, 0, 0);
	CreateDynamicObject(2332, -294.40380859375, 1517.3400878906, 1070.4569091797, 0, 0, 0);
	CreateDynamicObject(2332, -299.50650024414, 1517.0925292969, 1071.3913574219, 0, 0, 0);
	CreateDynamicObject(2332, -298.72805786133, 1517.0700683594, 1071.3913574219, 0, 0, 0);
	CreateDynamicObject(2332, -297.94815063477, 1517.1951904297, 1071.3913574219, 0, 0, 0);
	CreateDynamicObject(2332, -297.0751953125, 1517.1483154297, 1071.3913574219, 0, 0, 0);
	CreateDynamicObject(2332, -296.12149047852, 1517.2202148438, 1071.3913574219, 0, 0, 0);
	CreateDynamicObject(2332, -295.23345947266, 1517.2153320313, 1071.3913574219, 0, 0, 0);
	CreateDynamicObject(2332, -294.41537475586, 1517.4155273438, 1071.3913574219, 0, 0, 0);
	CreateDynamicObject(2754, -290.54275512695, 1493.1734619141, 1071.0080566406, 0, 0, 0);
	CreateDynamicObject(2180, -292.33065795898, 1497.4266357422, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2180, -294.31716918945, 1497.3857421875, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2180, -296.32635498047, 1497.4061279297, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2180, -298.34826660156, 1497.4069824219, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2180, -300.37774658203, 1497.4206542969, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2180, -302.3835144043, 1497.4039306641, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2180, -304.87002563477, 1499.376953125, 1070.1059570313, 0, 0, 270);
	CreateDynamicObject(2180, -304.87603759766, 1501.3273925781, 1070.1059570313, 0, 0, 270);
	CreateDynamicObject(2180, -290.44012451172, 1498.3767089844, 1070.1059570313, 0, 0, 90);
	CreateDynamicObject(2180, -290.41708374023, 1500.3509521484, 1070.1059570313, 0, 0, 90);
	CreateDynamicObject(2309, -300.53225708008, 1498.4547119141, 1070.1059570313, 0, 0, 180);
	CreateDynamicObject(2309, -298.62414550781, 1498.4822998047, 1070.1059570313, 0, 0, 179.99450683594);
	CreateDynamicObject(2309, -296.85922241211, 1498.494140625, 1070.1059570313, 0, 0, 179.99450683594);
	CreateDynamicObject(2309, -295.17156982422, 1498.6375732422, 1070.1059570313, 0, 0, 179.99450683594);
	CreateDynamicObject(2309, -293.26782226563, 1498.6136474609, 1070.1059570313, 0, 0, 179.99450683594);
	CreateDynamicObject(2309, -291.59939575195, 1498.7593994141, 1070.1059570313, 0, 0, 179.99450683594);
	CreateDynamicObject(1649, -292.86682128906, 1497.2641601563, 1073.5322265625, 0, 0, 0);
	CreateDynamicObject(1649, -296.59625244141, 1497.3249511719, 1073.5714111328, 0, 0, 0);
	CreateDynamicObject(1649, -300.78131103516, 1497.3314208984, 1073.5513916016, 0, 0, 0);
	CreateDynamicObject(1491, -304.36709594727, 1497.1517333984, 1070.1419677734, 0, 0, 0);
	CreateDynamicObject(2180, -304.36709594727, 1497.5606689453, 1072.4119873047, 0, 0, 0);
	CreateDynamicObject(3260, -303.89990234375, 1497.4362792969, 1074.2059326172, 0, 0, 0);
	CreateDynamicObject(1649, -305.39376831055, 1499.4538574219, 1073.8479003906, 0, 0, 270);
	CreateDynamicObject(1649, -290.15014648438, 1499.8581542969, 1073.5062255859, 0, 0, 90);
	CreateDynamicObject(2754, -290.54351806641, 1493.9809570313, 1071.0080566406, 0, 0, 0);
	CreateDynamicObject(2754, -290.54168701172, 1494.7744140625, 1071.0080566406, 0, 0, 0);
	CreateDynamicObject(2754, -304.90341186523, 1493.2034912109, 1071.0153808594, 0, 0, 180);
	CreateDynamicObject(2754, -304.90866088867, 1493.9771728516, 1071.0080566406, 0, 0, 179.99450683594);
	CreateDynamicObject(2754, -304.9248046875, 1494.7788085938, 1071.0056152344, 0, 0, 180);
	CreateDynamicObject(2771, -300.58331298828, 1497.1810302734, 1071.1298828125, 0, 0, 0);
	CreateDynamicObject(2771, -298.56274414063, 1497.2697753906, 1071.1298828125, 0, 0, 0);
	CreateDynamicObject(2771, -296.6213684082, 1497.3538818359, 1071.1298828125, 0, 0, 0);
	CreateDynamicObject(2771, -295.02041625977, 1497.2557373047, 1071.1298828125, 0, 0, 0);
	CreateDynamicObject(2771, -293.24566650391, 1497.4337158203, 1071.1298828125, 0, 0, 0);
	CreateDynamicObject(2771, -291.58123779297, 1497.4664306641, 1071.1298828125, 0, 0, 0);
	CreateDynamicObject(2614, -296.94174194336, 1481.5251464844, 1073.6715087891, 0, 0, 180);
	CreateDynamicObject(2614, -296.79406738281, 1501.4273681641, 1074.1142578125, 0, 0, 0);
	CreateDynamicObject(2957, -297.67880249023, 1481.3848876953, 1071.3101806641, 0, 0, 0);
	CreateDynamicObject(1892, -297.18051147461, 1482.3099365234, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(1892, -303.97128295898, 1495.9926757813, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2894, -294.09530639648, 1497.2047119141, 1070.9769287109, 0, 0, 0);
	CreateDynamicObject(1622, -291.38186645508, 1491.8608398438, 1074.1547851563, 0, 0, 0);
	CreateDynamicObject(1627, -291.01019287109, 1491.9876708984, 1073.0720214844, 0, 0, 0);
	CreateDynamicObject(1616, -291.35781860352, 1496.8079833984, 1074.1136474609, 0, 0, 0);
	CreateDynamicObject(1550, -302.4655456543, 1497.7889404297, 1070.4992675781, 0, 0, 0);
	CreateDynamicObject(3389, -304.92987060547, 1489.1530761719, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(3389, -304.91171264648, 1488.1590576172, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(3389, -304.93658447266, 1490.1348876953, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(3389, -304.93856811523, 1491.0897216797, 1070.1059570313, 0, 0, 0);
	CreateDynamicObject(2009, -305.70278930664, 1483.0612792969, 1070.1059570313, 0, 0, 270);
	CreateDynamicObject(2120, -305.58801269531, 1482.1243896484, 1070.7437744141, 0, 0, 180);
	CreateDynamicObject(14532, -307.78625488281, 1481.8435058594, 1071.0886230469, 0, 0, 0);
//ROB KONIEC

	
	skinlist = LoadModelSelectionMenu("skins.txt");
	furnitures = LoadModelSelectionMenu("furnitures.txt");
	fskins[0] = LoadModelSelectionMenu("f1.txt");
	fskins[1] = LoadModelSelectionMenu("f2.txt");
	fskins[2] = LoadModelSelectionMenu("f3.txt");
	fskins[3] = LoadModelSelectionMenu("f4.txt");
	fskins[4] = LoadModelSelectionMenu("f5.txt");
	fskins[5] = LoadModelSelectionMenu("f6.txt");
	fskins[6] = LoadModelSelectionMenu("f7.txt");
	fskins[7] = LoadModelSelectionMenu("f8.txt");
	fskins[8] = LoadModelSelectionMenu("f9.txt");
	fskins[9] = LoadModelSelectionMenu("f10.txt");
	fskins[10] = LoadModelSelectionMenu("f11.txt");
	fskins[11] = LoadModelSelectionMenu("f12.txt");
	fskins[12] = LoadModelSelectionMenu("f13.txt");
	fskins[13] = LoadModelSelectionMenu("f14.txt");
	fskins[14] = LoadModelSelectionMenu("f15.txt");	


	// Dealer
	CreateDynamicObject(1557, 326.31738, -1513.20422, 34.93900,   0.00000, 0.00000, 50.39998);
	CreateDynamicObject(1557, 328.21768, -1510.92798, 34.93896,   0.00000, 0.00000, -130.02005);


	mysql_log(LOG_ERROR, LOG_TYPE_TEXT);
	SQL = mysql_connect("147.135.199.42", "frp", "frp", "pmtkCjfE9VwA4pb8RJFQbz9Tr");
	//SQL = mysql_connect("127.0.0.1", "frp", "frp", "pmtkCjfE9VwA4pb8RJFQbz9Tr");
	mysql_query(SQL, "SET NAMES 'cp1250'");
	mysql_tquery(SQL, "SET NAMES 'cp1250'", "", "");
	LoadGlobalTimers();
	SetNameTagDrawDistance(30);
	ShowNameTags(0);
	EnableStuntBonusForAll(0);
	ShowPlayerMarkers(0);
	LimitPlayerMarkerRadius(5.0);
	new string[MAX_PLAYER_NAME];
    new string1[MAX_PLAYER_NAME];
	new szQuery[128];
    format(szQuery, sizeof(szQuery), "SELECT * FROM `users`");
    new Cache: result = mysql_query(SQL, szQuery);
 	ServerAccounts = cache_get_row_count ();
    cache_delete(result);
	for(new c=0;c<CAR_AMOUNT;c++)
	{
		Gas[c] = GasMax;
	}

	for(new i = 0; i < sizeof(AdvMSG); i++)
    {
	    format(AdvMSG[i],256," ");
	    format(AdvPlayer[i],24," ");
    }

    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		Jailtime[i] = TextDrawCreate(20.400028, 428.586608, " ");
		TextDrawLetterSize(Jailtime[i], 0.244000, 1.724444);
		TextDrawColor(Jailtime[i], -1);
		TextDrawSetShadow(Jailtime[i], 1);
		TextDrawSetOutline(Jailtime[i], 1);
		TextDrawFont(Jailtime[i], 1);
	}
	LoadCCTV();
	LoadProperty();
	LoadTextDrawsGlobals();
	LoadClans();
	LoadBizz();
	LoadStuff();
	LoadFactions();
 	LoadJobs();
 	LoadFurnitures();
 	LoadSafeZones();
	LoadActors();
	LoadBramy();
	LoadBus();
	LoadWejscia();
 	LoadSystems();
	LoadItems();
	News[hTaken1] = 0; News[hTaken2] = 0; News[hTaken3] = 0; News[hTaken4] = 0; News[hTaken5] = 0;
	format(string, sizeof(string), "Nic");
	strmid(News[hAdd1], string, 0, strlen(string), 255);
	strmid(News[hAdd2], string, 0, strlen(string), 255);
	strmid(News[hAdd3], string, 0, strlen(string), 255);
	strmid(News[hAdd4], string, 0, strlen(string), 255);
	strmid(News[hAdd5], string, 0, strlen(string), 255);
	format(string1, sizeof(string1), "Nikt");
	strmid(News[hContact1], string1, 0, strlen(string1), 255);
	strmid(News[hContact2], string1, 0, strlen(string1), 255);
	strmid(News[hContact3], string1, 0, strlen(string1), 255);
	strmid(News[hContact4], string1, 0, strlen(string1), 255);
	strmid(News[hContact5], string1, 0, strlen(string1), 255);
	SetGameModeText(""SERVER_VERSION"");
	SendRconCommand("mapname Los Santos");
	format(objstore, sizeof(objstore), "MOLE: Nie mam nic, sprawdz pózniej.");
	format(cbjstore, sizeof(cbjstore), "HQ: W twojej okolicy nie ma nic.");

	xhq[1] = 1568.6251;  	yhq[1] = -1690.5358; 	 	zhq[1] = 5.8906;
	xhq[2] = 627.5488;   	yhq[2] = -571.6494; 	 	zhq[2] = 17.6572;
	xhq[3] = 157.3923;   	yhq[3] = 1903.2848;  	 	zhq[3] = 18.6660;
	xhq[4] = 2232.0940;  	yhq[4] = -1333.2262;	 	zhq[4] = 23.9815;
	xhq[5] = 554.4307;   	yhq[5] = -1621.4463;	 	zhq[5] = 16.7439;
	xhq[6] = 1123.9885;  	yhq[6] = -2037.0662;	 	zhq[6] = 69.8855;
	xhq[7] = 689.9420;   	yhq[7] = -1275.9573;  	 	zhq[7] = 13.5595;
	xhq[8] = 918.6766;   	yhq[8] = -1252.2185;  	 	zhq[8] = 16.2109;
	xhq[9] = 2728.5498;  	yhq[9] = -1827.7861;  		zhq[9] = 11.8438;
	xhq[10] = 1153.9324; 	yhq[10] = -1180.8879; 	 	zhq[10] = 32.8187;
	xhq[11] = 1051.7865;  	yhq[11] = -346.0753;  	 	zhq[11] = 73.9922;
	xhq[12] = 1016.5253; 	yhq[12] = -1557.4689; 	 	zhq[12] = 14.8657;
	xhq[13] = 2475.7747; 	yhq[13] = -1750.5632;   	zhq[13] = 13.5469;
	xhq[14] = 1173.2563; 	yhq[14] = -1323.3102;   	zhq[14] = 15.3943;
	
	//CreateDynamicPickup(19893, 23, 522.7371,-1505.8564,14.5393, -1, -1,-1,100.0); // Info Spawn
	//CreateDynamic3DTextLabel(""SERVER_INFO_SPAWN"", -1, 522.7371, -1505.8564, 14.5393, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0); // Info Spawn
	
	CreateDynamicPickup(1239, 23, 327.9443, -1512.6609, 36.1366, -1, -1,-1,100.0);// Dealership
	CreateDynamic3DTextLabel("Dealership\nWpisz /buyvehicle aby zobaczyc dostepne pojazdy",0xFFFFFF99,327.9443, -1512.6609, 36.1366,7.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);

    CreateDynamic3DTextLabel("Nacisnij klawisz F, aby wejsc",0xFFFFFFFF,2315.5696,0.3521,26.7422, 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel("Nacisnij klawisz F, aby wyjsc",0xFFFFFFFF,-296.7248,1502.6849,1070.9940, 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel("Wpisz /rob aby rozpoczac napad\nWpisz /robsafe aby okrasc sejf",0xFFFFFF99,-296.8337, 1515.3702, 1070.6359, 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);	
	AddStaticPickup(1550, 23, -296.8337, 1515.3702, 1070.6359);		

	CreateDynamicPickup(1239, 23, 1494.8772,1308.6807,1093.2856, 7, -1,-1,100.0);
	CreateDynamic3DTextLabel("Winda\nKliknij 'F' aby dostac sie na dach ",COLOR_WHITE,1494.8772,1308.6807,1093.2856,7.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 7, -1, -1, 100.0);
	CreateDynamicPickup(1239, 23, 1161.4738,-1328.8081,31.4976, 7, -1,-1,100.0);
	CreateDynamic3DTextLabel("Winda\nKliknij 'F' aby zabrac cie do kwatery glównej",COLOR_WHITE,1161.4738,-1328.8081,31.4976,7.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 7, -1, -1, 100.0);

	
	CreateDynamicPickup(1239, 23, -498.218017,293.717620, 2001.085937, -1, -1,-1,100.0);// Dealership
	CreateDynamic3DTextLabel("Urzad Miasta\n\nWpisz [/egzamin] aby rozpoczac test praktyczny na prawo jazdy.",0xFFCF5EFF,-498.218017,293.717620, 2001.085937,7.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
	
	//CreateDynamicPickup(1239, 23, 314.2594,-133.4281,999.6016, -1, -1,-1,100.0);
	CreateDynamic3DTextLabel("Gun Shop\n[/buygun]",0xFFFFFF99,314.2594,-133.4281,999.6016,7.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);

	Create3DTextLabel("Materialy\nWpisz /buymaterials aby kupic materiale",0xFFFFFFFF,1449.2723,-1848.4255,13.7721,10.0, 0, 1);

    Create3DTextLabel("Dildo\nWpisz /buydildo aby kupic",0xFFFFFFFF,-103.7905,-22.0609,1000.7188,5.0, 0, 1);
    Create3DTextLabel("Muzyka\nWpisz /music aby zmienic muzyke w klubie",0xFFFFFFFF,475.6671,-14.8986,1003.6953,5.0, 0, 1);
    Create3DTextLabel("Narkotyki\nWpisz /getdrugs aby kupic narkotyki",0xFFFFFFFF,322.9745,1119.4409,1083.8828,20.0, 0, 1);
    Create3DTextLabel("Natonial Guard Armoury\nKliknij na klawisz 'F', aby wejsc",0xFFFFFFFF,157.3923,1903.2848,18.6660,20.0, 0, 1);
	Create3DTextLabel("Cluckin' Bell\nKliknij na klawisz 'F', aby wejsc",0xFFFFFFFF,928.3403,-1352.9470,13.3438,20.0, 0, 1);
    Create3DTextLabel("Suburban\nKliknij na klawisz 'F', aby wejsc",0xFFFFFFFF,2112.8286,-1211.8368,23.9634,20.0, 0, 1);
    Create3DTextLabel("Drugs House\nKliknij na klawisz 'F', aby wejsc",0xFFFFFFFF,2166.4771,-1671.7883,15.0743,20.0, 0, 1);
    Create3DTextLabel("Gym Ls\nKliknij na klawisz 'F', aby wejsc",0xFFFFFFFF,2229.3289,-1722.0793,13.5625,20.0, 0, 1);
    Create3DTextLabel("Bankomat\nWpisz /withdraw aby wyplacic pieniadze", 0xFFFFFF99,1137.1111,-1630.3916,13.8810,20.0, 0, 1);
    Create3DTextLabel("Bankomat\nWpisz /withdraw aby wyplacic pieniadze", 0xFFFFFF99,1009.0426,-929.6671,42.3281,20.0, 0, 1);
    Create3DTextLabel("Bankomat\nWpisz /withdraw aby wyplacic pieniadze", 0xFFFFFF99,1110.9364,-1788.1910,16.5938,20.0, 0, 1);
    Create3DTextLabel("Bankomat\nWpisz /withdraw aby wyplacic pieniadze", 0xFFFFFF99,1832.1864,-1849.8851,13.5781,20.0, 0, 1);
    Create3DTextLabel("Bankomat\nWpisz /withdraw aby wyplacic pieniadze", 0xFFFFFF99,411.9183,-1503.4347,31.4582,20.0, 0, 1);
    Create3DTextLabel("Bankomat\nWpisz /withdraw aby wyplacic pieniadze", 0xFFFFFF99,1646.5222,-2203.6174,13.5469,20.0, 0, 1);
    Create3DTextLabel("Urzad Miasta\nKliknij na klawisz 'F', aby wejsc",0xFFFFFFFF,1479.6907,-1785.1872,15.45781,20.0, 0, 1);
	Create3DTextLabel("Materialy\nWpisz /materials get aby dostac pakiet materialów",COLOR_WHITE,2770.4629,-1628.3237,12.1775,20.0, 0, 1);
	areap = Create3DTextLabel("Arena de event este Zamknietya\nAsteapta...",0xFFFFFFFF,1671.5824,-1329.4281,17.4524,5.0, 0, 1);
    Create3DTextLabel("Cena: 100$\nWpisz /eat aby zjesc",0xFFFFFF99,377.8164,-119.4989,1001.4922,20.0, 0, 1);
    Create3DTextLabel("Cena: 100$\nWpisz /eat aby zjesc",0xFFFFFF99,371.5085,-6.9538,1001.8589,20.0, 0, 1);
    Create3DTextLabel("Cena: 100$\nWpisz /eat aby zjesc",0xFFFFFF99,377.7664,-68.4227,1001.5151,20.0, 0, 1);
    Create3DTextLabel("Cena: 100$\nWpisz /eat aby zjesc",0xFFFFFF99,-786.4063,500.0738,1371.7422,20.0, 0, 1);
  
	Create3DTextLabel("Wpisz /goup zeby sie podniesc",0xFFFFFF99,1526.4816,-1678.1033,5.8906,20.0, 0, 1);
    Create3DTextLabel("Wpisz /godown aby sie polozyc",0xFFFFFF99,1564.8662,-1666.4962,28.3956,20.0, 0, 1);

	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if(!realtime)
	{
		SetWorldTime(wotime);
	}
    DisableInteriorEnterExits();
	AllowInteriorWeapons(1);
	//UsePlayerPedAnims();

	for(new i = 0; i <= sizeof(Peds)-1; i++)
	{
		AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,100);
	}

    ManualVehicleEngineAndLights();

	// RENT LOS SANTOS
	rentls[1] = CreateVehicleEx(405,536.9890,-1286.5294,17.0683,359.1704,-1,-1,100);
	rentls[2] = CreateVehicleEx(421,544.1906,-1286.1334,17.2027,7.4799,-1,-1,100);
	rentls[3] = CreateVehicleEx(492,551.7931,-1285.5220,17.1845,0.4150,-1,-1,100);
	
	rentls[4] = CreateVehicleEx(560, 2148.7786, 1398.4813, 10.4368, 179.0999, -1, -1, 100);
	rentls[5] = CreateVehicleEx(561, 2135.9343, 1398.6229, 10.6811, 179.0999, -1, -1, 100);
	rentls[6] = CreateVehicleEx(566, 2126.3499, 1398.0074, 10.5039, 179.0999, -1, -1, 100);
	rentls[7] = CreateVehicleEx(568, 2116.8408, 1409.0560, 10.6693, -0.4201, -1, -1, 100);
	rentls[8] = CreateVehicleEx(576, 2103.8689, 1408.8900, 10.6693, -0.4201, -1, -1, 100);
	rentls[9] = CreateVehicleEx(558, 2142.3257, 1408.8948, 10.4368, 359.8800, -1, -1, 100);

	rentls[10] = CreateVehicleEx(560, -1988.4813, 273.3691, 35.8600, -94.1400, -1, -1, 100);
	rentls[11] = CreateVehicleEx(559, -1988.7236, 268.1308, 35.8600, -94.1400, -1, -1, 100);
	rentls[12] = CreateVehicleEx(555, -1989.0602, 263.1487, 35.9684, -94.1400, -1, -1, 100);
	rentls[13] = CreateVehicleEx(554, -1989.4581, 258.0538, 35.7603, -94.1400, -1, -1, 100);
	rentls[14] = CreateVehicleEx(551, -1989.8754, 252.1151, 35.7792, -96.4200, -1, -1, 100);
	rentls[15] = CreateVehicleEx(550, -1990.4835, 243.5018, 36.3591, -96.4200, -1, -1, 100);

	// SCOOTER
    scooter[1] = CreateVehicleEx(462,1838.1470,-1871.2357,12.9890,1.1360,-1,-1,100);
    scooter[2] = CreateVehicleEx(522,1844.5911,-1871.3462,12.9830,357.4084,-1,-1,100);
    scooter[3] = CreateVehicleEx(521,1840.6284,-1871.3242,12.9772,357.6075,-1,-1,100);
    scooter[4] = CreateVehicleEx(522,1836.4912,-1853.1992,12.9551,179.3889,-1,-1,100);
    scooter[5] = CreateVehicleEx(521,1839.8772,-1853.4432,12.9568,180.8997,-1,-1,100);

    // BIKE SPAWN CIVIL
	bike[1] = CreateVehicleEx(510, 1639.6564, -2261.8911, 13.1526, 0.0000, 1, -1, 100);
	bike[2] = CreateVehicleEx(510, 1635.5765, -2261.7773, 13.1526, 0.0000, 1, -1, 100);
	bike[3] = CreateVehicleEx(510, 1631.3831, -2261.6035, 13.1526, 0.0000, 1, -1, 100);

	// RACE CAR HOTRING
	hotc[1] = CreateVehicleEx(503,-1406.9308,-257.7033,1043.5562,347.9015,-1,-1,100);
	hotc[2] = CreateVehicleEx(503,-1402.8817,-258.5134,1043.5522,349.0887,-1,-1,100);
	LinkVehicleToInterior(hotc[1], 7);
	LinkVehicleToInterior(hotc[2], 7);

	// RACE SANCKEZ
	sanr[1] = CreateVehicleEx(468,-1374.3542,-663.0358,1055.6122,82.2215,-1,-1,100);
	sanr[2] = CreateVehicleEx(468,-1374.8695,-667.8638,1055.6104,83.8693,-1,-1,100);
	LinkVehicleToInterior(sanr[1], 4);
	LinkVehicleToInterior(sanr[2], 4);



	// Property and Afacere
	for(new h = 1; h <= housess; h++) UpdateLabel(1, h);
	for(new h = 1; h <= bussines; h++) UpdateLabel(2, h);

	// Pickups
	AddStaticPickup(1239, 23, 253.9280,69.6094,1003.6406); 				// Clear icon in Police Station
	AddStaticPickup(1239, 23, 1479.6907,-1785.1872,15.45781); 			// City Hall
	AddStaticPickup(1242, 23, 1527.5,-12.1,1002.0); 					// binco armor
    AddStaticPickup(1239, 23, 1137.1111,-1630.3916,13.8810);			// ATM
    AddStaticPickup(1239, 23, 1009.0426,-929.6671,42.3281);				// ATM
	AddStaticPickup(1239, 23, 2229.3289,-1722.0793,13.5625);			// Gym Ls
	AddStaticPickup(1239, 23, 2112.8286,-1211.8368,23.9634);			// Suburban
	AddStaticPickup(1239, 23, 928.3403,-1352.9470,13.3438);				// Cluckin ls
	AddStaticPickup(1239, 23, 1397.0253,-1571.0708,14.2703);			// court
	AddStaticPickup(1239, 23, 2770.4629,-1628.3237,12.1775); 			// MATSCOLLECT
	AddStaticPickup(1239, 23, 2065.4844,-1584.0730,13.4821); 			// BUYIRON
	AddStaticPickup(1239, 23, 5.7771,-3989.8794,1003.5266); 			// STATION LS BUY
	AddStaticPickup(1239, 23, 1757.4719,-1574.4130,1738.6924); 			// ALL CELL
	AddStaticPickup(1239, 23, 157.3923,1903.2848,18.6660); 				// NG ARMOURY
	AddStaticPickup(1212, 23, 347.3933,162.1706,1025.7891); 			// CHECK CARITY


	AddStaticPickup(1239, 23, 2166.4771,-1671.7883,15.0743); 			// DRUGS HOUSE
	CreateDynamicPickup(1279, 23, 322.9745,1119.4409,1083.8828,-1,-1,-1,100.0);
	CreateDynamicPickup(1239, 23, -401.7662,-1418.7749,25.7209,-1,-1,-1,100.0);
	CreateDynamicPickup(1239, 23, 377.8164,-119.4989,1001.4922,-1,-1,-1,100.0); // eat pizzaboy
	CreateDynamicPickup(1239, 23, 371.5085,-6.9538,1001.8589,-1,-1,-1,100.0);   // eat cluckin
	CreateDynamicPickup(1239, 23, 377.7664,-68.4227,1001.5151,-1,-1,-1,100.0);  // eat burger
	CreateDynamicPickup(1239, 23, 1526.4816,-1678.1033,5.8906,-1,-1,-1,100.0); 	// goup
	CreateDynamicPickup(1239, 23, 1564.8662,-1666.4962,28.3956,-1,-1,-1,100.0); // godown
	CreateDynamicPickup(1239, 23, 229.4171,167.4609,1003.0234,-1,-1,-1,100.0); 	// clear fbi
	CreateDynamicPickup(1239, 23,187.8352,1931.4265,17.6874,-1,-1,-1,100.0); 	// clear ng
	CreateDynamicPickup(1239, 23,475.6671,-14.8986,1003.6953,-1,-1,-1,100.0); 	// music alhambra
	CreateDynamicPickup(1239, 23,-579.1203,-1488.6676,10.4741,-1,-1,-1,100.0); 	// bale mover
	CreateDynamicPickup(1239, 23,1449.2723,-1848.4255,13.7721,-1,-1,-1,100.0); 	// buymaterials
	CreateDynamicPickup(1239, 23,830.6540,0.2702,1004.1797,-1,-1,-1,100.0); 	// bet
	CreateDynamicPickup(1239, 23,1671.5824,-1329.4281,17.4524,-1,-1,-1,100.0); 	// event area enter
	CreateDynamicPickup(1239, 23,-1423.5153,935.8321,1036.4756,-1,-1,-1,100.0); // event area exit
	CreateDynamicPickup(1239, 23,1309.7600,-854.9579,39.5781,-1,-1,-1,100.0); 	// tuning neon shop

    // MAPICON
    CreateDynamicMapIcon(1461.695,-1011.915,26.84375,52,0,-1,-1,-1,1000.0);		// Banka

    CreateDynamicMapIcon(1178.03,-1323.41,14.10,22,0,-1,-1,-1,1000.0);			// Hospital
    CreateDynamicMapIcon(1528.779,-1678.113,5.890625,30,0,-1,-1,-1,1000.0);		// Pd
    CreateDynamicMapIcon(1790.6425,-1164.7131,23.8281,18,0,-1,-1,-1,1000.0); 	// gunshop

	// cnn
    CreateDynamicMapIcon(1169.8079,-1489.7686,22.7560,16,0,-1,-1,-1,1000.0);
     
	// mower
	CreateDynamicObject(11015, 1885.51526, -1154.34900, 24.91932,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1537, 1884.64392, -1163.13013, 23.03740,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1537, 1887.81311, -1145.54468, 23.01330,   0.00000, 0.00000, 0.00000);

	//Trash
	CreateDynamicObject(1332, 1923.72632, -1786.72913, 13.57835,   0.00000, 0.00000, -2.46000);
	CreateDynamicObject(1265, 1925.10718, -1787.04712, 13.26334,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1331, 1926.62195, -1786.90393, 13.57840,   0.00000, 0.00000, -0.66000);
	CreateDynamicObject(1333, 1393.08740, -1622.19958, 13.43071,   0.00000, 0.00000, -88.32005);
	CreateDynamicObject(1332, 1393.14136, -1625.28040, 13.43070,   0.00000, 0.00000, -90.06009);
	CreateDynamicObject(1264, 1392.55200, -1623.69958, 13.09461,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1334, 1109.56079, -1189.96130, 18.31467,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1264, 1111.40771, -1189.77881, 17.57407,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1264, 1111.59900, -1190.57324, 17.57407,   0.00000, 0.00000, 62.52001);
	CreateDynamicObject(1333, 1113.32458, -1190.04993, 18.07412,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1345, 978.96167, -1434.48706, 13.40298,   0.00000, 0.00000, 89.93999);
	CreateDynamicObject(1344, 732.00952, -1794.70129, 12.84622,   0.00000, 0.00000, 74.81998);
	CreateDynamicObject(1344, 731.28094, -1798.45508, 12.84622,   0.00000, 0.00000, 85.13998);
	CreateDynamicObject(1264, 731.34491, -1796.45764, 12.33037,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1264, -55.78953, -1585.60999, 2.68239,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1264, -55.23558, -1584.70386, 2.68239,   0.00000, 0.00000, 1.44000);
	CreateDynamicObject(1264, -54.88474, -1585.57239, 2.68239,   0.00000, 0.00000, 1.38000);
	CreateDynamicObject(1372, -54.53334, -1583.30994, 2.68240,   0.00000, 0.00000, -125.22000);
	CreateDynamicObject(1264, 255.59650, -264.09766, 1.07050,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1264, 249.55182, -262.76199, 1.07050,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1332, 605.17682, -1522.95325, 15.16066,   0.00000, 0.00000, 178.26001);
	CreateDynamicObject(1333, 602.02997, -1522.70996, 15.16070,   0.00000, 0.00000, 178.25999);
	CreateDynamicObject(1264, 603.55914, -1522.92810, 14.61454,   0.00000, 0.00000, 96.06001);
	CreateDynamicObject(1332, 1660.31909, -2115.62500, 13.58558,   0.00000, 0.00000, 91.26001);
	CreateDynamicObject(1331, 1660.41626, -2110.28442, 13.58560,   0.00000, 0.00000, 90.72000);
	CreateDynamicObject(1333, 1660.41077, -2113.12598, 13.58560,   0.00000, 0.00000, 90.72000);
	CreateDynamicObject(1264, 1660.04285, -2117.10889, 12.97071,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1264, 1660.28125, -2111.48560, 12.97071,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1332, 2271.41870, -1626.49451, 15.31296,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1264, 2273.11816, -1626.25500, 14.65405,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1264, 2269.33398, -1626.23938, 14.65405,   0.00000, 0.00000, 0.00000);

	// GUNSHOS TONOMAT
	CreateDynamicObject(1977, 317.1961, -132.4190, 1002.9836,  356.9584, 0.1400, -90.5708);

	// NINJA OBJ
	CreateDynamicObject(19464, 966.09637, -17.38180, 682.68018,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 963.04138, -8.57693, 682.68018,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 936.84985, -29.07637, 682.68018,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 966.09637, -11.52280, 682.68018,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 957.33081, -32.01170, 682.68018,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 951.47180, -32.01170, 682.68018,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 945.61279, -32.01170, 682.68018,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 939.75378, -32.01170, 682.68018,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 963.18982, -32.01175, 682.68018,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 957.18237, -8.57690, 682.68018,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 951.32343, -8.57690, 682.68018,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 945.46442, -8.57690, 682.68018,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 939.60541, -8.57690, 682.68018,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 966.09637, -23.24080, 682.68018,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19465, 966.09637, -29.14710, 682.68018,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 936.84991, -23.21740, 682.68018,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 936.84991, -17.35840, 682.68018,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 936.84991, -11.49940, 682.68018,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19452, 937.24658, -27.35850, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 937.44531, -17.83690, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 961.03632, -27.35850, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 957.59442, -27.35850, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 954.13922, -27.35850, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 950.75861, -27.37330, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 947.34387, -27.35850, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 947.34387, -27.35850, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 943.84369, -27.36108, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 940.47839, -27.35850, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(1533, 966.09637, -28.39780, 680.15338,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19452, 964.39697, -27.35847, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 937.80798, -8.24410, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 961.11328, -17.83690, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 957.73907, -17.83690, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 954.26093, -17.83690, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 950.80542, -17.83690, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 947.37878, -17.83690, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 944.04907, -17.83690, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 940.69781, -17.83690, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 964.49377, -17.83694, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 964.47217, -8.24414, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 961.23181, -8.24410, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 958.10028, -8.24410, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 954.66339, -8.24410, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 951.24542, -8.24410, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 947.89069, -8.24410, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 944.47729, -8.24410, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 941.15411, -8.24410, 680.06592,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(14787, 941.46375, -7.82082, 680.24762,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14787, 943.79834, -32.27930, 680.24762,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(18981, 973.63208, -20.36405, 684.98309,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18981, 949.18127, -20.38985, 684.98309,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(1985, 943.08337, -20.50240, 684.80872,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(1985, 942.96997, -26.58030, 683.61877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14778, 938.46637, -18.48480, 684.69733,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1985, 939.61218, -22.47360, 680.57800,   0.00000, 90.00000, 91.00000);

	// RING
	CreateDynamicObject(14780, 2460.2, -1892.3, 13.4, 0, 0, 39.996);
	CreateDynamicObject(3472, 2441.6, -1898.2, 12.5, 0, 0, 0);
	CreateDynamicObject(3472, 2477.2, -1899.9, 12.5, 0, 0, 0);
	CreateDynamicObject(16444, 2463.8, -1874.4, 8.7, 0, 0, 0);
	CreateDynamicObject(1828, 2460.3, -1892.4, 13, 0, 0, 0);
	CreateDynamicObject(2103, 2469.3, -1898.4, 12.5, 0, 0, 0);
	CreateDynamicObject(1728, 2452.8, -1898.4, 12.5, 0, 0, 132);
	CreateDynamicObject(1728, 2454.9, -1883.6, 12.6, 0, 0, 26);
	CreateDynamicObject(3028, 2455.5, -1891.8, 13.5, 0, 0, 0);
	CreateDynamicObject(3027, 2453, -1898.6, 13.3, 0, 0, 0);
	CreateDynamicObject(2964, 2447.5, -1899.5, 12.5, 0, 0, 0);
	CreateDynamicObject(2915, 2453.5, -1891.5, 12.7, 0, 0, 0);
	CreateDynamicObject(3101, 2448.2, -1899.3, 13.4, 0, 0, 0);
	CreateDynamicObject(3105, 2447.9, -1899.6, 13.4, 0, 0, 0);
	CreateDynamicObject(3106, 2447.9, -1899.2, 13.4, 0, 0, 0);
	CreateDynamicObject(3102, 2448.4, -1899.5, 13.4, 0, 0, 0);
	CreateDynamicObject(3004, 2447.7, -1899.6, 13.4, 0, 0, 80);
	CreateDynamicObject(949, 1797.9, -1580.4, 13.7, 0, 0, 0);
	CreateDynamicObject(949, 1797.1, -1577, 13.7, 0, 0, 0);
	CreateDynamicObject(807, 1809.8, -1585, 13.3, 0, 0, 0);


	// BANK SEIF
	CreateDynamicObject(2332, 2314.28271, -0.10613, 26.13725,   0.00000, 0.00000, 0.00000);

	// mall radio obj door
	CreateDynamicObject(1557, 1260.45471, -805.83423, 1083.01282,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1557, 1260.45605, -802.81403, 1083.01282,   0.00000, 0.00000, -90.00000);

	// alhambra music
	CreateDynamicObject(1958, 476.63626, -15.04685, 1003.50720,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1958, 476.63336, -14.71221, 1003.50720,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2232, 476.50940, -13.30400, 1003.27753,   0.00000, 0.00000, -45.00000);

	//carsellto
	CreateDynamicObject(16771, 411.43228, 2434.91479, 900.49469,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16773, 419.89609, 2456.39746, 897.68597,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16773, 405.67798, 2456.39526, 897.68597,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16773, 402.10873, 2456.31104, 897.68597,   0.00000, 0.00000, 0.00000);

	// bug house
	CreateDynamicObject(19303, 442.47998, 509.23032, 1001.63678,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19304, 453.06204, 507.98209, 1001.92603,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19304, 453.11362, 509.63824, 1001.92603,   0.00000, 0.00000, 90.00000);

	// anti car bomb
	CreateDynamicObject(971, 1843.32751, -1855.42114, 12.00100,   0.00000, 0.00000, 90.00000);

	//examen object
    CreateDynamicObject(11015,1592.8429, -2176.0872, 14.5000,0.00000000,0.00000000,90.00000000); //object(drivingschoolex_sfs) (1)
	CreateDynamicObject(8661,1621.5226, -2175.0017, 12.5506,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(984,1641.5227, -2178.6189, 13.2000,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (1)
	CreateDynamicObject(984,1641.5197, -2171.3994, 13.2000,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (2)
	CreateDynamicObject(984,1635.1162, -2165.0007, 13.2000,0.0000, 0.0000, 90.0000); //object(fenceshit3) (3)
	CreateDynamicObject(984,1622.3365, -2165.0007, 13.2000,0.0000, 0.0000, 90.0000); //object(fenceshit3) (4)
	CreateDynamicObject(984,1609.5538, -2164.9932, 13.2000,0.0000, 0.0000, 90.0000); //object(fenceshit3) (5)
	CreateDynamicObject(984,1607.8970, -2165.0100, 13.2000,0.0000, 0.0000, 90.0000); //object(fenceshit3) (6)
	CreateDynamicObject(984,1601.5039, -2171.4011, 13.2000,0.0000, 0.0000, 0.0000); //object(fenceshit3) (7)
	CreateDynamicObject(1538, 1601.57642, -2178.46216, 12.63630,   0.00000, 0.00000, 90.00000); // usa 1
	CreateDynamicObject(1538, 1584.23157, -2175.26294, 12.63630,   0.00000, 0.00000, 90.00000); // usa 2
	CreateDynamicObject(3472, 1601.41382, -2164.85425, 12.77125,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1340, 1602.61987, -2183.45117, 13.57730,   0.00000, 0.00000, 0.00000);

	//NG BAZA
   // gateng = CreateObject(19313, 135.2833, 1941.3331, 21.6932, 0.0000, 0.0000, 0.0000);
    CreateDynamicObject(19312, 191.14, 1870.04, 21.48,0.0000, 0.0000, 0.0000);

     // Hq Bug
    CreateDynamicObject(19357, 968.4691, -53.4128, 1001.8241, 0.0000, 0.0000, 0.0000);

	//Spawn
    CreateDynamicObject(1776, 1435.442383, -1474.893188, 20.533222, 0.0000, 0.0000, 90.0000);

	//Lspd
	//gatelspd = CreateObject(971, 1588.6552, -1637.9025, 15.0358, 0.0000, 0.0000, 0.0000);

    //Lspd Object
	CreateDynamicObject(1500,1582.6122, -1637.9562, 12.3776,0.000000,0.000000,0.000000);
    CreateDynamicObject(983, 1545.0706787109, -1635.6511230469, 13.237774848938, 0, 0, 0);
    CreateDynamicObject(983, 1544.4979248047, -1620.7434082031, 13.238116264343, 0, 0, 0);
   // lspdbar = CreateObject(968, 1544.7007, -1630.7527, 13.2983, 0.0000, 90.0200, 90.0000);

	//ATM
	CreateDynamicObject(2942, 1833.24634, -1849.86816, 13.20704,   0.00000, 0.00000, -90.00000); // spawn
	CreateDynamicObject(2942, 1111.92981, -1788.20508, 16.22382,   0.00000, 0.00000, -90.00000); // ds
	CreateDynamicObject(2942, 412.60052, -1504.30444, 31.07969,   0.00000, 0.00000, -140.00000); // atm fbi
	CreateDynamicObject(2942, 1646.52637, -2204.39355, 13.13628,   0.00000, 0.00000, -180.00000);

	if (realtime)
	{
		new tmphour;
		new tmpminute;
		new tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		FixHour(tmphour);
		tmphour = shifthour;
		new worldt = tmphour+1;
		SetWorldTime(worldt);
	}
	synctimer = SetTimer("SyncUp", 60000, 1);
	unjailtimer = SetTimer("SetPlayerUnjail", 1000, 1);
	SetTimer("PrzypomnienieOPracy", 180000, true);	
	SetTimer("RentCar", 15000, true);
	SetTimer("HelperQuestions", 5000, true);
	taxitimer = SetTimer("TaxiUpdate", 20000, 1);
	othtimer = SetTimer("OtherTimer", 1000, 1);
	cartimer = SetTimer("CarCheck", 30000, 1);
	pickuptimer = SetTimer("CustomPickups", 1000, 1);
	spectatetimer = SetTimer("Spectator", 2000, 1);
	productiontimer = SetTimer("Production", 300000, 1); //5 mins (300000)
	checkgastimer = SetTimer("CheckGas", RunOutTime, 1);
    stoppedvehtimer = SetTimer("StoppedVehicle", RunOutTime, 1);
    checkvehinfotimer = SetTimer("Checkvehinfo",1000, 1);
	return 1;
}


public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
   new veh = GetPlayerVehicleID(playerid);
   new engine,lights,alarm,doors,bonnet,boot,objective;
   if(newkeys == KEY_CTRL_BACK && GetPlayerState(playerid)==PLAYER_STATE_DRIVER)
   {
		if(IsPlayerLogged[playerid] == 0) return 1;
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		new radiostr[1024];
        format(radiostr, sizeof(radiostr), "{E82727}Wylacz radio\n ESKA WAWA\nEska ROCK\nRadio Zet\nRMF FM\nRMF MAXX\nRMF Classic\nRadio PLUS\nRadio PARTY\nRADIO Z£OTE PRZEBOJE\nPLANETA FM\nAntyradio\nMTV\nVIVA");
        ShowPlayerDialog(playerid,170,DIALOG_STYLE_LIST,"{ff5733}Fox-RP{ffffff} Radio samochodowe",radiostr,"Ok", "Wyjdz");
   }
	if (newkeys & KEY_OPEN_MENU && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    ShowTextDrawsPanel(playerid);
	}
   if(newkeys & KEY_HANDBRAKE && newkeys & KEY_WALK) {
           for(new i = 1; i < MAX_BRAMY; i++){
            if(Bramy[i][buuid] == i) {
			if (PlayerToPoint(Bramy[i][brange], playerid, Bramy[i][bLoc][0], Bramy[i][bLoc][1], Bramy[i][bLoc][2])){
			if(IsAllowedToUseGate(playerid, i) == 1) {
			if(BramaOpenClose[Bramy[i][buuid]] == 0){
				MoveDynamicObject(Bramy[i][bnumer], Bramy[i][bLoc2][0], Bramy[i][bLoc2][1], Bramy[i][bLoc2][2], 3.0, Bramy[i][bRot2][0], Bramy[i][bRot2][1], Bramy[i][bRot2][2]);
				GameTextForPlayer(playerid, "~w~BRAMA ~g~OTWARTA", 2000, 4);
				BramaOpenClose[Bramy[i][buuid]] = 1;
			     	} else {
					MoveDynamicObject(Bramy[i][bnumer], Bramy[i][bLoc][0], Bramy[i][bLoc][1], Bramy[i][bLoc][2], 3.0, Bramy[i][bRot][0], Bramy[i][bRot][1], Bramy[i][bRot][2]);
					GameTextForPlayer(playerid, "~w~BRAMA ~r~ZAMKNIETA", 2000, 4);
					BramaOpenClose[Bramy[i][buuid]] = 0;
						}
					}
				}
			}
		}
   }
  /* if(newkeys & KEY_HANDBRAKE) {
     		if(PlayerInfo[playerid][pBWTime] == 0)
		    {
				ClearAnimations(playerid);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
				//UseAnimation[playerid] = 0;
			}
   }*/
   if(newkeys == KEY_NO) LockCarFunction(playerid);
   if(newkeys == KEY_FIRE) {
		if(IsVehicleRc(GetPlayerVehicleID(playerid)) || GetVehicleModel(GetPlayerVehicleID(playerid)) == RC_CAM && InDealer[playerid] == 1){
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != D_TRAM){
				DestroyVehicle(DealerCar[playerid]);
				InDealer[playerid] = 0, DealerCarType[playerid] = -1, DealerCar[playerid] = 0;
				KillTimer(DSTimer[playerid]);
				SendClientMessage(playerid, COLOR_YELLOW, "Test zostal zawieszony, poniewaz  porzuciles pojazd. ");
				SetPlayerPosEx(playerid, 327.9443, -1512.6609, 36.1366);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				TestingModel[playerid] = 0;
			}
		}
   }

   if(newkeys == KEY_YES) {
		if(JobWorking[playerid] == 1) {
			if(InHand[playerid] == 0) return 1;
			if(CheckPlayerDistanceToVehicle(7.0, playerid, JobVehicle[playerid]))
			{
				RemovePlayerAttachedObject(playerid, 2);
				InHand[playerid] = 0;
				if(GunoiKG[playerid] < GetPlayerSkill(playerid)*25) {
					new x = random(sizeof(GarbagePos));
					SetPlayerCheckpointEx(playerid, GarbagePos[x][0], GarbagePos[x][1], GarbagePos[x][2], 2.0);
					CP[playerid] = 54;
					new szZone[256], string[256];
					GetPlayer3DZone2(GarbagePos[x][0], GarbagePos[x][1], GarbagePos[x][2], szZone, sizeof(szZone));
					format(string, sizeof(string), "Idz do czerwonej kropki na mapie, aby wziac torbe na smieci~n~(~y~%s~w~~h~)", szZone);
					PlayerTextDrawSetString(playerid, InfosTD, string);
					SetTimerEx("HideTextdraw", 5000, 0, "%d", playerid);
					PlayerTextDrawShow(playerid, InfosTD);
				}
				else {
					SetPlayerCheckpointEx(playerid,2109.2771, -2010.4305, 13.6879, 3.0);
					CP[playerid] = 55;
					PlayerTextDrawSetString(playerid, InfosTD, "Idz do czerwonej kropki na mapie, aby wziac torbe na smieci");
					SetTimerEx("HideTextdraw", 5000, 0, "%d", playerid);
					PlayerTextDrawShow(playerid, InfosTD);
				}
			}
		}
		//else ShowPlayerFriends(playerid);
   }
   if(newkeys & KEY_JUMP && !(oldkeys & KEY_JUMP) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff",4.1,0,1,1,0,0);
   if(newkeys & KEY_FIRE || newkeys & KEY_AIM)
   {
	   //new weapon = GetPlayerWeapon(playerid);
	   /*if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER && WeaponData[playerid][slot] == false && slot != 0 && weapon != 46  && GetPlayerWeapon(playerid) != 9 && curatj[playerid] == 0)
       {
           ResetPlayerWeaponsEx(playerid);
           ResetPlayerWeapons(playerid);
		   new sendername[25],gunname[50],string[124];
		   GetWeaponNameEx(weapon,gunname,sizeof(gunname));
		   GetPlayerName(playerid, sendername, sizeof(sendername));
		   format(string, 256, "AdmCmd: %s has spawned gun %s.", sendername, gunname);
		   SendAdminMessage(COLOR_LOGS,string,1);
		   return 1;
	   }*/
   }
   if((IsACBUGWeapon(playerid) && RELEASED(KEY_FIRE)) && newkeys != KEY_FIRE && newkeys & KEY_CROUCH)
   {
       ApplyAnimation ( playerid , "PED" , "getup" , 4.1 , 0 , 0 , 0 , 0 , 0 ) ;
       SCM(playerid,COLOR_WARNING,"Na naszym serwerze jest zabronione c-bug, ryzykujesz warnem.");
   }
   if (newkeys & KEY_HANDBRAKE)
   {
       if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK && PlayerInfo[playerid][pAdmin] < 1)
	   {
		   new string[100];
		   format(string,sizeof(string),"AdmCmd: %s(%d) uzywa JetPack.",GetName(playerid),playerid);
		   SendAdminMessage(COLOR_LOGS,string,1);
		   KickEx(playerid);
	   }
   }
   /*if (newkeys & KEY_CROUCH)
   {
       if(IsACop(playerid))
       {
		   if(PlayerToPoint(15.0, playerid,1588.6552, -1637.9025, 15.0358))
           {
               MoveObject(gatelspd,1596.7352,-1637.9025, 15.0358,2);
               SetTimer("lspdgateclose" ,9000 ,false);
               return 1;
           }
		   if(PlayerToPoint(15.0, playerid,135.2833, 1941.3331, 21.6932))
           {
               MoveObject(gateng,122.0023, 1941.4100, 21.6932,2);
               SetTimer("nggateclose" ,9000 ,false);
               return 1;
           }
		   if(PlayerToPoint(15.0, playerid,1544.7007, -1630.7527, 13.2983))
           {
               MoveObject(lspdbar,1544.7007, -1630.7527, 13.2983,1,0.0000, 0.0000, 90.0000);
               SetTimer("lspdbarclose" ,9000 ,false);
               return 1;
           }
	   }
   }*/
   if (((newkeys & KEY_WALK && newkeys & KEY_UP) || (newkeys & KEY_WALK && newkeys & KEY_DOWN) || (newkeys & KEY_WALK && newkeys & KEY_LEFT) || (newkeys & KEY_WALK && newkeys & KEY_RIGHT))
   || ((oldkeys & KEY_WALK && newkeys & KEY_UP) || (oldkeys & KEY_WALK && newkeys & KEY_DOWN) || (oldkeys & KEY_WALK && newkeys & KEY_LEFT) || (oldkeys & KEY_WALK && newkeys & KEY_RIGHT))
   || ((newkeys & KEY_WALK && oldkeys & KEY_UP) || (newkeys & KEY_WALK && oldkeys & KEY_DOWN) || (newkeys & KEY_WALK && oldkeys & KEY_LEFT) || (newkeys & KEY_WALK && oldkeys & KEY_RIGHT))
   && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
   {
		walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
   }
  if (newkeys & KEY_SPRINT)
   {
       if(gPlayerUsingLoopingAnim[playerid] == 1)
       {
	       StopLoopingAnim(playerid);
       }
   }
 
   if (newkeys & KEY_CTRL_BACK)
   {
	   if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	   {
	   	if(IsPlayerConnected(playerid))
		   {
        for(new i = 1; i < MAX_BRAMY; i++){
            if(Bramy[i][buuid] == i) {
			if (PlayerToPoint(Bramy[i][brange], playerid, Bramy[i][bLoc][0], Bramy[i][bLoc][1], Bramy[i][bLoc][2])){
			if(Bramy[i][bfaction] == 0){
			goto skok;
			} 
			else if(Bramy[i][bfaction] == PlayerInfo[playerid][pMember] || Bramy[i][bfaction2] == PlayerInfo[playerid][pMember]|| Bramy[i][bfaction3] == PlayerInfo[playerid][pMember]) goto skok;
			else if(Bramy[i][bfaction] != PlayerInfo[playerid][pMember]) return 1;
			skok:
			if(BramaOpenClose[Bramy[i][buuid]] == 0){
				MoveDynamicObject(Bramy[i][bnumer], Bramy[i][bLoc2][0], Bramy[i][bLoc2][1], Bramy[i][bLoc2][2], 3.0, Bramy[i][bRot2][0], Bramy[i][bRot2][1], Bramy[i][bRot2][2]);
				BramaOpenClose[Bramy[i][buuid]] = 1;
			     	} else {
					MoveDynamicObject(Bramy[i][bnumer], Bramy[i][bLoc][0], Bramy[i][bLoc][1], Bramy[i][bLoc][2], 3.0, Bramy[i][bRot][0], Bramy[i][bRot][1], Bramy[i][bRot][2]);
					BramaOpenClose[Bramy[i][buuid]] = 0;
					}
				}
			}
		}
	}
}
}
   if (newkeys & KEY_SECONDARY_ATTACK)
   {
	   new car = GetClosestVehicle(playerid);
	   new carid = FindSpawnID(car);
	   if(CarInfo[carid][Userid] == PlayerInfo[playerid][pSQLID]) {
			SetVehicleParamsForPlayer(car, playerid, 0, 0);
       }

	   if(UsedFly[playerid] == 1) {
			StopFly(playerid);
			UsedFly[playerid] = 0;
			SetPlayerHealthEx(playerid, 100);
			return 1;
	   }	 
		
		
	   if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	   {
		   if(IsPlayerConnected(playerid))
		   {
				for(new i = 1; i < MAX_WEJSCIA; i++){
					if(Wejscie[i][wuuid] == i) {
					if (PlayerToPoint(3.0,playerid, Wejscie[i][wLoc][0], Wejscie[i][wLoc][1], Wejscie[i][wLoc][2])){
					if(IsAllowedToUseEntrance(playerid, i)) {
							TogglePlayerControllable(playerid, 0);
							SetPlayerVirtualWorld(playerid, Wejscie[i][wvw2]);
							SetPlayerInterior(playerid, Wejscie[i][winterior2]);
							SetPlayerPosEx(playerid, Wejscie[i][wLoc2][0], Wejscie[i][wLoc2][1], Wejscie[i][wLoc2][2]);
							SetTimerEx("UnFreezeStation", 2000, false, "i", playerid);	
							}
						}
					}
				}
				for(new i = 1; i < MAX_WEJSCIA; i++){
					if(Wejscie[i][wuuid] == i) {
					if (PlayerToPoint(3.0,playerid, Wejscie[i][wLoc2][0], Wejscie[i][wLoc2][1], Wejscie[i][wLoc2][2])){
							TogglePlayerControllable(playerid, 0);
							SetPlayerVirtualWorld(playerid, Wejscie[i][wvw]);
							SetPlayerInterior(playerid, Wejscie[i][winterior]);
							SetPlayerPosEx(playerid, Wejscie[i][wLoc][0], Wejscie[i][wLoc][1], Wejscie[i][wLoc][2]);
							SetTimerEx("UnFreezeStation", 2000, false, "i", playerid);	
							}
					}
				}
			   if(PlayerToPoint(3.0, playerid, 2315.5696,0.3521,26.7422)) // /rob enter
			   {
					SetPlayerInterior(playerid, 6);
					SetPlayerPosEx(playerid, -296.7248,1502.6849,1070.9940);
			   }
			   if(PlayerToPoint(3.0, playerid, -296.7248,1502.6849,1070.9940)) // /rob exit
			   {
					SetPlayerInterior(playerid, 0);
					SetPlayerPosEx(playerid, 2315.5696,0.3521,26.7422);
			   }				   
			   for(new i = 1; i < sizeof(HouseInfo); i++)
			   {
				   if(IsPlayerInRangeOfPoint(playerid,2,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				   {
					   if(PlayerInfo[playerid][pHouse] == i || HouseInfo[i][hLock] == 0)
					   {
						   SetPlayerInterior(playerid,HouseInfo[i][hInterior]);
						   SetPlayerPosEx(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]); 
						   PlayerInfo[playerid][pInt] = HouseInfo[i][hInterior];
						   PlayerInfo[playerid][pLocal] = i;
						   SetPlayerVirtualWorld(playerid,HouseInfo[i][hVirtual]);
						   InHouse[playerid] = i;
						   UpdateHouseRadio(i);
					   }
					   else
					   {
						   GameTextForPlayer(playerid, "~r~~h~Zamkniety", 5000, 1);
					   }
				   }
			   }
			   for(new i = 1; i < sizeof(BizzInfo); i++)
			   {
				   if (IsPlayerInRangeOfPoint(playerid,2,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) && BizzInfo[i][bStatic] == 0)
				   {
					   if(GetPlayerCash(playerid) >= BizzInfo[i][bFee])
					   {
						   if(BizzInfo[i][bLocked] == 1)
						   {
							   GameTextForPlayer(playerid, "~r~~h~Zamkniety", 5000, 1);
							   return 1;
						   }
						   GivePlayerCash(playerid,-BizzInfo[i][bFee]);
						   BizzInfo[i][bBalance] += BizzInfo[i][bFee];
						   if(i == 1) SCM(playerid,COLOR_LIGHTBLUE,"Dostepne polecenia: /withdraw, /deposit, /transfer.");
						   if(i == 25) SCM(playerid,COLOR_LIGHTBLUE,"Dostepne polecenia: /kup");
						   if(i == 28) SCM(playerid,COLOR_LIGHTBLUE,"Dostepne polecenia: /playdice.");
						   if(i == 2)  SCM(playerid,COLOR_LIGHTBLUE,"Dostepne polecenia: /buygun.");
						  // if(i == 26 || i == 27)  SCM(playerid,COLOR_LIGHTBLUE,"Dostepne polecenia: /eat.");
						   if(i == 3 || i == 4 || i == 5) {
						       PlayAudioStreamForPlayer(playerid,alhamusic);
							   SCM(playerid,COLOR_LIGHTBLUE,"Dostepne polecenia: /drink.");
	                       }							   
						   if(i == 20 || i == 21 || i == 22 || i == 23 || i == 24) SCM(playerid,COLOR_LIGHTBLUE,"Dostepne polecenia: /kup.");
						   if(i == 6) SCM(playerid,COLOR_LIGHTBLUE,"Dostepne polecenia: /buydildo.");												   
						   SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
						   SetPlayerPosEx(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
						   PlayerInfo[playerid][pInt] = BizzInfo[i][bInterior];
						   PlayerInfo[playerid][pLocal] = i+99;
	                       SetPlayerVirtualWorld(playerid,BizzInfo[i][bVirtual]);
						   InBussines[playerid] = i;
						   Update(playerid, pCashx);
			               new str1[184];
						   format(str1,sizeof(str1),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[i][bBalance],i);
						   mysql_query(SQL,str1);
						   
						   format(str1, sizeof(str1), "~r~-$%d", BizzInfo[i][bFee]);
						   GameTextForPlayer(playerid, str1, 1000, 1);
					   }
					   else
					   {
						   GameTextForPlayer(playerid, "~r~~h~Nie masz potrzebnych pieniedzy", 5000, 1);
					   }
				   }
			   }
		   }
		   for(new i = 1; i <  sizeof(HouseInfo); i++)
		   {
			   if (PlayerToPoint(2, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]) && HouseInfo[i][hVirtual] == GetPlayerVirtualWorld(playerid))
		       {
				   SetPlayerVirtualWorld(playerid,0);
				   StopAudioStreamForPlayer(playerid);
				   SetPlayerInterior(playerid,0);
				   SetPlayerPosEx(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
				   PlayerInfo[playerid][pInt] = 0;
				   PlayerInfo[playerid][pLocal] = 255;
				   InHouse[playerid] = -1;
			   }
		   }
		   for(new i = 1; i <  sizeof(BizzInfo); i++)
		   {
			   if (PlayerToPoint(2, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]) && BizzInfo[i][bVirtual]==GetPlayerVirtualWorld(playerid))
			   {
				   SetPlayerInterior(playerid,0);
				   PlayerInfo[playerid][pInt] = 0;
				   SetPlayerPosEx(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
				   PlayerInfo[playerid][pLocal] = 255;
	               SetPlayerVirtualWorld(playerid,0);
	               InBussines[playerid] = -1;
			   }
			   if(i == 3)
			   {
				   StopAudioStreamForPlayer(playerid);
			   }
		   }
	   }
       if(GetPlayerVehicleID(playerid) == rentls[1] || GetPlayerVehicleID(playerid) == rentls[2] || GetPlayerVehicleID(playerid) == rentls[3])
	   {
		   TogglePlayerControllable(playerid, 1);
		   RemovePlayerFromVehicleEx(playerid);
       }
       if(GetPlayerVehicleID(playerid) == scooter[1] || GetPlayerVehicleID(playerid) == scooter[2] || GetPlayerVehicleID(playerid) == scooter[3] || GetPlayerVehicleID(playerid) == scooter[4] || GetPlayerVehicleID(playerid) == scooter[5])
	   {
		   TogglePlayerControllable(playerid, 1);
		   RemovePlayerFromVehicleEx(playerid);
       }
	   if(NoFuel[playerid] == 1)
	   {
		   RemovePlayerFromVehicleEx(playerid);
           TogglePlayerControllable(playerid, 1);
		   NoFuel[playerid] = 0;
	   }
   }
   if (newkeys & KEY_YES)
   {
	  if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
      {
           for(new i = 1; i < MAX_BRAMY; i++){
            if(Bramy[i][buuid] == i) {
			if (PlayerToPoint(Bramy[i][brange], playerid, Bramy[i][bLoc][0], Bramy[i][bLoc][1], Bramy[i][bLoc][2])){
			if(IsAllowedToUseGate(playerid, i) == 1) {
			if(BramaOpenClose[Bramy[i][buuid]] == 0){
				MoveDynamicObject(Bramy[i][bnumer], Bramy[i][bLoc2][0], Bramy[i][bLoc2][1], Bramy[i][bLoc2][2], 3.0, Bramy[i][bRot2][0], Bramy[i][bRot2][1], Bramy[i][bRot2][2]);
				GameTextForPlayer(playerid, "~w~BRAMA ~g~OTWARTA", 2000, 4);
				BramaOpenClose[Bramy[i][buuid]] = 1;
			     	} else {
					MoveDynamicObject(Bramy[i][bnumer], Bramy[i][bLoc][0], Bramy[i][bLoc][1], Bramy[i][bLoc][2], 3.0, Bramy[i][bRot][0], Bramy[i][bRot][1], Bramy[i][bRot][2]);
					GameTextForPlayer(playerid, "~w~BRAMA ~r~ZAMKNIETA", 2000, 4);
					BramaOpenClose[Bramy[i][buuid]] = 0;
						}
					}
				}
			}
		}
      }
      return 1;
   }
   if (newkeys & KEY_FIRE)
   {
	  if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
      {
         if(Swiatla[veh] == 0)
         {
			 GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(veh,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
			 Swiatla[veh] = 1;
         }
         else if(Swiatla[veh] == 1)
         {
			 GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(veh,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
			 Swiatla[veh] = 0;
         }
      }
      return 1;
   }
   if (newkeys & KEY_ACTION)
   {
	  if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
      {
			new string[128],sendername[25];
			if(Gas[veh] == 0) return SCM(playerid,COLOR_YELLOW2, "Ten pojazd nie ma benzyny.");
			if(IsABike(veh)) return SendClientMessage(playerid,COLOR_WHITE,"Nie mozesz uzyc tego polecenia na rowerze.");
			if(veh == hotc[1] || veh == hotc[2]) return SCM(playerid,COLOR_GREY, "Nie mozesz uzyc tego polecenia w tym pojezdzie.");
			if(veh == sanr[1] || veh == sanr[2]) return SCM(playerid,COLOR_GREY, "Nie mozesz uzyc tego polecenia w tym pojezdzie.");
			if(Refueling[playerid] == 0)
			{
			if(OdpalanieSpam[playerid] == 1)
			{
				SendClientMessage(playerid,COLOR_GREY, "Odpalasz juz wóz!");
				return 1;
			}
			if(Silnik[veh] == 0)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s przekrêca kluczyk w pojedzie i uruchamia go.", sendername);
					SetPlayerChatBubble(playerid,string,COLOR_FADE1,10.0,8000);
					ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetTimerEx("odpalanie2",3000,0,"d",playerid);
					OdpalanieSpam[playerid] = 1;
					}
				else if(Silnik[veh] == 1)
				{
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
				new vehicle;
				vehicle = GetVehicleModel(veh) - 400;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s wyciaga kluczyk i wy³¹cza silnik w pojedzie", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerChatBubble(playerid,string,COLOR_FADE1,10.0,8000);
				Silnik[veh] = 0;
				Swiatla[veh] = 0;
				}
			}
			else return SendClientMessage(playerid,COLOR_WHITE,"Pojazd jest tankowany, czekaj.");
      }
      return 1;
   }
   /*if (newkeys & KEY_ANALOG_UP)
   {
      if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
      {
         if(Maska[veh] == 0)
         {
			 GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(veh,engine,lights,alarm,doors,VEHICLE_PARAMS_ON,boot,objective);
			 Maska[veh] = 1;
         }
         else if(Maska[veh] == 1)
         {
			 GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(veh,engine,lights,alarm,doors,VEHICLE_PARAMS_OFF,boot,objective);
			 Maska[veh] = 0;
         }
      }
      return 1;
   }*/
   return 0;
}

public OnVehicleSpawn(vehicleid)
{
	/*if(vehicleid == civilcar[1] || vehicleid == civilcar[2])
	{
		Gas[vehicleid] = GasMax;
	}*/
	SetVehicleHealth(vehicleid, 999);
    SetTunning(vehicleid);
	return 1;
}

stock SetPlayerPosEx(playerid, Float:x, Float:y, Float:z) {
	SetPlayerPos(playerid, x, y, z);
	GetPlayerPos(playerid, LastPos[playerid][0], LastPos[playerid][1], LastPos[playerid][2]);
	Exception[playerid] += 1;
    foreach(Player, i) {
		if(Spectate[i] == playerid) {
			TogglePlayerSpectating(i, 1);
			SetPlayerInterior(i, GetPlayerInterior(playerid));
			SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
			if(IsPlayerInAnyVehicle(playerid)) PlayerSpectateVehicle(i, GetPlayerVehicleID(playerid));
			else PlayerSpectatePlayer(i, playerid);	
		}
	}	
	return 1;
}

function LoadGlobalTimers() {
	SetTimer("WantedDown", 1000, 1);
	SetTimer("WantedTime2", 60000, 1);	
	SetTimer("UpdatePlayerData", 5000, 1);
	SetTimer("OnVehicleUpdate", 1000, true);
}

public SyncUp()
{
	foreach(Player, i) {
	    if(IsPlayerConnected(i)) {
			if(PlayerTime[i] != 0) PlayerTime[i] --;
			if(PlayerTime2[i] != 0) PlayerTime2[i] --;
			if(PlayerTime3[i] != 0) PlayerTime3[i] --;
			if(PlayerTime4[i] != 0) PlayerTime4[i] --;
			if(PlayerTime5[i] != 0) PlayerTime5[i] --;
			if(PlayerTime6[i] != 0) PlayerTime6[i] --;
			if(PlayerTime7[i] != 0) PlayerTime7[i] --;
			if(PlayerTime8[i] != 0) PlayerTime8[i] --;
			if(PlayerTime10[i] != 0) PlayerTime10[i] --;
		}
	}
	new tmphour;
	new tmpminute;
	new tmpsecond;
	new hour,minn,sec;
	gettime(hour,minn,sec);
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		ghour = tmphour;
		PayDay();
		if(hour == 0) {
			new query[128];
			format(query, sizeof(query), "UPDATE `users` SET `DayLogin`='0'");
			mysql_query(SQL, query);
		}
		if(hour == 23)
		{
			new str[256];
		    /*for(new turf = 1; turf < sizeof(TurfInfo); turf++)
		    {
				TurfInfo[turf][zTime] = 0;
				format(str,sizeof(str),"UPDATE `turfs` SET `Time`='0' WHERE `ID`='%d'",turf);
				mysql_query(SQL,str);
		    }*/
		}
		if (realtime)
		{
			SetWorldTime(hour);
		}
	}
	return 1;
}

public IsPlayerInArea(playerid, Float:minx, Float:miny, Float:maxx, Float:maxy)
{
   new Float:x, Float:y, Float:z;
   GetPlayerPos(playerid, x, y, z);
   if (x > minx && x < maxx && y > miny && y < maxy) return 1;
   return 0;
}

public Production()
{
	foreach(Player,i)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerDrunk[i] > 0)
			{
			    PlayerDrunk[i] = 0;
		     	PlayerDrunkTime[i] = 0;
	    		GameTextForPlayer(i, "~p~Twoje upojenie~n~~w~zakonczone", 3500, 1);
	    		SetPlayerDrunkLevel(i, 0);
			}
		    if(PlayerInfo[i][pPayDay] < 6)
			{
	    		PlayerInfo[i][pPayDay] += 1;
			}
		}
	}
	return 1;
}

CMD:startpp(playerid, params[]) {
PayDay();
SCM(playerid, -1, "wlaczylem payday");
return 1;
}

CMD:taxset(playerid, params[]) {
new nowawartosc;
if(sscanf(params, "i", nowawartosc)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/nowawartosc <wartosc>");
TaxValue = nowawartosc;
SCM(playerid, -1, "ustawilem tax");
return 1;
}

public PayDay()
{
	new string[128],str[256];
	new odsetk,account[MAX_PLAYERS], kwotaprzed;
	new hour,minn,sec;
	new rent[MAX_PLAYERS];
	gettime(hour,minn,sec);
	foreach(Player,i)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pLevel] >= 0)
		    {
            	new wakaname[25];
                GetPlayerName(i,wakaname,sizeof(wakaname));
				new playername2[MAX_PLAYER_NAME];
				GetPlayerName(i, playername2, sizeof(playername2));
				new key = PlayerInfo[i][pHouse];
				if(key != 999)
				{
					rent[i] = HouseInfo[key][hRent];
					HouseInfo[key][hTakings] += rent[i];
				    format(str,sizeof(str),"UPDATE `houses` SET `Takings`='%d' WHERE `ID`='%d'",HouseInfo[key][hTakings],key);
				    mysql_query(SQL,str);
				}
				new Float:tmpintrate;
				if(PlayerInfo[i][pPremiumAccount] >= 1)
				{
					tmpintrate = 0.2;// odsetki 0.2 tylko dla premium
					PlayerInfo[i][pPayDayHad] += 1;
					if(PlayerInfo[i][pPayDayHad] >= 5)
					{
						PlayerInfo[i][pExp]++;
						PlayerInfo[i][pPayDayHad] = 0;
					}
					new bonus = PlayerInfo[i][pPayCheck] / 2;
					PlayerInfo[i][pPayCheck] += bonus;
				}
				else
				{
					tmpintrate = 0.1; // odsetki 0.1 dla zywyklego konta
				}
				kwotaprzed = PlayerInfo[i][pAccount];
				account[i] = PlayerInfo[i][pAccount];
				Tax += TaxValue;
				PlayerInfo[i][pAccount] -= TaxValue;
				new checks = 1000 + random(1000); // PODSTAWOWA WYPLATA 1000 + losowa kwota pomiedzy 1 a 1000
				PlayerInfo[i][pAccount] += checks; // dodawanie tej kwoty do konta bankowego gracza
				odsetk = floatround(PlayerInfo[i][pAccount]*tmpintrate);
				PlayerInfo[i][pExp] += 1;
				PlayerInfo[i][pAccount] += odsetk;
				
				//GameTextForPlayer(i, "~g~PAYDAY", 1000, 1);			
					
				format(string, sizeof(string), "Twoja sesja trwa³a %d godzin %d minut.", floatround(PlayerInfo[i][pSeconds]/3600), floatround(PlayerInfo[i][pSeconds]/60));
				SendClientMessage(i, COLOR_LIGHTBLUE, string);
				
				TextDrawShowForPlayer(i, payday_box);
				TextDrawShowForPlayer(i, wyplata_title);
				TextDrawShowForPlayer(i, stankonta);
				
				format(string, sizeof(string), "%s$", FormatNumber(kwotaprzed));
				TextDrawSetString(stankonta_hajs, string);
				TextDrawShowForPlayer(i, stankonta_hajs);
				
				TextDrawShowForPlayer(i, podatek);
				
				format(string, sizeof(string), "-%d$", TaxValue);
				TextDrawSetString(podatek_hajs, string);
				TextDrawShowForPlayer(i, podatek_hajs);
				
				TextDrawShowForPlayer(i, wyplata);
				
				format(string, sizeof(string), "+%s$", FormatNumber(checks));
				TextDrawSetString(wyplata_hajs, string);
				TextDrawShowForPlayer(i, wyplata_hajs);
				
				TextDrawShowForPlayer(i, odsetki);
				
				format(string, sizeof(string), "%s$ (%f)", FormatNumber(odsetk), tmpintrate);
				TextDrawSetString(odsetki_hajs, string);
				TextDrawShowForPlayer(i, odsetki_hajs);
				
				TextDrawShowForPlayer(i, nowesaldo);
				
				format(string, sizeof(string), "%s$", FormatNumber(PlayerInfo[i][pAccount]));
				TextDrawSetString(nowesaldo_hajs, string);
				TextDrawShowForPlayer(i, nowesaldo_hajs);
				
				SetTimerEx("HidePayDay", 5000, false, "i", i);
				
				//format(string, sizeof(string), "Stan konta: $%d | Wyplata na konto: $%s | Odsetki: %d | Nowe saldo: $%s | Podatek: $%s", kwotaprzed, FormatNumber(checks), odsetk, FormatNumber(PlayerInfo[i][pAccount]), FormatNumber(TaxValue));
				//SendClientMessage(i, COLOR_GREY, string);
				if(PlayerInfo[i][pHouse] != 999) {
					format(string, sizeof(string), "Przychodzy z domu: $%d | Zarobki: $%s", HouseInfo[PlayerInfo[i][pHouse]][hRent], FormatNumber(checks), FormatNumber(PlayerInfo[i][pAccount]), FormatNumber(checks-TaxValue));
					//SendClientMessage(i, COLOR_GREY, string);				
				}
				else {
					format(string, sizeof(string), "Kwota zarobiona bez podatku: $%s", FormatNumber(checks-TaxValue));
					//SendClientMessage(i, COLOR_GREY, string);						
				}
			
				PlayerInfo[i][pConnectTime] += PlayerInfo[i][pSeconds]/3600;
				PlayerInfo[i][pSeconds] = 0;
				
				PlayerInfo[i][pPayDay] = 0;
				PlayerInfo[i][pPayCheck] = 0;
		
				if(PlayerInfo[i][pCarLicT] > 0)
				{
					PlayerInfo[i][pCarLicT] -= 1;
				}
				if(PlayerInfo[i][pFlyLicT] > 0)
				{
					PlayerInfo[i][pFlyLicT] -= 1;
				}
				if(PlayerInfo[i][pBoatLicT] > 0)
				{
					PlayerInfo[i][pBoatLicT] -= 1;
				}
				if(PlayerInfo[i][pFishLicT] > 0)
				{
					PlayerInfo[i][pFishLicT] -= 1;
				}
				if(PlayerInfo[i][pGunLicT] > 0)
				{
					PlayerInfo[i][pGunLicT] -= 1;
				}
				if(PlayerInfo[i][pRob] < 20 && PlayerInfo[i][pPremiumAccount] == 0) PlayerInfo[i][pRob]++;
				else if(PlayerInfo[i][pRob] < 40 && PlayerInfo[i][pPremiumAccount] != 0) PlayerInfo[i][pRob]++;
				
				if(PlayerInfo[i][pFpunish] > 0)
				{
					PlayerInfo[i][pFpunish]--;
				}
				if(PlayerInfo[i][pMember] == 7 || PlayerInfo[i][pLeader] == 7 || IsACop(i))
				{
					PlayerInfo[i][pLawyer] += 1;
				}
				if(PlayerInfo[i][pMember] == 8 || PlayerInfo[i][pLeader] == 8)
				{
					PlayerInfo[i][pTow] += 2;
				}
			}
		}
	}
	return 1;
}

/*CMD:so(playerid, params[])
{
	new userid, string[256];
	if(!IsACop(playerid)) return 1;
	if(OnDuty[playerid] == 0) return SCM(playerid, COLOR_LGREEN, "Nie mozesz uzyc tego polecenia, poniewaz nie jeste na s³u¿bie!");
	if(sscanf(params,"us",userid)) return SendClientMessage(playerid, -1, "Uzycie:{FFFFFF} /so <ID gracza/Nazwa>");
	{
		if(userid == playerid) return 1;
		if(!ProxDetectorS(30.0, playerid, userid)) return SendClientMessage(playerid, -1, "Ten gracz nie jest w twoim zasiegu.");
        if(PlayerInfo[userid][pWantedLevel] != 0) {
			format(string, sizeof(string), "> %s: {4FD6FF}%s{FFFF00}, czy podporzadkowujesz sie? <", GetName(playerid), GetName(userid));
		}
	    else if(PlayerInfo[userid][pWantedLevel] == 0 && IsPlayerInAnyVehicle(userid)) {
			format(string, sizeof(string), "> %s: {4FD6FF}%s{FFFF00}, pociagnij w prawo! <", GetName(playerid), GetName(userid));
		}
		else {
			format(string, sizeof(string), "> %s: {4FD6FF}%s{FFFF00}, stop!<", GetName(playerid), GetName(userid));
		}
		ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
	}
	return 1;
}*/


CMD:editbizz(playerid, params[])
{
	new id, code[256], list;
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
    if(sscanf(params, "iis[256]", id,list,code)) {
 		SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/editbizz <biz id> <code> <result>");
 		SendClientMessage(playerid, 0xFFFFFFFF, "(1) Level, (2) Numer, (3) Cena");
 		return 1;
 	}
 	if(BizzInfo[id][bID] == 0) return SendClientMessage(playerid, COLOR_GOLD, "Aceasta afacere nu exista!");
 	new result = strval(code), string[256];
 	switch(list) {
 	    case 1: {
 	        format(string, 256, "Edytowales poziom w biznesie %d na %d.", id, result);
 	        SCM(playerid, COLOR_GOLD, string);
 	        BizzInfo[id][bLevelNeeded] = result;
			new str[256];
			format(str,sizeof(str),"UPDATE bizz SET Level='%d' WHERE ID='%d'",BizzInfo[id][bLevelNeeded],id);
			mysql_query(SQL,str);
 	    }
 	    case 2: {
 	        format(string, 256, "Zmieniles nazwe biznesu %d na %s.", id, code);
 	        SCM(playerid, COLOR_GOLD, string);
 	        format(BizzInfo[id][bMessage],256,code);
			new str[256];
			mysql_real_escape_string(BizzInfo[id][bMessage], hackmysql);
			format(str,sizeof(str),"UPDATE bizz SET Message='%s' WHERE ID='%d'",hackmysql,id);
			mysql_query(SQL,str);
	     }
 	    case 3: {
 	        format(string, 256, "Edytowales cene biznesu %d na $%s.", id, FormatNumber(result));
 	        SCM(playerid, COLOR_GOLD, string);
			BizzInfo[id][bBuyPrice] = result;
	        format(string, sizeof(string), "UPDATE bizz SET `Value`='%d' WHERE ID=%d",result,id);
	        mysql_query(SQL,string);
 	    }
 	}
 	UpdateLabel(2, id);
	return 1;
}



CMD:edithouse(playerid, params[])
{
	new id, code[256], list;
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
    if(sscanf(params, "iis[256]", id,list,code)) {
 		SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/edithouse <house id> <code> <result>");
 		SendClientMessage(playerid, 0xFFFFFFFF, "(1) Opis, (2) Cena");
 		return 1;
 	}
 	if(HouseInfo[id][hID] == 0) return SendClientMessage(playerid, COLOR_GOLD, "Ten dom nie istnieje!");
 	new result = strval(code), string[256];
 	switch(list) {
 	    case 1: {
 	        format(string, 256, "Zmieniles nazwe domu %d w %s.", id, code);
 	        SCM(playerid, COLOR_GOLD, string);
 	        format(HouseInfo[id][hDiscription],256,code);
			new str[256];
			mysql_real_escape_string(HouseInfo[id][hDiscription], hackmysql);
			format(str,sizeof(str),"UPDATE houses SET Discription='%s' WHERE ID='%d'",hackmysql,id);
			mysql_query(SQL,str);
	     }
 	    case 2: {
 	        format(string, 256, "Edytowales cene domu %d w $%s.", id, FormatNumber(result));
 	        SCM(playerid, COLOR_GOLD, string);
			HouseInfo[id][hValue] = result;
	        format(string, sizeof(string), "UPDATE houses SET `Value`='%d' WHERE ID=%d",result,id);
	        mysql_query(SQL,string);
 	    }
 	}
 	UpdateLabel(1, id);
	return 1;
}


CMD:movehouse(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
	new house;
	if(sscanf(params, "i", house)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/movehouse <house id>");
	if(house < 1 || house > housess) return SCM(playerid, COLOR_GREY, "Zly dom!");
	house = HouseInfo[house][hID];
	new Float: Pos[3];
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	HouseInfo[house][hEntrancex] = Pos[0];
	HouseInfo[house][hEntrancey] = Pos[1];
	HouseInfo[house][hEntrancez] = Pos[2];
	SCM(playerid, COLOR_LGREEN, "Dom zostal przeniesiony do tej lokalizacji!");
	UpdateLabel(1, house);
	new query[256];
	format(query, sizeof(query), "UPDATE `houses` SET `Entrancex`='%f', `Entrancey`='%f', `Entrancez`='%f' WHERE `ID`='%d'", Pos[0], Pos[1], Pos[2], house);
	mysql_query(SQL, query);
	return 1;	
}

CMD:removehouse(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
	new house, text[100], szQuery[256], u;
	if(sscanf(params, "i", house)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/removehouse <house id>");
	house = HouseInfo[house][hID];
	if(house < 1 || house > housess) return SCM(playerid, COLOR_GREY, "Zly dom!");
	format(text, sizeof(text), "AdmCmd: %s usuna³ dom (UUID: %d)",GetName(playerid), house);
	if(HouseInfo[house][hOwned] != 0){
	format(szQuery, sizeof(szQuery), "UPDATE `users` SET `House` = '999' WHERE `name` = '%s'", HouseInfo[house][hOwner]);
	mysql_tquery(SQL, szQuery, "", "");
	format(text, sizeof(text), "AdmCmd: %s usuna³ dom który posiada³ w³aciciela (UUID: %d | W³aciciel: %s)",GetName(playerid), house, HouseInfo[house][hOwner]);
	u = GetPlayerID(HouseInfo[house][hOwner]);
	if(IsPlayerConnected(u)){
	PlayerInfo[u][pHouse] = 999;
		}
	}
	SendAdminMessage(COLOR_LOGS, text, 1);
	AdminLog("/logs/admin.log", text);
	DestroyDynamic3DTextLabel(HouseLabel[house]);
	DestroyDynamicPickup(HouseInfo[house][hPickupID]);
	new query[256];
	format(query, sizeof(query), "DELETE FROM `houses` WHERE `ID`='%d'", house);
	mysql_query(SQL, query);
	HouseInfo[house][hOwned] = 0;
	HouseInfo[house][hLock] = 0;
	HouseInfo[house][hEntrancex] = 0;
	HouseInfo[house][hEntrancey] = 0;
	HouseInfo[house][hEntrancez] = 0;
	HouseInfo[house][hExitx] = 0;
	HouseInfo[house][hExity] = 0;
	HouseInfo[house][hExitz] = 0;
	HouseInfo[house][hID] = 0;
	return 1;	
}

CMD:movebiz(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
	new house;
	if(sscanf(params, "i", house)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/movebiz <biz id>");
	if(house < 1 || house > sizeof(BizzInfo)) return SCM(playerid, COLOR_GREY, "Zly biznes!");
	DestroyDynamicPickup(BizzInfo[house][bPickup]);
	
	new Float: Pos[3];
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	BizzInfo[house][bEntranceX] = Pos[0];
	BizzInfo[house][bEntranceY] = Pos[1];
	BizzInfo[house][bEntranceZ] = Pos[2];
	BizzInfo[house][bPickup] = CreateDynamicPickup(1239, 1, BizzInfo[house][bEntranceX], BizzInfo[house][bEntranceY], BizzInfo[house][bEntranceZ]);		
	SCM(playerid, COLOR_LGREEN, "Biznes zostal przeniesiony do tej lokalizacji!");
	UpdateLabel(2, house);
	new query[256];
	format(query, sizeof(query), "UPDATE `bizz` SET `Entrancex`='%f', `Entrancey`='%f', `Entrancez`='%f' WHERE `ID`='%d'", Pos[0], Pos[1], Pos[2], house);
	mysql_query(SQL, query);
	return 1;	
}

CMD:free(playerid, params[])
{
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Musisz sie najpierw zalogowac.");
	if(IsPlayerConnected(playerid))
	{
		new id,moneyfree,giveplayer[30],sendername[30],string[100];
		if(!IsACop(playerid)) return 1;
		if(OnDuty[playerid] == 0) return SCM(playerid, COLOR_LGREEN, "Nie mozesz uzyc tego polecenia, poniewaz nie jeste na s³u¿bie!");
		if(PlayerInfo[playerid][pLawyer] < 3) return SendClientMessage(playerid, COLOR_GRAD2, "Nie masz pozwolenia.");
		if(sscanf(params, "ui", id,moneyfree)) return SendClientMessage(playerid, 0xFFFFFFFF,"{B8DBFF}Uzycie: /free <nazwa/id> <ile pieniedzy>");
		if(PlayerInfo[id][pJailed] < 1) return SCM(playerid,COLOR_GRAD2, "Ten gracz nie jest zamkniety");
		if(playerid == id) return 1;
		if(moneyfree < 1 || moneyfree > 50000) return SCM(playerid, COLOR_GREY, "Zla kwota (1$-50,000$)");
		if(ProxDetectorS(10.0, playerid, id))
		{
            if(IsPlayerConnected(id))
            {
                if(id != INVALID_PLAYER_ID)
                {
	 				FreeOffer[id] = playerid;
					FreePrice[id] = moneyfree;
					
					GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* Oferujesz %s uwolnienie za %s$.",giveplayer,FormatNumber(moneyfree));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s oferuje ci uwolnienie za %s$, (wpisz /akceptuj free %d) aby akteptowac.",sendername,FormatNumber(moneyfree),playerid);
					SendClientMessage(id, COLOR_LIGHTBLUE, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
		}
		else return SCM(playerid,COLOR_WHITE,"{FFB870}Ten gracz nie jest w twoim zasiegu.");
	}
	return 1;
}

stock GetWeaponSlot (weaponid)
{
	switch (weaponid)
	{
		case 0, 1:
			return 0;

		case 2 .. 9:
			return 1;
		case 10 .. 15:
			return 10;
		case 16 .. 19, 39:
			return 8;
		case 22 .. 24:
			return 2;
		case 25 .. 27:
			return 3;
		case 28, 29, 32:
			return 4;
		case 30, 31:
			return 5;
		case 33, 34:
			return 6;
		case 35 .. 38:
			return 7;
		case 40:
			return 12;
		case 41 .. 43:
			return 9;

		case 44 .. 46:
			return 11;
	}
	return 0;
}

stock GivePlayerWeaponEx(playerid, weaponid, ammo)
{
    //AntiCheatProtect[playerid] = 100;
    GivePlayerWeapon(playerid, weaponid, ammo);
    PlayerInfo[playerid][pGun][GetWeapSlotID(weaponid)] = weaponid;
    PlayerInfo[playerid][pAmmo][GetWeapSlotID(weaponid)] = ammo;
    return 1;
}

stock ResetPlayerWeaponsEx(playerid)
{
	//AntiCheatProtectGun[playerid] = 255;
    //AntiCheatProtect[playerid] = 255;
    Thing[UsedWeapThing[playerid]][t_used] = 0;
    Thing[SelectedThing[playerid]][t_used] = 0;
    UsedSlot[playerid] = -1;
    UsedWeap[playerid] = 0;
	UsedWeapThing[playerid] = 0;
	//AntiCheatProtectGunScan[playerid] = SetTimerEx("AntiCheatProtectGunScaned",2000,0,"dd",playerid,1);
    PlayerInfo[playerid][pGun][0] = 0;
   	PlayerInfo[playerid][pGun][1] = 0;
   	PlayerInfo[playerid][pGun][2] = 0;
   	PlayerInfo[playerid][pGun][3] = 0;
   	PlayerInfo[playerid][pGun][4] = 0;
   	PlayerInfo[playerid][pGun][5] = 0;
   	PlayerInfo[playerid][pGun][6] = 0;
   	PlayerInfo[playerid][pGun][7] = 0;
	PlayerInfo[playerid][pGun][8] = 0;
   	PlayerInfo[playerid][pGun][9] = 0;
   	PlayerInfo[playerid][pGun][10] = 0;
   	PlayerInfo[playerid][pGun][11] = 0;
   	PlayerInfo[playerid][pGun][12] = 0;
   	PlayerInfo[playerid][pAmmo][0] = 0;
   	PlayerInfo[playerid][pAmmo][1] = 0;
   	PlayerInfo[playerid][pAmmo][2] = 0;
   	PlayerInfo[playerid][pAmmo][3] = 0;
	PlayerInfo[playerid][pAmmo][4] = 0;
   	PlayerInfo[playerid][pAmmo][5] = 0;
   	PlayerInfo[playerid][pAmmo][6] = 0;
   	PlayerInfo[playerid][pAmmo][7] = 0;
   	PlayerInfo[playerid][pAmmo][8] = 0;
   	PlayerInfo[playerid][pAmmo][9] = 0;
   	PlayerInfo[playerid][pAmmo][10] = 0;
   	PlayerInfo[playerid][pAmmo][11] = 0;
   	PlayerInfo[playerid][pAmmo][12] = 0;
	WeaponData[playerid][0] = false; WeaponData[playerid][1] = false; WeaponData[playerid][2] = false; WeaponData[playerid][3] = false;
	WeaponData[playerid][4] = false; WeaponData[playerid][5] = false; WeaponData[playerid][6] = false; WeaponData[playerid][7] = false;
	WeaponData[playerid][8] = false; WeaponData[playerid][9] = false; WeaponData[playerid][10] = false; WeaponData[playerid][11] = false;
	WeaponData[playerid][12] = false;
	return ResetPlayerWeapons(playerid);
}

stock GetWeaponNameEx(id, name[], len) return format(name,len, "%s", GunNames[id]);

stock RemovePlayerWeapon(playerid, weaponid);
public RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[12] = 0;
	new plyAmmo[12] = 0;
	for(new sslot = 0; sslot != 12; sslot++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, sslot, wep, ammo);
		if(wep != weaponid && ammo != 0) GetPlayerWeaponData(playerid, sslot, plyWeapons[sslot], plyAmmo[sslot]);
	}
	ResetPlayerWeaponsEx(playerid);
	ResetPlayerWeapons(playerid);
	for(new sslot = 0; sslot != 12; sslot++)
	{
	    if(plyAmmo[sslot] != 0) GivePlayerWeaponEx(playerid, plyWeapons[sslot], plyAmmo[sslot]);
	}
	return 1;
}


public split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
	    if(strsrc[i]==delimiter || i==strlen(strsrc)){
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}

public OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
		new playername3[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername3, sizeof(playername3));
		new Str[200];
		format(Str,sizeof(Str),"INSERT INTO `users` (`name`,`password`) VALUES ('%s','%s')",playername3,password);
		mysql_query(SQL,Str);
		strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 255);
		PlayerInfo[playerid][pCash] = GetPlayerCash(playerid);
	    //GetPlayerHealthEx(playerid,PlayerInfo[playerid][pHealth]);
		if ((PlayerInfo[playerid][pPos_x]==0.0 && PlayerInfo[playerid][pPos_y]==0.0 && PlayerInfo[playerid][pPos_z]==0.0))
		{
     	    PlayerInfo[playerid][pPos_x] = 2246.6;
     	    PlayerInfo[playerid][pPos_y] = -1161.9;
     	    PlayerInfo[playerid][pPos_z] = 1029.7;
		}
		if(Spectate[playerid] != 255)
		{
			PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
			PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
			PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
			PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
			PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
		}
		new wakaname[25];
		GetPlayerName(playerid,wakaname,25);
		new loginstring[128];
		new loginname[64];
		GetPlayerName(playerid,loginname,sizeof(loginname));
		format(loginstring,sizeof(loginstring),"Twoje konto zostalo zarejestrowane, musisz sie teraz zalogowac!",loginname);
		ShowPlayerDialog(playerid,DIALOG_LOGIN2,DIALOG_STYLE_PASSWORD,"SERVER: Loguj",loginstring,"Login","Anuluj");
		PlayerInfo[playerid][pShowLogo] = 1;
		PlayerInfo[playerid][pShowCeas] = 1;
		return 1;
	}
	return 1;
}

public OnPlayerLogin2(playerid,password[])
{
	new playername2[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername2, sizeof(playername2));
    new qstr[100];
    new result[456];
	TogglePlayerControllable(playerid, true);
    format(qstr,100,"SELECT * FROM users WHERE `name`='%s' AND `password`='%s'",playername2,password);
    mysql_query(SQL,qstr);
    mysql_store_result();
    if(mysql_num_rows() > 0)
    {
      	if(mysql_retrieve_row())
      	{
    		mysql_fetch_field_row(result,"password"); format(PlayerInfo[playerid][pKey], 128, result);
			mysql_fetch_field_row(result,"Level"); PlayerInfo[playerid][pLevel] = strval( result );
			mysql_fetch_field_row(result,"Admin"); PlayerInfo[playerid][pAdmin] = strval( result );
			PlayerInfo[playerid][pShowHud][0] = cache_get_field_content_int(0, "ShowHud", SQL);
			PlayerInfo[playerid][pShowHud][1] = cache_get_field_content_int(0, "ShowHud1", SQL);
			PlayerInfo[playerid][pShowHud][2] = cache_get_field_content_int(0, "ShowHud2", SQL);
			PlayerInfo[playerid][pShowHud][3] = cache_get_field_content_int(0, "ShowHud3", SQL);
			PlayerInfo[playerid][pShowHud][4] = cache_get_field_content_int(0, "ShowHud4", SQL);			
			PlayerInfo[playerid][pSlot][0] = cache_get_field_content_int(0, "Slot1", SQL);
			PlayerInfo[playerid][pSlot][1] = cache_get_field_content_int(0, "Slot2", SQL);
			PlayerInfo[playerid][pSlot][2] = cache_get_field_content_int(0, "Slot3", SQL);
			PlayerInfo[playerid][pSlot][3] = cache_get_field_content_int(0, "Slot4", SQL);
			PlayerInfo[playerid][pSlot][4] = cache_get_field_content_int(0, "Slot5", SQL);
			
			mysql_fetch_field_row(result,"DailyBonus"); PlayerInfo[playerid][pDailyBonus] = strval( result );	
			
			mysql_fetch_field_row(result,"Helper"); PlayerInfo[playerid][pHelper] = strval( result );
			mysql_fetch_field_row(result,"Premium"); PlayerInfo[playerid][pPremiumAccount] = strval( result );
			mysql_fetch_field_row(result,"GPS"); PlayerInfo[playerid][pGPS] = strval( result );
			mysql_fetch_field_row(result,"TotalGold"); PlayerInfo[playerid][pTotalGold] = strval( result );	
			mysql_fetch_field_row(result,"Vip"); PlayerInfo[playerid][pVip] = strval( result );	
			mysql_fetch_field_row(result,"ReportTime"); PlayerInfo[playerid][pReportTime] = strval( result );
			mysql_fetch_field_row(result,"HelpedPlayers"); PlayerInfo[playerid][pHelpedPlayers] = strval( result );
			mysql_fetch_field_row(result,"Color"); PlayerInfo[playerid][pColor] = strval( result );	
			mysql_fetch_field_row(result,"ConnectedTime"); PlayerInfo[playerid][pConnectTime] = floatstr( result );
			mysql_fetch_field_row(result,"Registered"); PlayerInfo[playerid][pReg] = strval( result );
			mysql_fetch_field_row(result,"Sex"); PlayerInfo[playerid][pSex] = strval( result );
			mysql_fetch_field_row(result,"Age"); PlayerInfo[playerid][pAge] = strval( result );
			mysql_fetch_field_row(result,"Muted"); PlayerInfo[playerid][pMuted] = strval( result );
			mysql_fetch_field_row(result,"MuteTime"); PlayerInfo[playerid][pMuteTime] = strval( result );
			mysql_fetch_field_row(result,"Respect"); PlayerInfo[playerid][pExp] = strval( result );
			mysql_fetch_field_row(result,"Money"); PlayerInfo[playerid][pCash] = strval( result );
			mysql_fetch_field_row(result,"Bank"); PlayerInfo[playerid][pAccount] = strval( result );
			mysql_fetch_field_row(result,"Crimes"); PlayerInfo[playerid][pCrimes] = strval( result );
			mysql_fetch_field_row(result,"Kills"); PlayerInfo[playerid][pKills] = strval( result );
			mysql_fetch_field_row(result,"Deaths"); PlayerInfo[playerid][pDeaths] = strval( result );
			mysql_fetch_field_row(result,"Arrested"); PlayerInfo[playerid][pArrested] = strval( result );
			mysql_fetch_field_row(result,"WantedDeaths"); PlayerInfo[playerid][pWantedDeaths] = strval( result );
			mysql_fetch_field_row(result,"WantedLevel"); PlayerInfo[playerid][pWantedLevel] = strval( result );
			mysql_fetch_field_row(result,"Job"); PlayerInfo[playerid][pJob] = strval( result );
			mysql_fetch_field_row(result,"Paycheck"); PlayerInfo[playerid][pPayCheck] = strval( result );
			mysql_fetch_field_row(result,"pOOCName"); strmid(PlayerInfo[playerid][pOOCName], result, 0, strlen(result), 255);
			mysql_fetch_field_row(result,"Jailed"); PlayerInfo[playerid][pJailed] = strval( result );
			mysql_fetch_field_row(result,"JailTime"); PlayerInfo[playerid][pJailTime] = strval( result );
			mysql_fetch_field_row(result,"BWTime"); PlayerInfo[playerid][pBWTime] = strval( result );
			mysql_fetch_field_row(result,"Materials"); PlayerInfo[playerid][pMats] = strval( result );
			mysql_fetch_field_row(result,"Drugs"); PlayerInfo[playerid][pDrugs] = strval( result );
			mysql_fetch_field_row(result,"Leader"); PlayerInfo[playerid][pLeader] = strval( result );
			mysql_fetch_field_row(result,"Member"); PlayerInfo[playerid][pMember] = strval( result );
			mysql_fetch_field_row(result,"Rank"); PlayerInfo[playerid][pRank] = strval( result );
			mysql_fetch_field_row(result,"CChar"); PlayerInfo[playerid][pChar] = strval( result );
			mysql_fetch_field_row(result,"FSkin"); PlayerInfo[playerid][pfSkin] = strval( result );
			mysql_fetch_field_row(result,"FWarn"); PlayerInfo[playerid][pFACWarns] = strval( result );
			mysql_fetch_field_row(result,"FPunish"); PlayerInfo[playerid][pFpunish] = strval( result );
			mysql_fetch_field_row(result,"Acceptpoints"); PlayerInfo[playerid][pLawyer] = strval( result );
			mysql_fetch_field_row(result,"LawSkill"); PlayerInfo[playerid][pLawSkill] = strval( result );
			mysql_fetch_field_row(result,"MechSkill"); PlayerInfo[playerid][pMechSkill] = strval( result );
			mysql_fetch_field_row(result,"DrugsSkill"); PlayerInfo[playerid][pDrugsSkill] = strval( result );
			mysql_fetch_field_row(result,"TruckerSkill"); PlayerInfo[playerid][pTruckerSkill] = strval( result );
			mysql_fetch_field_row(result,"MowerSkill"); PlayerInfo[playerid][pMowerSkill] = strval( result );
			mysql_fetch_field_row(result,"GarbageSkill"); PlayerInfo[playerid][pGarbageSkill] = strval( result );
			mysql_fetch_field_row(result,"FarmerSkill"); PlayerInfo[playerid][pFarmerSkill] = strval( result );
			mysql_fetch_field_row(result,"FishSkill"); PlayerInfo[playerid][pFishSkill] = strval( result );
			
			mysql_fetch_field_row(result,"ConstructorSkill"); PlayerInfo[playerid][pConstructorSkill] = strval( result );
			mysql_fetch_field_row(result,"BusSkill"); PlayerInfo[playerid][pBusSkill] = strval( result );
			mysql_fetch_field_row(result,"HotSkill"); PlayerInfo[playerid][pHotSkill] = strval( result );
			mysql_fetch_field_row(result,"GasCan"); PlayerInfo[playerid][pGasCan] = strval( result );
			mysql_fetch_field_row(result,"CadouLuat"); PlayerInfo[playerid][pCadouLuat] = strval( result );
			mysql_fetch_field_row(result,"DetectivSkill"); PlayerInfo[playerid][pDetectivSkill] = strval( result );			
			mysql_fetch_field_row(result,"MatSkill"); PlayerInfo[playerid][pMatSkill] = strval( result );
			mysql_fetch_field_row(result,"RobSkill"); PlayerInfo[playerid][pRobSkill] = strval( result );
	        mysql_fetch_field_row(result,"Team"); PlayerInfo[playerid][pTeam] = strval( result );
	        mysql_fetch_field_row(result,"Model"); PlayerInfo[playerid][pModel] = strval( result );
			
	        mysql_fetch_field_row(result,"PhoneNr"); PlayerInfo[playerid][pPnumber] = strval( result );//bazatel
			mysql_fetch_field_row(result,"TrybCichy"); PlayerInfo[playerid][pTrybCichy] = strval( result );
			mysql_fetch_field_row(result,"Dzwonek"); PlayerInfo[playerid][pDzwonek] = strval( result );
			mysql_fetch_field_row(result,"DzwiekSMS"); PlayerInfo[playerid][pDzwiekSMS] = strval( result );
			mysql_fetch_field_row(result,"Zastrzezony"); PlayerInfo[playerid][pZastrzezony] = strval( result );
			mysql_fetch_field_row(result,"TelefonOnline"); PlayerInfo[playerid][pTelefonOnline] = strval( result );
			
	        mysql_fetch_field_row(result,"House"); PlayerInfo[playerid][pHouse] = strval( result );
	        mysql_fetch_field_row(result,"Bizz"); PlayerInfo[playerid][pBizz] = strval( result );
	        mysql_fetch_field_row(result,"Pos_x"); PlayerInfo[playerid][pPos_x] = floatstr( result );
	        mysql_fetch_field_row(result,"Pos_y"); PlayerInfo[playerid][pPos_y] = floatstr( result );
	        mysql_fetch_field_row(result,"Pos_z"); PlayerInfo[playerid][pPos_z] = floatstr( result );
			mysql_fetch_field_row(result,"last_vw"); PlayerInfo[playerid][pPos_vw] = strval( result );
			mysql_fetch_field_row(result,"SpawnMode"); PlayerInfo[playerid][pSpawnMode] = strval( result );
	        mysql_fetch_field_row(result,"Rob"); PlayerInfo[playerid][pRob] = strval( result );
	        mysql_fetch_field_row(result,"CarLicT"); PlayerInfo[playerid][pCarLicT] = strval( result );
	        mysql_fetch_field_row(result,"CarLic"); PlayerInfo[playerid][pCarLic] = strval( result );
	        mysql_fetch_field_row(result,"FlyLicT"); PlayerInfo[playerid][pFlyLicT] = strval( result );
	        mysql_fetch_field_row(result,"FlyLic"); PlayerInfo[playerid][pFlyLic] = strval( result );
	        mysql_fetch_field_row(result,"BoatLicT"); PlayerInfo[playerid][pBoatLicT] = strval( result );
	        mysql_fetch_field_row(result,"BoatLic"); PlayerInfo[playerid][pBoatLic] = strval( result );
	        mysql_fetch_field_row(result,"FishLicT"); PlayerInfo[playerid][pFishLicT] = strval( result );
	        mysql_fetch_field_row(result,"FishLic"); PlayerInfo[playerid][pFishLic] = strval( result );
	        mysql_fetch_field_row(result,"GunLicT"); PlayerInfo[playerid][pGunLicT] = strval( result );
	        mysql_fetch_field_row(result,"GunLic"); PlayerInfo[playerid][pGunLic] = strval( result );
	        mysql_fetch_field_row(result,"PayDay"); PlayerInfo[playerid][pPayDay] = strval( result );
	        mysql_fetch_field_row(result,"PayDayHad"); PlayerInfo[playerid][pPayDayHad] = strval( result );
	        mysql_fetch_field_row(result,"Tutorial"); PlayerInfo[playerid][pTut] = strval( result );
	        mysql_fetch_field_row(result,"Warnings"); PlayerInfo[playerid][pWarns] = strval( result );
	        mysql_fetch_field_row(result,"Rented"); PlayerInfo[playerid][pRented] = strval( result );
	        mysql_fetch_field_row(result,"Fuel"); PlayerInfo[playerid][pFuel] = strval( result );
	        mysql_fetch_field_row(result,"WTalkie"); PlayerInfo[playerid][pWTalkie] = strval( result );
	        mysql_fetch_field_row(result,"Lighter"); PlayerInfo[playerid][pLighter] = strval( result );
	        mysql_fetch_field_row(result,"Cigarettes"); PlayerInfo[playerid][pCigarettes] = strval( result );
	        mysql_fetch_field_row(result,"Tow"); PlayerInfo[playerid][pTow] = strval( result );
			mysql_fetch_field_row(result,"Email"); strmid(PlayerInfo[playerid][pEmail], result, 0, strlen(result), 255);
			mysql_fetch_field_row(result,"RegisterDate"); strmid(PlayerInfo[playerid][pRegistredDate], result, 0, strlen(result), 255);
	        mysql_fetch_field_row(result,"Banned"); PlayerInfo[playerid][pBanned] = strval( result );
            mysql_fetch_field_row(result,"CRank"); PlayerInfo[playerid][pCRank] = strval( result );
			mysql_fetch_field_row(result,"Phone"); PlayerInfo[playerid][pPhone] = strval( result );
			mysql_fetch_field_row(result,"id"); PlayerInfo[playerid][pSQLID] = strval( result );
            mysql_fetch_field_row(result,"Victim"); strmid(PlayerInfo[playerid][pVictim], result, 0, strlen(result), 255);
            mysql_fetch_field_row(result,"Accused"); strmid(PlayerInfo[playerid][pAccused], result, 0, strlen(result), 255);
			mysql_fetch_field_row(result,"Crime1"); strmid(PlayerInfo[playerid][pCrime1], result, 0, strlen(result), 255);
			mysql_fetch_field_row(result,"Crime2"); strmid(PlayerInfo[playerid][pCrime2], result, 0, strlen(result), 255);
			mysql_fetch_field_row(result,"Crime3"); strmid(PlayerInfo[playerid][pCrime3], result, 0, strlen(result), 255);
			mysql_fetch_field_row(result,"BTemp"); PlayerInfo[playerid][pBTemp] = strval( result );
			mysql_fetch_field_row(result,"BYear"); PlayerInfo[playerid][pBYear] = strval( result );
			mysql_fetch_field_row(result,"BMonth"); PlayerInfo[playerid][pBMonth] = strval( result );
			mysql_fetch_field_row(result,"BDay"); PlayerInfo[playerid][pBDay] = strval( result );
			mysql_fetch_field_row(result,"BBy"); strmid(PlayerInfo[playerid][pBBy], result, 0, strlen(result), 255);
			mysql_fetch_field_row(result,"BReason"); strmid(PlayerInfo[playerid][pBReason], result, 0, strlen(result), 255);
			mysql_fetch_field_row(result,"ALeader"); PlayerInfo[playerid][pALeader] = strval( result );
			
			mysql_fetch_field_row(result,"ShowJob"); PlayerInfo[playerid][pShowJob] = strval( result );
			mysql_fetch_field_row(result,"ShowFaction"); PlayerInfo[playerid][pShowFaction] = strval( result );

			mysql_fetch_field_row(result,"ShowFP"); PlayerInfo[playerid][pShowFP] = strval( result );
			mysql_fetch_field_row(result,"ShowLogo"); PlayerInfo[playerid][pShowLogo] = strval( result );
			mysql_fetch_field_row(result,"ShowCeas"); PlayerInfo[playerid][pShowCeas] = strval( result );

			mysql_fetch_field_row(result,"GoldPoints"); PlayerInfo[playerid][pPremiumPoints] = strval( result );
			mysql_fetch_field_row(result,"Clan"); PlayerInfo[playerid][pClan] = strval( result );
			mysql_fetch_field_row(result,"ClanRank"); PlayerInfo[playerid][pClanRank] = strval( result );
			mysql_fetch_field_row(result,"Commands"); PlayerInfo[playerid][pCommands] = strval( result );
			mysql_fetch_field_row(result,"ConstructorSkill"); PlayerInfo[playerid][pConstructorSkill] = strval( result );
			
			new skin[64];
			cache_get_field_content(0, "Skin", result); format(skin, 64, result);
			sscanf(skin, "p<|>iiiiiiiiii", PlayerInfo[playerid][pSkins][0], PlayerInfo[playerid][pSkins][1], PlayerInfo[playerid][pSkins][2], PlayerInfo[playerid][pSkins][3], 
			PlayerInfo[playerid][pSkins][4], PlayerInfo[playerid][pSkins][5], PlayerInfo[playerid][pSkins][6], PlayerInfo[playerid][pSkins][7], PlayerInfo[playerid][pSkins][8], PlayerInfo[playerid][pSkins][9]);
			
			PlayerInfo[playerid][pSeconds] = cache_get_field_content_float(0, "Seconds");
			PlayerInfo[playerid][pCarKey][0] = cache_get_field_content_int(0, "CarKey1", SQL);
			PlayerInfo[playerid][pCarKey][1] = cache_get_field_content_int(0, "CarKey2", SQL);
			PlayerInfo[playerid][pCarKey][2] = cache_get_field_content_int(0, "CarKey3", SQL);
			PlayerInfo[playerid][pCarKey][3] = cache_get_field_content_int(0, "CarKey4", SQL);
			PlayerInfo[playerid][pCarKey][4] = cache_get_field_content_int(0, "CarKey5", SQL);
			PlayerInfo[playerid][pCarKey][5] = cache_get_field_content_int(0, "CarKey6", SQL);
			PlayerInfo[playerid][pCarKey][6] = cache_get_field_content_int(0, "CarKey7", SQL);
			PlayerInfo[playerid][pCarKey][7] = cache_get_field_content_int(0, "CarKey8", SQL);
			PlayerInfo[playerid][pCarKey][8] = cache_get_field_content_int(0, "CarKey9", SQL);
			PlayerInfo[playerid][pCarKey][9] = cache_get_field_content_int(0, "CarKey10", SQL);

			
			
			SelectedItem0[playerid] = 0;
			PlayerInfo[playerid][pRapidFire] = 0;
			
			new string[256];
			lasttime[playerid] = cache_get_field_content_int(0, "LastTimeOn", SQL);
			lastpremium[playerid] = cache_get_field_content_int(0, "PremiumDate", SQL);
			UpdateVar(playerid, "DayLogin", 1);
			new playername[25],sendername[25];
			GetPlayerName(playerid, playername, sizeof(playername));
				if(PlayerInfo[playerid][pBanned] == 1) //autoban
				{
					SCM(playerid, COLOR_LIGHTRED, "To konto jest trwale zbanowane.");
					SCM(playerid, COLOR_LIGHTRED, "Jesli uwazasz, ze zostales skrzywdzony, napisz apelacje na naszym forum www.fox-rp.pl");
					KickEx(playerid);
					return 1;
				}
			if(GetDays(lasttime[playerid]) != 0 && lasttime[playerid] != 0) {
			    if(PlayerInfo[playerid][pHouse] != 999 || PlayerInfo[playerid][pBizz] != 255) {
					if(GetDays(lasttime[playerid]) < 13) format(string, 256, "Na swoim koncie nie grano %d dni. Po 14 dniach bezczynnosci tracisz swój biznes i dom.", GetDays(lasttime[playerid]));
					else if(GetDays(lasttime[playerid]) >= 14) {
						format(string, 256, "Na swoim koncie nie grano %d dni. Twój dom/biznes zostal sprzedana.", GetDays(lasttime[playerid]));
						if(PlayerInfo[playerid][pHouse] != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
						{
							new house = PlayerInfo[playerid][pHouse];
							HouseInfo[house][hHel] = 0;
							HouseInfo[house][hArm] = 0;
							HouseInfo[house][hLock] = 0;
							HouseInfo[house][hOwned] = 0;
				            PlayerInfo[playerid][pRented] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							strmid(HouseInfo[house][hOwner], "Panstwo", 0, strlen("Panstwo"), 255);
							format(HouseInfo[house][hDiscription], 256, "");
							HouseInfo[house][hValue] = 50000;
							PlayerInfo[playerid][pHouse] = 999;
							PlayerInfo[playerid][pRented] = -1;
							/*if(PlayerInfo[playerid][pLocal] == house)
							{
								SetPlayerInterior(playerid,0);
								SetPlayerPosEx(playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]);
								PlayerInfo[playerid][pInt] = 0;
							}*/
							Update(playerid,pCashx);
							Update(playerid,pRentedx);
							Update(playerid,pHousex);
							new str2[256];
							format(str2,sizeof(str2),"UPDATE `houses` SET `Hel`='0',`Arm`='0',`Lockk`='0',`Owned`='0',`Owner`='Panstwo' WHERE `ID`='%d'",HouseInfo[house][hID]);
							mysql_query(SQL,str2);
							UpdateLabel(1,house);
						}
						if(strcmp(GetName(playerid), BizzInfo[PlayerInfo[playerid][pBizz]][bOwner], true) == 0)
						{
							new bouse = PlayerInfo[playerid][pBizz];
							BizzInfo[bouse][bLocked] = 1;
							BizzInfo[bouse][bOwned] = 0;
							strmid(BizzInfo[bouse][bOwner], "Panstwo", 0, strlen("Panstwo"), 255);
							BizzInfo[bouse][bBuyPrice] = 100000;
							PlayerInfo[playerid][pBizz] = 255;
				            new str1[184];
							format(str1,sizeof(str1),"UPDATE `bizz` SET `Locked`='0',`Owned`='0',`Till`='0',`Owner`='The State',`BuyPrice`='10000' WHERE `ID`='%d'",bouse);
							mysql_query(SQL,str1);
							Update(playerid,pCashx);
							Update(playerid,pBizzx);
							UpdateLabel(2,bouse);
						}
					}
					SCM(playerid, COLOR_GOLD, string);
				}
			}			
			new clanid = PlayerInfo[playerid][pClan];
			if(clanid != 0) {
				format(string, sizeof(string), "(ORG): %s.", ClanInfo[PlayerInfo[playerid][pClan]][clMotd]);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "%s, jeste czescia klanu %s (#%d) ze znacznikiem %s, w którym masz range %d.", GetName(playerid), ClanInfo[clanid][clName], clanid, ClanInfo[clanid][clTag], PlayerInfo[playerid][pClanRank]);
				SendClientMessage(playerid, COLOR_YELLOW, string);
			}
	   	}
	}
	else
	{
		new loginstring[128];
		new loginname[64];
		GetPlayerName(playerid,loginname,sizeof(loginname));
		format(loginstring,sizeof(loginstring),"Nieprawidlowe haslo!\n Ponownie wprowadz haslo do konta.",loginname);
		ShowPlayerDialog(playerid,DIALOG_LOGIN3,DIALOG_STYLE_PASSWORD,"SERVER: Logowanie",loginstring,"Loguj","Anuluj");
        mysql_free_result();
        gPlayerLogTries[playerid] += 1;
        if(gPlayerLogTries[playerid] == 4)
		{
			KickEx(playerid);
		}
        return 1;
	}
	mysql_free_result();
	ResetPlayerCash(playerid);
	GivePlayerCash(playerid,PlayerInfo[playerid][pCash]);
	CurrentMoney[playerid] = PlayerInfo[playerid][pCash];
	KillTimer(login[playerid]);
	TempBanCheck(playerid);
	if(PlayerInfo[playerid][pReg] == 0)
	{
		PlayerInfo[playerid][pLevel] = 1;
 	    PlayerInfo[playerid][pPos_x] = 2246.6; 
 	    PlayerInfo[playerid][pPos_y] = -1161.9;
 	    PlayerInfo[playerid][pPos_z] = 1029.7;
		PlayerInfo[playerid][pInt] = 0;
		PlayerInfo[playerid][pLocal] = 255;
		PlayerInfo[playerid][pTeam] = 3;
		PlayerInfo[playerid][pModel] = 250;
		new randphone = 10000 + random(9999);//minimum 1000  max 9999 //giving one at the start
		PlayerInfo[playerid][pPnumber] = randphone;
		PlayerInfo[playerid][pHouse] = 999;
		PlayerInfo[playerid][pBizz] = 255;
		PlayerInfo[playerid][pAccount] = 1000;
		PlayerInfo[playerid][pReg] = 1;
		PlayerInfo[playerid][pMasked] = 0;
		SetPlayerInterior(playerid,0);
		new string[300];
		new d,m,y;
		getdate(y,m,d);
		new h,mine,s;
		gettime(h,mine,s);
		format(string,sizeof(string),  "%d/%d/%d %d:%d:%d",d,m,y,h,mine,s);
		strmid(PlayerInfo[playerid][pRegistredDate], string, 0, strlen(string), 255);
		new str[256];
		format(str,sizeof(str),"UPDATE users SET `pHealth`='100.0',`Team`='3',`Model`='250' WHERE `ID`='%d'",PlayerInfo[playerid][pSQLID]);
		mysql_query(SQL,str);
		Update(playerid,pCashx);
		Update(playerid,pLevelx);
		Update(playerid,pHousex);
		Update(playerid,pBizzx);
		Update(playerid,pPnumberx);
		Update(playerid,pRegx);
		Update(playerid,pRegistredDatex);
	}
	else {			
		TextDrawHideForPlayer(playerid, Login[0]);
		TextDrawHideForPlayer(playerid, Login[1]);
		TextDrawHideForPlayer(playerid, Login[2]);	
		new szQuery[256], szString[256], onf, Cache: results;
		format(szQuery, sizeof(szQuery), "SELECT * FROM `friends` WHERE `AddBy` = '%d'", PlayerInfo[playerid][pSQLID]);
		results = mysql_query(SQL, szQuery);
		// playerid login
		for(new i, j = cache_get_row_count (); i != j; ++i)
		{
			cache_get_field_content(i, "friendName", szString);
			new userID = GetPlayerID(szString);
			if(userID != INVALID_PLAYER_ID) onf ++;
		}
		cache_delete(results);
		if(onf != 0) {
			format(szString, sizeof(szString), "Masz %d znajomych online z twojej listy", onf);
			PlayerTextDrawSetString(playerid, FriendsTD, szString);
			PlayerTextDrawShow(playerid, FriendsTD);
			SetTimerEx("HideFriendsTDs", 10000, 0, "d", playerid);
		}
		foreach(Player, i) {
			if(IsPlayerConnected(i)) {
				format(szQuery, sizeof(szQuery), "SELECT * FROM `friends` WHERE `AddBy` = '%d' AND `friendID` = '%d'", PlayerInfo[i][pSQLID], PlayerInfo[playerid][pSQLID]);
				results = mysql_query(SQL, szQuery);
				cache_get_field_content(0, "AddBy", szString);
				new friendID = strval(szString);
				cache_delete(results);
				if(PlayerInfo[i][pSQLID] == friendID && friendID != 0) {
					format(szString, sizeof(szString), "%s (%d)~n~zostal zalogowany.", GetName(playerid), playerid);
					PlayerTextDrawSetString(i, FriendsTD, szString);
					PlayerTextDrawShow(i, FriendsTD);
					SetTimerEx("HideFriendsTDs", 10000, 0, "d", i);
				}
			}
		}	
	}
	//for( new j = 0; j <= 50; j++) SendClientMessage(playerid, COLOR_WHITE, "");
    StopAudioStreamForPlayer(playerid);
	SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	GetFuckinPower[playerid] = 0;
	new string2[256];
	if(PlayerInfo[playerid][pPremiumAccount] != 0) {
		new string[256];
		if(PlayerInfo[playerid][pPremiumAccount] == 1 && 7-GetDays(lastpremium[playerid]) < 0) {
			PlayerInfo[playerid][pPremiumAccount] = 0, SCM(playerid, COLOR_GOLD, "* Konto Premium wygaslo. ");
		}
		else if(PlayerInfo[playerid][pPremiumAccount] == 2 && 30-GetDays(lastpremium[playerid]) < 0) {
			PlayerInfo[playerid][pPremiumAccount] = 0, SCM(playerid, COLOR_GOLD, "* Konto Premium wygaslo. ");
		}
		else {
			if(PlayerInfo[playerid][pPremiumAccount] == 1) format(string, 256, "Jestes uzytkownikiem konta Premium! (%d dni)", 7-GetDays(lastpremium[playerid]));
			else if(PlayerInfo[playerid][pPremiumAccount] == 2) format(string, 256, "Jestes uzytkownikiem konta Premium! (%d dni)", 30-GetDays(lastpremium[playerid]));
			SCM(playerid, COLOR_WHITE, string);
		}
	}	
	if(PlayerInfo[playerid][pVip] == 1) SCM(playerid, -1, "Twoje konto to V.I.P! ");
	HudProgress[playerid][0] = CreatePlayerProgressBar(playerid, 512.00, 158.00, 81.50, 2.50, 0x00FF00FF, 100.0);	
	HudProgress[playerid][1] = CreatePlayerProgressBar(playerid, 512.00, 178.00, 81.50, 2.20, 0x00FF00FF, 100.0);
	if (PlayerInfo[playerid][pWantedLevel] > 0)
	{
		format(string2, sizeof(string2), "Zanim opusciles serwer, miales %d WL. Dostales go z powrotem!",PlayerInfo[playerid][pWantedLevel]);
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
		SendClientMessage(playerid, COLOR_WARNING, string2);
		wantedlost[playerid] = 1800;
		WantedPoints[playerid] = PlayerInfo[playerid][pWantedLevel]*2;
	}
	SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel], 1642.4734, -2239.2910, 13.5285, 1.0, -1, -1, -1, -1, -1, -1);
	new mstring[MAX_PLAYER_NAME], szQuery[256];
	format(mstring, sizeof(mstring), "%dX%dF", PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pSQLID]);
	format(PlayerInfo[playerid][pMaskName], 24, mstring);
	format(szQuery, sizeof(szQuery), "UPDATE users SET `pMaskName` = '%s' WHERE `ID` = '%d' ", PlayerInfo[playerid][pMaskName], PlayerInfo[playerid][pSQLID]);
	mysql_query(SQL, szQuery);	

	if(gTeam[playerid] == 0)
	{
		gTeam[playerid] = 3;
	}
	else
	{
		gTeam[playerid] = PlayerInfo[playerid][pTeam];
	}
	if(PlayerInfo[playerid][pMember] != 0)
	{
	    new namex[25],disc[84];
	    GetPlayerName(playerid,namex,sizeof(namex));
	    format(disc,sizeof(disc),"(Grupa) {FFFFFF}%s z Twojej grupy wlasnie sie zalogowal.",namex);
	    SendLeaderMessage(PlayerInfo[playerid][pMember], COLOR_CLIENT, disc);
	}
	if(PlayerInfo[playerid][pMember] != 0)
	{
		if(strlen(DynamicFactions[PlayerInfo[playerid][pMember]][fAnn]) > 0)
		{
		    new factioninfo[128];
			format(factioninfo,sizeof(factioninfo), "(Grupa) MOTD:{FFFFFF} %s",DynamicFactions[PlayerInfo[playerid][pMember]][fAnn]);
			SCM(playerid,COLOR_CLIENT,factioninfo);
		}
	}
	new Year, Month, Day;
	getdate(Year, Month, Day);
	/*if(PlayerInfo[playerid][pDailyBonus] != Day) {
		new 
			szDailyBonus[128],
			rp = 1,
			money = PlayerInfo[playerid][pLevel] * 10000 + random(40000);
			
		format(szDailyBonus, sizeof(szDailyBonus), "UPDATE `users` SET `DailyBonus` = '%d' WHERE `ID`='%d'", Day, PlayerInfo[playerid][pSQLID]);
		mysql_query(SQL, szDailyBonus);
		
		SCM(playerid, COLOR_YELLOW, "* Witamy ponownie na serwerze! Otrzymales niewielka premie za pierwsze logowanie dzisiaj!");
		
		format(szDailyBonus, sizeof(szDailyBonus), "* Koszt premii w %d RP i $%s.", rp,  FormatNumber(money));
		SCM(playerid, COLOR_YELLOW, szDailyBonus);
		
		GivePlayerCash(playerid, money);
		PlayerInfo[playerid][pExp] += rp;
		Update(playerid, pRP);
	}*///dzienny bonus
	PlayerInfo[playerid][pMasked] = 0;
	PlayerInfo[playerid][Player3DText] = CreateDynamic3DTextLabel(GetNameEx(playerid), COLOR_WHITE, 0.0, 0.0, 0.18, 25.0, playerid, INVALID_PLAYER_ID, 1, -1, -1, -1, 100.0);
	//Attach3DTextLabelToPlayer(PlayerInfo[playerid][Player3DText], playerid, 0.0, 0.0, 0.18);
    UpdatePlayer3DName(playerid);
	
	TextDrawShowForPlayer(playerid, LogoTD);
	new sendername[25],playersip[64],iplog[184];
	GetPlayerName(playerid,sendername,sizeof(sendername));
	GetPlayerIp(playerid,playersip,sizeof(playersip));
	LogIP(playersip,PlayerInfo[playerid][pSQLID]);
	format(iplog,sizeof(iplog),"%s(%d) podlaczony do serwera z IP: %s.",sendername,playerid,playersip);
	SendIP(COLOR_WHITE,iplog);
	IsPlayerLogged[playerid] = 1;
	ShowPlayerDialog(playerid, 333, DIALOG_STYLE_MSGBOX, "Przywracanie ostatniej pozycji", "{476b6b}Czy przywróciæ Twoj¹ ostatni¹ pozycjê?", "Tak", "Nie");
	/*SpawnPlayer(playerid);
	if(PlayerInfo[playerid][pBWTime] == 0) {
	TogglePlayerControllable(playerid, 0);
	SetTimerEx("UnFreezeStation", 3000, false, "i", playerid);
	} // DEL DO OSTATNIEJ POZYCJI
	*/
	new qqerry[128];
	format(qqerry, sizeof(qqerry), "UPDATE `users` SET `Status` = '1' WHERE `name`='%s'", sendername);
    mysql_query(SQL,qqerry);
	DBLoadPlayerThings(playerid);
	LoadThing[playerid] = 1;
	printf("%s zalogowal sie z IP %s.",sendername,playersip);
	return 1;
}

function UpdateVar(playerid, varname[], amount) {
	if(playerid == INVALID_PLAYER_ID) return 1;
	new query[256];
	mysql_format(SQL, query, sizeof(query), "UPDATE `users` SET `%s`='%d' WHERE `ID`='%d'", varname, amount, PlayerInfo[playerid][pSQLID]);
	mysql_tquery(SQL, query, "", "");
	return 1;
}	

function HideFriendsTDs(playerid) {
	if(IsPlayerConnected(playerid)) {
		PlayerTextDrawHide(playerid, FriendsTD);
	}
	return 1;
}
	
function NightBot(playerid, reason[]) {
	new string[180];
	format(string, sizeof(string), "AdmCmd: %s wyrzucony przez SYSTEM, powód: %s.", GetName(playerid), reason);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	InsereazaSanctiune(playerid, -1, KICK, reason);
	KickEx(playerid);	
	printf(string);
	return 1;
}
	
	/*for(new i = 0; i < MAX_COBJECTS; i++) {
		if(ObjectInfo[i][oID] != 0) {
			if(pickupid == ObjectInfo[i][oID]) {
				new id = GetObjects();
				if(PlayerInfo[playerid][pAdmin] != 0) return 1;
				GivePlayerCash(playerid, ObjectInfo[i][oMoney]);				
				if(id == 1) {
					format(str, 256, "SYSTEM: Wydarzenie sie skonczylo! %s znalazl obiekt i wygral $%s.", GetName(playerid), FormatNumber(ObjectInfo[i][oMoney]));
					SendClientMessageToAll(COLOR_ORANGE, str);
				}
				else {
					format(str, 256, "NR SYSTEM: Obiekt w zdarzeniu zostal znaleziony przez %s. Zdobyl nagrode %s!", GetName(playerid), FormatNumber(ObjectInfo[i][oMoney]));
					SendClientMessageToAll(COLOR_ORANGE, str);				
					format(str, 256, "NR SYSTEM: Wydarzenie trwa. Jest %d obiektów do znalezienia!", id-1);
					SendClientMessageToAll(COLOR_ORANGE, str);				
				}
				RemoveObject(i);
			}
		}
	}	*/

/*CMD:ubrania(playerid, params[], help)
{
	new szDialog[512], string[248], typ[56];
	strcat(szDialog, "Nr.\tTyp\tModel ubrania\tStatus\n");
	for(new i; i < 10; i++) {
	if(IsACopSkin(PlayerInfo[playerid][pSkins][i]))
	{
	format(typ, sizeof(typ), "Frakcyjny");
	} else {
	format(typ, sizeof(typ), "Cywilny");
	}
	if(PlayerInfo[playerid][pSkins][i] == GetPlayerSkin(playerid)) format(string, sizeof(string), "%d.\t%s\t%d\t{FF3333}Uzywany\n", i+1, typ, PlayerInfo[playerid][pSkins][i]);
	else if(PlayerInfo[playerid][pSkins][i] != -1) format(string, sizeof(string), "%d.\t%s\t%d\t{FF6600}Posiadany\n",i+1, typ, PlayerInfo[playerid][pSkins][i]);
	else if(PlayerInfo[playerid][pSkins][i] == -1) format(string, sizeof(string), "%d.\t-\tBrak\t{99FF33}Wolny\n",i+1, typ);
	strcat(szDialog, string);
		}
		ShowPlayerDialog(playerid, DIALOG_SKIN, DIALOG_STYLE_TABLIST_HEADERS, "Twoje ubrania", szDialog, "Ubierz", "Wyjdz");
		return 1;
}*/

CMD:wymiana(playerid, params[])
{
	new id, item[256], diff, string[256];
	
	if(sscanf(params, "s[50]ui", item, id, diff)) {
		SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/wymiana <type> <playerid> <dop³ata>");
		SendClientMessage(playerid, COLOR_WHITE, "Parametry: dom, biznes, auto.");
		return 1;
	}
	if(GetDistanceBetweenPlayers(playerid,id) > 5) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w poblizu tego gracza");
	if(diff < 1 || diff > 50000000) return SendClientMessage(playerid, -1, "Róznica musi wynosic od 1 do 5 000 000 USD.");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	if(TradePlayer[id] == playerid) return SendClientMessage(playerid, -1, "Zlozyles oferte temu graczowi!");
	if(strcmp(item, "dom", true, strlen(item)) == 0)
	{	
		new bouse = PlayerInfo[playerid][pHouse];
		new bouse2 = PlayerInfo[playerid][pHouse];
		if(bouse != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
		{
			if(bouse2 != 999 && strcmp(GetName(id), HouseInfo[PlayerInfo[id][pHouse]][hOwner], true) == 0)
			{		
				TradeType[id] = 1;
				format(string, sizeof(string), "%s chce zmienic dom (%d) (róznica z jego strony: $%s). (/akceptuj trade %d)", GetName(playerid), PlayerInfo[playerid][pHouse], FormatNumber(diff), playerid);
				SendClientMessage(id, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "Dales %s oferte zmiany domu (%d) (róznica z twojej strony: $%s).", GetName(id), PlayerInfo[id][pHouse], FormatNumber(diff));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);	
			}
			else return SCM(playerid, -1, "Ten gracz nie ma domu!");
		}
		else return SCM(playerid, COLOR_GREY, "Nie masz domu!");		
	}
	else if(strcmp(item, "biznes", true, strlen(item)) == 0)
	{	
		new bouse = PlayerInfo[playerid][pBizz];
		new bouse2 = PlayerInfo[id][pBizz];
		if(bouse != 255 && bouse2 != 255)
		{
			TradeType[id] = 2;
			format(string, sizeof(string), "%s chce zmienic twój biznes (%d) (róznica z jego strony: $%s). (/akceptuj trade %d)", GetName(playerid), PlayerInfo[id][pBizz], FormatNumber(diff), playerid);
			SendClientMessage(id, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "Dales %s, oferte zmiany biznesu (%d) (róznica z twojej strony: $%s).", GetName(id), PlayerInfo[playerid][pBizz], FormatNumber(diff));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);	
		}
		else return SCM(playerid, COLOR_GREY, "Ty lub ten gracz nie masz biznesu.");		
	}	
	else if(strcmp(item, "auto", true, strlen(item)) == 0)
	{	
		new car = GetPlayerVehicleID(playerid), idd, idd2, slot, slot2;
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "Nie jeste w pojezdzie!");
		new car1 = PlayerInfo[playerid][pCarKey][0], car2 = PlayerInfo[playerid][pCarKey][1], car3 = PlayerInfo[playerid][pCarKey][2], car4 = PlayerInfo[playerid][pCarKey][3], car5 = PlayerInfo[playerid][pCarKey][4],
		car6 = PlayerInfo[playerid][pCarKey][5], car7 = PlayerInfo[playerid][pCarKey][6], car8 = PlayerInfo[playerid][pCarKey][7], car9 = PlayerInfo[playerid][pCarKey][8], car10 = PlayerInfo[playerid][pCarKey][9];
		if(car == CarInfo[car1][Spawned]) idd = PlayerInfo[playerid][pCarKey][0], slot = 1;
		if(car == CarInfo[car2][Spawned]) idd = PlayerInfo[playerid][pCarKey][1], slot = 2;
		if(car == CarInfo[car3][Spawned]) idd = PlayerInfo[playerid][pCarKey][2], slot = 3;
		if(car == CarInfo[car4][Spawned]) idd = PlayerInfo[playerid][pCarKey][3], slot = 4;
		if(car == CarInfo[car5][Spawned]) idd = PlayerInfo[playerid][pCarKey][4], slot = 5;
		if(car == CarInfo[car6][Spawned]) idd = PlayerInfo[playerid][pCarKey][5], slot = 6;
		if(car == CarInfo[car7][Spawned]) idd = PlayerInfo[playerid][pCarKey][6], slot = 7;
		if(car == CarInfo[car8][Spawned]) idd = PlayerInfo[playerid][pCarKey][7], slot = 8;
		if(car == CarInfo[car9][Spawned]) idd = PlayerInfo[playerid][pCarKey][8], slot = 9;
		if(car == CarInfo[car10][Spawned]) idd = PlayerInfo[playerid][pCarKey][9], slot = 10;	
		if(idd == 0) return SendClientMessage(playerid, COLOR_WHITE, "Ten pojazd nie nalezy do ciebie!");
		if(strlen(CarInfo[idd][cText]) >= 3) return SCM(playerid, -1, "Nie mozesz sprzedac tego pojazdu!");
		//if(IsPremiumVehicle(CarInfo[idd][Spawned]) && PlayerInfo[id][pPremiumAccount] == 0) return SCM(playerid, -1, "Acest vehicul este unul de tip premium. Nu-l poti vinde la jucatorii fara cont premium!");
		new pcar = GetPlayerVehicleID(id);
		if(!IsPlayerInAnyVehicle(id)) return SCM(id, -1, "Nie jeste w pojezdzie!");
		new pcar1 = PlayerInfo[id][pCarKey][0], pcar2 = PlayerInfo[id][pCarKey][1], pcar3 = PlayerInfo[id][pCarKey][2], pcar4 = PlayerInfo[id][pCarKey][3], pcar5 = PlayerInfo[id][pCarKey][4],
		pcar6 = PlayerInfo[id][pCarKey][5], pcar7 = PlayerInfo[id][pCarKey][6], pcar8 = PlayerInfo[id][pCarKey][7], pcar9 = PlayerInfo[id][pCarKey][8], pcar10 = PlayerInfo[id][pCarKey][9];
		if(pcar == CarInfo[pcar1][Spawned]) idd2 = PlayerInfo[id][pCarKey][0], slot2 = 1;
		if(pcar == CarInfo[pcar2][Spawned]) idd2 = PlayerInfo[id][pCarKey][1], slot2 = 2;
		if(pcar == CarInfo[pcar3][Spawned]) idd2 = PlayerInfo[id][pCarKey][2], slot2 = 3;
		if(pcar == CarInfo[pcar4][Spawned]) idd2 = PlayerInfo[id][pCarKey][3], slot2 = 4;
		if(pcar == CarInfo[pcar5][Spawned]) idd2 = PlayerInfo[id][pCarKey][4], slot2 = 5;
		if(pcar == CarInfo[pcar6][Spawned]) idd2 = PlayerInfo[id][pCarKey][5], slot2 = 6;
		if(pcar == CarInfo[pcar7][Spawned]) idd2 = PlayerInfo[id][pCarKey][6], slot2 = 7;
		if(pcar == CarInfo[pcar8][Spawned]) idd2 = PlayerInfo[id][pCarKey][7], slot2 = 8;
		if(pcar == CarInfo[pcar9][Spawned]) idd2 = PlayerInfo[id][pCarKey][8], slot2 = 9;
		if(pcar == CarInfo[pcar10][Spawned]) idd2 = PlayerInfo[id][pCarKey][9], slot2 = 10;		
		if(idd2 == 0) return SendClientMessage(id, COLOR_WHITE, "Ten gracz nie jest w swoim pojezdzie!");
		if(strlen(CarInfo[idd2][cText]) >= 3) return SCM(playerid, -1, "Ten gracz ma samochód VIP, którego nie mozna sprzedac!");
		//if(IsPremiumVehicle(CarInfo[idd2][Spawned]) && PlayerInfo[playerid][pPremiumAccount] == 0) return SCM(playerid, -1, "Vehiculul acelui player este unul de tip premium. Nu puteti face schimbul!");		
		
		TradeSlot[playerid] = slot;
		TradeSlot[id] = slot2;
		TradeType[id] = 3;
		TradeCar[id] = idd2;
		TradeCar[playerid] = idd;
		format(string, sizeof(string), "%s chce wymieniac samochody (%s) (róznica z jego strony: $%s). (/akceptuj trade %d)", GetName(playerid), aVehicleNames[CarInfo[idd][cModel]-400], FormatNumber(diff), playerid);
		SendClientMessage(id, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Dales %s propozycje zmiany samochodu (%s) (róznica z twojej strony: $%s).", GetName(id), aVehicleNames[CarInfo[idd2][cModel]-400], FormatNumber(diff));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);		
	}		
	else return SendClientMessage(playerid, COLOR_WHITE, "Parametry: dom, biznes, auto.");
	TradePlayer[id] = playerid;	
	TradeMoney[id] = diff;
	return 1;
}	


CMD:pokazkary(playerid, params[]) {
	new id;
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	if(sscanf(params, "u", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/pokazkary [ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	ShowPunish(playerid, id);
	return 1;
}

CMD:mojekary(playerid, params[]) return ShowPunish(playerid, playerid);
function ShowPunish(playerid, targetid) {
	new 
		szDialog2[4000], szResult[180], id, szQuery[256], string[180], Cache: result, b, k, j, m, w,
		by[180], time[180], reason[180];
		
	format(szQuery, sizeof(szQuery), "SELECT * FROM `sanctions` WHERE `Userid`='%d' AND `Type`='%d' ORDER BY `sanctions`.`ID` DESC LIMIT 10", PlayerInfo[targetid][pSQLID], BAN);
	result = mysql_query(SQL, szQuery);	
	for(new i, x = cache_get_row_count (); i < x; i++) {
		cache_get_field_content(i, "ID", szResult); id = strval(szResult);
		cache_get_field_content(i, "By", szResult); format(by, 256, szResult);
		cache_get_field_content(i, "Time", szResult); format(time, 256, szResult);	
		cache_get_field_content(i, "Reason", szResult); format(reason, 256, szResult);
		format(string, sizeof(string), "(#%d) [%s] Ban nadany przez administratora %s, Powód: %s.\n", id, time, by, reason);
		strcat(szDialog2, string);		
		b ++;
	}
	cache_delete(result);
	
	format(szQuery, sizeof(szQuery), "SELECT * FROM `sanctions` WHERE `Userid`='%d' AND `Type`='%d' ORDER BY `sanctions`.`ID` DESC LIMIT 10", PlayerInfo[targetid][pSQLID], KICK);
	result = mysql_query(SQL, szQuery);
	for(new i, x = cache_get_row_count (); i < x; i++) {	
		cache_get_field_content(i, "ID", szResult); id = strval(szResult);
		cache_get_field_content(i, "By", szResult); format(by, 256, szResult);
		cache_get_field_content(i, "Time", szResult); format(time, 256, szResult);	
		cache_get_field_content(i, "Reason", szResult); format(reason, 256, szResult);
		format(string, sizeof(string), "(#%d) [%s] Kick nadany przez administratora %s, Powód: %s.\n", id, time, by, reason);
		strcat(szDialog2, string);		
		k ++;
	}	
	cache_delete(result);

	format(szQuery, sizeof(szQuery), "SELECT * FROM `sanctions` WHERE `Userid`='%d' AND `Type`='%d' ORDER BY `sanctions`.`ID` DESC LIMIT 10", PlayerInfo[targetid][pSQLID], WARN);
	result = mysql_query(SQL, szQuery);
	for(new i, x = cache_get_row_count (); i < x; i++) {	
		cache_get_field_content(i, "ID", szResult); id = strval(szResult);
		cache_get_field_content(i, "By", szResult); format(by, 256, szResult);
		cache_get_field_content(i, "Time", szResult); format(time, 256, szResult);	
		cache_get_field_content(i, "Reason", szResult); format(reason, 256, szResult);
		format(string, sizeof(string), "(#%d) [%s] Warn nadany przez administratora %s, Powód: %s.\n", id, time, by, reason);
		strcat(szDialog2, string);		
		w ++;
	}
	cache_delete(result);	
	
	format(szQuery, sizeof(szQuery), "SELECT * FROM `sanctions` WHERE `Userid`='%d' AND `Type`='%d' ORDER BY `sanctions`.`ID` DESC LIMIT 10", PlayerInfo[targetid][pSQLID], JAIL);
	result = mysql_query(SQL, szQuery);
	for(new i, x = cache_get_row_count (); i < x; i++) {	
		cache_get_field_content(i, "ID", szResult); id = strval(szResult);
		cache_get_field_content(i, "By", szResult); format(by, 256, szResult);
		cache_get_field_content(i, "Time", szResult); format(time, 256, szResult);	
		cache_get_field_content(i, "Reason", szResult); format(reason, 256, szResult);
		format(string, sizeof(string), "(#%d) [%s] AJ nadany przez administratora %s, Powód: %s.\n", id, time, by, reason);
		strcat(szDialog2, string);		
		j ++;
	}
	cache_delete(result);	

	format(szQuery, sizeof(szQuery), "SELECT * FROM `sanctions` WHERE `Userid`='%d' AND `Type`='%d' ORDER BY `sanctions`.`ID` DESC LIMIT 10", PlayerInfo[targetid][pSQLID], MUTE);
	result = mysql_query(SQL, szQuery);
	for(new i, x = cache_get_row_count (); i < x; i++) {
		cache_get_field_content(i, "ID", szResult); id = strval(szResult);
		cache_get_field_content(i, "By", szResult); format(by, 256, szResult);
		cache_get_field_content(i, "Time", szResult); format(time, 256, szResult);	
		cache_get_field_content(i, "Reason", szResult); format(reason, 256, szResult);
		format(string, sizeof(string), "(#%d) [%s] Mute nadany przez administratora %s, Powód: %s.\n", id, time, by, reason);
		strcat(szDialog2, string);		
		m ++;
	}
	cache_delete(result);	
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Kary", szDialog2, "Ok", "");
	return 1;
}

function InsereazaSanctiune(playerid, by, type, reason[]) {
	new 
		szQuery[1024], name[180], aname[180],
		szDate[180], Year, Month, Day, Hour, Minute, Second;
		
	format(name, 256, "%s (%d)", GetName(playerid), PlayerInfo[playerid][pSQLID]);
	getdate(Year, Month, Day);
	gettime(Hour, Minute, Second);
	format(szDate, sizeof(szDate), "%02d/%02d/%d - %02d:%02d:%02d", Day, Month, Year, Hour, Minute, Second);
	
	if(by == SYSTEM) aname = "SYSTEM";
	else format(aname, 256, "%s (%d)", GetName(by), PlayerInfo[by][pSQLID]);
	format(szQuery, sizeof(szQuery), "INSERT INTO `sanctions` (`Player`, `By`, `Time`, `Userid`, `Type`, `Reason`) VALUES ('%s', '%s', '%s', '%d', '%d', '%s')", name, aname, szDate, PlayerInfo[playerid][pSQLID], type, reason);
	mysql_query(SQL, szQuery);	
	return 1;
}

function InsereazaSanctiune2(playerid, pname[], by, bname[], type, reason[]) {
	new 
		szQuery[1024], name[180], aname[180],
		szDate[180], Year, Month, Day, Hour, Minute, Second;
		
	format(name, 256, "%s (%d)", pname, playerid);
	getdate(Year, Month, Day);
	gettime(Hour, Minute, Second);
	format(szDate, sizeof(szDate), "%02d/%02d/%d - %02d:%02d:%02d", Day, Month, Year, Hour, Minute, Second);
	
	if(by == SYSTEM) aname = "SYSTEM";
	else format(aname, 256, "%s (%d)", bname, by);
	format(szQuery, sizeof(szQuery), "INSERT INTO `sanctions` (`Player`, `By`, `Time`, `Userid`, `Type`, `Reason`) VALUES ('%s', '%s', '%s', '%d', '%d', '%s')", name, aname, szDate, playerid, type, reason);
	mysql_query(SQL, szQuery);	
	return 1;
}


public BroadCast(color,const string[])
{
	SendClientMessageToAll(color, string);
	return 1;
}

public LeaderChat(color,const string[])
{
	foreach(Player, i)
 	{
		if(IsPlayerLogged[i] == 1)
		{
			if (PlayerInfo[i][pLeader] >= 1)
			{
			    if(toglc[i] == 0)
				{
					SendClientMessage(i, color, string);
				}
			}
		}
	}
	return 1;
}

public SendAdminMessage(color,const string[],level)
{
	foreach(Player, i)
	{
	    if(IsPlayerConnected(i))
	    {
			if(IsPlayerLogged[i] == 1)
			{
				if (PlayerInfo[i][pAdmin] >= level || PlayerInfo[i][pHelper] >= level)
				{
					SendClientMessage(i, color, string);
				}
			}
		}
	}
	return 1;
}


public SendIP(color,const string[])
{
	foreach(Player, i)
	{
		if (PlayerInfo[i][pAdmin] >= 1)
		{
			if(togip[i] == 1)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
	return 1;
}

public HLChat(color,const string[])
{
	foreach(Player, i)
	{
		if(IsPlayerLogged[i] == 1)
		{
			if (PlayerInfo[i][pHelper] >= 1)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
	return 1;
}

public OOCOff(color,const string[])
{
	foreach(Player, i)
	{
	    if(!gOoc[i])
	    {
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}

#define EX_SPLITLENGTH 130

stock SendSplitMessage(playerid, color, final[])
{
    new buffer[EX_SPLITLENGTH+5];
    new len = strlen(final);
    if(len>EX_SPLITLENGTH)
    {
        new times = (len/EX_SPLITLENGTH);
        for(new i = 0; i < times+1; i++)
        {
            strdel(buffer, 0, EX_SPLITLENGTH+5);
            if(len-(i*EX_SPLITLENGTH)>EX_SPLITLENGTH)
            {
                strmid(buffer, final, EX_SPLITLENGTH*i, EX_SPLITLENGTH*(i+1));
                format(buffer, sizeof(buffer), "%s ...", buffer);
            }
            else
            {
                strmid(buffer, final, EX_SPLITLENGTH*i, len);
            }
            SendClientMessage(playerid, color, buffer);
        }
    }
    else
    {
        SendClientMessage(playerid, color, final);
    }
    return 1;
}

public OOCNews(color,string[])
{
	foreach(Player, i)
	{
	    if(!gNews[i])
	    {
			SendSplitMessage(i, color, string);
		}
	}
	return 1;
}

public OOCNews2(color,const string[])
{
	foreach(Player, i)
	{
		SendClientMessage(i, color, string);
	}
	return 1;
}

public SendRadioMessage(member, color, string[])
{
	foreach(Player, i)
	{
	    if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
	    {
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}

public SendTeamMessage(member, color, string[])
{
	foreach(Player, i)
	{
	    if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
	    {
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}

public SendFactionMessage(family, color, string[])
{
	foreach(Player, i)
	{
        if(IsPlayerLogged[i] == 1)
        {
		    if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family)
		    {
	            if(!gFam[i])
	            {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
	return 1;
}

public SendTeamBeepMessage(team, color, string[])
{
	foreach(Player, i)
	{
	    if(gTeam[i] == team)
	    {
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}

public SendEnemyMessage(color, string[])
{
	foreach(Player, i)
	{
	    if(gTeam[i] >= 3)
	    {
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}

OnePlayAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
	ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
}

LoopingAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
    gPlayerUsingLoopingAnim[playerid] = 1;
    ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
}

StopLoopingAnim(playerid)
{
	gPlayerUsingLoopingAnim[playerid] = 0;
    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
}

PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
 for(new i = 0; i < MAX_WEJSCIA; i++){
    if(Wejscie[i][wuuid] == i) {
	if (PlayerToPoint(3.0,playerid, Wejscie[i][wLoc][0], Wejscie[i][wLoc][1], Wejscie[i][wLoc][2])){
	if(pickupid == Wejscie[Wejscie[i][wuuid]][wpickup])
	{
	SetPVarInt(playerid, "WejscieID", Wejscie[i][wuuid]);
	ShowWejscieTD(playerid);
	SetTimerEx("HideWejscieTD", 3000, false, "i", playerid);
				}
			}
		}
	}
	return 1;
}
/*
forward CheckTreasureHunt();
public CheckTreasureHunt()
{
	TimerTreasure = SetTimer("TreasureHunt", 600000, true);
	KillTimer(TimerTreasure);
	return 1;
}

forward TreasureHunt();
public TreasureHunt()
{
	new
		string[256],
		rand = random(sizeof(gRandomPositions));

	if(WinnerTreasure == 0)
	{
		DestroyPickup(ObiectTreasure);
		SendClientMessageToAll(COLOR_RED, "* Nikt nie znalazl obiektu.");
	}

	WinnerTreasure = 0;
	NumberTreasure = rand;
	ObiectTreasure = CreatePickup(19320, 21, gRandomPositions[rand][0], gRandomPositions[rand][1], gRandomPositions[rand][2]);

	SendClientMessageToAll(0xFFA500FF, " * Treasure Hunt:");
	format(string, sizeof(string), " * Ostrzezenie! Obiekt zostal ukryty w %s, masz 10 minut na jego odnalezienie!", LocNAME[rand]);
	SendClientMessageToAll(0xFFA500FF, string);

	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	MinutesTreasure = Minute;
	return 1;
}*/

public ValidNeonCar(carid)
{
	if(GetVehicleModel(carid) == 400 || GetVehicleModel(carid) == 401 || GetVehicleModel(carid) == 402 || GetVehicleModel(carid) == 404 || GetVehicleModel(carid) == 405 || GetVehicleModel(carid) == 406 || GetVehicleModel(carid) == 410 || GetVehicleModel(carid) == 411 || GetVehicleModel(carid) == 412
	|| GetVehicleModel(carid) == 415 || GetVehicleModel(carid) == 419 || GetVehicleModel(carid) == 421 || GetVehicleModel(carid) == 422 || GetVehicleModel(carid) == 426 || GetVehicleModel(carid) == 429 || GetVehicleModel(carid) == 436 || GetVehicleModel(carid) == 439 || GetVehicleModel(carid) == 445
	|| GetVehicleModel(carid) == 451 || GetVehicleModel(carid) == 458 || GetVehicleModel(carid) == 474 || GetVehicleModel(carid) == 475 || GetVehicleModel(carid) == 477 || GetVehicleModel(carid) == 479 || GetVehicleModel(carid) == 480 || GetVehicleModel(carid) == 491 || GetVehicleModel(carid) == 499
	|| GetVehicleModel(carid) == 494 || GetVehicleModel(carid) == 495 || GetVehicleModel(carid) == 502 || GetVehicleModel(carid) == 503 || GetVehicleModel(carid) == 506 || GetVehicleModel(carid) == 507 || GetVehicleModel(carid) == 516 || GetVehicleModel(carid) == 517 || GetVehicleModel(carid) == 518
	|| GetVehicleModel(carid) == 533 || GetVehicleModel(carid) == 534 || GetVehicleModel(carid) == 535 || GetVehicleModel(carid) == 536 || GetVehicleModel(carid) == 540 || GetVehicleModel(carid) == 541 || GetVehicleModel(carid) == 545 || GetVehicleModel(carid) == 546 || GetVehicleModel(carid) == 547
	|| GetVehicleModel(carid) == 550 || GetVehicleModel(carid) == 551 || GetVehicleModel(carid) == 555 || GetVehicleModel(carid) == 558 || GetVehicleModel(carid) == 559 || GetVehicleModel(carid) == 560 || GetVehicleModel(carid) == 561 || GetVehicleModel(carid) == 562 || GetVehicleModel(carid) == 565
	|| GetVehicleModel(carid) == 566 || GetVehicleModel(carid) == 567 || GetVehicleModel(carid) == 579 || GetVehicleModel(carid) == 580 || GetVehicleModel(carid) == 585 || GetVehicleModel(carid) == 587 || GetVehicleModel(carid) == 589 || GetVehicleModel(carid) == 602 || GetVehicleModel(carid) == 603)
	{
  		return 1;
	}
	return 0;
}

public	ValidTuningCar(carid)
{
	if(GetVehicleModel(carid) == 558 || GetVehicleModel(carid) == 565 || GetVehicleModel(carid) == 561 || GetVehicleModel(carid) == 562 || GetVehicleModel(carid) == 559 || GetVehicleModel(carid) == 560)
	{
	    return 1;
	}
	return 0;
}

stock GivePlayerThing(playerid, thingtype, number, val1, val2)
{
	if(IsPlayerConnected(playerid))
	{
		new SSQL[128];
		format(SSQL, sizeof(SSQL), "INSERT INTO przedmioty (type,owner,number,value1,value2) VALUES ( '%d', '%d', '%d', '%d', '%d' )",thingtype,PlayerInfo[playerid][pSQLID],number,val1,val2);
	    mysql_query(SQL, SSQL);
		new insertid = mysql_insert_id();
		mysql_free_result();
		for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
		{
			if(Thing[i][t_uid] == 0)
			{
			    Thing[i][t_uid] = GetLastPrzedmiot();
				Thing[i][t_type] = thingtype;
				Thing[i][t_ownertype] = 0;
				Thing[i][t_owner] = PlayerInfo[playerid][pSQLID];
				Thing[i][t_number] = number;
				Thing[i][t_used] = 0;
				Thing[i][t_value1] = val1;
				Thing[i][t_value2] = val2;
				new year, month, day, hour, mins, sec;
				getdate(year, month, day);
				gettime(hour, mins, sec);
				format(Thing[i][t_createdate], 128, "%d-%d-%d %d:%d:%d",year, month, day, hour, mins, sec);
				Thing[i][t_traces][0] = 0;
				Thing[i][t_traces][1] = 0;
				Thing[i][t_traces][2] = 0;
				Thing[i][t_traces][3] = 0;
				Thing[i][t_traces][4] = 0;
				format(Thing[i][t_text], 128, "");
				Thing[i][t_selected] = 0;
				return i;
			}
		}
	}
	return 1;
}

stock GiveThingOnGround(thingtype, number, val1, val2, Float:pos_x, Float:pos_y, Float:pos_z)
{
		new SSQL[258];
		format(SSQL, sizeof(SSQL), "INSERT INTO przedmioty (type,ownertype,number,value1,value2,pos_x,pos_y,pos_z) VALUES ( '%d', '2', '%d','%d','%d','%f','%f','%f')",thingtype,number,val1,val2, pos_x, pos_y, pos_z);
		SendClientMessageToAll(COLOR_ALLDEPT, SSQL);
	    mysql_query(SQL, SSQL);
		new insertid = mysql_insert_id();
		mysql_free_result();
		for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
		{
			if(Thing[i][t_uid] == 0)
			{
			    Thing[i][t_uid] = insertid;
				Thing[i][t_type] = thingtype;
				Thing[i][t_ownertype] = 2;
				Thing[i][t_owner] = 0;
				Thing[i][t_number] = number;
				Thing[i][t_used] = 0;
				Thing[i][t_value1] = val1;
				Thing[i][t_value2] = val2;
				new year, month, day, hour, mins, sec;
				getdate(year, month, day);
				gettime(hour, mins, sec);
				format(Thing[i][t_createdate], 128, "%d-%d-%d %d:%d:%d",year, month, day, hour, mins, sec);
				Thing[i][t_pos][0] = pos_x;
				Thing[i][t_pos][1] = pos_y;
				Thing[i][t_pos][2] = pos_z;
				Thing[i][t_traces][0] = 0;
				Thing[i][t_traces][1] = 0;
				Thing[i][t_traces][2] = 0;
				Thing[i][t_traces][3] = 0;
				Thing[i][t_traces][4] = 0;
				format(Thing[i][t_text], 128, "");
				Thing[i][t_selected] = 0;
				return i;
		}
	}
	return 1;
}

stock IsPlayerFull(playerid)
{
    new a;
    for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
    {
        if(Thing[i][t_ownertype] == 0 && Thing[i][t_owner] == PlayerInfo[playerid][pSQLID])
            a++;
    }
	    if(a > PLAYER_PRZEDMIOT_LIMIT)
	        return 1;
		else
			return 0;
}
stock AddTrace(thingid, playerid)
{
	if(Thing[thingid][t_uid] > 0)
	{
	    if(Thing[thingid][t_traces][0] != PlayerInfo[playerid][pSQLID])
	    {
			for(new i = 4; i > 0; i--)
			{
			    Thing[thingid][t_traces][i] = Thing[thingid][t_traces][i-1];
			}
			Thing[thingid][t_traces][0] = PlayerInfo[playerid][pSQLID];
	    }
	}
	return 1;
}

stock ListPlayerThingsShow(playerid, targetid)
{
    new thinglist[1024],num,usedtxt[64],selecttxt[16],selnum;
	if(playerid == targetid)
	{
	    for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
		{
		    if(Thing[i][t_ownertype] == 0 && Thing[i][t_owner] == PlayerInfo[playerid][pSQLID])
		    {
		        num++;
		        if(Thing[i][t_used] == 1) usedtxt = " (w uzytku)";
		        else usedtxt = "";
		        if(Thing[i][t_selected] == 1)
				{
					selecttxt = "X";
					selnum++;
				}
		        else selecttxt = "  ";
		        format(thinglist, sizeof(thinglist), "%s[%s] %s (uid: %d)%s\n", thinglist, selecttxt, GetThingName(i), Thing[i][t_uid], usedtxt);
		    }
		}
	    if(num == 0) return SendClientMessage(targetid, COLOR_GREY, "   Ten gracz nie posiada zadnego przedmiotu !");
	    if(selnum >= 2) format(thinglist, sizeof(thinglist), "-> Zlacz zaznaczone przedmioty.\n-> Odznacz wszystkie.\n%s",thinglist);
		ShowPlayerDialog(targetid,5556,DIALOG_STYLE_LIST,"Przedmioty",thinglist,"Wybierz","Zamknij");
	}
	else
	{
	    for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
		{
		    if(Thing[i][t_ownertype] == 0 && Thing[i][t_owner] == PlayerInfo[playerid][pSQLID])
		    {
		        num++;
		        if(Thing[i][t_used] == 1) usedtxt = " (w uzytku)";
		        else usedtxt = "";
		        format(thinglist, sizeof(thinglist), "%s%s (uid: %d)%s\n", thinglist, GetThingName(i), Thing[i][t_uid], usedtxt);
		    }
		}
	    if(num == 0) return SendClientMessage(targetid, COLOR_GREY, "   Ten gracz nie posiada zadnego przedmiotu !");
	    ShowPlayerDialog(targetid,999,DIALOG_STYLE_LIST,"Przedmioty",thinglist,"Wybierz","Zamknij");
	}
	return 1;
}

stock DBLoadThing(thinguid)
{
	new string[128], Field[19][128], Row[MAX_STRING];
    format(string, sizeof(string), "SELECT * FROM przedmioty WHERE id=%d", thinguid);
	mysql_query(SQL, string);
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
	    mysql_fetch_row_format(Row, "|");
		SplitText(Row, Field, '|');
		for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
		{
		    if(Thing[i][t_uid] == 0)
		    {
		        Thing[i][t_uid] = strval(Field[0]);
				Thing[i][t_type] = strval(Field[1]);
				Thing[i][t_ownertype] = strval(Field[2]);
				Thing[i][t_owner] = strval(Field[3]);
				Thing[i][t_number] = strval(Field[4]);
				Thing[i][t_used] = strval(Field[5]);
				Thing[i][t_value1] = strval(Field[6]);
				Thing[i][t_value2] = strval(Field[7]);
				memcpy(Thing[i][t_createdate], Field[8], 0, 64*4, 64*4);
				Thing[i][t_pos][0] = floatstr(Field[9]);
				Thing[i][t_pos][1] = floatstr(Field[10]);
				Thing[i][t_pos][2] = floatstr(Field[11]);
				Thing[i][t_vw] = strval(Field[12]);
				Thing[i][t_traces][0] = strval(Field[13]);
				Thing[i][t_traces][1] = strval(Field[14]);
				Thing[i][t_traces][2] = strval(Field[15]);
				Thing[i][t_traces][3] = strval(Field[16]);
				Thing[i][t_traces][4] = strval(Field[17]);
				memcpy(Thing[i][t_text], Field[18], 0, 64*4, 64*4);
				Thing[i][t_selected] = 0;
				return i;
			}
		}
	}
	return 0;
}

stock DBUnloadPlayerThings(playerid)
{
	for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
	{
	    if(Thing[i][t_ownertype] == 0 && Thing[i][t_owner] == PlayerInfo[playerid][pSQLID])
	    {
			Thing[i][t_used] = 0;
	        DBUpdateThing(i);
	        Thing[i][t_uid] = 0;
	        Thing[i][t_type] = 0;
	        Thing[i][t_ownertype] = 0;
			Thing[i][t_owner] = 0;
			Thing[i][t_number] = 0;
	    }
	}
	return 1;
}

stock RemoveThing(thingid)
{
    new SSQL[128];
    format(SSQL, sizeof(SSQL), "DELETE FROM przedmioty WHERE id=%d", Thing[thingid][t_uid]);
	mysql_query(SQL, SSQL);
	mysql_free_result();
	Thing[thingid][t_uid] = 0;
	Thing[thingid][t_ownertype] = 0;
	Thing[thingid][t_owner] = 0;
	return 1;
}


stock GetThingName(thingid)
{
    new tname[64];
    if(Thing[thingid][t_type] < 100) // bron
    {
		GetWeaponName(Thing[thingid][t_type], tname, sizeof(tname));
		new tid = Thing[thingid][t_type];
	    if((Thing[thingid][t_number] == 0) && (tid == 1 || tid == 2 || tid == 3 || tid == 4 || tid == 5 || tid == 6 || tid == 7 ||
		tid == 8 || tid == 9 || tid == 10 || tid == 11 || tid == 12 || tid == 13 || tid == 14 || tid == 43 || tid == 44 || tid == 45 || tid == 46))
	    {
	        RemoveThing(thingid);
	    }
 		if(Thing[thingid][t_number] > 1) format(tname, sizeof(tname), "%s (naboi: %d)", tname, Thing[thingid][t_number]);
		else if(Thing[thingid][t_number] == 0) format(tname, sizeof(tname), "%s (brak naboi)", tname);
		return tname;
	}
	else
	{
	    if(Thing[thingid][t_type] == 102)
	    {
	        tname = ThingName[Thing[thingid][t_type]-100];
	        format(tname, sizeof(tname), "%s (litrów: %d)", tname, Thing[thingid][t_number]);
	    }
	    else if(Thing[thingid][t_type] == 129)
	    {
	        tname = ThingName[Thing[thingid][t_type]-100];
            format(tname, sizeof(tname), "%s (ubranie: %d)", tname, Thing[thingid][t_number]);
	    }
	    else if(Thing[thingid][t_type] == 119) // HotDog
	    {
	        if(Thing[thingid][t_value1] == 1)
	        {
	        	tname = ThingName[Thing[thingid][t_type]-100];
	        }
	        else
	        {
	            tname = ThingName[Thing[thingid][t_type]-100];
	            format(tname, sizeof(tname), "(M) %s", tname);
	        }
	        if(Thing[thingid][t_number] > 1) format(tname, sizeof(tname), "%s (ilosc: %d)", tname, Thing[thingid][t_number]);
	    }

	    else if(Thing[thingid][t_type] == 120) // Pizza
	    {
	        if(Thing[thingid][t_value1] == 1)
	        {
	        	tname = ThingName[Thing[thingid][t_type]-100];
	        }
	        else
	        {
	            tname = ThingName[Thing[thingid][t_type]-100];
	            format(tname, sizeof(tname), "(M) %s", tname);
	        }
	        if(Thing[thingid][t_number] > 1) format(tname, sizeof(tname), "%s (ilosc: %d)", tname, Thing[thingid][t_number]);
	    }
	    else if(Thing[thingid][t_type] == 121) // Hamburger
	    {
	        if(Thing[thingid][t_value1] == 1)
	        {
	        	tname = ThingName[Thing[thingid][t_type]-100];
	        }
	        else
	        {
	            tname = ThingName[Thing[thingid][t_type]-100];
	            format(tname, sizeof(tname), "(M) %s", tname);
	        }
	        if(Thing[thingid][t_number] > 1) format(tname, sizeof(tname), "%s (ilosc: %d)", tname, Thing[thingid][t_number]);
	    }
	    else if(Thing[thingid][t_type] == 122) // Frytki
	    {
	        if(Thing[thingid][t_value1] == 1)
	        {
	        	tname = ThingName[Thing[thingid][t_type]-100];
	        }
	        else
	        {
	            tname = ThingName[Thing[thingid][t_type]-100];
	            format(tname, sizeof(tname), "(M) %s", tname);
	        }
	        if(Thing[thingid][t_number] > 1) format(tname, sizeof(tname), "%s (ilosc: %d)", tname, Thing[thingid][t_number]);
	    }
	    else if(Thing[thingid][t_type] == 167 || Thing[thingid][t_type] == 168 || Thing[thingid][t_type] == 169) // Okulary, Czapka
	    {
	        tname = ThingName[Thing[thingid][t_type]-100];
	    }
	    else
	    {
	        tname = ThingName[Thing[thingid][t_type]-100];
	    	if(Thing[thingid][t_number] > 1) format(tname, sizeof(tname), "%s (ilosc: %d)", tname, Thing[thingid][t_number]);
		}
		return tname;
	}
}

stock ListPlayerThings(playerid, targetid)
{
    new thinglist[1024],num,usedtxt[64],selecttxt[16],selnum;
	if(playerid == targetid)
	{
	    for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
		{
		    if(Thing[i][t_ownertype] == 0 && Thing[i][t_owner] == PlayerInfo[playerid][pSQLID])
		    {
		        num++;
		        if(Thing[i][t_used] == 1) usedtxt = "(w uzyciu)";
		        else usedtxt = "";
		        if(Thing[i][t_selected] == 1)
				{
					selecttxt = "{1d2f93}";
					selnum++;
				}
		        else selecttxt = "  ";
		        format(thinglist, sizeof(thinglist), "%s %s (uid: %d) %s %s\n", thinglist, GetThingName(i), Thing[i][t_uid], usedtxt, selecttxt);
		    }
		}
	    if(num == 0) return ShowPlayerDialog(targetid, 999, DIALOG_STYLE_MSGBOX, "Przedmioty", "{FF500F}Nie posiadasz zadnego przedmiotu !", "Akceptuj", "");
	    if(selnum >= 2) format(thinglist, sizeof(thinglist), "{FFFFFF}%s{646464}~> Zlacz zaznaczone przedmioty\n{646464}~> Odznacz wszystkie",thinglist);
		ShowPlayerDialog(targetid,510,DIALOG_STYLE_LIST,"Przedmioty",thinglist,"Wybierz","Zamknij");
	}
	else
	{
	    for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
		{
		    if(Thing[i][t_ownertype] == 0 && Thing[i][t_owner] == PlayerInfo[playerid][pSQLID])
		    {
		        num++;
		        if(Thing[i][t_used] == 1) usedtxt = " (w uzyciu)";
		        else usedtxt = "";
		        format(thinglist, sizeof(thinglist), "%s%s (uid: %d) %s\n", thinglist, GetThingName(i), Thing[i][t_uid], usedtxt);
		    }
		}
	    if(num == 0) return SendClientMessage(playerid, COLOR_GREY, "Gracz nie posiada zadnego przedmiotu.");
	    if(num != 0) format(thinglist, sizeof(thinglist), "{FFFFFF}%s", thinglist);
	    ShowPlayerDialog(targetid,999,DIALOG_STYLE_LIST,"Przedmioty",thinglist,"Wybierz","Zamknij");
	}
	return 1;
}

stock DBLoadPlayerThings(playerid)
{
	new result[256], num = 1;
	new Cache: db = mysql_query(SQL, "SELECT * FROM `przedmioty` ORDER BY `przedmioty`.`ID` ASC");
 	for(new z, x = cache_get_row_count (); z != x; ++z)
	{
 	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
	    num ++;
       	cache_get_field_content(i, "id", result); num = strval(result);
		cache_get_field_content(i, "id", result); Thing[num][t_uid] = strval(result);
       	cache_get_field_content(i, "type", result); Thing[num][t_type] = strval(result);
       	cache_get_field_content(i, "ownertype", result); Thing[num][t_ownertype] = strval(result);
     	cache_get_field_content(i, "owner", result); Thing[num][t_owner] = strval(result);
      	cache_get_field_content(i, "number", result); Thing[num][t_number] = strval(result);
       	cache_get_field_content(i, "used", result); Thing[num][t_used] = strval(result);
       	cache_get_field_content(i, "value1", result); Thing[num][t_value1] = strval(result);
		cache_get_field_content(i, "value2", result); Thing[num][t_value2] = strval(result);
       	cache_get_field_content(i, "createdate", result); memcpy(Thing[num][t_createdate], result, 0, 64*4, 64*4);
       	cache_get_field_content(i, "pos_x", result); Thing[num][t_pos][0] = floatstr(result);
		cache_get_field_content(i, "pos_y", result); Thing[num][t_pos][1] = floatstr(result);
		cache_get_field_content(i, "pos_z", result); Thing[num][t_pos][2] = floatstr(result);
       	cache_get_field_content(i, "pos_vw", result); Thing[num][t_vw] = strval(result);
		cache_get_field_content(i, "trace1", result); Thing[num][t_traces][0] = strval(result);
		cache_get_field_content(i, "trace2", result); Thing[num][t_traces][1] = strval(result);
		cache_get_field_content(i, "trace3", result); Thing[num][t_traces][2] = strval(result);
		cache_get_field_content(i, "trace4", result); Thing[num][t_traces][3] = strval(result);
		cache_get_field_content(i, "trace5", result); Thing[num][t_traces][4] = strval(result);
		cache_get_field_content(i, "text", result); memcpy(Thing[num][t_text], "", 0, 64*4, 64*4);
		Thing[num][t_selected] = 0;
		}
	}
}

public UpdatePlayer3DName(playerid) {
    new statuses[128], mainstring[144+MAX_PLAYER_NAME], statusesCount, Float:armour, text[86],string[126];
    GetPlayerArmour(playerid, Float:armour);
	
	if(OnDuty[playerid] == 1) {
		format(string, sizeof(string), "~y~[ID: %d]~w~ %s ~b~(SLUZBA)", playerid, GetName(playerid));
		PlayerTextDrawSetString(playerid, HUDTXDINFO, string);//HEJ DAWID JAK MILO ZE TU PACZYSZ XD
		PlayerTextDrawShow(playerid, HUDTXDINFO);
	} else {
		format(string, sizeof(string), "~y~[ID: %d]~w~ %s", playerid, GetName(playerid));
		PlayerTextDrawSetString(playerid, HUDTXDINFO, string);
		PlayerTextDrawShow(playerid, HUDTXDINFO);
	}
    if(SecondsAFK[playerid] >= 1) {
        if(statusesCount) strins(statuses, ", ", strlen(statuses));
		if(SecondsAFK[playerid] < 60){
		format(text, sizeof(text), "{ffd11a}AFK: %d sekund{ffffff}", SecondsAFK[playerid]);
		}
		else {
		format(text, sizeof(text), "{ffd11a}AFK: %d minut %d sekund{ffffff}", SecondsAFK[playerid]/60, SecondsAFK[playerid]%60);
		}
        strins(statuses, text, strlen(statuses));
        statusesCount++;
    }
    if(PlayerInfo[playerid][pAdminDuty] == 1) {
        if(statusesCount) strins(statuses, ", ", strlen(statuses));
        strins(statuses, "admin duty", strlen(statuses));
        statusesCount++;
    }
    if(Float:armour) {
        if(statusesCount) strins(statuses, ", ", strlen(statuses));
        strins(statuses, "kamizelka", strlen(statuses));
        statusesCount++;
    }
    if(GetPVarInt(playerid, "bw-sync")) {
        if(statusesCount) strins(statuses, ", ", strlen(statuses));
        strins(statuses, "nieprzytomny", strlen(statuses));
        statusesCount++;
    }
    if(GetPVarInt(playerid, "mp3")) {
        if(statusesCount) strins(statuses, ", ", strlen(statuses));
        strins(statuses, "sluchawki", strlen(statuses));
        statusesCount++;
    }
    if(PlayerInfo[playerid][pMasked] == 1) {
        if(statusesCount) strins(statuses, ", ", strlen(statuses));
        strins(statuses, "zamaskowany", strlen(statuses));
        statusesCount++;
    }
	if(PlayerInfo[playerid][pAdminDuty] == 1 && !isnull(PlayerInfo[playerid][pOOCName]) && PlayerInfo[playerid][pAdmin] >= 1) {
	format(mainstring, sizeof(mainstring), "{ff3333}%s {ffffff}(ID: %d)\n{5c8a8a}(Administrator)", PlayerInfo[playerid][pOOCName], playerid, PlayerInfo[playerid][pAdmin]);
	UpdateDynamic3DTextLabelText(PlayerInfo[playerid][Player3DText], COLOR_WHITE, mainstring);
	return 1;
	}
	if(PlayerInfo[playerid][pAdminDuty] == 1 && !isnull(PlayerInfo[playerid][pOOCName]) && PlayerInfo[playerid][pHelper] >= 4) {
	format(mainstring, sizeof(mainstring), "{01af07}%s {ffffff}(ID: %d)\n{5c8a8a}(Community Manager)", PlayerInfo[playerid][pOOCName], playerid, PlayerInfo[playerid][pAdmin]);
	UpdateDynamic3DTextLabelText(PlayerInfo[playerid][Player3DText], COLOR_WHITE, mainstring);
	return 1;
	}
	if(PlayerInfo[playerid][pAdminDuty] == 1 && !isnull(PlayerInfo[playerid][pOOCName]) && PlayerInfo[playerid][pHelper] >= 1) {
	format(mainstring, sizeof(mainstring), "{4298f4}%s {ffffff}(ID: %d)\n{5c8a8a}(Supporter)", PlayerInfo[playerid][pOOCName], playerid, PlayerInfo[playerid][pAdmin]);
	UpdateDynamic3DTextLabelText(PlayerInfo[playerid][Player3DText], COLOR_WHITE, mainstring);
	return 1;
	}
    if(PlayerInfo[playerid][pMasked] == 1) {
	format(mainstring, sizeof(mainstring), "{000000}Nieznajomy_%s {ffffff}(ID: %d)\n(%s)", PlayerInfo[playerid][pMaskName], playerid, statuses);
	UpdateDynamic3DTextLabelText(PlayerInfo[playerid][Player3DText], COLOR_WHITE, mainstring);
	return 1;
	} 
	else if(OnDuty[playerid] == 1 && PlayerInfo[playerid][pMember] == 1) {
	format(mainstring, sizeof(mainstring), "{5a92ed}%s {ffffff}(ID: %d)\n(%s)", GetName(playerid), playerid, statuses);
	UpdateDynamic3DTextLabelText(PlayerInfo[playerid][Player3DText], COLOR_WHITE, mainstring);
	return 1;
	}
	else if(OnDuty[playerid] == 1 && PlayerInfo[playerid][pMember] == 2) {
	format(mainstring, sizeof(mainstring), "{9966ff}%s {ffffff}(ID: %d)\n(%s)", GetName(playerid), playerid, statuses);
	UpdateDynamic3DTextLabelText(PlayerInfo[playerid][Player3DText], COLOR_WHITE, mainstring);
	return 1;
	}
	else if(OnDuty[playerid] == 1 && PlayerInfo[playerid][pMember] == 3) {
	format(mainstring, sizeof(mainstring), "{5baf6c}%s {ffffff}(ID: %d)\n(%s)", GetName(playerid), playerid, statuses);
	UpdateDynamic3DTextLabelText(PlayerInfo[playerid][Player3DText], COLOR_WHITE, mainstring);
	return 1;
	}
	format(mainstring, sizeof(mainstring), "{ffffff}%s (ID: %d)\n(%s)", GetName(playerid), playerid, statuses);
	UpdateDynamic3DTextLabelText(PlayerInfo[playerid][Player3DText], COLOR_WHITE, mainstring);
	return 1;
}

public UpdatePlayerData() {
	new t[25];
	foreach(Player,i)
	{
    UpdatePlayer3DName(i);
	}
}

public LoadItems()
{
	new Cache: db = mysql_query(SQL, "SELECT * FROM `przedmioty` ORDER BY `przedmioty`.`id` ASC");
	new result[256], num = 1, string[56];
 	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
	    num ++;
       	cache_get_field_content(i, "id", result); num = strval(result);
		cache_get_field_content(i, "id", result); Thing[num][t_uid] = strval(result);
       	cache_get_field_content(i, "type", result); Thing[num][t_type] = strval(result);
       	cache_get_field_content(i, "ownertype", result); Thing[num][t_ownertype] = strval(result);
     	cache_get_field_content(i, "owner", result); Thing[num][t_owner] = strval(result);
      	cache_get_field_content(i, "number", result); Thing[num][t_number] = strval(result);
       	cache_get_field_content(i, "used", result); Thing[num][t_used] = strval(result);
       	cache_get_field_content(i, "value1", result); Thing[num][t_value1] = strval(result);
		cache_get_field_content(i, "value2", result); Thing[num][t_value2] = strval(result);
       	cache_get_field_content(i, "createdate", result); memcpy(Thing[num][t_createdate], result, 0, 64*4, 64*4);
       	cache_get_field_content(i, "pos_x", result); Thing[num][t_pos][0] = floatstr(result);
		cache_get_field_content(i, "pos_y", result); Thing[num][t_pos][1] = floatstr(result);
		cache_get_field_content(i, "pos_z", result); Thing[num][t_pos][2] = floatstr(result);
       	cache_get_field_content(i, "pos_vw", result); Thing[num][t_vw] = strval(result);
		cache_get_field_content(i, "trace1", result); Thing[num][t_traces][0] = strval(result);
		cache_get_field_content(i, "trace2", result); Thing[num][t_traces][1] = strval(result);
		cache_get_field_content(i, "trace3", result); Thing[num][t_traces][2] = strval(result);
		cache_get_field_content(i, "trace4", result); Thing[num][t_traces][3] = strval(result);
		cache_get_field_content(i, "trace5", result); Thing[num][t_traces][4] = strval(result);
		cache_get_field_content(i, "text", result); memcpy(Thing[num][t_text], "", 0, 64*4, 64*4);
		
		Thing[num][t_selected] = 0;
		if(Thing[num][t_ownertype] == 1) // Lezace na ziemi
		{
			format(string, sizeof(string), "%s (uid: %d)", GetThingName(num), Thing[num][t_uid]);
			Thing[num][t_textid] = CreateDynamic3DTextLabel(string, COLOR_PURPLE, Thing[num][t_pos][0], Thing[num][t_pos][1], Thing[num][t_pos][2], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Thing[num][t_vw]);
		}
		//printf("PRZEDMIOT %d %d %d %s %d", Thing[num][t_owner], Thing[num][t_type], Thing[num][t_number], Thing[num][t_createdate], Thing[num][t_ownertype]);		
	}
	printf("[MySQL Przedmioty]: %d przedmiotow zaladowano.", num);
	cache_delete(db);
	return 1;
}
/*stock LoadItems()
{
    new string[128],
		Field[19][128],
		Row[MAX_STRING],
		num = 1;

    format(string, sizeof(string), "SELECT MAX(id) FROM przedmioty");
	mysql_query(SQL, string);
	mysql_store_result();
	new greatestid = 10;
	mysql_free_result();

	for(new i, j = cache_get_row_count (); i != j; ++i)
		{
	    format(string, sizeof(string), "SELECT * FROM przedmioty WHERE id=%d AND ownertype>0", i);
		mysql_query(SQL, string);
		mysql_store_result();
		    mysql_fetch_row_format(Row, "|");
			SplitText(Row, Field, '|');

			Thing[i][t_uid] = strval(Field[0]);
			Thing[i][t_type] = strval(Field[1]);
			Thing[i][t_ownertype] = strval(Field[2]);
			Thing[i][t_owner] = strval(Field[3]);
			Thing[i][t_number] = strval(Field[4]);
			Thing[i][t_used] = strval(Field[5]);
			Thing[i][t_value1] = strval(Field[6]);
			Thing[i][t_value2] = strval(Field[7]);
			memcpy(Thing[i][t_createdate], Field[8], 0, 64*4, 64*4);
			Thing[i][t_pos][0] = floatstr(Field[9]);
			Thing[i][t_pos][1] = floatstr(Field[10]);
			Thing[i][t_pos][2] = floatstr(Field[11]);
			Thing[i][t_vw] = strval(Field[12]);
			Thing[i][t_traces][0] = strval(Field[13]);
			Thing[i][t_traces][1] = strval(Field[14]);
			Thing[i][t_traces][2] = strval(Field[15]);
			Thing[i][t_traces][3] = strval(Field[16]);
			Thing[i][t_traces][4] = strval(Field[17]);
			memcpy(Thing[i][t_text], Field[18], 0, 64*4, 64*4);

			Thing[i][t_selected] = 0;
			printf("Laduje przedmioty (%d) !",i);
			if(Thing[i][t_ownertype] == 1) // Lezace na ziemi
			{
				format(string, sizeof(string), "%s (uid: %d)", GetThingName(i), Thing[i][t_uid]);
				Thing[i][t_textid] = CreateDynamic3DTextLabel(string, COLOR_PURPLE, Thing[i][t_pos][0], Thing[i][t_pos][1], Thing[i][t_pos][2], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Thing[i][t_vw]);
			}

			num++;
	}
	mysql_free_result();
	printf("Brak s");
	printf("++= Przedmioty zostaly zaladowane (%d) !",num);
	return 1;
}*/


stock DBUpdateThing(thingid)
{
    new string[512];
	mysql_format(SQL, string, sizeof(string), "UPDATE przedmioty SET type='%d', ownertype='%d', owner='%d', number='%d', used='%d', value1='%d', value2='%d', pos_x='%f', pos_y='%f', pos_z='%f', pos_vw='%d', trace1='%d', trace2='%d', trace3='%d', trace4='%d', trace5='%d', text='%s' WHERE id='%d'",
	Thing[thingid][t_type], Thing[thingid][t_ownertype], Thing[thingid][t_owner], Thing[thingid][t_number], Thing[thingid][t_used],
	Thing[thingid][t_value1], Thing[thingid][t_value2], Thing[thingid][t_pos][0], Thing[thingid][t_pos][1], Thing[thingid][t_pos][2],
	Thing[thingid][t_vw], Thing[thingid][t_traces][0], Thing[thingid][t_traces][1], Thing[thingid][t_traces][2], Thing[thingid][t_traces][3], Thing[thingid][t_traces][4], Thing[thingid][t_text], Thing[thingid][t_uid]);
	mysql_tquery(SQL, string, "", "");
	return 1;
}

stock IsPlayerHaveThing(playerid, thingid)
{
    for(new i = 0; i < PRZEDMIOT_LIMIT; i++)
	{
	    if(Thing[i][t_owner] == PlayerInfo[playerid][pSQLID] && Thing[i][t_ownertype] == 0)
		{
			if(Thing[i][t_type] == thingid)
			{
			    return i;
			}
		}
	}
	return 0;
}

stock GetPlayerThingUID(playerid, thingid)
{
    for(new i = 0; i < PRZEDMIOT_LIMIT; i++)
	{
		if(Thing[i][t_owner] == PlayerInfo[playerid][pSQLID] && Thing[i][t_ownertype] == 0)
		{
			if(Thing[i][t_type] == thingid)
			{
			    return i;
			}
		}
	}
	return 0;
	
}//system przedmiotow


public StopMusic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
	}
}

stock ConvertMsToTime(ms)
{
    new seconds = ms/1000;
    new string[32];
    format(string, sizeof(string), "%02d:%02d:%02d - %02d:%02d:%02d", 
        seconds/31536000, (seconds%31536000)/2592000, (seconds%2592000)/86400, 
        (seconds%86400)/3600, (seconds%3600)/60, seconds%60);
    return string;
}

stock GetWeapSlotID(weaponid)
{
	switch(weaponid)
	{
	    case 0, 1:
			return 0;
		case 2 .. 9:
		    return 1;
		case 22 .. 24:
		    return 2;
		case 25 .. 27:
		    return 3;
		case 28, 29, 32:
		    return 4;
		case 30, 31:
		    return 5;
		case 33, 34:
		    return 6;
		case 35 .. 38:
		    return 7;
		case 16 .. 18, 39:
		    return 8;
		case 41 .. 43:
		    return 9;
		case 10 .. 15:
		    return 10;
		case 44 .. 46:
		    return 11;
		case 40:
		    return 12;
	}
	return 0;
}

stock ShowPlayerOffer(playerid)
{
	new string[256], title[128];
	new sender = Offer[playerid][o_player];
    format(title, sizeof(title), "Przedmiot (oferta od %s (id: %d))", GetName(sender), sender);
    if(Offer[sender][o_type] == 1)
    {
        new freetext[64];
        if(Offer[sender][o_price] == 0) freetext = "darmo";
        else format(freetext, sizeof(freetext), "%d$",Offer[sender][o_price]);
		format(string, sizeof(string), "{FFFFFF}%s (id: %d) oferuje Ci przedmiot %s (uid: %d) za %s !",GetName(sender), sender, GetThingName(Offer[sender][o_value1]), Thing[Offer[sender][o_value1]][t_uid], freetext);
	}
	ShowPlayerDialog(playerid,600,DIALOG_STYLE_MSGBOX,title,string,"Akceptuj","Anuluj");
	return 1;
}

ReturnUser(text[], playerid = INVALID_PLAYER_ID)
{
    new pos = 0;
    while (text[pos] < 0x21) // Strip out leading spaces
    {
        if (text[pos] == 0) return INVALID_PLAYER_ID; // No passed text
        pos++;
    }
    new userid = INVALID_PLAYER_ID;
    if (IsNumeric(text[pos])) // Check whole passed string
    {
        userid = strval(text[pos]);
        if (userid >=0 && userid < MAX_PLAYERS)
        {
            if(!IsPlayerConnected(userid))
            {
                userid = INVALID_PLAYER_ID;
            }
            else
            {
                return userid;
            }
        }
    }
    new len = strlen(text[pos]);
    new count = 0;
    new name[MAX_PLAYER_NAME];
    for (new i = 0; i < MAX_PLAYERS; i++)
    {
        if (IsPlayerConnected(i))
        {
            GetPlayerName(i, name, sizeof (name));
            if (strcmp(name, text[pos], true, len) == 0) 
            { if (len == strlen(name)) { return i;
                } else  {
                    count++;
                    userid = i;
                } } } } if (count != 1)
    { if (playerid != INVALID_PLAYER_ID)
        { if (count)
            { SendClientMessage(playerid, 0xFF0000AA, "Multiple users found, please narrow earch");
            } else { SendClientMessage(playerid, 0xFF0000AA, "No matching user found");}
                } userid = INVALID_PLAYER_ID; } return userid;
}

stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	GetPlayerFacingAngle(playerid, a);
	if(GetPlayerVehicleID(playerid))
	{
	    GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	}
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
}



//ZCMD

CMD:aaktor(playerid, params[]) {
	new string[256], text[100], sub_cmd[40], param[150], szQuery[300];
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
    if(IsPlayerConnected(playerid))
    {
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GREY, "Nie masz uprawnien, aby to zrobic.");
	if( sscanf(params, "s[40] S()[150]", sub_cmd, param) ) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: /aaktor [stworz, lista, usun, opis, nick, anim, goto, pozycja]");
	}
	if( !strcmp(sub_cmd, "stworz"))
	{
		new skin, type, dbl, nick[55];
		dbl = GetLastActor();
		if( sscanf(param, "dds[25]", skin, type, nick)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: /aaktor stworz [skin] [typ] [nick]");
		new Float:x, Float:y, Float:z, Float:a;
		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, a);
		Aktor[dbl][aID] = dbl;
		Aktor[dbl][aSkin] = skin;
		Aktor[dbl][aType] = type;
		Aktor[dbl][aPos][0] = x;
		Aktor[dbl][aPos][1] = y;
		Aktor[dbl][aPos][2] = z;
		Aktor[dbl][aPos][3] = a;
		Aktor[dbl][aVW] = GetPlayerVirtualWorld(playerid);
		format(Aktor[dbl][actor_name], 25, "%s", nick);
		format(string, sizeof(string), "Stworzyles aktora o ID %d ze skinem %d (typ: %d)",Aktor[dbl][aID], Aktor[dbl][aSkin], Aktor[dbl][aType]);
		SCM(playerid, COLOR_GREY, string);
		mysql_format(SQL, szQuery, sizeof(szQuery),
		"INSERT INTO `aktorzy` (ID, Nickname, LocationX, LocationY, LocationZ, Facing, Skin, Type, Animation, Action, VW, Owner, aOpis) VALUES ('%d', '%s', '%f', '%f', '%f', '%f', '%d', '%d', '0', '0', '%d', '%s', ' ')", dbl, nick, x, y, z, a, skin, type, GetPlayerVirtualWorld(playerid), Nick(playerid));
		mysql_query(SQL, szQuery);	
		printf("%s", szQuery);
		
		Aktor[dbl][aNumer] = CreateDynamicActor(Aktor[dbl][aSkin], x, y, z, a, 0, 100.0, GetPlayerVirtualWorld(playerid), -1);		
		
		format(string, sizeof(string), "%s (ID: %d)", nick, dbl);
		Aktor[dbl][actor_nametag] = CreateDynamic3DTextLabel(string, COLOR_GREY, x, y, z+1.0, 10.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, Aktor[dbl][aVW], GetPlayerInterior(playerid), -1, 100.0);
		Aktor[dbl][actor_opis] = CreateDynamic3DTextLabel("",COLOR_PURPLE,x, y, z+0.4,10.0,INVALID_PLAYER_ID, INVALID_PLAYER_ID,0, Aktor[dbl][aVW], GetPlayerInterior(playerid), -1, 100.0);
	}
	else if( !strcmp(sub_cmd, "nick"))
	{
		new a_name[32], a_id;
		if( sscanf(param, "ds[32]", a_id, a_name)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: /aaktor nick [id aktora] [nowy nick]");
		if(Aktor[a_id][aNumer] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Takiego aktora nie ma w MYSQL");
		strmid(Aktor[a_id][actor_name], a_name, 0, strlen(a_name), 32);

		format(string, sizeof(string), "%s (ID: %d)", a_name, a_id);
		UpdateDynamic3DTextLabelText(Text3D:Aktor[a_id][actor_nametag], COLOR_GREY, string);
		
		mysql_real_escape_string(a_name, hackmysql);
		mysql_format(SQL, szQuery, sizeof(szQuery),"UPDATE `aktorzy` SET `Nickname`='%s' WHERE `ID`='%d'", hackmysql, Aktor[a_id][aID]);
		mysql_query(SQL, szQuery);

		format(string, sizeof(string), "Nick aktora (UID: %d) zostal zmieniony na: %s", Aktor[a_id][aID], a_name);
		SCM(playerid, COLOR_LOGS, string);
		return 1;
	}
	else if( !strcmp(sub_cmd, "pozycja") )
	{
		new a_id;
		if( sscanf(param, "d", a_id) ) return SendClientMessage(playerid, COLOR_GREY, "Tip: /aaktor pozycja [id aktora]");
		if(Aktor[a_id][aID] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Takiego aktora nie ma w MYSQL");
		new Float:PosX, Float:PosY, Float:PosZ, Float:PosA;
		GetPlayerPos(playerid, PosX, PosY, PosZ);
		GetPlayerFacingAngle(playerid, PosA);

		Aktor[a_id][aPos][0] = PosX;
		Aktor[a_id][aPos][1] = PosY;
		Aktor[a_id][aPos][2] = PosZ;
		Aktor[a_id][aPos][3] = PosA;
		Aktor[a_id][aVW] = GetPlayerVirtualWorld(playerid);
		
		mysql_format(SQL, szQuery, sizeof(szQuery),"UPDATE `aktorzy` SET LocationX = %f, LocationY = %f, LocationZ = %f, Facing = %f, VW = %d WHERE ID = %d", Aktor[a_id][aPos][0], Aktor[a_id][aPos][1], Aktor[a_id][aPos][2], Aktor[a_id][aPos][3],Aktor[a_id][aVW], Aktor[a_id][aID]);
		mysql_query(SQL, szQuery);
		
		DestroyDynamicActor(Aktor[a_id][aNumer]);
		Aktor[a_id][aNumer] = CreateDynamicActor(Aktor[a_id][aSkin], Aktor[a_id][aPos][0], Aktor[a_id][aPos][1], Aktor[a_id][aPos][2], Aktor[a_id][aPos][3], 1, 100.0, Aktor[a_id][aVW], 0, INVALID_PLAYER_ID, 30.0);
		
		ApplyDynamicActorAnimation(Aktor[a_id][aNumer], Aktor[a_id][aAnimLib], Aktor[a_id][aAnimName], 4.1, 1, 0, 0, 0, 0);
		
		DestroyDynamic3DTextLabel(Aktor[a_id][actor_nametag]);
		DestroyDynamic3DTextLabel(Aktor[a_id][actor_opis]);
		
		format(string, sizeof(string), "%s (ID: %d)", Aktor[a_id][actor_name], Aktor[a_id][aID]);
		
		Aktor[a_id][actor_nametag] = CreateDynamic3DTextLabel(string, COLOR_GREY, Aktor[a_id][aPos][0], Aktor[a_id][aPos][1], Aktor[a_id][aPos][2]+1.0, 10.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, Aktor[a_id][aVW], 0, -1, 100.0);
		Aktor[a_id][actor_opis] = CreateDynamic3DTextLabel(SMessage(Aktor[a_id][aOpis]),COLOR_PURPLE, Aktor[a_id][aPos][0], Aktor[a_id][aPos][1],Aktor[a_id][aPos][2],10.0,INVALID_PLAYER_ID, INVALID_PLAYER_ID,0, Aktor[a_id][aVW], 0, -1, 100.0);
		
		format(string, sizeof(string), "Pozycja aktora (UID: %d) zostala zmieniona",Aktor[a_id][aID]);
		SCM(playerid, COLOR_LOGS, string);
		return 1;
	}
	else if( !strcmp(sub_cmd, "opis"))
	{
		new a_desc[128], a_id;
		if( sscanf(param, "ds[128]", a_id, a_desc)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: /aaktor opis [id aktora] [opis]");
		if(Aktor[a_id][aID] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Takiego aktora nie ma w MYSQL");
		
		Aktor[a_id][aOpis] = strlen(a_desc);
		
		mysql_real_escape_string(a_desc, hackmysql);
		mysql_format(SQL, szQuery, sizeof(szQuery),"UPDATE `aktorzy` SET `aOpis`='%s' WHERE `ID`='%d'", hackmysql, Aktor[a_id][aID]);
		mysql_query(SQL, szQuery);
		
		format(string, sizeof(string), "%s", a_desc);
		UpdateDynamic3DTextLabelText(Aktor[a_id][actor_opis], COLOR_PURPLE, SMessage(string));

		format(string, sizeof(string), "Opis aktora (UID: %d) zosta³ zmieniony. Nowy opis: %s", Aktor[a_id][aID], a_desc);
		SCM(playerid, COLOR_LOGS, string);
		return 1;
	}
	else if( !strcmp(sub_cmd, "usun"))
	{
		new a_id;
		if( sscanf(param, "d", a_id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: /aaktor usun [id aktora]");
		if(Aktor[a_id][aID] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Takiego aktora nie ma w MYSQL");
		
		format(szQuery, sizeof(szQuery), "DELETE FROM `aktorzy` WHERE `ID` = %d", Aktor[a_id][aID]);
		mysql_query(SQL, szQuery);
		
		DestroyDynamic3DTextLabel(Aktor[a_id][actor_nametag]);
		DestroyDynamic3DTextLabel(Aktor[a_id][actor_opis]);
		DestroyDynamicActor(Aktor[a_id][aNumer]);
		
		format(string, sizeof(string), "Usun¹³e aktora %s (UID: %d)", Aktor[a_id][actor_name], Aktor[a_id][aID]);
		SCM(playerid, COLOR_LOGS, string);
		Aktor[a_id][aID] = -1;
		return 1;
	}
	else if( !strcmp(sub_cmd, "goto"))
	{
		new a_id;
		if( sscanf(param, "d", a_id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: /aaktor goto [id aktora]");
		if(Aktor[a_id][aID] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Takiego aktora nie ma w MYSQL");
		SetPlayerVirtualWorld(playerid, Aktor[a_id][aVW]);
		SetPlayerPosEx(playerid, Aktor[Aktor[a_id][aID]][aPos][0], Aktor[Aktor[a_id][aID]][aPos][1]+1, Aktor[Aktor[a_id][aID]][aPos][2]+1);
		
		format(string, sizeof(string), "Teleportowales sie do aktora %s (UID: %d)", Aktor[a_id][actor_name], Aktor[a_id][aID]);
		SCM(playerid, COLOR_LOGS, string);
		return 1;
	}
	else if( !strcmp(sub_cmd, "anim") )
	{
		new a_id, animlib[28], animname[28];
		if( sscanf(param, "ds[28]s[28]", a_id, animlib, animname) ) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: /aaktor anim [id] [animlib] [animname]");
		if(Aktor[a_id][aID] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Takiego aktora nie ma w MYSQL");
		
		ApplyDynamicActorAnimation(Aktor[a_id][aNumer], animlib, animname, 4.1, 1, 0, 0, 0, 0);
		
		mysql_real_escape_string(animlib, hackmysql);
		mysql_format(SQL, szQuery, sizeof(szQuery),"UPDATE `aktorzy` SET `AnimLib`='%s' WHERE `ID`='%d'", hackmysql, Aktor[a_id][aID]);
		mysql_query(SQL, szQuery);

		mysql_real_escape_string(animname, hackmysql);
		mysql_format(SQL, szQuery, sizeof(szQuery),"UPDATE `aktorzy` SET `AnimName`='%s' WHERE `ID`='%d'", hackmysql, Aktor[a_id][aID]);
		mysql_query(SQL, szQuery);
		
		Aktor[a_id][aAnimLib] = strlen(animlib);
		Aktor[a_id][aAnimName] = strlen(animname);
		
		format(string, sizeof(string), "Dodales animacje aktora %s [%s | %s] (UID: %d)", Aktor[a_id][actor_name],animlib, animname, Aktor[a_id][aID]);
		SCM(playerid, COLOR_LOGS, string);
		return 1;
	}
	else if( !strcmp(sub_cmd, "lista") )
	{
		new list_actors[512];
		SCM(playerid,COLOR_GREY, "Lista aktorów:");
		for(new a = 1; a < MAX_ACTORS; a++)
		{
			if(Aktor[a][aID] != 0)
			{
				format(list_actors, sizeof(list_actors), "%s %d %s | ", list_actors, a, Aktor[a][actor_name]);
			}
		}
		if(strlen(list_actors) <= 0)
		{
			SCM(playerid,COLOR_GREY, "Nie znaleziono zadnych aktorów.");
			return 1;
		}
		SCM(playerid,COLOR_GREY, list_actors);
		return 1;	
	}
	return 1;
}


CMD:statek(playerid, params[]) {
	new string[128], text[100], x_nr[10], statekstart;
    if(IsPlayerConnected(playerid))
    {
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GREY, "Nie masz uprawnien, aby to zrobic.");
	if(sscanf(params, "s[10]",x_nr)) return SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/statek <start/usun>");
	if(strcmp(x_nr,"start",true) == 0)
 	{	
	if(IsStatek == 1) return SCM(playerid, COLOR_ADMCHAT, "Moze byc stworzony tylko 1 statek w 1 czasie!");
		IsStatek = 1;
		SendClientMessage(playerid, COLOR_ADMCHAT, "INFORMACJA: Uruchomiles wydarzenie dajace materialy (1000)");	
        gMainShipObjectId = CreateObject(SHIP_HULL_ID, gShipRoutePoints[0][0], gShipRoutePoints[0][1], gShipRoutePoints[0][2], gShipRoutePoints[0][3], gShipRoutePoints[0][4], gShipRoutePoints[0][5], SHIP_DRAW_DISTANCE);
 
        new x=0;
        while(x != NUM_SHIP_ATTACHMENTS) {
            gShipsAttachments[x] = CreateObject(gShipAttachmentModelIds[x], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, SHIP_DRAW_DISTANCE);
                AttachObjectToObject(gShipsAttachments[x], gMainShipObjectId,
                                        gShipAttachmentPos[x][0] - gShipHullOrigin[0],
                                        gShipAttachmentPos[x][1] - gShipHullOrigin[1],
                                        gShipAttachmentPos[x][2] - gShipHullOrigin[2],
                                        0.0, 0.0, 0.0);
                x++;
        }
		format(text, sizeof(text), "AdmCmd: %s uruchomil dostawe materialow!",GetName(playerid));
		SendAdminMessage(COLOR_LOGS, text,1);
		AdminLog("/logs/admin.log", text);
		format(string, sizeof(string), "** Dostaliscie cyk: za 5 minut nielegalna dostawa materialów **");
		SendTeamMessage(5, COLOR_PURPLE, string);
		SendTeamMessage(6, COLOR_PURPLE, string);
		SendTeamMessage(11, COLOR_PURPLE, string);
		SendTeamMessage(10, COLOR_PURPLE, string);
		SendTeamMessage(4, COLOR_PURPLE, string);
		statekstart = SetTimer("StartMovingTimer",30*1000,0); // pause at route 0 for 30 seconds
		return 1;
			}
		if(strcmp(x_nr,"usun",true) == 0)
			{
			foreach(Player, i) {
					if(IsPlayerInRangeOfPoint(i,300.0,gShipRoutePoints[gShipCurrentPoint][0],gShipRoutePoints[gShipCurrentPoint][1], gShipRoutePoints[gShipCurrentPoint][2]))
					{
					StopAudioStreamForPlayer(i);
					}
				}
			if(gMainShipObjectId == 0) return SCM(playerid, COLOR_ADMCHAT, "Brak trwajacej dostawy statku!");
			KillTimer(statekstart);
			text = "";
			format(text, sizeof(text), "AdmCmd: %s usunal dostawe materialow (ID %d)!",GetName(playerid), gMainShipObjectId);
			SendAdminMessage(COLOR_LOGS, text,1);
			AdminLog("/logs/admin.log", text);
			DestroyObject(gMainShipObjectId);
			DestroyObject(gShipsAttachments[0]);
			DestroyObject(gShipsAttachments[1]);
			DestroyObject(gShipsAttachments[2]);
			DestroyObject(gShipsAttachments[3]);
			DestroyObject(gShipsAttachments[4]);
			DestroyObject(gShipsAttachments[5]);
			DestroyObject(gShipsAttachments[6]);
			DestroyObject(gShipsAttachments[7]);
			DestroyObject(gShipsAttachments[8]);
			DestroyObject(gShipsAttachments[9]);
			gMainShipObjectId = 0;
			IsStatek = 0;
			}
		}
	return 1;
}

CMD:pozycja(playerid) {
	new Float: pos[3],Float:Angle, string[126];
	if(IsPlayerConnected(playerid))
    {
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	GetPlayerFacingAngle(playerid, Angle);
	format(string, sizeof(string), "Twoja pozycja: %f, %f, %f, %0.2f | VW: %d", pos[0], pos[1], pos[2], Angle, GetPlayerVirtualWorld(playerid));
	SCM(playerid, COLOR_RED, string);
	}
	return 1;
}

CMD:umieraj(playerid) {
	OnPlayerDeath(playerid, playerid, 24);
	return 1;
}
CMD:szczal(playerid) {
	OnPlayerGiveDamage(playerid, playerid, 50, 24, 9);
	return 1;
}

CMD:p(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pJailed] > 0 || PlayerInfo[playerid][pBWTime] >= 1)
      	{
			SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz w tej chwili skorzystac z tej komendy !");
			return 1;
		}
        ShowPlayerDialog(playerid, 499, DIALOG_STYLE_LIST, "Przedmioty", "{646464}{FFFFFF}Przedmioty\n{646464}{FFFFFF}Ubrania\n{646464}{FFFFFF}Szukaj przedmiotów", "Wybierz", "Anuluj");
	}
	return 1;
}


CMD:telefon(playerid, params[])
{
    new string[256], name[MAX_PLAYER_NAME];
	if(IsPlayerConnected(playerid))
	{
	    if(LoadThing[playerid] == 0)
	    {
	        SendClientMessage(playerid, COLOR_GREY, "   Musisz najpierw wczytac swoja liste przedmiotów za pomoca '/p' !");
	        return 1;
	    }
		if(PlayerInfo[playerid][pPnumber] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nie posiadasz karty do telefonu !");
			return 1;
		}
		new thingid = IsPlayerHaveThing(playerid, 100);
		if(thingid != 0)
		{
			if(Mobile[playerid] != 255)
			{
			    if(PlayerInfo[playerid][pSpeaker] == 1)
			    {
			        ShowPlayerDialog(playerid, 2067, DIALOG_STYLE_LIST, "Menu telefonu", "{FFFFFF}Wylacz tryb glosnomówiacy", "Zatwierdz", "Anuluj");
			    }
				else
				{
					ShowPlayerDialog(playerid, 2067, DIALOG_STYLE_LIST, "Menu telefonu", "{FFFFFF}Wlacz tryb glosnomówiacy", "Zatwierdz", "Anuluj");
				}
			    return 1;
			}
			if(PlayerInfo[playerid][pTelefonOnline] == 1)
			{
				new systemmobile[150];
				new systemd, systemm, systemr;
				getdate(systemr, systemm, systemd);
				format(systemmobile, sizeof(systemmobile), "{FFFFFF}\n  %d.%d.%dr.\n\n\t       Los Santos\t\n\t            Mobile\n\t\t{FFFF00}%d\n\n", systemd, systemm, systemr, PlayerInfo[playerid][pPnumber]);
				ShowPlayerDialog(playerid, 2050, DIALOG_STYLE_MSGBOX, "Menu telefonu", systemmobile, "Menu", "Schowaj");
				GetPlayerName(playerid, name, sizeof(name));
				format(string, sizeof(string), "* %s wyciaga swój telefon z kieszeni.", name);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			}
			else
			{
			    new systemmobile[64];
				GetPlayerName(playerid, name, sizeof(name));
				format(string, sizeof(string), "* %s wyciaga swój telefon z kieszeni.", name);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				format(systemmobile, sizeof(systemmobile), "{FFFFFF}\nTwój telefon jest obecnie wylaczony !\n\t               Wlaczyc?\n\n");
				ShowPlayerDialog(playerid, 2066, DIALOG_STYLE_MSGBOX, "Menu telefonu", systemmobile, "Wlacz", "Schowaj");
			}
			Thing[SelectedThing[playerid]][t_used] = 1;
			SelectedItem0[playerid] = SelectedThing[playerid];
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "   Nie posiadasz telefonu !");
		}
	}
	return 1;
}
//przedmioty
CMD:apdaj(playerid, params[])
{
    new string[128];
	new giveplayerid, thing, number;
	if(IsPlayerConnected(playerid))
    {
	if(sscanf(params, "ddd", giveplayerid,thing,number)) 
		return SendClientMessage(playerid, COLOR_GREY, "Uzyj: /apdaj [id gracza] [przemiot (0-99)] [ilosc]");
	if(PlayerInfo[playerid][pAdmin] < 5) 
			return SendClientMessage(playerid, COLOR_GREY, "Nie masz uprawnien, aby to zrobic.");
		if(thing < 0 || thing > 100)
		{
			SendClientMessage(playerid, COLOR_GREY, "Bledne id przedmiotu !");
			return 1;
		}
		if(number < 1 || number > 999)
		{
			SendClientMessage(playerid, COLOR_GREY, " Wprowadzona ilosc przedmiotów jest nieprawidlowa !");
			return 1;
		}
	    if(IsPlayerConnected(giveplayerid))
	    {
		    if(IsPlayerFull(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "   Ten gracz posiada juz maksymalna liczbe przedmiotów !");
	        if(giveplayerid != INVALID_PLAYER_ID)
	        {
				if(thing == 0 || thing == 1 || thing == 2 || thing == 3 || thing == 4 || thing == 6 || thing == 24 || thing == 25 || thing == 26 || thing == 27 || thing == 28 || thing == 34 || thing == 35 || thing == 36 || thing == 57 || thing == 56 || thing == 58 || (thing > 59 && thing < 82) || thing == 87)
				{
					number = 1;
				}
				if(thing == 2)
				{
				    number = 3;
				}
				new thingid;
				if(thing == 81)
				{
				    thingid = GivePlayerThing(giveplayerid, 7, 1, 0, 0);
				}
				else
				{
					thingid = GivePlayerThing(giveplayerid, (thing+100), number, 0, 0);
					AddTrace(thingid, giveplayerid);
				}
				format(string, sizeof(string), "* Wreczyles %s (uid: %d) graczowi %s !", GetThingName(thingid), Thing[thingid][t_uid], GetName(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Otrzymales przedmiot %s (uid: %d) od %s !", GetThingName(thingid), Thing[thingid][t_uid], GetName(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				return 1;
			}
		}
}
	return 1;
}

CMD:myad(playerid, params[])
{
	new string[184],sendername[25];
	GetPlayerName(playerid,sendername,sizeof(sendername));
	if(AdTimer[playerid] == 0) return SCM(playerid,COLOR_GREY, "Nie masz ogloszenia. ");
	format(string,256,"Text: %s", AdText[playerid]);
	SCM(playerid, COLOR_YELLOW, string);
	format(string,sizeof(string),"Twoja reklama wyswietli sie w %d minut (%d sekund).",AdTimer[playerid]/60,AdTimer[playerid]);
	SCM(playerid,COLOR_YELLOW,string);
	return 1;
}
CMD:showmotd(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 0) return SCM(playerid,COLOR_GREY, "Nie jeste w frakcji.");
	if(strlen(DynamicFactions[PlayerInfo[playerid][pMember]][fAnn]) > 0)
	{
	    new factioninfo[128];
		format(factioninfo,sizeof(factioninfo), "(Grupa) MOTD{FFFFFF}: %s",DynamicFactions[PlayerInfo[playerid][pMember]][fAnn]);
		SCM(playerid,COLOR_CLIENT,factioninfo);
	}
	return 1;
}
CMD:fmotd(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 0) return SCM(playerid,COLOR_GREY, "Nie jeste w frakcji.");
	if(PlayerInfo[playerid][pRank] < 5) return SCM(playerid,COLOR_GREY, "Nie masz rangi 5.");
	new newsf[128],string[184];
	if(sscanf(params, "s[128]",newsf)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/fmotd <wiadomosc>");
	strmid(DynamicFactions[PlayerInfo[playerid][pMember]][fAnn], newsf, 0, strlen(newsf), 255);
	format(string,sizeof(string),"** Wiadomosc frakcji: %s",DynamicFactions[PlayerInfo[playerid][pMember]][fAnn]);
	SendFactionMessage(PlayerInfo[playerid][pMember],COLOR_YELLOW,string);
	mysql_real_escape_string(DynamicFactions[PlayerInfo[playerid][pMember]][fAnn], hackmysql);
	format(string, sizeof(string), "UPDATE `factions` SET `Anunt`='%s' WHERE `ID`='%d'",hackmysql, PlayerInfo[playerid][pMember]);
	mysql_query(SQL ,string);
	return 1;
}
CMD:leaderinfo(playerid, params[])
{
	if (PlayerInfo[playerid][pLeader] < 1) return SCM(playerid,COLOR_GREY, "Ta komenda jest tylko dla liderów.");
	new string[184];
	format(string,sizeof(string),"Jestes liderem frakcji %s.",NumeFactiune(PlayerInfo[playerid][pMember]));
	SCM(playerid,COLOR_WHITE,string);
	format(string,sizeof(string),"Masz %d /3 ostrzezen dotyczacych lidera.",PlayerInfo[playerid][pALeader]);
	SCM(playerid,COLOR_WHITE,string);
	return 1;
}


CMD:removelav(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	new id,sendername[25],giveplayer[25],string[184];
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/givelav <id/nazwa>");
    if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	if(IsPlayerConnected(id))
	{
	    if(PlayerInfo[id][pLeader] < 1) return SCM(playerid,COLOR_GREY, "Ten gracz nie jest liderem.");
		if(PlayerInfo[id][pALeader] < 1) return SCM(playerid,COLOR_GREY, "Ten gracz nie ma LW.");
		GetPlayerName(id, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		PlayerInfo[id][pALeader] -= 1;
		format(string, sizeof(string), "Usunales  %s ostrzezenie lidera.", giveplayer);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Admin %s usunal ostrzezenie lidera.", sendername);
		SendClientMessage(id, COLOR_LIGHTBLUE, string);
		new str[100];
		format(str,sizeof(str),"UPDATE users SET `ALeader`='%d' WHERE `ID`='%d'",PlayerInfo[id][pALeader],PlayerInfo[id][pSQLID]);
		mysql_query(SQL,str);
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	return 1;
}
CMD:givelav(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	new id,sendername[25],giveplayer[25],string[184];
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/givelav <id/nazwa>");
    if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	if(IsPlayerConnected(id))
	{
		GetPlayerName(id, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "Masz ostrzezenie od %s.",sendername);
		SendClientMessage(id, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Dales %s ostrzezenie lidera.", giveplayer);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		PlayerInfo[id][pALeader]++;
		if(PlayerInfo[id][pALeader] >= 3)
		{
			PlayerInfo[id][pMember]=0;
            PlayerInfo[id][pLeader]=0;
            PlayerInfo[id][pRank] = 0;
			PlayerInfo[id][pChar] = 0;
			PlayerInfo[id][pFACWarns] = 0;
			PlayerInfo[id][pFpunish] = 100;
			PlayerInfo[id][pALeader] = 0;
			gTeam[id] = 3;
			PlayerInfo[id][pTeam] = 3;
			OnDuty[id] = 0;
			tazer[id] = 0;
			SetPlayerArmourEx(id, 0);
			SetPlayerSkinEx(id,PlayerInfo[id][pModel]);
			SpawnPlayer(id);
			new str[256];
			format(str,sizeof(str),"UPDATE users SET `Member`='0',`Leader`='0',`Rank`='0',`FSkin`='0',`FWarn`='0',`FPunish`='100',`Team`='3',`ALeader`='0' WHERE `ID`='%d'",PlayerInfo[id][pSQLID]);
			mysql_query(SQL,str);
			SCM(playerid,COLOR_LIGHTBLUE,"* Wyszedles z grupy z 100 FP, gdy zebrales 3/3 LW.");
		}
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	return 1;
}
CMD:managearea(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	new x_nr[10];
    if(sscanf(params, "s[10]",x_nr)) SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/managearea <otworz/zamknij>");
    if(strcmp(x_nr,"otworz",true) == 0)
 	{
		Update3DTextLabelText(areap, 0xFFFFFFFF, "Event Area jest otwarta\nKliknij klawisz F, aby wejsc");
		areape = 1;
	}
    if(strcmp(x_nr,"zamknij",true) == 0)
 	{
		Update3DTextLabelText(areap, 0xFFFFFFFF, "Event Area jest Zamknietya\nCzekaj...");
		areape = 0;
 	}
	return 1;
}
CMD:bet(playerid, params[])
{
	new number,money;
	if(!PlayerToPoint(5.0, playerid,830.6540,0.2702,1004.1797) && !PlayerToPoint(5.0, playerid,834.3984, 3.2266, 1004.0703)) return SCM(playerid,COLOR_GREY, "Nie znajdujesz sie w poblizu obszaru, w którym mozesz obstawiac.");
	if(sscanf(params, "dd",number,money)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/bet <numer> <kasa>");
	if(number < 1 || number > 20) return SCM(playerid,COLOR_GREY, "Zly numer 1 - 20.");
	if(money < 5000) return SCM(playerid,COLOR_GREY, "Nieprawidlowa kwota. 5000 USD - nieskonczonosc.");
	if(GetPlayerCash(playerid) < money) return SCM(playerid,COLOR_GREY, "Nie masz wystarczajaco duzo pieniedzy.");
	new n2 = random(20);
	GivePlayerCash(playerid,-money);
	Update(playerid,pCashx);
	if(number == n2)
	{
	    new cash = money*number,string[100];
	    GivePlayerCash(playerid,cash);
	    Update(playerid,pCashx);
	    format(string,sizeof(string),"Zarobiles $%s  z %d.",FormatNumber(cash),number);
	    SCM(playerid,COLOR_LIGHTBLUE,string);
		new r = random(100);
		if(r == 9)
		{
		    SCM(playerid,COLOR_LIGHTBLUE,"Zdobyles punkty szacunku.");
		    PlayerInfo[playerid][pExp]++;
		    Update(playerid,pRP);
		}
	}
	else return SCM(playerid,COLOR_GREY, "Spróbuj ponownie ...");
	return 1;
}

CMD:top(playerid, params[])
{
	new item[256], page;
	if(sscanf(params, "s[50]", item)) {
		SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/top <name>");
		SendClientMessage(playerid, COLOR_WHITE, "Parametry: Mafii, Godziny, Level, Pieniadze.");
		return 1;
	}	
	new szQuery[1024], szResult[1024], szDialog[1024], szDialog2[3000], Cache: result;	
	
	if(sscanf(params, "s[50]i", item, page)) {
		SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/top <name> <numar (1-50)>");
		SendClientMessage(playerid, COLOR_WHITE, "Parametry: Godziny, Level, Pieniadze.");
		return 1;
	}		
	if(page < 1 || page > 50) return SendClientMessage(playerid, -1, "{FF9494}*{FFFFFF} Zly numer. (1-50)");
	if(strcmp(item, "godziny", true, strlen(item)) == 0)
	{	
		format(szQuery, sizeof(szQuery), "SELECT * FROM `users` ORDER BY `users`.`ConnectedTime` DESC LIMIT %d", page);
		result = mysql_query(SQL, szQuery);
		
		new szName[256], ore, x;
		format(szDialog, sizeof(szDialog), "{FFEE00}Top %d gracze:{FFFFFF}\n", page);
		strcat(szDialog2, szDialog);
		for(new i, j = cache_get_row_count (); i < j; i++)
		{	
			cache_get_field_content(i, "name", szResult); format(szName, 256, szResult);
			cache_get_field_content(i, "ConnectedTime", szResult); ore = strval(szResult);
			x ++;
			
			if(x <= 3) {
				format(szDialog, sizeof(szDialog), "{00FF04}%d.{FFFFFF} %s - %d godziny grane.\n", x, szName, ore);
			}
			else {
				format(szDialog, sizeof(szDialog), "{2E9DFF}%d.{FFFFFF} %s - %d godziny grane.\n", x, szName, ore);
			}
			strcat(szDialog2, szDialog);
		}
		cache_delete(result);
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Top: Godziny", szDialog2, "Ok", "");
	}
	else if(strcmp(item, "level", true, strlen(item)) == 0)
	{	
		format(szQuery, sizeof(szQuery), "SELECT * FROM `users` ORDER BY `users`.`Level` DESC LIMIT %d", page);
		result = mysql_query(SQL, szQuery);
		
		new szName[256], lvl, x;
		format(szDialog, sizeof(szDialog), "{FFEE00}Top %d gracze:{FFFFFF}\n", page);
		strcat(szDialog2, szDialog);
		for(new i, j = cache_get_row_count (); i < j; i++)
		{	
			cache_get_field_content(i, "name", szResult); format(szName, 256, szResult);
			cache_get_field_content(i, "Level", szResult); lvl = strval(szResult);
			x ++;
			
			if(x <= 3) {
				format(szDialog, sizeof(szDialog), "{00FF04}%d.{FFFFFF} %s - Level %d.\n", x, szName, lvl);
			}
			else {
				format(szDialog, sizeof(szDialog), "{2E9DFF}%d.{FFFFFF} %s - Level %d.\n", x, szName, lvl);
			}
			strcat(szDialog2, szDialog);
		}
		cache_delete(result);
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Top: Level", szDialog2, "Ok", "");
	}	
	else if(strcmp(item, "pieniadze", true, strlen(item)) == 0)
	{	
		format(szQuery, sizeof(szQuery), "SELECT * FROM `users` ORDER BY `users`.`Bank`+`Money` DESC LIMIT %d", page);
		result = mysql_query(SQL, szQuery);
		
		new szName[256], bani, banca, x;
		format(szDialog, sizeof(szDialog), "{FFEE00}Top %d gracze:{FFFFFF}\n", page);
		strcat(szDialog2, szDialog);
		for(new i, j = cache_get_row_count (); i < j; i++)
		{	
			cache_get_field_content(i, "name", szResult); format(szName, 256, szResult);
			cache_get_field_content(i, "Money", szResult); bani = strval(szResult);
			cache_get_field_content(i, "Bank", szResult); banca = strval(szResult);
			
			x ++;
			
			if(x <= 3) {
				format(szDialog, sizeof(szDialog), "{00FF04}%d.{FFFFFF} %s - $%s pieniadze.\n", x, szName, FormatNumber(bani+banca));
			}
			else {
				format(szDialog, sizeof(szDialog), "{2E9DFF}%d.{FFFFFF} %s - $%s pieniadze.\n", x, szName, FormatNumber(bani+banca));
			}
			strcat(szDialog2, szDialog);
		}
		cache_delete(result);
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Top: Pieniadze", szDialog2, "Ok", "");
	}		
	else SendClientMessage(playerid, COLOR_WHITE, "Parametry: Mafii, Godziny, Level, Pieniadze.");
	return 1;
}

CMD:toglc(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] < 1) return SCM(playerid,COLOR_GREY, "Nie jeste liderem.");
	if(toglc[playerid] == 0)
	{
	    toglc[playerid] = 1;
	    SCM(playerid,COLOR_WHITE,"Dezaktywowano czat liderów");
	}
	else if(toglc[playerid] == 1)
	{
	    toglc[playerid] = 0;
	    SCM(playerid,COLOR_WHITE,"Aktywowano czat liderów");
	}
	return 1;
}

CMD:pingsound(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if(pingsound[playerid] == 0)
		{
		    pingsound[playerid] = 1;
			SCM(playerid,COLOR_WHITE,"Aktywujesz dzwiek.");
		}
		else
		{
		    pingsound[playerid] = 0;
			SCM(playerid,COLOR_WHITE,"Dezaktywujesz dzwiek.");
		}
	}
	return 1;
}
CMD:playdice(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		new id,money,sendername[25],giveplayer[25],string[184];
		if(sscanf(params, "ud",id,money)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/playdice <id/nazwa> <Pieniadze>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		if(money < 1 || money > 1000000) return SCM(playerid,COLOR_GREY, "Limit jest $1,000,000.");
		if(IsPlayerConnected(id))
		{
			if(GetPlayerCash(playerid) < money) return SCM(playerid,COLOR_GREY, "Nie masz tyle pieniedzy.");
		    if(GetPlayerCash(id) < money) return SCM(playerid,COLOR_GREY, "Ten gracz nie ma wystarczajaco duzo pieniedzy.");
		    if(id == playerid) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz sie poddac.");
			if(ProxDetectorS(10.0, playerid, id))
			{
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "* Wyslales kostke do gracza %s o $%s.",giveplayer,FormatNumber(money));
				SendClientMessage(playerid, 0xFFBABAFF, string);
				format(string, sizeof(string), "* %s chce zagrac z Toba o $%s, (wpisz /akceptuj dice %d) by zaakceptowac.",sendername,FormatNumber(money),playerid);
				SendClientMessage(id, 0xFFBABAFF, string);
				Diceid[id] = playerid;
				Dicem[id] = money;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest w twoim zasiegu.");
		}
    }
	return 1;
}


CMD:mydonations(playerid, params[])
{
	new szDialog[1024], szDialog2[1024], query[256];
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Musisz sie najpierw zalogowac.");
    if(IsPlayerConnected(playerid))
    {
		new text[256], date[256], stats[256];
		format(query, sizeof(query), "SELECT * FROM `donate` WHERE `Userid` = '%d'", PlayerInfo[playerid][pSQLID]);
		new Cache: result = mysql_query(SQL, query);
		new status[256], y;
		for(new i, j = cache_get_row_count (); i != j; ++i)
		{
			cache_get_field_content(i, "Text", text);
			cache_get_field_content(i, "Date", date);
			cache_get_field_content(i, "Status", stats);
			new x = strval(stats);
			if(x == 1) format(status, 256, "{FFE100}Czekam{FFFFFF}");
			else if(x == 2) format(status, 256, "{00FF00}Polecenie sprawdza poprawnosc{FFFFFF}");
			else if(x == 3) format(status, 256, "{CC1F1F}Cod/pin niepoprawny{FFFFFF}");
			y++;
			format(szDialog, sizeof(szDialog), "{FFFFFF}Dotacja #%d:\nData: %s | Status: %s\n\n", y, date, status);
			strcat(szDialog2, szDialog);
		}
		cache_delete(result);
		if(y == 0) return SCM(playerid, -1, "Nie przekazales datku!");
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Twoje darowizny:", szDialog2, "OK", "");
    }
    return 1;
}

/*CMD:undercover(playerid, params[]) {
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_RED, "Nie jeste zalogowany!");
	if(PlayerInfo[playerid][pMember] != 11 && PlayerInfo[playerid][pLeader] != 11) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste Hitmanem!");
	if(GetPVarInt(playerid, "Przykrywka") == 0) {
		SetPVarInt(playerid, "Przykrywka", 1);		
	    SendClientMessage(playerid, COLOR_YELLOW, "Teraz Jestes pod przykrywka!");
        foreach(Player, i) ShowPlayerNameTagForPlayer(i, playerid, false);
		PlayerTextDrawShow(playerid, UndercoverTD);
	}
	else {
	    SetPVarInt(playerid, "Przykrywka", 0);
	    SendClientMessage(playerid, COLOR_YELLOW,"Nie jeste juz pod przykrywka.");
        foreach(Player, i) ShowPlayerNameTagForPlayer(i, playerid, true);
		PlayerTextDrawHide(playerid, UndercoverTD);
	}	
	return 1;
}	*/

CMD:gethit(playerid, params[]) {
	new userID, playerID[MAX_PLAYERS], contracts, szMessage[180];
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_RED, "Nie jeste zalogowany!");
	if(PlayerInfo[playerid][pMember] != 11 && PlayerInfo[playerid][pLeader] != 11) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste Hitmanem!");
	if(PlayerHit[playerid] != -1) return SendClientMessage(playerid, COLOR_WHITE, "Masz juz kontrakt.");		
	foreach(Player, i) {
		if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {
			if(Contract[i] == 1 && UsedContract[i] == 0) {
				contracts ++;
				playerID[contracts] = i;
			}
		}
	}
	if(contracts == 0) return SendClientMessage(playerid, COLOR_WHITE, "W tej chwili nie ma umów.");
	if(contracts == 1) userID = playerID[1];
	else userID = random(contracts);
	if(PlayerInfo[userID][pMember] == 11) return SCM(playerid, COLOR_LGREEN, "Blad: Nie mozesz teraz uzyc tego polecenia!");
	UsedContract[userID] = 1;
	PlayerHit[playerid] = userID;
	format(szMessage, sizeof(szMessage), "* %s (%d) otrzymal nowy kontrakt o wartosci %d$.", GetName(playerid), playerid, HeadValue[userID]);
	SendFactionMessage(11, COLOR_LIGHTBLUE, szMessage);
	return 1;
}

CMD:kontrakty(playerid, params[]) {
	new contracts, szMessage[180];
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_RED, "Nie jeste zalogowany!");
	if(PlayerInfo[playerid][pMember] != 11 && PlayerInfo[playerid][pLeader] != 11) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste Hitmanem!");
	foreach(Player, i) {
		if(IsPlayerConnected(i) && UsedContract[i] == 0) {
			if(Contract[i] == 1) {
				contracts ++;
			}
		}
	}
	if(contracts == 0) return SendClientMessage(playerid, COLOR_WHITE, "Obecnie nie ma kontraktów.");
	else {
		format(szMessage, 256,  "Znaleziono %d kontraktów!", contracts);
		SCM(playerid, -1, szMessage);
	}
	return 1;
}

CMD:leavehit(playerid, params[]) {
	new szMessage[180];
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_RED, "Nie jeste zalogowany!");
	if(PlayerInfo[playerid][pMember] != 11 && PlayerInfo[playerid][pLeader] != 11) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste Hitmanem!");
	if(PlayerHit[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Nie masz kontraktu.");
	new userID = PlayerHit[playerid];
	format(szMessage, sizeof(szMessage), "* %s (%d) odwolal kontrakt, który mial.", GetName(playerid), playerid);
	SendFactionMessage(11, COLOR_LIGHTBLUE, szMessage);
	UsedContract[userID] = 0;
	PlayerHit[playerid] = -1;
	return 1;
}

CMD:mojekontrakty(playerid, params[]) {
	new szMessage[180];
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_RED, "Nie jeste zalogowany!");
	if(PlayerInfo[playerid][pMember] != 11 && PlayerInfo[playerid][pLeader] != 11) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste Hitmanem!");
	if(PlayerHit[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Nu ai un contract.");
	format(szMessage, sizeof(szMessage), "Masz umowe na %s (%d) na kwote $%s.", GetName(PlayerHit[playerid]), PlayerHit[playerid], FormatNumber(HeadValue[PlayerHit[playerid]]));
	SendClientMessage(playerid, COLOR_SERVER, szMessage);
	return 1;
}

CMD:donate(playerid, params[])
{
    new string[1024];
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Musisz sie najpierw zalogowac.");
	if(PlayerTime7[playerid] != 0) {
	    format(string, sizeof(string), "Wciaz mozesz uzyc tego polecenia przez %d minut (%d sekund).", PlayerTime7[playerid]/60, PlayerTime7[playerid]);
	    SCM(playerid, COLOR_GOLD, string);
	    return 1;
	}
	
    if(IsPlayerConnected(playerid))
    {
		format(string, 1024, "{FFFFFF}Czy na pewno chcesz przekazac darowizne?\n{FF2929}Wprowadzenie nieprawidlowego kodu / pinów jest usankcjonowane!{FFFFFF}\n\
		Informatii:\n\t- Tot ce trebuie sa faci dla a dona, este sa apesi pe butonul 'Da' dupa care sa introduci un cod/pin\npaysafe sau cod reincarcabil \
		 dupa care sa astepti o perioada de timp pana un administrator va verifica comanda.\n\t- Ai la dispozitie comanda /mydonations unde poti vedea toate donatiile \
		 si chiar si starea donatiei.");
		ShowPlayerDialog(playerid, DIALOG_DONATE, DIALOG_STYLE_MSGBOX, "Dotacja:", string, "Tak", "Nie");
	}
	return 1;
}


CMD:startradar(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pMember] != 1) return SCM(playerid,COLOR_GREY, "Nie jeste czlonkiem policji.");
		if(OnDuty[playerid] != 1) return SendClientMessage(playerid,COLOR_GREY, "nie jeste na s³u¿bie.");
		new tmpcar = GetPlayerVehicleID(playerid);
		new ccar = IsPlayerInAnyVehicle(playerid);
		if(ccar && ServerVehicles[tmpcar][vFaction] == PlayerInfo[playerid][pMember])
		{
			if(Radaron[playerid] == 1) return SCM(playerid,COLOR_GREY, "Masz juz radar aktywny.");
			new viteza,string[128];
			if(sscanf(params, "d",viteza)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/startradar <Speed Limit>");
			if(viteza > 200 || viteza < 40) return SCM(playerid,COLOR_GREY, "Nieprawidlowa predkosc (200-40).");
			Radaron[playerid] = 1;
			Radarlimit[playerid] = viteza;
			TogglePlayerControllable(playerid, 0);
			format(string,sizeof(string),"{FFFF00}Aktywowales radar, Max predkosc: %d KM/H.",viteza);
			SCM(playerid,COLOR_WHITE,string);
			return 1;
		}
		else return SCM(playerid,COLOR_GREY, "Nie jeste w samochodzie frakcji.");
	}
	return 1;
}
CMD:stopradar(playerid, params[])
{
	if(IsPlayerConnected(playerid))
    {
		if(!IsACop(playerid)) return SCM(playerid,COLOR_GREY, "Nu Jestes czescia frakcji policji.");
		if(Radaron[playerid] == 0) return SCM(playerid,COLOR_GREY, "Nie masz aktywnego radaru.");
		Radaron[playerid] = 0;
		Radarlimit[playerid] = 0;
		SCM(playerid,COLOR_WHITE,"{FFFF00}Zatrzymales radar. ");
		TogglePlayerControllable(playerid, 1);
		return 1;
    }
    return 1;
}

CMD:buydildo(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,10,-104.0826,-21.9337,1000.7188)) return SCM(playerid,COLOR_GREY, "Nie jeste w miejscu, w którym mozesz dostac wibrator.");
    new x_nr[20];
    if(sscanf(params, "s[20]",x_nr))
    {
  	    SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/buydildo <name>");
		SendClientMessage(playerid, COLOR_GREY, "Double-endedDildo($15), Dildo($10), Vibrator($20), SilverVibrator($25).");
		return 1;
	}
    if(strcmp(x_nr,"double-endeddildo",true) == 0)
 	{
 	    GivePlayerWeaponEx(playerid, 10, 1);
 	    GivePlayerCash(playerid, -15);
 	    curatj[playerid] = 1;
 	    SCM(playerid,COLOR_WHITE,"Kupiles Double-ended Dildo.");
		BizzInfo[7][bBalance] += 15;
		new sendername[25],string[184];
		GetPlayerName(playerid,sendername,sizeof(sendername));
	    format(string, sizeof(string), "UPDATE users SET Money='%d' WHERE name='%s'", GetPlayerCash(playerid), sendername);
	    mysql_query(SQL,string);
		format(string,sizeof(string),"UPDATE `bizz` SET `Till`='%d',`Products`='%d' WHERE `ID`='7'",BizzInfo[7][bBalance],BizzInfo[7][bProducts]);
		mysql_query(SQL,string);
 	    return 1;
 	}
 	if(strcmp(x_nr,"dildo",true) == 0)
 	{
 	    GivePlayerWeaponEx(playerid, 11, 1);
 	    GivePlayerCash(playerid, -10);
 	    SCM(playerid,COLOR_WHITE,"Kupiles Dildo.");
 	    curatj[playerid] = 1;
		BizzInfo[7][bBalance] += 10;
		new sendername[25],string[184];
		GetPlayerName(playerid,sendername,sizeof(sendername));
        format(string, sizeof(string), "UPDATE users SET Money='%d' WHERE name='%s'", GetPlayerCash(playerid), sendername);
        mysql_query(SQL,string);
		format(string,sizeof(string),"UPDATE `bizz` SET `Till`='%d',`Products`='%d' WHERE `ID`='7'",BizzInfo[7][bBalance],BizzInfo[7][bProducts]);
		mysql_query(SQL,string);
 	    return 1;
 	}
 	if(strcmp(x_nr,"vibrator",true) == 0)
 	{
 	    GivePlayerWeaponEx(playerid, 12, 1);
 	    GivePlayerCash(playerid, -20);
 	    curatj[playerid] = 1;
 	    SCM(playerid,COLOR_WHITE,"Kupiles Vibrator.");
		BizzInfo[7][bBalance] += 20;
		new sendername[25],string[184];
		GetPlayerName(playerid,sendername,sizeof(sendername));
        format(string, sizeof(string), "UPDATE users SET Money='%d' WHERE name='%s'", GetPlayerCash(playerid), sendername);
        mysql_query(SQL,string);
		format(string,sizeof(string),"UPDATE `bizz` SET `Till`='%d',`Products`='%d' WHERE `ID`='7'",BizzInfo[7][bBalance],BizzInfo[7][bProducts]);
		mysql_query(SQL,string);
 	    return 1;
 	}
 	if(strcmp(x_nr,"silvervibrator",true) == 0)
 	{
 	    GivePlayerWeaponEx(playerid, 13, 1);
 	    GivePlayerCash(playerid, -25);
 	    curatj[playerid] = 1;
 	    SCM(playerid,COLOR_WHITE,"Kupiles Silver Vibrator.");
		BizzInfo[7][bBalance] += 25;
		new sendername[25],string[184];
		GetPlayerName(playerid,sendername,sizeof(sendername));
        format(string, sizeof(string), "UPDATE users SET Money='%d' WHERE name='%s'", GetPlayerCash(playerid), sendername);
        mysql_query(SQL,string);
		format(string,sizeof(string),"UPDATE `bizz` SET `Till`='%d',`Products`='%d' WHERE `ID`='7'",BizzInfo[7][bBalance],BizzInfo[7][bProducts]);
		mysql_query(SQL,string);
 	    return 1;
 	}
	return 1;
}
CMD:music(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,5.0,475.6506,-15.0195,1003.6953)) return SCM(playerid,COLOR_GREY, "Nie jeste w miejscu, w którym mozesz puscic muzyke.");
	//if(PlayerInfo[playerid][pPremiumAccount] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz konta premium.");
	new link[100],string[124],sendername[25];
	if(sscanf(params, "s[100]",link)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/music <Link>");
	strmid(alhamusic, link, 0, strlen(link), 255);
	GetPlayerName(playerid,sendername,sizeof(sendername));
    foreach(Player, i)
    {
		if(InBussines[i] == 3)
		{
			PlayAudioStreamForPlayer(i, link);
			format(string,sizeof(string),"* %s puscil muzyke w klubie.",sendername);
			SCM(i,COLOR_WHITE,string);
		}
	}
	return 1;
}
CMD:serverpass(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		new pass[64],string[128];
		if(sscanf(params, "s[64]", pass)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/serverpass <Password>");
		{
			format(string,sizeof(string),"password %s",pass);
			SendRconCommand(string);
			format(string,sizeof(string), "{FFFF00}Zmieniles haslo na: %s.",pass);
			SendClientMessage(playerid,COLOR_WHITE,string);
		}
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}
CMD:servername(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		new name[64],string[128];
		if(sscanf(params, "s[64]", name)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/servername <name>");
		{
			format(string,sizeof(string),"hostname %s",name);
			SendRconCommand(string);
			format(string,sizeof(string), "{FFFF00}Zmieniles hostname na: %s.",name);
			SendClientMessage(playerid,COLOR_WHITE,string);
		}
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}
CMD:speedlimit(playerid, params[])
{
	new string[128], speed;
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(IsABike(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_WHITE,"Nie mozesz uzyc tego polecenia na rowerze.");
		if(IsAPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_WHITE,"Polecenie nie moze byc uzywane w samolocie.");
		if(sscanf(params, "i", speed)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/speedlimit <speed>");
		{
			if(speed == 0)
			{
				Speedlimit[playerid] = 0;
				format(string, sizeof(string), "{c4faf6}* Masz ograniczenie predkosci dezaktywowane.", speed);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			if(!(speed>160 || speed < 90))
			{
				Speedlimit[playerid] = speed-25;
				format(string, sizeof(string), "{c4faf6}* Ograniczenie predkosci jest teraz %d KM/H.", speed);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Predkosc musi wynosic od 160 do 90 km / h.");
		}
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Nie prowadzisz pojazdu.");
	return 1;
}
CMD:togiplog(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	if(togip[playerid] == 0)
	{
	    togip[playerid] = 1;
	    SCM(playerid,COLOR_WHITE,"Aktywuj IP log.");
	    return 1;
	}
	else if(togip[playerid] == 1)
	{
	    togip[playerid] = 0;
	    SCM(playerid,COLOR_WHITE,"Dezaktywacja IP log.");
	    return 1;
	}
	return 1;
}
CMD:mp3(playerid, params[])
{
    if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Musisz sie najpierw zalogowac.");
	if(HavingItem(108, playerid) == 0) return SCM(playerid, COLOR_GREY, "Nie posiadasz MP3");
	ShowPlayerDialog(playerid, DIALOG_SONGMP3, DIALOG_STYLE_INPUT, "Twoje MP3", "Wpisz link z YOUTUBE - pe³ny link np. https://www.youtube.com/watch?v=LwZ3CijMsNY", "Ok", "Zatrzymaj");
    return 1;
}

CMD:carradio(playerid, params[])
{
        if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "Nie jeste w pojedzie!");
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY, "Tylko kierowca moze zmienic stacje radiowe!");
        new radiostr[1024];
        format(radiostr, sizeof(radiostr), "{E82727}Wylacz radio\n ESKA WAWA\nEska ROCK\nRadio Zet\nRMF FM\nRMF MAXX\nRMF Classic\nRadio PLUS\nRadio PARTY\nRADIO Z£OTE PRZEBOJE\nPLANETA FM\nAntyradio\nMTV\nVIVA");
        ShowPlayerDialog(playerid,170,DIALOG_STYLE_LIST,"{ff5733}Fox-RP{ffffff} Radio samochodowe",radiostr,"Ok", "Wyjdz");
    return 1;
}

CMD:carmusic(playerid, params[])
{
	return cmd_carradio(playerid, params);
}


CMD:ubarierka(playerid, params[])
{
	new x_nr[256];
	if(PlayerInfo[playerid][pMember] != 1 || PlayerInfo[playerid][pAdmin] < 1) return 1;
	if(sscanf(params, "s[160]", x_nr)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/ubarierka <1-20>");
	if(strcmp(x_nr,"1",true) == 0)
	{
		if(RoadBlock1[playerid]) {
			DestroyDynamicObject(RB1[playerid]);
			DestroyDynamic3DTextLabel(TLRB1[playerid]);
			RoadBlock1[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"2",true) == 0)
	{
		if(RoadBlock2[playerid]) {
			DestroyDynamicObject(RB2[playerid]);
			DestroyDynamic3DTextLabel(TLRB2[playerid]);
			RoadBlock2[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"3",true) == 0)
	{
		if(RoadBlock3[playerid]) {
			DestroyDynamicObject(RB3[playerid]);
			DestroyDynamic3DTextLabel(TLRB3[playerid]);
			RoadBlock3[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"4",true) == 0)
	{
		if(RoadBlock4[playerid]) {
			DestroyDynamicObject(RB4[playerid]);
			DestroyDynamic3DTextLabel(TLRB4[playerid]);
			RoadBlock4[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"5",true) == 0)
	{
		if(RoadBlock5[playerid]) {
			DestroyDynamicObject(RB5[playerid]);
			DestroyDynamic3DTextLabel(TLRB5[playerid]);
			RoadBlock5[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"6",true) == 0)
	{
		if(RoadBlock6[playerid]) {
			DestroyDynamicObject(RB6[playerid]);
			DestroyDynamic3DTextLabel(TLRB6[playerid]);
			RoadBlock6[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"7",true) == 0)
	{
		if(RoadBlock7[playerid]) {
			DestroyDynamicObject(RB7[playerid]);
			RoadBlock7[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"8",true) == 0)
	{
		if(RoadBlock8[playerid]) {
			DestroyDynamicObject(RB8[playerid]);
			RoadBlock8[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"9",true) == 0)
	{
		if(RoadBlock9[playerid]) {
			DestroyDynamicObject(RB9[playerid]);
			RoadBlock9[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"10",true) == 0)
	{
		if(RoadBlock10[playerid]) {
			DestroyDynamicObject(RB10[playerid]);
			RoadBlock10[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"11",true) == 0)
	{
		if(RoadBlock11[playerid]) {
			DestroyDynamicObject(RB11[playerid]);
			RoadBlock11[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"12",true) == 0)
	{
		if(RoadBlock12[playerid]) {
			DestroyDynamicObject(RB12[playerid]);
			RoadBlock12[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"13",true) == 0)
	{
		if(RoadBlock13[playerid]) {
			DestroyDynamicObject(RB13[playerid]);
			RoadBlock13[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"14",true) == 0)
	{
		if(RoadBlock14[playerid]) {
			DestroyDynamicObject(RB14[playerid]);
			RoadBlock14[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"15",true) == 0)
	{
		if(RoadBlock15[playerid]) {
			DestroyDynamicObject(RB15[playerid]);
			RoadBlock15[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"16",true) == 0)
	{
		if(RoadBlock16[playerid]) {
			DestroyDynamicObject(RB16[playerid]);
			RoadBlock16[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"17",true) == 0)
	{
		if(RoadBlock17[playerid]) {
			DestroyDynamicObject(RB17[playerid]);
			RoadBlock17[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"18",true) == 0)
	{
		if(RoadBlock18[playerid]) {
			DestroyDynamicObject(RB18[playerid]);
			RoadBlock18[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"19",true) == 0)
	{
		if(RoadBlock19[playerid]) {
			DestroyDynamicObject(RB19[playerid]);
			RoadBlock19[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else if(strcmp(x_nr,"20",true) == 0)
	{
		if(RoadBlock20[playerid]) {
			DestroyDynamicObject(RB20[playerid]);
			RoadBlock20[playerid]=false;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz zniszczona!");
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "{FF9494}*{FFFFFF} Numer bariery jest nieprawidlowy! ");
		return 1;
	}
	GameTextForPlayer(playerid, "~y~Barierka ~r~zniszczona", 5000, 5);
	return 1;
}

CMD:dbarierka(playerid, params[])
{
	new x_nr, text[100];
	if(PlayerInfo[playerid][pMember] != 1 || PlayerInfo[playerid][pAdmin] < 1) return 1;
	if(sscanf(params, "d", x_nr)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/dbarierka <1-20>");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9494}*{FFFFFF} Nie mozesz umiescic barierki, gdy jeste w pojezdzie!");
	new Float:X, Float:Y, Float:Z, Float:A;
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);
	format(text, sizeof(text), "{6699ff} Barierka %d\n{666699} %s - %s", x_nr, GetNameEx(playerid), GetFactionName(PlayerInfo[playerid][pMember]));
	if(x_nr == 1) {
		if(!RoadBlock1[playerid]) {
			RoadBlock1[playerid]=true;
			RB1[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB1[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 2) {
		if(!RoadBlock2[playerid]) {
			RoadBlock2[playerid]=true;
			RB2[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB2[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 3) {
		if(!RoadBlock3[playerid]) {
			RoadBlock3[playerid]=true;
			RB3[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB3[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 4) {
		if(!RoadBlock4[playerid]) {
			RoadBlock4[playerid]=true;
			RB4[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB4[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 5) {
		if(!RoadBlock5[playerid]) {
			RoadBlock5[playerid]=true;
			RB5[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB5[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 6) {
		if(!RoadBlock6[playerid]) {
			RoadBlock6[playerid]=true;
			RB6[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB6[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 7) {
		if(!RoadBlock7[playerid]) {
			RoadBlock7[playerid]=true;
			RB7[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB7[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 8) {
		if(!RoadBlock8[playerid]) {
			RoadBlock8[playerid]=true;
			RB8[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB8[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 9) {
		if(!RoadBlock9[playerid]) {
			RoadBlock9[playerid]=true;
			RB9[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB9[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 10) {
		if(!RoadBlock10[playerid]) {
			RoadBlock10[playerid]=true;
			RB10[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB10[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 11) {
		if(!RoadBlock11[playerid]) {
			RoadBlock11[playerid]=true;
			RB11[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB11[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 12) {
		if(!RoadBlock12[playerid]) {
			RoadBlock12[playerid]=true;
			RB12[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB12[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 13) {
		if(!RoadBlock13[playerid]) {
			RoadBlock13[playerid]=true;
			RB13[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB13[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 14) {
		if(!RoadBlock14[playerid]) {
			RoadBlock14[playerid]=true;
			RB14[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB14[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 15) {
		if(!RoadBlock15[playerid]) {
			RoadBlock15[playerid]=true;
			RB15[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB15[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 16) {
		if(!RoadBlock16[playerid]) {
			RoadBlock16[playerid]=true;
			RB16[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB16[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 17) {
		if(!RoadBlock17[playerid]) {
			RoadBlock17[playerid]=true;
			RB17[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB17[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 18) {
		if(!RoadBlock18[playerid]) {
			RoadBlock18[playerid]=true;
			RB18[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB18[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 19) {
		if(!RoadBlock19[playerid]) {
			RoadBlock19[playerid]=true;
			RB19[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB19[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else if(x_nr == 20) {
		if(!RoadBlock20[playerid]) {
			RoadBlock20[playerid]=true;
			RB20[playerid] = CreateDynamicObject(979, X, Y, Z, 0.0, 0.0, A);
			TLRB20[playerid] = CreateDynamic3DTextLabel(text, COLOR_GREY, X, Y, Z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Bariera na tym slocie jest juz utworzona!");
	}
	else {
		SendClientMessage(playerid, COLOR_GREY, "{FF9494}*{FFFFFF} Niepoprawny numer (1-20)!");
		return 1;
	}
	SetPlayerPosEx(playerid, X, Y, Z+2);
	GameTextForPlayer(playerid, "~y~Barierka ~g~stworzona", 5000, 5);
	return 1;
}


stock GetFactionMembersOn2(fid) {
	new x;
	foreach(Player, i) {
	    if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {
	        if(PlayerInfo[i][pMember] == fid) { x++; }
	    }
	}
	return x;
}

stock GetFactionMembersOn(playerid) {
	new x;
	foreach(Player, i) {
	    if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {
	        if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember]) { x++; }
	    }
	}
	return x;
}

GetWeekDay(day=0, month=0, year=0) {
	if(!day) getdate(year, month, day);
	new weekday_str[13], j, e;
	if(month <= 2) {
		month += 12;
		--year;
	}

	j = year % 100;
	e = year / 100;

	switch ((day + (month+1)*26/10 + j + j/4 + e/4 - 2*e) % 7) {
		case 0: weekday_str = "Sobota";
		case 1: weekday_str = "Niedziela";
		case 2: weekday_str = "Poniedzialek";
		case 3: weekday_str = "Wtorek";
		case 4: weekday_str = "sroda";
		case 5: weekday_str = "Czwartek";
		case 6: weekday_str = "Piatek";
	}
	return weekday_str;
}

function RespawnVehicle(fid) {
	for(new i; i < MAX_SVEHICLES; i++) {
		if(ServerVehicles[i][vFaction] == fid) {
			SetVehicleVirtualWorld(i, 0);
			SetVehicleToRespawn(i);
		}	
	}					
	return 1;
}

CMD:fdeposit(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
	    if(DepositMoney(playerid))
	    {
			new x = PlayerInfo[playerid][pMember],string[100],cashdeposit;
			if(sscanf(params, "d", cashdeposit)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/fdeposit <Pieniadze>");
			if(cashdeposit < 1 || cashdeposit > 10000000) return SendClientMessage(playerid,-1, "Limit jest $1 - $10,000,000.");
			if(IsPlayerInRangeOfPoint(playerid,50.0,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]))
			{
				if(GetPlayerCash(playerid) >= cashdeposit)
				{
					DynamicFactions[x][fBank] += cashdeposit;
					GivePlayerCash(playerid, -cashdeposit);
					Update(playerid,pCashx);
					new str[184];
					format(str,sizeof(str),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],x);
					mysql_query(SQL,str);
					format(string, 256, "Wplaciles $%s. Saldo: $%s", FormatNumber(cashdeposit), FormatNumber(DynamicFactions[x][fBank]));
					SendClientMessage(playerid, 0xFAAC25FF, string);
				 	return 1;
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Nie masz tej kwoty pieniedzy.");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nie ma cie w HQ.");
		}
	}
	return 1;
}

CMD:fwithdraw(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
  		if(PlayerInfo[playerid][pLeader] !=0)
    	{
			if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 10 || PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pLeader] == 11 || PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pLeader] == 14)
			{
				new cashdwithdraw,x = PlayerInfo[playerid][pLeader],string[100];
				if(sscanf(params, "d", cashdwithdraw)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/fwithdraw <Pieniadze>");
				if(GetPlayerInterior(playerid) == 0) return SendClientMessage(playerid,COLOR_GREY, "Nie ma cie w HQ.");             
				if(IsPlayerInRangeOfPoint(playerid,50.0,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ])) {
					if(DynamicFactions[x][fBank] < cashdwithdraw || cashdwithdraw < 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz tej kwoty pieniedzy w skarbcu."); 
					GivePlayerCash(playerid,cashdwithdraw);
					Update(playerid,pCashx);
					DynamicFactions[x][fBank] -= cashdwithdraw;
					new str[184];
					format(str,sizeof(str),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],x);
					mysql_query(SQL,str);
					format(string, 256, "Usunales $%s z sejfu. Waga: $%s ", FormatNumber(cashdwithdraw), FormatNumber(DynamicFactions[x][fBank]));
					SendClientMessage(playerid, 0xFAAC25FF, string);
	            }
	        }
	    }
    	else return SendClientMessage(playerid,COLOR_WHITE, "Ta komenda jest tylko dla liderów.");
	}
	return 1;
}
CMD:fdrugs(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
  		if(IsAMember(playerid))
   		{
			new x,x_nr[70],drugsam,string[100],sendername[30];
			x = PlayerInfo[playerid][pMember];
  			if(sscanf(params, "s[70]d",x_nr,drugsam))
			{
				if(PlayerToPoint(100.0,playerid,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]))
				{
					format(string, sizeof(string), "Narkotyki frakcyjne: %d", DynamicFactions[x][fDrugs]);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
				SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/fdrugs <nazwa> <ilosc>");
			  	SendClientMessage(playerid, COLOR_WHITE, "Parametry: wez, wloz.");
				return 1;
			}
			if(drugsam < 1 || drugsam > 100) return SendClientMessage(playerid,-1, "Zle narkotyki.");
			if(GetPlayerInterior(playerid) == 0) return SendClientMessage(playerid,COLOR_GREY, "Nie ma cie w HQ.");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(strcmp(x_nr,"wez",true) == 0)
			{
				if(PlayerToPoint(100.0,playerid,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]))
				{
					if(drugsam <=DynamicFactions[x][fDrugs])
					{
						if(PlayerInfo[playerid][pLeader] == 0) return SendClientMessage(playerid,COLOR_GREY, "Nie jeste liderem.");
						PlayerInfo[playerid][pDrugs] += drugsam;
						DynamicFactions[x][fDrugs]=DynamicFactions[x][fDrugs]-drugsam;
						format(string, 256, "Wziales %d gramów narkotyki z magazynu. zostalo: %d", drugsam, DynamicFactions[x][fDrugs]);
						SendClientMessage(playerid, 0xFAAC25FF, string);
						new str[256];
						format(str,sizeof(str),"UPDATE `factions` SET `Drugs`='%d' WHERE `ID`='%d'",DynamicFactions[x][fDrugs],x);
						mysql_query(SQL,str);
						format(str,sizeof(str),"UPDATE users SET `Drugs`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pDrugs],PlayerInfo[playerid][pSQLID]);
						mysql_query(SQL,str);
						return 1;
					}
			 		else
					{
						SendClientMessage(playerid, COLOR_GREY, "Jest tak duzo narkotyki.");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Nie ma cie w HQ.");
					return 1;
				}
			}
    		else if(strcmp(x_nr,"wloz",true) == 0)
			{
				if(PlayerToPoint(100.0,playerid,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]))
				{
					if(drugsam <= PlayerInfo[playerid][pDrugs])
					{
						PlayerInfo[playerid][pDrugs] =PlayerInfo[playerid][pDrugs]-drugsam;
						DynamicFactions[x][fDrugs] +=drugsam;
						format(string, 256, "Wlozyles %d gramów narkotyków do magazynu. Razem: %d", drugsam, DynamicFactions[x][fDrugs]);
						SendClientMessage(playerid, 0xFAAC25FF, string);
						new str[184];
						format(str,sizeof(str),"UPDATE `factions` SET `Drugs`='%d' WHERE `ID`='%d'",DynamicFactions[x][fDrugs],x);
						mysql_query(SQL,str);
						format(str,sizeof(str),"UPDATE users SET `Drugs`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pDrugs],PlayerInfo[playerid][pSQLID]);
						mysql_query(SQL,str);
						return 1;
					}
			 		else
					{
						SendClientMessage(playerid, COLOR_GREY, "Nie masz na sobie tyle narkotyków.");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Nie ma cie w HQ.");
					return 1;
				}
			}
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_GREY, "Nie nalezysz do organizacji przestepczej.");
	        return 1;
	    }
	}
	return 1;
}
CMD:fmats(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
  		if(IsAMember(playerid) || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
    	{
	        new x,x_nr[70],matsam,string[100],sendername[30];
			x = PlayerInfo[playerid][pMember];
  			if(sscanf(params, "s[70]d",x_nr,matsam))
			{
				if(PlayerToPoint(100.0,playerid,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]))
				{
						format(string, sizeof(string), "Materialy: %d.", DynamicFactions[x][fMats]);
						SendClientMessage(playerid, COLOR_WHITE, string);
				}
				SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/fmats <nazwa> <ilosc>");
			  	SendClientMessage(playerid, COLOR_WHITE, "Parametry: wez, wlóz.");
				return 1;
			}
			if(matsam < 1 || matsam > 1000000) return SendClientMessage(playerid,-1, "Zle ilosc materialy.");
			if(GetPlayerInterior(playerid) == 0) return SendClientMessage(playerid,COLOR_GREY, "Nie ma cie w HQ.");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(strcmp(x_nr,"wez",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 5) return SendClientMessage(playerid, -1, "Musisz miec 5 range");
				if(PlayerToPoint(100.0,playerid,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]))
				{
					if(matsam <=DynamicFactions[x][fMats])
					{
						PlayerInfo[playerid][pMats] += matsam;
						DynamicFactions[x][fMats]=DynamicFactions[x][fMats]-matsam;
						format(string, 256, "Bierzesz z sejfu %d materialów. zostalo: %d", matsam, DynamicFactions[x][fMats]);
						SendClientMessage(playerid, 0xFAAC25FF, string);
						new str[256];
						format(str,sizeof(str),"UPDATE `factions` SET `Mats`='%d' WHERE `ID`='%d'",DynamicFactions[x][fMats],x);
						mysql_query(SQL,str);
						format(str,sizeof(str),"UPDATE users SET `Materials`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pMats],PlayerInfo[playerid][pSQLID]);
						mysql_query(SQL,str);
						return 1;
					}
	 				else
					{
						SendClientMessage(playerid, -1, "Nie ma tyle materialów w sejfie");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Nie ma cie w HQ.");
					return 1;
				}
			}
			else if(strcmp(x_nr,"wloz",true) == 0)
			{
				if(PlayerToPoint(100.0,playerid,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]))
				{
					if(matsam <= PlayerInfo[playerid][pMats])
					{
						PlayerInfo[playerid][pMats] =PlayerInfo[playerid][pMats]-matsam;
						DynamicFactions[x][fMats] +=matsam;
						format(string, 256, "Wkladasz %d materialów do sejfu. Razem: %d", matsam, DynamicFactions[x][fMats]);
						SendClientMessage(playerid, 0xFAAC25FF, string);
						new str[256];
						format(str,sizeof(str),"UPDATE `factions` SET `Mats`='%d' WHERE `ID`='%d'",DynamicFactions[x][fMats],x);
						mysql_query(SQL,str);
						format(str,sizeof(str),"UPDATE users SET `Materials`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pMats],PlayerInfo[playerid][pSQLID]);
						mysql_query(SQL,str);
						return 1;
					}
			 		else
					{
						SendClientMessage(playerid, COLOR_GREY, "Nie masz tyle materialów!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Nie ma cie w HQ.");
					return 1;
				}
			}
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_GREY, "Nie nalezysz do organizacji przestepczej.");
	        return 1;
	    }
	}
	return 1;
}

CMD:fog(playerid, params[])
{
	new result[256], szMessage[256];
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_RED, "Nie jeste zalogowany!");
	if(sscanf(params, "s[160]", result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/fog <wiadomosc>");
	if(IsAMember(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mo¿esz tego u¿yæ!");
	if(PlayerInfo[playerid][pRank] < 5) return SendClientMessage(playerid, COLOR_GREY, "Musisz miec przynajmniej 5 range aby tego uzyc");
		format(szMessage, sizeof(szMessage), "--------------------- %s ---------------------", DynamicFactions[PlayerInfo[playerid][pMember]][fName]);
		SendClientMessageToAll(0x6893A8FF, szMessage);
		format(szMessage, sizeof(szMessage), "%s %s: %s", GetRankName(playerid), Nick(playerid), result);
		SendClientMessageToAll(COLOR_DBLUE, szMessage);
	return 1;
}


CMD:order(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
        if(IsAMember(playerid))
        {
			if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz licencji na bron.");
			if(GetPlayerInterior(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY,"Nie ma cie w miejscu, gdzie mozesz zdobyc bron.");
		    if(IsAtOrderPlace(playerid))
            {
	    	    new x_nr[50];
		        if(sscanf(params, "s[50]",x_nr))
		        {
	    	  	    SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/order <pakiet>");
		        	if(PlayerInfo[playerid][pRank] >= 1)
    		    	{
   	    			 	SendClientMessage(playerid, COLOR_GREY, "(1) ($20) Rank 1+: Desert Eagle");
	       		   		if(PlayerInfo[playerid][pRank] >= 2)
		    			{
    				    	SendClientMessage(playerid, COLOR_GREY, "(2) ($50) Rank 2+: Desert Eagle, AK-47");
        		 			if(PlayerInfo[playerid][pRank] >= 3)
        					{
        						SendClientMessage(playerid, COLOR_GREY, "(3) ($60) Rank 3+: Desert Eagle, M4");
	        					if(PlayerInfo[playerid][pRank] >= 4)
	         					{
	          						SendClientMessage(playerid, COLOR_GREY, "(4) ($70) Rank 4+: Desert Eagle, M4, Tec-9, Combat Shotgun");
	        						if(PlayerInfo[playerid][pRank] >= 5)
	        						{
	        							SendClientMessage(playerid, COLOR_GREY, "(5) ($80) Rank 5+: Desert Eagle, M4, Tec-9, Combat Shotgun, Rifle");
									}
							  	}
						 	}
						}
					}
					return 1;
	        	}
                if(strcmp(x_nr,"1",true) == 0)
             	{
                    if(PlayerInfo[playerid][pRank] >= 1)
                    {
                        if(GetPlayerCash(playerid) >= 1000)
                        {
		         	        GivePlayerWeaponEx(playerid, 24, 500);
			                GivePlayerCash(playerid, - 1000);
							Update(playerid, pCashx);
							new x = PlayerInfo[playerid][pMember];
							DynamicFactions[x][fBank] = DynamicFactions[x][fBank]+1000;
							new str2[184];
							format(str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],x);
							mysql_query(SQL,str2);
		            	}
	        	    	else
	        		    {
			      	        SCM(playerid, COLOR_GREY, "Nie masz wystarczajaco duzo pieniedzy.");
                        }
		        	}
	        		else
	        		{
		        		SCM(playerid, COLOR_GREY, "Nie masz wymaganej rangi.");
                    }
		           	return 1;
      	        }
                if(strcmp(x_nr,"2",true) == 0)
             	{
                    if(PlayerInfo[playerid][pRank] >= 2)
                    {
                        if(GetPlayerCash(playerid) >= 2000)
                        {
		          	        GivePlayerWeaponEx(playerid, 24, 500); GivePlayerWeaponEx(playerid, 30, 1000);
			                GivePlayerCash(playerid, - 2000);
							Update(playerid, pCashx);
							new x = PlayerInfo[playerid][pMember];
							DynamicFactions[x][fBank]= DynamicFactions[x][fBank]+2000;
							new str2[184];
							format(str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],x);
							mysql_query(SQL,str2);
			            }
		             	else
        			    {
	         			    SCM(playerid, COLOR_GREY, "Nie masz wystarczajaco duzo pieniedzy.");
                        }
	        		}
	         		else
	         		{
        				SCM(playerid, COLOR_GREY, "Nie masz wymaganej rangi.");
                    }
         			return 1;
        		}
        		if(strcmp(x_nr,"3",true) == 0)
              	{
                    if(PlayerInfo[playerid][pRank] >= 3)
                    {
                        if(GetPlayerCash(playerid) >= 3000)
                        {
			         		GivePlayerWeaponEx(playerid, 24, 500); GivePlayerWeaponEx(playerid, 31, 1000);
			                GivePlayerCash(playerid, - 3000);
							Update(playerid, pCashx);
							new x = PlayerInfo[playerid][pMember];
							DynamicFactions[x][fBank]= DynamicFactions[x][fBank]+3000;
							new str2[184];
							format(str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],x);
							mysql_query(SQL,str2);
			            }
		              	else
			            {
			         	    SCM(playerid, COLOR_GREY, "Nie masz wystarczajaco duzo pieniedzy.");
                        }
		          	}
			        else
		         	{
		            	SCM(playerid, COLOR_GREY, "Nie masz wymaganej rangi.");
                    }
			        return 1;
		        }
	        	if(strcmp(x_nr,"4",true) == 0)
             	{
                    if(PlayerInfo[playerid][pRank] >= 4)
                    {
                        if(GetPlayerCash(playerid) >= 4000)
                        {
			                GivePlayerWeaponEx(playerid, 24, 500); GivePlayerWeaponEx(playerid, 31, 1000); GivePlayerWeaponEx(playerid, 32, 2000); GivePlayerWeaponEx(playerid, 27, 1000);
			                GivePlayerCash(playerid, - 4000);
							Update(playerid, pCashx);
							new x = PlayerInfo[playerid][pMember];
							DynamicFactions[x][fBank]= DynamicFactions[x][fBank]+4000;
							new str2[184];
							format(str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],x);
							mysql_query(SQL,str2);
			            }
		    	        else
			            {
		        		    SCM(playerid, COLOR_GREY, "Nie masz wystarczajaco duzo pieniedzy.");
                        }
	         		}
		          	else
		         	{
		         		SCM(playerid, COLOR_GREY, "Nie masz wymaganej rangi.");
                    }
		         	return 1;
		        }
         		if(strcmp(x_nr,"5",true) == 0)
              	{
                    if(PlayerInfo[playerid][pRank] >= 5)
                    {
                        if(GetPlayerCash(playerid) >= 5000)
                        {
                            GivePlayerWeaponEx(playerid, 24, 500); GivePlayerWeaponEx(playerid, 31, 1000); GivePlayerWeaponEx(playerid, 32, 2000); GivePlayerWeaponEx(playerid, 27, 1000); GivePlayerWeaponEx(playerid, 33, 200);
			                GivePlayerCash(playerid, - 5000);
							Update(playerid, pCashx);
							new x = PlayerInfo[playerid][pMember];
							DynamicFactions[x][fBank]= DynamicFactions[x][fBank]+5000;
							new str2[184];
							format(str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],x);
							mysql_query(SQL,str2);
			            }
		            	else
			            {
		        		    SCM(playerid, COLOR_GREY, "Nie masz wystarczajaco duzo pieniedzy.");
                        }
			        }
			        else
		        	{
		        		SCM(playerid, COLOR_GREY, "Nie masz wymaganej rangi.");
                    }
		         	return 1;
		        }
            }
	        else
	        {
	        	SCM(playerid, COLOR_WHITE,"Nie ma cie w miejscu, gdzie mozesz zdobyc bron.");
	        	return 1;
            }
        }
	    else if(PlayerInfo[playerid][pMember] == 11) {
			new result[32];
			new x = PlayerInfo[playerid][pMember];
			if(!PlayerToPoint(100.0,playerid,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ])) return 1;
			if(sscanf(params, "s[30]", result)) {
				SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/order <id>");
				SendClientMessage(playerid, COLOR_WHITE, "1. Nóz (10 $) | 2. SD-Pistol (100 $) | 3. Sniper (200 $)");
				return 1;
			}
			if(PlayerInfo[playerid][pGunLic] == 0) return SCM(playerid,-1,"Nie masz licencji na bron!");
			if(strcmp(result,"1",true) == 0) {
				if(GetPlayerCash(playerid) < 10) return 1;
				GivePlayerWeapon(playerid, 4, 200);
				SendClientMessage(playerid, COLOR_MONEY, "Kupiles nóz za cene 10$.");
				GivePlayerCash(playerid, -10);
				return 1;
			}
			else if(strcmp(result,"2",true) == 0) {
				if(GetPlayerCash(playerid) < 100) return 1;
				GivePlayerWeapon(playerid, 23, 200);
				SendClientMessage(playerid, COLOR_MONEY, "Kupiles SD-Pistol za cene 100$.");
				GivePlayerCash(playerid, -100);
				return 1;
			}
			else if(strcmp(result,"3",true) == 0) {
				if(GetPlayerCash(playerid) < 200) return 1;
				GivePlayerWeapon(playerid, 34, 200);
				SendClientMessage(playerid, COLOR_MONEY, "Kupiles Sniper za cene 200$.");
				GivePlayerCash(playerid, -200);
				return 1;
			}			
		}
	}
    return 1;
}
CMD:m(playerid, params[])
{
	return cmd_megafon(playerid, params);
}
CMD:megafon(playerid, params[])
{
	new textmeg[250],sendername[MAX_PLAYER_NAME],string[200];
		new itemid;
		itemid = 0;
		for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
		{
			if(Thing[i][t_owner] == PlayerInfo[playerid][pSQLID])
			{
				if(Thing[i][t_type] == 193)
				{
				itemid = i;
					}
				  }
			}
	if(IsPlayerConnected(playerid))
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		
		if(PlayerInfo[playerid][pMuted] == 1)
	    {
			format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		if(sscanf(params, "s[250]", textmeg)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/m <wiadomosc>");
		if(itemid == 0) return SendClientMessage(playerid, COLOR_GREY, "   Nie posiadasz megafonu !");
		if(IsACop(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
			{
				format(string, sizeof(string), "[Policjant %s: %s]", sendername, textmeg);
				ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
			}
			else if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
			{
				format(string, sizeof(string), "[Agent rzadowy %s: %s]", sendername, textmeg);
				ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
			}
			else if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
			{
				format(string, sizeof(string), "[¯olnierz %s: %s]", sendername, textmeg);
				ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
			}
			//printf("%s", string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Nie mozesz tego uzyc!");
			return 1;
		}
	}
	return 1;
}
CMD:r(playerid, params[]) return cmd_radio(playerid, params);
CMD:radio(playerid, params[]) {
	new radiomsj[120],sendername[MAX_PLAYER_NAME],string[200];
	if(PlayerInfo[playerid][pMuted] == 1) {
		format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		return 1;
	}
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "s[120]", radiomsj)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/r <wiadomosc>");
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) format(string, sizeof(string), "* %s %s: %s, over.", GetRankName(playerid), sendername, radiomsj);
	else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) format(string, sizeof(string), "* %s %s: %s, over.", GetRankName(playerid), sendername, radiomsj);
	else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) format(string, sizeof(string), "* %s %s: %s, over.", GetRankName(playerid), sendername, radiomsj);
	else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) format(string, sizeof(string), "* %s %s: %s, over.", GetRankName(playerid), sendername, radiomsj);
	else return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz tego uzyc");
	SendRadioMessage(PlayerInfo[playerid][pMember], 0x8D8DFFFF, string);
	return 1;
}

CMD:ro(playerid, params[]) return cmd_radioooc(playerid, params);
CMD:radioooc(playerid, params[]) {
	new radiomsj[120],sendername[MAX_PLAYER_NAME],string[200];
	if(PlayerInfo[playerid][pMuted] == 1) {
		format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		return 1;
	}
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "s[120]", radiomsj)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/ro <wiadomosc>");
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) format(string, sizeof(string), "** (( %s [%d] %s: %s )) **", GetRankName(playerid),PlayerInfo[playerid][pRank], sendername, radiomsj);
	else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) format(string, sizeof(string), "** (( %s [%d] %s: %s )) **", GetRankName(playerid),PlayerInfo[playerid][pRank], sendername, radiomsj);
	else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) format(string, sizeof(string), "** (( %s [%d] %s: %s )) **", GetRankName(playerid),PlayerInfo[playerid][pRank], sendername, radiomsj);
	else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) format(string, sizeof(string), "** (( %s [%d] %s: %s )) **", GetRankName(playerid),PlayerInfo[playerid][pRank], sendername, radiomsj);
	else return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz tego uzyc");
	SendRadioMessage(PlayerInfo[playerid][pMember], 0x8D8DFFFF, string);
	return 1;
}

CMD:duty(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
        if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz licencji na bron.");
		new string[200],sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsACop(playerid))
		{
		if(PlayerInfo[playerid][pfSkin] == 250 || PlayerInfo[playerid][pfSkin] == 0) return SCM(playerid, COLOR_ORANGE, "Przykro mi ale najpierw musisz udac sie do sklepu po swoj uniform (/fskin)");
	               		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		             	{
							if (PlayerToPoint(5, playerid, -1468.483520,2600.934814,15.951801)) //ARMORY W KOM zmianay
							{
							if(OnDuty[playerid]==0)
							{
				      		format(string, sizeof(string), "* Oficer %s wyjmuje z szafy odznake i mundur.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
       						SetPlayerHealthEx(playerid, 100);
							SetPlayerSkinEx(playerid, PlayerInfo[playerid][pfSkin]);
							OnDuty[playerid] = 1;
							}
							else if(OnDuty[playerid]==1)
							{
				      		format(string, sizeof(string), "* Oficer %s odklada odznake i mundur do swojej szafki.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
       						SetPlayerHealthEx(playerid, 100);
							OnDuty[playerid] = 0;
							if(PlayerInfo[playerid][pChar] > 0) {
							SetPlayerSkinEx(playerid, PlayerInfo[playerid][pChar]);
							} else {
							SetPlayerSkinEx(playerid, PlayerInfo[playerid][pModel]);
							}
								}
							}
							else
							{
								SCM(playerid,COLOR_GREEN, "Nie jeste w szatni !");
								return 1;
							}
				}	
	               		if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
		             	{
							if (PlayerToPoint(5, playerid, -1468.483520,2600.934814,15.951801)) //ARMORY W NG
							{
							if(OnDuty[playerid]==0)
							{
				      		format(string, sizeof(string), "* Wojskowy %s wyjmuje z szafy odznake i mundur.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
       						SetPlayerHealthEx(playerid, 100);
							SetPlayerSkinEx(playerid, PlayerInfo[playerid][pfSkin]);
							OnDuty[playerid] = 1;
							}
							else if(OnDuty[playerid]==1)
							{
				      		format(string, sizeof(string), "* Wojskowy %s odklada odznake i mundur do swojej szafki.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
       						SetPlayerHealthEx(playerid, 100);
							OnDuty[playerid] = 0;
							if(PlayerInfo[playerid][pChar] > 0) {
							SetPlayerSkinEx(playerid, PlayerInfo[playerid][pChar]);
							} else {
							SetPlayerSkinEx(playerid, PlayerInfo[playerid][pModel]);
							}
								}
							}
							else
							{
								SCM(playerid,COLOR_GREEN, "Nie jeste w szatni !");
								return 1;
							}
				}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Nie mozesz tego uzyc");
			return 1;
   		}
	}
	return 1;
}
CMD:d(playerid, params[]) return cmd_department(playerid, params);
CMD:department(playerid, params[]) {
	new text[250],sendername[MAX_PLAYER_NAME],string[200];
	if(PlayerInfo[playerid][pMuted] == 1)
	{
		format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		return 1;
	}
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "s[250]", text)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/d <wiadomosc>");
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) format(string, sizeof(string), "* %s %s: %s, over.", GetRankName(playerid), sendername, text);
	else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) format(string, sizeof(string), "* %s %s: %s, over.", GetRankName(playerid), sendername, text);
	else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) format(string, sizeof(string), "* %s %s: %s, over.", GetRankName(playerid), sendername, text);
	else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) format(string, sizeof(string), "* %s %s: %s, over.", GetRankName(playerid), sendername, text);
	else return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz tego uzyc.");
	SendTeamMessage(3, COLOR_ALLDEPT, string);
	SendTeamMessage(2, COLOR_ALLDEPT, string);
	SendTeamMessage(1, COLOR_ALLDEPT, string);
	SendTeamMessage(14, COLOR_ALLDEPT, string);
	return 1;
}

CMD:depo(playerid, params[]) return cmd_departmentooc(playerid, params);
CMD:departmentooc(playerid, params[]) {
	new text[250],sendername[MAX_PLAYER_NAME],string[200];
	if(PlayerInfo[playerid][pMuted] == 1)
	{
		format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		return 1;
	}
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "s[250]", text)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/depo <wiadomosc>");
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) format(string, sizeof(string), "** (( %s [%d] %s: %s )) **", GetRankName(playerid),PlayerInfo[playerid][pRank], sendername, text);
	else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) format(string, sizeof(string), "** (( %s [%d] %s: %s )) **", GetRankName(playerid),PlayerInfo[playerid][pRank], sendername, text);
	else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) format(string, sizeof(string), "** (( %s [%d] %s: %s )) **", GetRankName(playerid),PlayerInfo[playerid][pRank], sendername, text);
	else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) format(string, sizeof(string), "** (( %s [%d] %s: %s )) **", GetRankName(playerid),PlayerInfo[playerid][pRank], sendername, text);
	else return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz tego uzyc.");
	SendTeamMessage(3, COLOR_ALLDEPT, string);
	SendTeamMessage(2, COLOR_ALLDEPT, string);
	SendTeamMessage(1, COLOR_ALLDEPT, string);
	SendTeamMessage(14, COLOR_ALLDEPT, string);
	return 1;
}

CMD:zabierz(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
        if(IsACop(playerid))
        {
            if(OnDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "nie jeste na s³u¿bie.");
	        new x_nr[15],giveplayerid,string[256],giveplayer[25],sendername[25];
			if(sscanf(params, "us[15]",giveplayerid,x_nr))
			{
				SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/zabierz <id/nazwa> <licencja/rzecz>");
		  		SendClientMessage(playerid, COLOR_WHITE, "Licencje: prawko, latanie, plywanie, licbron.");
		  		SendClientMessage(playerid, COLOR_WHITE, "Rzeczy: bron, narkotyki, materialy.");
				return 1;
			}
			if (!PlayerToPoint(15, playerid, 1556.458862,-1688.155395,2113.034912)) return SCM(playerid, COLOR_GREY, "Musisz byc na komisariacie aby to zrobic!");
			GetPlayerName(playerid,sendername,sizeof(sendername));
			GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
		    if(strcmp(x_nr,"prawko",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Aby wykonac te akcje, musisz miec range 2.");
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
					        format(string, sizeof(string), "* Zabrales prawo jazdy %s.", giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* Oficer %s skonfiskowal Twoje prawo jazdy.", sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pCarLic] = 0;
					        PlayerInfo[giveplayerid][pCarLicT] = 0;
							new str[128];
							format(str,sizeof(str),"UPDATE users SET `CarLic`='0',`CarLicT`='0' WHERE `ID`='%d'",PlayerInfo[giveplayerid][pSQLID]);
							mysql_query(SQL,str);
							PlayerInfo[playerid][pCommands] ++;
							new rquery[256];
							format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, rquery);
						}
						else return SendClientMessage(playerid, COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
				    }
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
			else if(strcmp(x_nr,"plywanie",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Aby wykonac te akcje, musisz miec range 2.");
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
					        format(string, sizeof(string), "* Zabrales licencje na plywanie %s", giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* Oficer %s skonfiskowal Twoja licencje na lodzie.", sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pBoatLic] = 0;
					        PlayerInfo[giveplayerid][pBoatLicT] = 0;
							new str[128];
							format(str,sizeof(str),"UPDATE users SET `BoatLic`='0',`BoatLicT`='0' WHERE `ID`='%d'",PlayerInfo[giveplayerid][pSQLID]);
							mysql_query(SQL,str);
							PlayerInfo[playerid][pCommands] ++;
							new rquery[256];
							format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, rquery);
						}
						else return SendClientMessage(playerid, COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
				    }
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
			else if(strcmp(x_nr,"licbron",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Aby wykonac te akcje, musisz miec range 2.");
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
					        format(string, sizeof(string), "* Zabrales licencje na bron %s.", giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* Oficer %s skonfiskowal Twoja licencje na bron.", sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pGunLic] = 0;
					        PlayerInfo[giveplayerid][pGunLicT] = 0;
							new str[128];
							format(str,sizeof(str),"UPDATE users SET `GunLic`='0',`GunLicT`='0' WHERE `ID`='%d'",PlayerInfo[giveplayerid][pSQLID]);
							mysql_query(SQL,str);
							PlayerInfo[playerid][pCommands] ++;
							new rquery[256];
							format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, rquery);
						}
						else return SendClientMessage(playerid, COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
				    }
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
			else if(strcmp(x_nr,"latanie",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Aby wykonac te akcje, musisz miec range 2.");
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
					        format(string, sizeof(string), "* Zabrales licencje na latanie %s.", giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* Oficer %s skonfiskowal Twoja licencje na latanie.", sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFlyLic] = 0;
					        PlayerInfo[giveplayerid][pFlyLicT] = 0;
							new str[128];
							format(str,sizeof(str),"UPDATE users SET `FlyLic`='0',`FlyLicT`='0' WHERE `ID`='%d'",PlayerInfo[giveplayerid][pSQLID]);
							mysql_query(SQL,str);
							PlayerInfo[playerid][pCommands] ++;
							new rquery[256];
							format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, rquery);
						}
						else return SendClientMessage(playerid, COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
				    }
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
			else if(strcmp(x_nr,"bron",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Aby wykonac te akcje, musisz miec range 2.");
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
					        format(string, sizeof(string), "* Zabrales bron %s.", giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* Oficer %s skonfiskowal Twoja bron.", sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        ResetPlayerWeaponsEx(giveplayerid);
					        ResetPlayerWeapons(giveplayerid);
							PlayerInfo[playerid][pCommands] ++;
							new rquery[256];
							format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, rquery);
						}
						else return SendClientMessage(playerid, COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
				    }
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
			else if(strcmp(x_nr,"materialy",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Aby wykonac te akcje, musisz miec range 2.");
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    format(string, sizeof(string), "* Zabrales materialy %s.", giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* Oficer %s skonfiskowal Twoje materialy.", sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pMats] = 0;
							new str[128];
							format(str,sizeof(str),"UPDATE users SET `Materials`='0' WHERE `ID`='%d'",PlayerInfo[giveplayerid][pSQLID]);
							mysql_query(SQL,str);
							PlayerInfo[playerid][pCommands] ++;
							new rquery[256];
							format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, rquery);
						}
						else return SendClientMessage(playerid, COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
				    }
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
			
			else if(strcmp(x_nr,"narkotyki",true) == 0)
			{
                if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Aby wykonac te akcje, musisz miec range 2.");
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    format(string, sizeof(string), "* Zabrales narkotyki %s.", giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* Oficer %s skonfiskowal Twoje materialy", sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pDrugs] = 0;
							new str[128];
							format(str,sizeof(str),"UPDATE users SET `Drugs`='0' WHERE `ID`='%d'",PlayerInfo[giveplayerid][pSQLID]);
							mysql_query(SQL,str);
							PlayerInfo[playerid][pCommands] ++;
							new rquery[256];
							format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, rquery);
						}
						else return SendClientMessage(playerid, COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
				    }
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
			else return SendClientMessage(playerid, COLOR_GRAD1, "Zla nazwa!");
        }
        else return SendClientMessage(playerid,  COLOR_GREY, "Nie mozesz tego uzyc!.");
    }
    return 1;
}

function ShowMDC(playerid, targetid) {
	new id = targetid,  string[256];
	if(PlayerInfo[id][pWantedLevel] == 0) return SCM(playerid, COLOR_GREY, "Ten gracz nie jest scigany");
	SCM(playerid, -1, "------------------------------------------- MDC -------------------------------------------");	
	format(string, sizeof(string), "Nazwa: %s (%d)| Wanted level: %d | Czas poszukiwan: %d minut | scigany przez %d policjantów", GetName(id), id, PlayerInfo[id][pWantedLevel], 10-WantedTime[id], ChasedBy(id));
	SCM(playerid, -1, string);
	new mdc[256];
	if(strcmp(PlayerInfo[id][pCrime1],  "Bez przestepstw", false) == 0) { }
	else {
		format(mdc, sizeof(mdc), "%s", PlayerInfo[id][pCrime1]);
		SendClientMessage(playerid, -1, mdc);
	}
	if(strcmp(PlayerInfo[id][pCrime2],  "Bez przestepstw", false) == 0) { }
	else {
		format(mdc, sizeof(mdc), "%s", PlayerInfo[id][pCrime2]);
		SendClientMessage(playerid, -1, mdc);
	}
	if(strcmp(PlayerInfo[id][pCrime3], "Bez przestepstw", false) == 0) { }
	else {
		format(mdc, sizeof(mdc), "%s", PlayerInfo[id][pCrime3]);
		SendClientMessage(playerid, -1, mdc);
	}					
	SCM(playerid, -1, "----------------------------------------------------------------------------------------------");
	return 1;
}

function ShowPRZEWOZ(playerid, targetid) {
	new id = targetid,  string[256];
	//if(PlayerInfo[id][pWantedLevel] == 0) return SCM(playerid, COLOR_GREY, "Ten gracz nie jest scigany");
	SCM(playerid, -1, "------------------------------------------- SYSTEM PRZEWOZOWY -------------------------------------------");	
	format(string, sizeof(string), "Nazwa: %s (%d)| Prawo jazdy: Tak ", GetName(id), id);
	SCM(playerid, -1, string);
	if(TruckerRoute[playerid] == 14 || TruckerRoute[playerid] == 13|| TruckerRoute[playerid] == 12) {
	string = "";
	format(string, sizeof(string), "Przewoz: {FF0000}NIELEGALNY ");
	SCM(playerid, -1, string);
	} else {
	string = "";
	format(string, sizeof(string), "Przewoz: {008000}LEGALNY ");
	SCM(playerid, -1, string);
	}	 		
	SCM(playerid, -1, "----------------------------------------------------------------------------------------------");
	return 1;
}

function ChasedBy(playerid) {
	new x;
	foreach(Player, i) {
		if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {
			if(targetfind[i] == playerid) x++;
		}
	}
	return x;
}

CMD:mdc(playerid, params[]) {
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz tego uzyc.");
	if(OnDuty[playerid] == 0) return SCM(playerid, COLOR_LGREEN, "Nie mozesz uzyc tego polecenia, poniewaz nie jeste na s³u¿bie!");
	new id;
	if(sscanf(params, "u", id)) return SendClientMessage(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/mdc <playerid/nazwa>"); {
		if(IsPlayerConnected(id)) ShowMDC(playerid, id);
		else SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	return 1;
}
CMD:przewoz(playerid, params[]) {
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste z policji.");
	if(OnDuty[playerid] == 0) return SCM(playerid, COLOR_LGREEN, "Nie mozesz uzyc tego polecenia, poniewaz nie jeste na s³u¿bie!");
	new id, string[256];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/przewoz <playerid/nazwa>"); {
	if (ProxDetectorS(5.0, playerid, id)) {
		if(IsPlayerConnected(id)){
		ShowPRZEWOZ(playerid, id);
		format(string, sizeof(string), "* %s sprawdza dokument przewozowe %s.", playerid, GetName(id));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		} else return SendClientMessage(playerid, COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
	} 
	return 1;
}

CMD:su(playerid, params[])
{
	new id,level,reason[64],giveplayer[30],sendername[25],string[256],ini;
	if(IsACop(playerid))
	{
		if(sscanf(params, "uis[64]", id,level,reason)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/su <id/nazwa> <poziom> <powód>");
		GetPlayerName(id, giveplayer, sizeof(giveplayer));
  		GetPlayerName(playerid, sendername, sizeof(sendername));
		{
			if(id != INVALID_PLAYER_ID)
			{
				if(level < 7 && level > 0)
				{
					if(OnDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "nie jeste na s³u¿bie.");
					if(IsACop(id)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzyc tego na policjancie!");
					ini = PlayerInfo[id][pWantedLevel];
					if(level + PlayerInfo[id][pWantedLevel] > 6)
					{
						PlayerInfo[id][pWantedLevel] = 6;
					}
					else
					{
						PlayerInfo[id][pWantedLevel] = level+PlayerInfo[id][pWantedLevel];
					}
					format(string, sizeof(string), "Nieznany");
					strmid(PlayerInfo[id][pVictim], string, 0, strlen(string), 255);
					Update(id,pVictimx);
					strmid(PlayerInfo[id][pAccused], GetName(playerid), 0, strlen(GetName(playerid)), 255);
					Update(id,pAccusedx);
					new y,m,d,h,mi;
					getdate(y,m,d);
					gettime(h,mi);
					if(strcmp(PlayerInfo[id][pCrime1], "Bez przestepstw", true) == 0)
					{
		    			format(string,sizeof(string),"- %s na %02d.%02d.%02d %02d:%02d",reason,y,m,d,h,mi);
						strmid(PlayerInfo[id][pCrime1], string, 0, strlen(string), 255);
						Update(id,pCrime1x);
					}
					else if(strcmp(PlayerInfo[id][pCrime2], "Bez przestepstw", true) == 0)
					{
		    			format(string,sizeof(string),"- %s na %02d.%02d.%02d %02d:%02d",reason,y,m,d,h,mi);
						strmid(PlayerInfo[id][pCrime2], string, 0, strlen(string), 255);
						Update(id,pCrime2x);
					}
					else if(strcmp(PlayerInfo[id][pCrime3], "Bez przestepstw", true) == 0)
					{
		    			format(string,sizeof(string),"- %s na %02d.%02d.%02d %02d:%02d",reason,y,m,d,h,mi);
					    strmid(PlayerInfo[id][pCrime3], string, 0, strlen(string), 255);
						Update(id,pCrime3x);
					}
					else if(strcmp(PlayerInfo[id][pCrime1],  "Bez przestepstw", true) == 0 && strcmp(PlayerInfo[id][pCrime2], "Bez przestepstw", true) == 0 && strcmp(PlayerInfo[id][pCrime3], "Bez przestepstw", true) == 0) { }
					else
					{
						format(string,sizeof(string),"- %s na %02d.%02d.%02d %02d:%02d",reason,y,m,d,h,mi);
					    strmid(PlayerInfo[id][pCrime1], string, 0, strlen(string), 255);
						Update(id,pCrime1x);
						format(string, sizeof(string), "Bez przestepstw");
						strmid(PlayerInfo[id][pCrime2], string, 0, strlen(string), 255);
						strmid(PlayerInfo[id][pCrime3], string, 0, strlen(string), 255);
						Update(id,pCrime2x);
						Update(id,pCrime3x);
					}
					SetPlayerWantedLevel(id,PlayerInfo[id][pWantedLevel]);
					PlayCrimeReportForPlayer(playerid,id,5);
					ini = PlayerInfo[id][pWantedLevel]-ini;
					format(string, sizeof(string), "Popelniles nowe przestepstwo (%s). Listy goncze: +%d, Zglosil: %s.",reason,ini,sendername);
					SendClientMessage(id, COLOR_LIGHTRED, string);
					format(string, sizeof(string), "Twoje listy goncze: %d", PlayerInfo[id][pWantedLevel]);
					SendClientMessage(id, COLOR_YELLOW, string);
					format(string, sizeof(string), "Informacja: LSPD\n Zglosil: %s\n Przestepstwo: %s\n Listy goncze:%d\n Podejrzany: %s(%d).",sendername,reason,ini,PlayerInfo[id][pWantedLevel],giveplayer,id);
					SendTeamMessage(3, 0x3350FFFF, string);
					SendTeamMessage(2, 0x3350FFFF, string);
					SendTeamMessage(1, 0x3350FFFF, string);
					wantedlost[id] = 1800;
					Update(id,pWantedLevelx);
					WantedPoints[id] = PlayerInfo[id][pWantedLevel]*2;
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Zly wanted level.");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz tego uzyc.");
	return 1;
}


CMD:setwl(playerid, params[])
{
	new targetid, wl, string[128];
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	if(sscanf(params, "ii", targetid, wl)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/setwl <id/nazwa> <wl>");
	format(string, sizeof(string), "»» Administrator %s ustawil ci nowy poziom poszukiwania %d", GetName(playerid), wl);
	SendClientMessage(targetid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "»» Zmieniles graczowi %s status WL na %d", GetName(targetid), wl);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "AdmCmd: %s zmienil graczowi %s WL na %d", GetName(playerid), GetName(targetid), wl);
	SendAdminMessage(COLOR_LOGS, string, 1);
	AdminLog("/logs/admin.log", string);
	PlayerInfo[targetid][pWantedLevel] = wl;
	return 1;
	} else {
	SCM(playerid, COLOR_GREY, "Nie masz uprawnien!");
	return 1;
	}
}

CMD:makemember(playerid, params[])
{
	new targetid, fid, string[128];
	if(!PlayerInfo[targetid][pMember]) return SCM(playerid, COLOR_GREY, "Ten gracz jest juz w jakiejs frakcji");
	if(sscanf(params, "ii", targetid, fid)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/makemember <id/nazwa> <FID>");
	format(string, sizeof(string), "»» Administrator %s nominowal Ciebie czlonkiem frakcji %s", GetName(playerid), GetFactionName(fid));
	SendClientMessage(targetid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "»» Nadales status czlonka frakcji %s graczowi %s", GetFactionName(fid), GetName(targetid));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "AdmCmd: %s dodal %s do frakcji %s [FID: %d]", GetName(playerid), GetName(targetid), GetFactionName(fid), fid);
	SendAdminMessage(COLOR_LOGS, string, 1);
	AdminLog("/logs/leader.log", string);
	PlayerInfo[targetid][pMember] = fid;
	return 1;
}

CMD:abus(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] < 3)
		{
		    SendClientMessage(playerid, COLOR_GREY, "   Nie jeste upowazniony do skorzystania z tej komendy !");
		    return 1;
		}
		new opcja[8], str[128];
		if(sscanf(params, "s[8]", opcja))
		{
		    new id = GetPVarInt(playerid, "BusPoz");
		    if(!id)
		    {
		    	return SendClientMessage(playerid, COLOR_GREY, " Uzyj: /abus [stworz/edytuj]");
			}
			new Float:x, Float:y, Float:z, Float:a;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, a);
			Przystanek[id][busPozX] = x;
			Przystanek[id][busPozY] = y;
			Przystanek[id][busPozZ] = z;
			Przystanek[id][busPozA] = a;
			ZapiszPrzystanek(id);
			Delete3DTextLabel(Przystanek[id][busTag]);
			format(str, sizeof(str), "Przystanek %d: %s\nAby kupic bilet, wpisz /bus", id, Przystanek[id][busText]);
			Przystanek[id][busTag] = Create3DTextLabel(str, COLOR_NEWS, Przystanek[id][busPozX], Przystanek[id][busPozY], Przystanek[id][busPozZ], 30.0, 0, 0);
			return DeletePVar(playerid, "BusPoz" );
		}
		if(!strcmp(opcja, "stworz", true))
		{
		    ShowPlayerDialog(playerid, 762, DIALOG_STYLE_INPUT, "Przystanek", "Podaj nazwe przystanku dla tworzonego przystanku:", "Akceptuj", "Anuluju");
		}
		else if(!strcmp( opcja, "edytuj", true))
		{
		    new stop_id = GetPlayerBusStop(playerid);
			if(!stop_id)
			{
			    return SendClientMessage(playerid, COLOR_GREY, "   Nie znajdujesz sie na zadnym przystanku !");
			}
			SetPVarInt(playerid, "BusPoz", stop_id);
		    new info[350];
		    format(info, sizeof(info), "{8CFFFF}Przystanek %s\n{FFFFFF}Pozycja:\n\tPozX:\t\t{FFFF00}%f\n\tPozY:\t\t{FFFF00}%f\n\tPozZ:\t\t{FFFF00}%f\n\tPozA:\t\t{FFFF00}%f\n\n{646464}# {FFFFFF}Zmien nazwe\n{646464}# {FFFFFF}Zmien pozycje\n{646464}# {FFFFFF}Usun przystanek", Przystanek[stop_id][busText], Przystanek[stop_id][busPozX], Przystanek[stop_id][busPozY], Przystanek[stop_id][busPozZ], Przystanek[stop_id][busPozA]);
		    ShowPlayerDialog(playerid, 763, DIALOG_STYLE_LIST, "Przystanek", info, "Przejdz", "Anuluj");
		}
		else
		{
			return SendClientMessage(playerid, COLOR_GREY, " Uzyj: /abus [stworz/edytuj]");
		}
	}
	return 1;
}

CMD:bus(playerid, params[])
{
    new	stop_id = GetPlayerBusStop(playerid), big_str[1024];
	if(!stop_id)
	{
	    return SendClientMessage(playerid, COLOR_GREY, "   Nie znajdujesz sie na zadnym przystanku !");
	}
	for(new i = 1; i < LIMIT_PRZYSTANKOW; i++)
	{
	    if(i == stop_id || !Przystanek[i][busUID])
	    {
	        continue;
		}
		format(big_str, sizeof(big_str), "%s{646464}%d. {FFFFFF}%s\n", big_str, i, Przystanek[i][busText]);
	}
	ShowPlayerDialog(playerid, 760, DIALOG_STYLE_LIST, "Przystanek", big_str, "Wybierz", "Anuluj");
	return 1;
}

///OBIEKTY PRZESUWANE- DYNAMIKA

forward IsAllowedToUseGate(playerid, brama);
public IsAllowedToUseGate(playerid, brama) {
if(Bramy[brama][bfaction] == 0 && Bramy[brama][bfaction2] == 0 && Bramy[brama][bfaction3] == 0) return 1;
if(PlayerInfo[playerid][pMember] == Bramy[brama][bfaction]) return 1;
if(PlayerInfo[playerid][pMember] == Bramy[brama][bfaction2]) return 1;
if(PlayerInfo[playerid][pMember] == Bramy[brama][bfaction3]) return 1;
return 0;
}

CMD:brama(playerid, params[])
{
        for(new i = 1; i < MAX_BRAMY; i++){
            if(Bramy[i][buuid] == i) {
			if (PlayerToPoint(Bramy[i][brange], playerid, Bramy[i][bLoc][0], Bramy[i][bLoc][1], Bramy[i][bLoc][2])){
			if(IsAllowedToUseGate(playerid, i) == 1) {
			if(BramaOpenClose[Bramy[i][buuid]] == 0){
				MoveDynamicObject(Bramy[i][bnumer], Bramy[i][bLoc2][0], Bramy[i][bLoc2][1], Bramy[i][bLoc2][2], 3.0, Bramy[i][bRot2][0], Bramy[i][bRot2][1], Bramy[i][bRot2][2]);
				BramaOpenClose[Bramy[i][buuid]] = 1;
			     	} else {
					MoveDynamicObject(Bramy[i][bnumer], Bramy[i][bLoc][0], Bramy[i][bLoc][1], Bramy[i][bLoc][2], 3.0, Bramy[i][bRot][0], Bramy[i][bRot][1], Bramy[i][bRot][2]);
					BramaOpenClose[Bramy[i][buuid]] = 0;
						}
					}
				}
			}
		}
		return 1;
	} 

	
//DYNAMICZNE WEJSCIA - WEJDZ
forward IsAllowedToUseEntrance(playerid, wejscie);
stock IsAllowedToUseEntrance(playerid, wejscie){
if(Wejscie[wejscie][wefaction] == 0 && Wejscie[wejscie][wefaction2] == 0 && Wejscie[wejscie][wefaction3] == 0) return 1;
if(Wejscie[wejscie][wefaction] == PlayerInfo[playerid][pMember]) return 1;
if(Wejscie[wejscie][wefaction2] == PlayerInfo[playerid][pMember]) return 1;
if(Wejscie[wejscie][wefaction3] == PlayerInfo[playerid][pMember]) return 1;
return 0;
}

CMD:wejdz(playerid, params[])
{
        for(new i = 1; i < MAX_WEJSCIA; i++){
            if(Wejscie[i][wuuid] == i) {
			if (PlayerToPoint(3.0,playerid, Wejscie[i][wLoc][0], Wejscie[i][wLoc][1], Wejscie[i][wLoc][2])){
			if(IsAllowedToUseEntrance(playerid, i)) {
					TogglePlayerControllable(playerid, 0);
					SetPlayerVirtualWorld(playerid, Wejscie[i][wvw2]);
					SetPlayerInterior(playerid, Wejscie[i][winterior2]);
					SetPlayerPosEx(playerid, Wejscie[i][wLoc2][0], Wejscie[i][wLoc2][1], Wejscie[i][wLoc2][2]);
					SetTimerEx("UnFreezeStation", 2000, false, "i", playerid);	
					}
				}
			}
		}
		return 1;
	} 
	
//DYNAMICZNE WEJSCIA - WYJDZ

CMD:wyjdz(playerid, params[])
{
        for(new i = 1; i < MAX_WEJSCIA; i++){
            if(Wejscie[i][wuuid] == i) {
			if (PlayerToPoint(3.0,playerid, Wejscie[i][wLoc2][0], Wejscie[i][wLoc2][1], Wejscie[i][wLoc2][2])){
			/*if(Wejscie[i][wefaction] == 0){
			goto skok;
			} 
			else if(Wejscie[i][wefaction] == PlayerInfo[playerid][pMember]) goto skok;
			else if(Wejscie[i][wefaction] != PlayerInfo[playerid][pMember]) return 1;
			skok: WYJSC MOZE KAZDY - DO OBGADANIA */
					TogglePlayerControllable(playerid, 0);
					SetPlayerVirtualWorld(playerid, Wejscie[i][wvw]);
					SetPlayerInterior(playerid, Wejscie[i][winterior]);
					SetPlayerPosEx(playerid, Wejscie[i][wLoc][0], Wejscie[i][wLoc][1], Wejscie[i][wLoc][2]);
					SetTimerEx("UnFreezeStation", 2000, false, "i", playerid);	
					}
			}
		}
		return 1;
	} 
	
	/*
	
	DYNAMICZNE /WEJDZ i /WYJDZ by REST
	
	*/
	
	
CMD:dodajwejscie(playerid, params[])
{
		new faction, faction2, faction3, opis[56];
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "iiis[56]", faction, faction2, faction3, opis )) {
            new string[350], text[150];
            new Float:x, Float:y, Float:z;
			new dbid = GetLastWejscie();
			GetPlayerPos(playerid, x, y, z);
			Wejscie[dbid][wuuid] = dbid;
			Wejscie[dbid][wtext] = opis;
			Wejscie[dbid][wefaction] = faction;
			Wejscie[dbid][wefaction2] = faction2;
			Wejscie[dbid][wefaction3] = faction3;
			Wejscie[dbid][wowner] = strval(GetName(playerid));
			Wejscie[dbid][wLoc][0] = x;
			Wejscie[dbid][wLoc][1] = y;
			Wejscie[dbid][wLoc][2] = z;
			Wejscie[dbid][wLoc2][0] = 0;
			Wejscie[dbid][wLoc2][1] = 0;
			Wejscie[dbid][wLoc2][2] = 0;
			Wejscie[dbid][wvw] = GetPlayerVirtualWorld(playerid);
			Wejscie[dbid][winterior] = GetPlayerInterior(playerid);
			format(text, sizeof(text), "%s (ID: %d)\nUzyj /wejdz lub wcisnij 'F' aby wejsc", Wejscie[dbid][wtext], dbid);
            Wejscie[dbid][wejscie3d] = CreateDynamic3DTextLabel(text, COLOR_GREY, x, y, z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 1, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
				//CreateDynamicPickup(1275, 23, JobInfo[job][jPosX], JobInfo[job][jPosY], JobInfo[job][jPosZ], -1, -1, -1, 100.0);
			Wejscie[dbid][wpickup] = CreateDynamicPickup(1239, 23, x, y, z, -1, -1, -1, 100.0); 
			mysql_format(SQL, string,512,"INSERT INTO `wejscia` (`ID`, `Stworzyl`, `Faction`,`Faction2`,`Faction3`, `X`, `Y`, `Z`, `Virtual`, `Interior`, `Opis`) VALUES ('%d', '%s', '%d','%d','%d', '%f', '%f', '%f', '%d', '%d', '%s')", dbid, GetName(playerid), faction, faction2, faction3, Wejscie[dbid][wLoc][0], Wejscie[dbid][wLoc][1], Wejscie[dbid][wLoc][2], Wejscie[dbid][wvw], Wejscie[dbid][winterior], Wejscie[dbid][wtext]);
			mysql_query(SQL, string);
			format(string, sizeof(string), "AdmCmd: %s dodal wejscie (UUID: %d, Frakcja1: %d, Frakcja2: %d, Frakcja3: %d, Opis: %s)", GetName(playerid), Wejscie[dbid][wuuid], Wejscie[dbid][wefaction],Wejscie[dbid][wefaction2],Wejscie[dbid][wefaction3], Wejscie[dbid][wtext]);
			SendAdminMessage(COLOR_LOGS, string, 2);
			AdminLog("/logs/admin.log", string);
			return 1;
			}
        else
        {
            SendClientMessage(playerid,COLOR_GREY,"Uzyj : /dodajwejscie [frakcja1] [frakcja2] [frakcja3] [opis wejscia]");
			SendClientMessage(playerid,COLOR_LIGHTRED,"Przyklady: /dodajwejscie 1 1 2 Izolatka");
			SendClientMessage(playerid,COLOR_LIGHTRED,"W tym przypadku wejsc bedzie mogl czlonek frakcji 1 oraz 2");
			SendClientMessage(playerid,COLOR_LIGHTGREEN,"Przyklady: /dodajwejscie 1 1 1 Pomieszczenie sluzbowe");
			SendClientMessage(playerid,COLOR_LIGHTGREEN,"W tym przypadku wejsc bedzie mogl tylko czlonek frakcji 1");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"Przyklady: /dodajwejscie 0 0 0 Targ");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"W tym przypadku wejsc bedzie mogl kazdy");
            return 1;
      }
}

CMD:gotowejscie(playerid, params[])
{
    new oid;
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "i",oid ))
        {
		if(Wejscie[oid][wuuid] == 0) {
			SendClientMessage(playerid,COLOR_GREY,"Nie ma takiego wejscia w MYSQL");
			return 1;
			} else {
			 for(new i = 1; i < MAX_WEJSCIA; i++){
				if(Wejscie[i][wuuid] == oid) {
			    SetPlayerVirtualWorld(playerid, Wejscie[oid][wvw]);	
				SetPlayerInterior(playerid, Wejscie[oid][winterior]);
                SetPlayerPos(playerid,Wejscie[oid][wLoc][0],Wejscie[oid][wLoc][1],Wejscie[oid][wLoc][2]);
                return 1;
					}
				}
				return 1;
			}
        }
		else
		{
		SendClientMessage(playerid,COLOR_GREY,"Uzyj :/gotowejscie [id wejscia]"); return 1;
	}
}


CMD:dodajwyjscie(playerid, params[])
{
		new wid;
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "i", wid )) {
            new string[320], text[150];
            new Float:x, Float:y, Float:z;
			new dbid = wid;
			GetPlayerPos(playerid, x, y, z);
			Wejscie[dbid][wuuid] = dbid;
			Wejscie[dbid][wowner] = strval(GetName(playerid));
			Wejscie[dbid][wLoc2][0] = x;
			Wejscie[dbid][wLoc2][1] = y;
			Wejscie[dbid][wLoc2][2] = z;
			Wejscie[dbid][wvw2] = GetPlayerVirtualWorld(playerid);
			Wejscie[dbid][winterior2] = GetPlayerInterior(playerid);
			format(text, sizeof(text), "Wyjscie (ID: %d)\nUzyj /wyjdz lub wcisnij 'F' aby wyjsc", dbid);
            Wejscie[dbid][wyjscie3d] = CreateDynamic3DTextLabel(text, COLOR_GREY, x, y, z, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 1, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 100.00);
			mysql_format(SQL, string, sizeof(string),
			"UPDATE `wejscia` SET `X2`='%f', `Y2`='%f', `Z2`='%f', `Virtual2`='%d', `Interior2`='%d' WHERE `ID`='%d'", Wejscie[dbid][wLoc2][0], Wejscie[dbid][wLoc2][1], Wejscie[dbid][wLoc2][2], Wejscie[dbid][wvw2], Wejscie[dbid][winterior2], dbid);
			mysql_query(SQL, string);
			format(string, sizeof(string), "AdmCmd: %s dodal wyjscie dla wejscia o UUID: %d", GetName(playerid), Wejscie[dbid][wuuid]);
			SendAdminMessage(COLOR_LOGS, string, 2);
			AdminLog("/logs/admin.log", string);
			return 1;
			}
        else
        {
            SendClientMessage(playerid,COLOR_GREY,"Uzyj : /dodajwyjscie [ID DRZWI WEJSCIOWYCH]");
            return 1;
      }
}

CMD:usunwejscie(playerid, params[])
{
		new oid;
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "i",oid ))
        {	
			if(Wejscie[oid][wuuid] == 0) {
			SendClientMessage(playerid,COLOR_GREY,"Nie ma takiego wejscia w MYSQL");
			return 1;
			} else {
			new string[128];
			mysql_format(SQL, string,128,"DELETE FROM `wejscia` WHERE `ID`='%d'",oid);
			mysql_query(SQL, string);
			format(string, sizeof(string), "AdmCmd: %s usunal wejscie/wyjscie (UUID: %d).", GetName(playerid), oid);
			SendAdminMessage(COLOR_LOGS, string, 2);
			AdminLog("/logs/admin.log", string);
			DestroyDynamic3DTextLabel(Wejscie[oid][wejscie3d]);
			DestroyDynamic3DTextLabel(Wejscie[oid][wyjscie3d]);
			DestroyDynamicPickup(Wejscie[oid][wpickup]);
			Wejscie[oid][wuuid] = 0;
			Wejscie[oid][wowner] = 0;
			Wejscie[oid][wLoc2][0] = 0;
			Wejscie[oid][wLoc2][1] = 0;
			Wejscie[oid][wLoc2][2] = 0;
			Wejscie[oid][wvw2] = 0;
			Wejscie[oid][wLoc][0] = 0;
			Wejscie[oid][wLoc][1] = 0;
			Wejscie[oid][wLoc][2] = 0;
			Wejscie[oid][wvw] = 0;
			Wejscie[oid][winterior2] = 0;
			Wejscie[oid][winterior] = 0;
			return 1;
			}
		}
        else
        {
            SendClientMessage(playerid,COLOR_GREY,"Uzyj : /usunwejscie [ID WEJSCIA]");
            return 1;
        }
}

///// KONIEC

CMD:wanted(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz tego uzyc.");
	if(OnDuty[playerid] == 0) return SCM(playerid, COLOR_LGREEN, "Nie mozesz uzyc tego polecenia, poniewaz nie jeste na s³u¿bie!");
	new iString[512],string[300],sendername[MAX_PLAYER_NAME],count = 0,online[50];
	if(IsPlayerConnected(playerid))
	{
		foreach(Player,i)
		{
			if(PlayerInfo[i][pWantedLevel] >= 1)
			{
			    SelectedPlayer[playerid][count] = i;
				GetPlayerName(i, sendername, sizeof(sendername));
				string[0] = 0;
				if(PlayerInfo[i][pSleeping] == 1)
				{
					format(string, sizeof(string), "%s(%d) - Poziom poszukiwanych: %d (AFK)\n",sendername,i,PlayerInfo[i][pWantedLevel]);
					count++;
				}
				else if(PlayerInfo[i][pSleeping] == 0)
  				{
					format(string, sizeof(string), "%s(%d) - Poziom poszukiwanych: %d\n",sendername,i,PlayerInfo[i][pWantedLevel]);
					count++;
				}
				strcat(iString,string);
			}
		}
		format(online, sizeof(online),"scigani: %d",count);
		if(count == 0) return SCM(playerid,COLOR_GREY, "Nie ma podejrzanych online.");
		ShowPlayerDialog(playerid, DIALOG_WANTEDON, DIALOG_STYLE_LIST, online, iString , "Anuluj", "");
	}
	return 1;
}
CMD:nearwanted(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz tego uzyc.");
	new iString[512],string[300],sendername[MAX_PLAYER_NAME],count = 0,online[50];
	if(IsPlayerConnected(playerid))
	{
		foreach(Player,i)
		{
			if(PlayerInfo[i][pWantedLevel] >= 1)
			{
                if(ProxDetectorS(200.0, playerid,i))
                {
                    SelectedPlayer[playerid][count] = i;
					GetPlayerName(i, sendername, sizeof(sendername));
					string[0] = 0;
					if(PlayerInfo[i][pSleeping] == 1)
					{
						format(string, sizeof(string), "%s(%d) - Poziom poszukiwanych: %d (AFK)\n",sendername,i,PlayerInfo[i][pWantedLevel]);
						count++;
					}
					else if(PlayerInfo[i][pSleeping] == 0)
	  				{
						format(string, sizeof(string), "%s(%d) - Poziom poszukiwanych: %d\n",sendername,i,PlayerInfo[i][pWantedLevel]);
						count++;
					}
					strcat(iString,string);
					format(online, sizeof(online),"Wanted online: %d",count);
				}
			}
		}
		if(count == 0) return SCM(playerid,COLOR_GREY, "Nie ma wokól ciebie zadnych podejrzanych.");
		ShowPlayerDialog(playerid, DIALOG_WANTEDON, DIALOG_STYLE_LIST, online, iString , "Anuluj", "");
	}
	return 1;
}

CMD:instruktorzy(playerid, params[])
{
	new iString[512],string[200],sendername[MAX_PLAYER_NAME],count = 0,online[50];
	if(IsPlayerConnected(playerid))
	{
		foreach(Player,i)
		{
			if(PlayerInfo[i][pMember] == 12)
			{
				GetPlayerName(i, sendername, sizeof(sendername));
				string[0] = 0;
				if(PlayerInfo[i][pSleeping] == 1)
				{
					if(PlayerInfo[i][pMember] == 12) format(string, sizeof(string), "Instruktor - %s(%d) - (AFK) - %d\n",sendername,i,PlayerInfo[i][pPnumber]);
					count++;
				}
				else if(PlayerInfo[i][pSleeping] == 0)
  				{
					if(PlayerInfo[i][pMember] == 12) format(string, sizeof(string), "Instruktor - %s(%d) - %d\n",sendername,i,PlayerInfo[i][pPnumber]);
					count++;
				}
				strcat(iString,string);
				format(online, sizeof(online),"Instruktorzy online: %d",count);
			}
		}
		if(count == 0) return SCM(playerid,COLOR_GREY, "Nie ma instrkutorów online");
		ShowPlayerDialog(playerid, DIALOG_InstruktorS, DIALOG_STYLE_LIST, online, iString , "Anuluj", "");
		SCM(playerid,COLOR_WHITE,"Uzyj /requestlicense aby odebrac licencje.");
	}
	return 1;
}

/*CMD:sprzedajdom2(playerid, params[])
{
	new hIDs = PlayerInfo[playerid][pHouse];
	if(hIDs != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0) {
		new price, string[256], szQuery[256];
		if(sscanf(params, "i", price)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/sprzedajdom <cena>");	
		format(string, 256, "Ustawiles cene domu na $%s.", FormatNumber(price));
		SCM(playerid, COLOR_MONEY, string);
		HouseInfo[hIDs][hValue] = price;
		format(szQuery, sizeof(szQuery), "UPDATE `houses` SET `Value`= '%d' WHERE `ID`= '%d'", HouseInfo[hIDs][hValue], hIDs);
		mysql_query(SQL, szQuery);
		UpdateLabel(1,hIDs);
	}
	else SCM(playerid, -1, "Nie masz domu!");
	return 1;
}*/

CMD:kupdom(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
 	    new szQuery[256], moneys, newmoneys, id;
		new Float:oldposx, Float:oldposy, Float:oldposz,string[100],playername[MAX_PLAYER_NAME],sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new h = 1; h < sizeof(HouseInfo); h++)
		{
			if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
			{
			    if(HouseInfo[h][hOwned] == 1) return 1;
			    printf("%d hv", HouseInfo[h][hValue]);
				if(PlayerInfo[playerid][pHouse] != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0) return SendClientMessage(playerid, COLOR_GREY, "Masz juz dom!");
				if(GetPlayerCash(playerid) >= HouseInfo[h][hValue])
				{
					/*id = GetPlayerID(HouseInfo[h][hOwner]);
					if(id != INVALID_PLAYER_ID) {
						PlayerInfo[id][pHouse] = 999;
						Update(id, pHousex);
						PlayerInfo[id][pAccount] += HouseInfo[h][hValue];
					}
					else {
						format(szQuery, sizeof(szQuery), "SELECT * FROM `users` WHERE `name` = '%s'", HouseInfo[h][hOwner]);
						new Cache: result = mysql_query(SQL, szQuery);
						if(cache_get_row_count() != 0) {
							cache_get_field_content(0, "Bank", string); moneys = strval(string);
							newmoneys = moneys + HouseInfo[h][hValue];
						}
						cache_delete(result);
						format(szQuery, sizeof(szQuery), "UPDATE `users` SET `Bank` = '%d', `House` = '999' WHERE `name` = '%s'", newmoneys, HouseInfo[h][hOwner]);
						mysql_tquery(SQL, szQuery, "", "");
					}	*/

			        InHouse[playerid] = h;
					PlayerInfo[playerid][pHouse] = h;
     				PlayerInfo[playerid][pRented] = -1;
					HouseInfo[h][hOwned] = 1;
					//format(szQuery, sizeof(szQuery), "UPDATE `houses` SET `Value`= '0' WHERE `ID`= '%d'", h);
					//mysql_query(SQL, szQuery);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					strmid(HouseInfo[h][hOwner], GetName(playerid), 0, strlen(GetName(playerid)), 255);
					GivePlayerCash(playerid,-HouseInfo[h][hValue]);
					HouseInfo[h][hValue] = 0;
					SetPlayerInterior(playerid,HouseInfo[h][hInterior]);
					SetPlayerPosEx(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
					SetPlayerVirtualWorld(playerid,HouseInfo[h][hVirtual]);
					GameTextForPlayer(playerid, "~w~Witaj w domu~n~", 5000, 3);
					PlayerInfo[playerid][pInt] = HouseInfo[h][hInterior];
					PlayerInfo[playerid][pLocal] = h;
					SendClientMessage(playerid, COLOR_MONEY, "Gratuluje, zakupi³e Swój nowy dom!");
 					//SendClientMessage(playerid, COLOR_MONEY, "Uzyj polecenia /help, aby zobaczyc dostepne polecenia!");
					Update(playerid,pCashx);
					Update(playerid,pHousex);
					new str2[256];
					format(str2,sizeof(str2),"UPDATE `houses` SET `Owned`='1',`Owner`='%s' WHERE `ID`='%d'",sendername,HouseInfo[h][hID]);
					mysql_query(SQL,str2);
					UpdateLabel(1,h);
					
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Nie masz potrzebnych pieniedzy.");
					return 1;
				}
			}
		}
	}
	return 1;
}
CMD:renters(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pHouse] == 999) return SCM(playerid,COLOR_GREY, "Nie masz domu!.");
 		new count = 0,playername[MAX_PLAYER_NAME],giveplayer[MAX_PLAYER_NAME],string[200];
		GetPlayerName(playerid, playername, sizeof(playername));
		new h = PlayerInfo[playerid][pHouse];
		if(PlayerInfo[playerid][pHouse] == h)
		{
			foreach(Player,i)
			{
   				if(PlayerInfo[i][pRented] == h)
			    {
		        	GetPlayerName(i,giveplayer,sizeof(giveplayer));
					format(string,sizeof(string),"{FFCC99}* Gracz %s(%d).",giveplayer,i);
					SendClientMessage(playerid, COLOR_WHITE, string);
			        count++;
				}
			}
		   	if(count == 0)
			{
	    		SendClientMessage(playerid,COLOR_WHITE,"* Nie ma polaczonych lokatorów.");
			}
			else if(count >= 1)
			{
				format(string, 256, "* Aktualnie jest %d online lokatorów. ", count);
				SCM(playerid, COLOR_WHITE, string);
			}
		}
	}
	return 1;
}
CMD:wynajmij(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz,playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new h = 1; h < sizeof(HouseInfo); h++)
		{
			if(IsPlayerInRangeOfPoint(playerid,2.0, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRentabil] == 1)
			{
				if(PlayerInfo[playerid][pHouse] != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0) return SendClientMessage(playerid, COLOR_WHITE, "Jestes juz wlascicielem domu.");
				if(GetPlayerCash(playerid) > HouseInfo[h][hRent])
				{
					PlayerInfo[playerid][pRented] = h;
                    PlayerInfo[playerid][pHouse] = h;
					InHouse[playerid] = h;
	    			GivePlayerCash(playerid,-HouseInfo[h][hRent]);
					HouseInfo[h][hTakings] = HouseInfo[h][hTakings]+HouseInfo[h][hRent];
					SetPlayerInterior(playerid,HouseInfo[h][hInterior]);
					SetPlayerPosEx(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
					SetPlayerVirtualWorld(playerid,HouseInfo[h][hVirtual]);
					GameTextForPlayer(playerid, "~w~Witaj w domu~n~", 5000, 3);
					PlayerInfo[playerid][pInt] = HouseInfo[h][hInterior];
					PlayerInfo[playerid][pLocal] = h;
					Update(playerid,pCashx);
					new str[128];
					format(str,sizeof(str),"UPDATE users SET `Rented`='%d',`House`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pRented],PlayerInfo[playerid][pRented],PlayerInfo[playerid][pSQLID]);
					mysql_query(SQL,str);
				 	return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Nie masz potrzebnych pieniedzy.");
					return 1;
				}
			}
		}
	}
	return 1;
}

CMD:dom(playerid, params[])
{
	if(IsPlayerLogged[playerid] == 0)
		return SendClientMessage(playerid, COLOR_LIGHTRED, "Musisz sie najpierw zalogowac.");
		
	if(IsPlayerConnected(playerid))	{
		new bouse = PlayerInfo[playerid][pHouse];
    	if (PlayerInfo[playerid][pHouse] != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0) {
  		    new string[256];
  		    SCM(playerid, -1, "- - Informacje o domu - -");
  		    format(string, sizeof(string), "ID: %d | Cena: $%s | Czynsz: $%s | Sejf: $%s",
  			bouse, FormatNumber(HouseInfo[bouse][hValue]), FormatNumber(HouseInfo[bouse][hRent]), FormatNumber(HouseInfo[bouse][hTakings]));
  		    SCM(playerid, -1, string);
  		}
  		else SCM(playerid, -1, "Nie masz domu!");
  	}
  	return 1;
}
  		
CMD:housename(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pHouse],housename[250],string[100],playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));
    	if (PlayerInfo[playerid][pHouse] != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
  		{
			if(sscanf(params, "s[250]", housename)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/housename <wiadomosc>");
			new maxc = strlen(housename);
			if(maxc > 20) return SCM(playerid,COLOR_GREY, "Maksymalna ilosc znaków to 20.");
    		new housename2[250];
    		mysql_real_escape_string(housename, housename2);
			strmid(HouseInfo[bouse][hDiscription], housename2, 0, 64, 255);
   		 	format(string, sizeof(string), "Nazwe domu ustawiono w: %s",HouseInfo[bouse][hDiscription]);
    		SendClientMessage(playerid, COLOR_WHITE, string);
			new str[256];
			mysql_real_escape_string(HouseInfo[bouse][hDiscription], hackmysql);
			format(str,sizeof(str),"UPDATE houses SET Discription='%s' WHERE ID='%d'",hackmysql,PlayerInfo[playerid][pHouse]);
			mysql_query(SQL,str);
			UpdateLabel(1, bouse);
  		}
    	else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem domu.");
	}
	return 1;
}

CMD:housewithdraw(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pHouse],moneyhouse,string[100],playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));
		if(PlayerInfo[playerid][pHouse] != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
		{
			if(sscanf(params, "d",moneyhouse))
			{
				SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/housewithdraw <kwota>");
				format(string, sizeof(string), "{B8FFDB}Masz $%s w sejfie.", FormatNumber(HouseInfo[bouse][hTakings]));
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
            if(moneyhouse > 10000000) return SCM(playerid,COLOR_GREY, "Maksymalna kwota to $10,000,000.");
			if (moneyhouse >  HouseInfo[bouse][hTakings] || moneyhouse < 1) return SendClientMessage(playerid, COLOR_GREY, "Nie masz tej kwoty w sejfie.");
			if (!PlayerToPoint(100, playerid,HouseInfo[bouse][hExitx],HouseInfo[bouse][hExity],HouseInfo[bouse][hExitz]))
			{
				SendClientMessage(playerid, COLOR_GREY, "Nie jeste w poblizu swojego domu.");
				return 1;
			}
			else
			{
				GivePlayerCash(playerid,moneyhouse);
				HouseInfo[bouse][hTakings] = HouseInfo[bouse][hTakings]-moneyhouse;
				format(string, sizeof(string), "{B8FFDB}Wyciagnales $%s z sejfu. Teraz masz w nim: $%s", FormatNumber(moneyhouse),FormatNumber(HouseInfo[bouse][hTakings]));
				Update(playerid, pCashx);
				new str2[184];
				format(str2,sizeof(str2),"UPDATE `houses` SET `Takings`='%d' WHERE `ID`='%d'",HouseInfo[bouse][hTakings],HouseInfo[bouse][hID]);
				mysql_query(SQL,str2);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem domu.");
		}
	}
	return 1;
}
CMD:evict(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pHouse],playername[25],target;
		GetPlayerName(playerid, playername, sizeof(playername));
		if (bouse != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
		{
			if(sscanf(params, "u",target)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/evict <id/nazwa>");
			if (target == playerid) return SendClientMessage(target, COLOR_GREY, "Nie mozesz sie sam sie wyeksmitowac.");
			if(IsPlayerConnected(target))
			{
			    if(target != INVALID_PLAYER_ID)
			    {
					if(PlayerInfo[target][pHouse] == PlayerInfo[playerid][pHouse])
					{
						SendClientMessage(target, COLOR_WHITE, "Zostaliscie wyrzuceni z domu, który wynajmowaliscie.");
						SendClientMessage(playerid, COLOR_WHITE, "Gracz zostal wyeksmitowany z domu.");
						PlayerInfo[target][pHouse] = 999;
						PlayerInfo[target][pRented] = 0;
						new wakaname[25];
						GetPlayerName(target,wakaname,25);
						new str[100];
						format(str,100,"UPDATE users SET `House`='999',`Rented`='0' WHERE `ID`='%d'",PlayerInfo[target][pSQLID]);
						mysql_query(SQL,str);
						return 1;
					}
					else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie wynajmuje twojego domu.");
				}
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem domu.");
	}
	return 1;
}
CMD:evictall(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pHouse];
		if (bouse != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
		{
			foreach(Player, i)
			{
				if(i != playerid)
				{
					if (PlayerInfo[i][pHouse] == PlayerInfo[playerid][pHouse])
					{
						SendClientMessage(i, COLOR_WHITE, "Zostaliscie wyrzuceni z domu, który wynajmowaliscie.");
						SendClientMessage(playerid, COLOR_WHITE, "Wszyscy gracze ktorzy wynajmowali twoj dom zostali z niego wyeksmitowani!");
						PlayerInfo[i][pHouse] = 999;
						PlayerInfo[i][pRented] = 0;
						new str[100];
						format(str,100,"UPDATE users SET `House`='999',`Rented`='0' WHERE `ID`='%d'",PlayerInfo[i][pSQLID]);
						mysql_query(SQL,str);
						return 1;
					}
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem domu.");
	}
	return 1;
}
CMD:sellhousetostate(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
		new playername[25],sendername[25];
		GetPlayerName(playerid, playername, sizeof(playername));
		if(PlayerInfo[playerid][pHouse] == 999) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem domu.");
		if(PlayerInfo[playerid][pHouse] != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
		{
			new house = PlayerInfo[playerid][pHouse];
			HouseInfo[house][hHel] = 0;
			HouseInfo[house][hArm] = 0;
			HouseInfo[house][hLock] = 0;
			HouseInfo[house][hOwned] = 0;
            PlayerInfo[playerid][pRented] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(HouseInfo[house][hOwner], "Panstwo", 0, strlen("Panstwo"), 255);
			format(HouseInfo[house][hDiscription], 256, "");
			HouseInfo[house][hValue] = 50000;
			ConsumingMoney[playerid] = 1;
			new cashh = 25000;
			GivePlayerCash(playerid,cashh);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			new string[70];
			format(string, sizeof(string), "~w~Gratulacje~n~ Sprzedales swój dom ~n~~g~$%d", cashh);
			GameTextForPlayer(playerid, string, 10000, 3);
			PlayerInfo[playerid][pHouse] = 999;
			PlayerInfo[playerid][pRented] = -1;
			if(PlayerInfo[playerid][pLocal] == house)
			{
				SetPlayerInterior(playerid,0);
				SetPlayerPosEx(playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]);
				PlayerInfo[playerid][pInt] = 0;
			}
			Update(playerid,pCashx);
			Update(playerid,pRentedx);
			Update(playerid,pHousex);
			new str2[256];
			format(str2,sizeof(str2),"UPDATE `houses` SET `Hel`='0',`Arm`='0',`Lockk`='0',`Owned`='0',`Owner`='The State' WHERE `ID`='%d'",HouseInfo[house][hID]);
			mysql_query(SQL,str2);
			UpdateLabel(1,house);
			return 1;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem domu.");
	}
	return 1;
}
CMD:sprzedajdom(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		new id22 = PlayerInfo[playerid][pHouse];
		if(!IsPlayerInRangeOfPoint(playerid, 4,HouseInfo[id22][hEntrancex],HouseInfo[id22][hEntrancey],HouseInfo[id22][hEntrancez])) return SCM(playerid,COLOR_WHITE,"Nie jeste w poblizu swojego domu.");
		new money,giveplayerid,sendername[25],giveplayer[25],string[150],playername[25];
		GetPlayerName(playerid, playername, sizeof(playername));
		if(PlayerInfo[playerid][pHouse] != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
		{
			if(sscanf(params, "ui",giveplayerid,money)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/sprzedajdom <id/nazwa> <cena>");
			if(money < 1 || money > 1000000000) return SendClientMessage(playerid, COLOR_GREY, "Najnizsza cena to 1$, najwyzsza 1 000 000 000$.");
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pHouse] != 999) return SendClientMessage(playerid, COLOR_WHITE, "Ten gracz ma juz dom/czynsz.");
			        if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) return 1;
						if(GetPlayerCash(giveplayerid) < money) return SCM(playerid,COLOR_GREY, "Ten gracz nie ma wystarczajaco duzo pieniedzy.");
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "{B8FFDB}* Sprzedales swój dom %s za $%s.", giveplayer, FormatNumber(money));
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "{B8FFDB}* %s chce sprzedac swój dom za $%s, (wpisz /akceptuj dom %d) by zaakceptowac.", sendername, FormatNumber(money),playerid);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						HouseID[giveplayerid] = PlayerInfo[playerid][pHouse];
						HouseOffer[giveplayerid] = playerid;
						HousePrice[giveplayerid] = money;
					}
					else return SendClientMessage(playerid, COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
				}
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem domu.");
	}
	return 1;
}

CMD:setrent(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pHouse],playername[25],string[25],fee;
		GetPlayerName(playerid, playername, sizeof(playername));
		if (bouse != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
		{
			if(sscanf(params, "d",fee)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/setrent <Pieniadze>");
			if(fee < 1 || fee > 50) return SendClientMessage(playerid, COLOR_WHITE, "Minim $0, maxim $50.");
			HouseInfo[bouse][hRent] = fee;
			new str2[64];
			format(str2,64,"UPDATE `houses` SET `Rent`='%d' WHERE `ID`='%d'",fee,bouse);
			mysql_query(SQL,str2);
			format(string, sizeof(string), "Wynajem ustawiony na $%s.", FormatNumber(HouseInfo[bouse][hRent]));
			SendClientMessage(playerid, COLOR_WHITE, string);
			UpdateLabel(1,PlayerInfo[playerid][pHouse]);
			return 1;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem domu.");
	}
	return 1;
}
CMD:wynajmowanie(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pHouse],test,playername[25],string[30];
		GetPlayerName(playerid, playername, sizeof(playername));
		if (bouse != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
		{
			if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/wynajmowanie <0(Nie) - 1(Tak)>");
			if(test < 0 || test > 1) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/wynajmowanie <0(Nie) - 1(Tak)>");
			HouseInfo[bouse][hRentabil] = test;
			new str2[64];
			format(str2,64,"UPDATE `houses` SET `Rentabil`='%d' WHERE `ID`='%d'",test,bouse);
			mysql_query(SQL,str2);
			format(string, sizeof(string), "Wynajem ustawiony na %d.", HouseInfo[bouse][hRentabil]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			UpdateLabel(1,PlayerInfo[playerid][pHouse]);
			return 1;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem domu.");
	}
	return 1;
}
function UpdateHouseRadio(house) {
	foreach(Player, i) {
		if(IsPlayerConnected(i) && InHouse[i] == house) {
			switch(HouseInfo[house][hRadio]) {
				case 0: StopAudioStreamForPlayer(i);
				case 1: PlayAudioStreamForPlayer(i, "http://live.radiotaraf.com:8181");
				case 2: PlayAudioStreamForPlayer(i, "http://radiofunky.ro/live.pls");
				case 3: PlayAudioStreamForPlayer(i, "http://live.radiogangsta.ro:8800");
				case 4: PlayAudioStreamForPlayer(i, "http://dance.radiogangsta.ro:8800");
				case 5: PlayAudioStreamForPlayer(i, "http://rbandit.dyndns.tv:8000");
				case 6: PlayAudioStreamForPlayer(i, "http://live.radiohot.ro:8000");
				case 7: PlayAudioStreamForPlayer(i, "http://www.radiotequila.ro/hiphop.m3u");
				case 8: PlayAudioStreamForPlayer(i, "http://80.86.106.136/listen.pls");
				case 9: PlayAudioStreamForPlayer(i, "http://stream.radiozu.ro:8020");
				case 10: PlayAudioStreamForPlayer(i, "http://nextgen.go.ro:8012");
				case 11: PlayAudioStreamForPlayer(i, "http://stream.profm.ro:8012/profm.mp3");
				case 12: PlayAudioStreamForPlayer(i, "http://live.radioclubmix.ro: 9999");
				case 13: PlayAudioStreamForPlayer(i, "http://livemp3.radiopopular.ro:7777");
			}
		}
	}
	return 1;
}
	
CMD:houseupgrade(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
		new house = PlayerInfo[playerid][pHouse];
		new playername[25],item;
		GetPlayerName(playerid, playername, sizeof(playername));
		if (house != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
		{
			if(sscanf(params, "d",item))
			{
				SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/hu <rzecz>");
				SendClientMessage(playerid, COLOR_WHITE, "(1) Apteczka Upgrade $5000.");
				SendClientMessage(playerid, COLOR_WHITE, "(2) Armor Upgrade $10,000.");
				SendClientMessage(playerid, COLOR_WHITE, "(3) Radio $5,000.");
				
				return 1;
			}
			switch (item)
			{
				case 1:
				{
					if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid, COLOR_GREY, "Nie masz pieniedzy, aby to zrobic.");
					HouseInfo[house][hHel] = 1;
					GivePlayerCash(playerid,-5000);
					BizzInfo[9][bBalance] += 5000;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_WHITE, "Teraz mozesz zabrac swoje zycie z domu, wpisz /heal.");
					new str2[64];
					format(str2,64,"UPDATE `houses` SET `Hel`='1' WHERE `ID`='%d'",house);
					mysql_query(SQL,str2);
				}
				case 2:
				{
				    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz tego kupic, poniewaz  Nie jeste czlonkiem LSPD.");
					if(GetPlayerCash(playerid) < 10000) return SendClientMessage(playerid, COLOR_GREY, "Nie masz pieniedzy, aby to zrobic.");
					HouseInfo[house][hArm] = 1;
					GivePlayerCash(playerid,-10000);
					BizzInfo[9][bBalance] += 10000;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_WHITE, "Teraz mozesz zabrac swoja kamizelke kuloodporna z domu, wpisz /heal.");
					new str2[64];
					format(str2,64,"UPDATE `houses` SET `Arm`='1' WHERE `ID`='%d'",house);
					mysql_query(SQL,str2);
				}
				case 3: {
					new radiostr[1024];
					format(radiostr, sizeof(radiostr), "{E82727}Opreste Radio-ul\nRadio Taraf Romania\nRadio Funky Manele\nRadio Gangsta Manele\nRadio Gangsta Dance\nRadio Bandit Romania\nRadio Hot Romania\nRadio Tequila HipHop\nRadio Kiss FM\nRadio ZU Romania\nRadio Greu de Difuzat\nRadio Pro FM\nRadio ClubMix\nRadio Popular");
					ShowPlayerDialog(playerid,171,DIALOG_STYLE_LIST,"Radio",radiostr,"Ok", "Wyjdz");
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem domu.");
	}
	return 1;
}
CMD:aimtest(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >=1)
	{
		if(Spectate[playerid] == 255) return SCM(playerid,COLOR_GREY, "Nie jeste na specu.");
		new targetplayer = GetPlayerTargetPlayer(Spectate[playerid]);
		if(targetplayer == INVALID_PLAYER_ID) return 1;
		new Float:x2,Float:y2,Float:z2;
		GetPlayerPos(targetplayer,x2,y2,z2);
		Aimx[targetplayer] = x2;
		Aimy[targetplayer] = y2;
		Aimz[targetplayer] = z2;
		new Float:x,Float:y,Float:z;
  		GetPlayerPos(Spectate[playerid],x,y,z);
	    SetPlayerPosEx(targetplayer, x,y+10,z);
	    SetTimerEx("aimback",3000,0,"d",targetplayer);
	    new string[100],giveplayer[25],executor[25];
	    GetPlayerName(Spectate[playerid], giveplayer, sizeof(giveplayer));
	    GetPlayerName(playerid, executor, sizeof(executor));
		format(string, sizeof(string), "AdmCmd: %s z powodzeniem wykonal test AIM na %s (/aimtest %d)",executor,giveplayer,Spectate[playerid]);
	    SendAdminMessage(COLOR_LOGS, string,1);
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}
CMD:unfrakcja(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 4)
	{
		new id,string[100],giveplayer[30],sendername[MAX_PLAYER_NAME];
		if(sscanf(params, "u", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/unfrakcja <id/nazwa>");
 		GetPlayerName(id, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(id))
		{
			if(id != INVALID_PLAYER_ID)
    		{
    			format(string, sizeof(string), "* Zostales usuniety z frakcji przez administratora %s.",sendername);
				SendClientMessage(id, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "Admin %s dal (/unfrakcja) dla gracza %s", sendername, giveplayer);
				AdminLog("/logs/leader.log", string);
    			PlayerInfo[id][pMember]=0;
                PlayerInfo[id][pLeader]=0;
                PlayerInfo[id][pRank] = 0;
				PlayerInfo[id][pFACWarns] = 0;
				PlayerInfo[id][pFpunish] = 0;
				gTeam[id] = 3;
				PlayerInfo[id][pTeam] = 3;
				OnDuty[id] = 0;
				tazer[id] = 0;
				SetPlayerArmourEx(id, 0);
    			//SetPlayerSkinEx(id,PlayerInfo[id][pModel]);
				SpawnPlayer(id);
				new str[256];
				format(str,sizeof(str),"UPDATE users SET `Member`='0',`Leader`='0',`Rank`='0',`FSkin`='0',`FWarn`='0',`FPunish`='0',`Team`='3' WHERE `ID`='%d'",PlayerInfo[id][pSQLID]);
				mysql_query(SQL,str);
				PlayerInfo[id][pCommands] = 0;
				new rquery[256];
				format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[id][pCommands], PlayerInfo[id][pSQLID]);
				mysql_query(SQL, rquery);
				if(PlayerInfo[id][pShowFaction] == 1) {
					PlayerInfo[id][pShowFaction] = 0;
					PlayerTextDrawHide(id, JobTD);
					Update(id, pShowFactionx);
				}
				return 1;
			}
		}
		else
 		{
             SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}
CMD:unbanip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		new ip[30],string[128],sendername[MAX_PLAYER_NAME];
		if(sscanf(params, "s[16]", ip)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/unbanip <player ip>");
		{
			format(string,sizeof(string),"unbanip %s",ip);
			SendRconCommand(string);
			SendRconCommand("reloadbans");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string,sizeof(string),"Log: %s unbanip %s.",sendername,ip);
			AdminLog("/logs/admin.log", string);
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}
CMD:getip(playerid, params[])
{
	new id,playersip[256],giveplayer[30],string[256];
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		if(sscanf(params, "u", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/getip <id/nazwa>");
		{
			GetPlayerName(id, giveplayer, sizeof(giveplayer));
			if(id != INVALID_PLAYER_ID)
	        {
				GetPlayerIp(id,playersip,sizeof(playersip));
				format(string, sizeof(string), "Gracz: %s (%d) IP: %s",giveplayer,id,playersip);
				SendClientMessage(playerid,COLOR_GRAD2,string);
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}
CMD:am(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 5)
	{
		new msjam[250],string[250];
		if(sscanf(params, "s[250]", msjam)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFFF00}Uzycie: /am <wiadomosc>");
		format(string, sizeof(string), "ADMIN: %s", msjam);
		OOCOff(COLOR_LIGHTBLUE,string);
		printf("%s", string);
  	}
	else
	{
		SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}
CMD:agivemats(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 4)
	{
	   	if(IsPlayerConnected(playerid))
    	{
			new string[100],id,mats,giveplayer[30],sendername[MAX_PLAYER_NAME];
			if(sscanf(params, "ui", id,mats)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/agivemats <id/nazwa> <ilosc>");
			GetPlayerName(id, giveplayer, sizeof(giveplayer));
   			{
		    	PlayerInfo[id][pMats] += mats;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "AdmCmd: Admin %s dal %s %d materialów.", sendername,giveplayer,mats);
				SendAdminMessage(COLOR_LOGS,string,4);
				new wakaname[25],str[128];
				GetPlayerName(id,wakaname,sizeof(wakaname));
				format(str,sizeof(str),"UPDATE users SET `Mats`='%d' WHERE `ID`='%d'",PlayerInfo[id][pMats],PlayerInfo[id][pSQLID]);
				mysql_query(SQL,str);
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}
CMD:setage(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			new string[100],id,age,giveplayer[30],sendername[MAX_PLAYER_NAME];
			if(sscanf(params, "ui", id,age)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/setage <id/nazwa> <wiek>");
			GetPlayerName(id, giveplayer, sizeof(giveplayer));
			{
			    if(IsPlayerConnected(id))
			    {
			        if(id != INVALID_PLAYER_ID)
			        {
						PlayerInfo[id][pAge] = age;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 256, "AdmCmd: Admin %s ustawil wiek %s na %d.", sendername,giveplayer,age);
						SendAdminMessage(COLOR_LOGS,string,2);
						new wakaname[25],str[128];
						GetPlayerName(id,wakaname,sizeof(wakaname));
						format(str,sizeof(str),"UPDATE users SET `Age`='%d' WHERE `ID`='%d'",PlayerInfo[id][pAge],PlayerInfo[id][pSQLID]);
						mysql_query(SQL,str);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}


CMD:spec(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
		if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 2)
		{
			new id,giveplayer[25],string[100];
			if(sscanf(params, "u", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/spec <id/nazwa>");
			{
				if(IsPlayerConnected(id))
				{
				    if(id != INVALID_PLAYER_ID)
				    {
				        Spectate[playerid] = id;
						new Float:health;
						GetPlayerHealthEx(Spectate[playerid], health);
						GetPlayerName(Spectate[playerid], giveplayer, sizeof(giveplayer));
						SpecPlayers[playerid] ++;
						if(SpecPlayers[playerid] == 1) {
							GetPlayerPos(playerid, SpecPos[playerid][0], SpecPos[playerid][1], SpecPos[playerid][2]);
							IsPlayerSpec[playerid] = 1;
	      					pInteriorID[playerid] = GetPlayerInterior(playerid);
	        				pVirtual[playerid] = GetPlayerVirtualWorld(playerid);
						}
        				
						format(string, sizeof(string), "AdmCmd: %s jest obserwatorem %s.", GetName(playerid),GetName(id));
						SendAdminMessage(COLOR_LOGS, string,1);
						TogglePlayerSpectating(playerid, 1);
						if(IsPlayerInAnyVehicle(Spectate[playerid]))
						{
						    new carid = GetPlayerVehicleID(Spectate[playerid]);
						    PlayerSpectateVehicle(playerid, carid);
						}
						else
						{
						    PlayerSpectatePlayer(playerid, Spectate[playerid]);
						}
						PlayerTextDrawSetString(playerid, SpecTD, "Ladowanie...");
						PlayerTextDrawShow(playerid, SpecTD);								
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
				}
			}
   		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
			return 1;
		}
	}
	return 1;
}
CMD:specoff(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(Spectate[playerid] < 253 && Spectate[playerid] != 255)
			{
				TogglePlayerControllable(playerid, 1);
				TogglePlayerSpectating(playerid, 0);
				SetPlayerInterior(playerid,Unspec[playerid][sPint]);
				PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
				PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
				Unspec[playerid][sLocal] = 255;
				gTeam[playerid] = PlayerInfo[playerid][pTeam];
				
				SendClientMessage(playerid, COLOR_GREEN, "Nie jeste juz obserwatorem.");
	        	PlayerTextDrawHide(playerid, SpecTD);
				SpawnPlayer(playerid);
				Spectate[playerid] = 255;
				return 1;
			}
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}
CMD:achangeemail(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	new id,email[64];
	if(sscanf(params, "us[64]",id,email)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/changeemail <id/nazwa> <Email>");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GREY, "Ten gracz nie jest polaczony.");
	if(IsPlayerConnected(id))
	{
		strmid(PlayerInfo[playerid][pEmail], email, 0, strlen(email), 255);
		Update(id,pEmailx);
	}
	else return SendClientMessage(playerid,COLOR_GREY, "Ten gracz nie jest polaczony.");
	return 1;
}
CMD:changename(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		new id,changenametext[25],string[456],giveplayer[30],sendername[30];
		if(sscanf(params, "us[25]",id,changenametext)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/changename <id/nazwa> <name>");
		GetPlayerName(id, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
  		if(IsPlayerConnected(id))
		{
			new newname = MySQLCheckAccount(changenametext);
			if(newname != 0) return SCM(playerid,COLOR_GREY, "Nazwa existent.");
			if(PlayerInfo[id][pHouse] != 999 && strcmp(giveplayer, HouseInfo[PlayerInfo[id][pHouse]][hOwner], true) == 0)
			{
				new houseid = PlayerInfo[id][pHouse];
				strmid(HouseInfo[houseid][hOwner], changenametext, 0, strlen(changenametext), 255);
				mysql_real_escape_string(changenametext, hackmysql);
				format(string,sizeof(string),"UPDATE `houses` SET `Owner`='%s' WHERE `ID`='%d'",hackmysql,houseid);
				mysql_query(SQL,string);
				UpdateLabel(1,PlayerInfo[id][pHouse]);
	   		}
			if(PlayerInfo[id][pBizz] != 255)
			{
				new bizid2 = PlayerInfo[id][pBizz];			
				strmid(BizzInfo[bizid2][bOwner], changenametext, 0, strlen(changenametext), 255);
				mysql_real_escape_string(changenametext, hackmysql);
				format(string,sizeof(string),"UPDATE `bizz` SET `Owner`='%s' WHERE `ID`='%d'",hackmysql,bizid2);
				mysql_query(SQL,string);
				UpdateLabel(2,PlayerInfo[id][pBizz]);				
	   		}
			new str[128];
			mysql_real_escape_string(changenametext, hackmysql);
			format(str,sizeof(str),"UPDATE users SET `name`='%s' WHERE `ID`='%d'",hackmysql,PlayerInfo[id][pSQLID]);
			mysql_query(SQL,str);
			SetPlayerName(id, changenametext);
			format(string, 256, "AdmCmd: Admin %s zmienil nazwe %s na %s.", sendername,giveplayer,changenametext);
			SendAdminMessage(COLOR_LOGS,string,4);
			SCM(id,COLOR_LIGHTRED,"Masz kicka, by zapisac wszystko w bazie danych.");
			KickEx(id);
		}
		else return SendClientMessage(playerid,COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}
CMD:sethour(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			new id,hours,string[100],giveplayer[30],sendername[30];
			if(sscanf(params, "ui",id,hours)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/sethour <id/nazwa> <Hours played>");
			{
			    if(IsPlayerConnected(id))
			    {
			        if(id != INVALID_PLAYER_ID)
			        {
						GetPlayerName(id, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[id][pConnectTime] = hours;
						format(string, sizeof(string), "AdmCmd: Admin %s ustawil graczu %s %d godzin.", sendername,giveplayer,hours);
						SendAdminMessage(COLOR_LOGS,string,5);
						Update(id,pConnectTimex);
					}
				}
				else return SendClientMessage(playerid,COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}

CMD:giveallmoney(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		new moneyall,sendername[MAX_PLAYER_NAME],string[100];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "i",moneyall)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/giveallmoney <Pieniadze>");
		if(moneyall >= 99999999) return SendClientMessage(playerid, COLOR_GREY, "Za duzo pieniedzy.");
		else if(moneyall < 99999999)
		{
			format(string, sizeof(string),"Admin %s dal wszystkim %s$.",sendername,FormatNumber(moneyall));
			SendClientMessageToAll(COLOR_YELLOW,string);
			foreach(Player,i)
			{
				GivePlayerCash(i, moneyall);
			}
		}
	}
	else
	{
	     SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	 	 return 1;
	}
	return 1;
}
CMD:givealllevel(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		new rpall,sendername[MAX_PLAYER_NAME],string[100];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "i",rpall)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/givealllevel <poziom>");
		if(rpall >= 50) return SendClientMessage(playerid, COLOR_GREY, "Zbyt wysoki poziom.");
		else if(rpall < 50)
		{
			format(string, sizeof(string),"Admin %s dal wszystkim %d poziom.",sendername,rpall);
			SendClientMessageToAll(COLOR_YELLOW,string);
			foreach(Player,i)
			{
				PlayerInfo[i][pLevel] += rpall;
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}

CMD:giveallrp(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		new rpall,sendername[MAX_PLAYER_NAME],string[100];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "i",rpall)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/giveallrp <punkty respektu>");
		if(rpall >= 50) return SendClientMessage(playerid, COLOR_GREY, "Za duzo RP (1-50).");
		else if(rpall < 50)
		{
			format(string, sizeof(string),"Admin %s dal wszystkim %d punktów respektu.",sendername,rpall);
			SendClientMessageToAll(COLOR_YELLOW,string);
			foreach(Player,i)
			{
				PlayerInfo[i][pExp] += rpall;
			}
		}
	}
	else
	{
	     SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	 	 return 1;
	}
	return 1;
}
CMD:hh(playerid, params[])
{
	if(PlayerInfo[playerid][pHelper] >= 1) SendClientMessage(playerid, COLOR_GRAD1, "Helper 1: /hc, /hduty, /nreply, /nskip, /ndelete, /checkhelp, /goto.");				
	if(PlayerInfo[playerid][pHelper] >= 2) SendClientMessage(playerid, COLOR_GRAD1, "Helper 2: /spec, /kick.");	
	if(PlayerInfo[playerid][pHelper] >= 3) SendClientMessage(playerid, COLOR_GRAD1, "Helper 3: /acceptevent");	
	return 1;
}
CMD:ah(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
	{
		ShowPlayerDialog(playerid, DIALOG_AHELP, DIALOG_STYLE_LIST, "Komendy:", "Helper 1\nHelper 2\nHelper 3\nAdmin 1\nAdmin 2\nAdmin 3\nAdmin 4\nAdmin 5\nAdmin 6", "Wybierz", "Anuluj");
	}
	else SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
 	return 1;
}
CMD:skick(playerid, params[])
{
	new id,string[100],sendername[25],giveplayer[25];
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
	    if(sscanf(params, "u", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/skick <id/nazwa>");
	    {
	        if(id != INVALID_PLAYER_ID)
	        {
				KickEx(id);
				GetPlayerName(playerid,sendername,sizeof(sendername));
				GetPlayerName(id,giveplayer,sizeof(giveplayer));
				format(string,sizeof(string),"{FFFFCC}SKick: %s zostal wyrzucony przez %s.",giveplayer,sendername);
				SendAdminMessage(COLOR_LOGS,string,1);
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}
CMD:kick(playerid, params[])
{
	new id, reason[128], string[256], sendername[25], giveplayer[25];
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
	{
	    if(sscanf(params, "us[128]", id, reason)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/kick <id/nazwa> <powód>");
	    {
	        if(id != INVALID_PLAYER_ID)
	        {
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "AdmCmd: %s zostal wyrzucony przez %s, Powod: %s", giveplayer, sendername, reason);
				AdminLog("/logs/kick.log", string);
				//format(string, sizeof(string),"~r~Kick~n~~w~Gracz: %s~n~Nadajacy: %s~n~~y~~h~%s", giveplayer, sendername, reason); 
   				//ShowPenalty(string);
				//format(string, sizeof(string), "AdmCmd: %s zostal wyrzucony przez %s, Powód: %s", giveplayer, sendername, reason);
				//SendClientMessageToAll(COLOR_LIGHTRED, string);
				InsereazaSanctiune(id, playerid, KICK, reason);	
				KickPlayer(id, GetName(playerid), reason);
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}
CMD:rveh(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	{
		new car;
	    if(sscanf(params, "d",car)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/rveh <id pojazdu>");
		new bool:unwanted[CAR_AMOUNT];
	    for(new player=0; player<MAX_PLAYERS; player++)
     	{
             if(IsPlayerInAnyVehicle(player))
			 {
			 	unwanted[GetPlayerVehicleID(player)]=true;
			 }
     	}
		if(!unwanted[car]) SetVehicleToRespawn(car);
	}
	return 1;
}
CMD:rac(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		new bool:unwanted[CAR_AMOUNT];
	    for(new player=0; player<MAX_PLAYERS; player++)
     	{
             if(IsPlayerInAnyVehicle(player))
			 {
			 	unwanted[GetPlayerVehicleID(player)]=true;
			 }
     	}
		for(new car = 1; car <= 420; car++)
		{
		    if(!unwanted[car]){
			SetVehicleToRespawn(car);
			Gas[car] = 100;
			Silnik[car] = 0;
			Swiatla[car] = 0;
			Maska[car] = 0;
			Bagaznik[car] = 0;
			}
		}
    }
    else
    {
        SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		return 1;
	}
	return 1;
}
CMD:respawn(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
  		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new id,sendername[30],giveplayer[30],string[100];
			if(sscanf(params, "u", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/respawn <id/nazwa>");
			{
				if(IsPlayerConnected(id))
    			{
				    if(id != INVALID_PLAYER_ID)
    				{
						GetPlayerName(id, giveplayer, sizeof(giveplayer));
						SpawnPlayer(id);
						TogglePlayerControllable(id, 0);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 256, "AdmCmd: %s zrespawnowal gracza %s.", sendername, giveplayer);
						SendAdminMessage(COLOR_LOGS,string,1);
 						format(string, sizeof(string), "* Otrzyma³e respawn od %s", sendername);
						SendClientMessage(id, COLOR_WARNING, string);		
						SetTimerEx("UnFreezeStation", 3000, false, "i", id);						
						return 1;
					}
				}
                else
                {
                    SCM(playerid,COLOR_GREY, "Ten gracz nie jest polaczony.");
                }
			}
   		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}
CMD:lc(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pLeader] >= 1)
		{
			new sendername[30],mesajelc[250],string[250];
	       	GetPlayerName(playerid, sendername, sizeof(sendername));
	    	if(sscanf(params, "s[250]",mesajelc)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/lc <wiadomosc>");
	    	{
		    	if (PlayerInfo[playerid][pLeader] >= 1)
		    	{
					format(string, sizeof(string), "(/lc) %s Lider %s: %s",GetFactionName(PlayerInfo[playerid][pMember]), sendername, mesajelc);
		     		LeaderChat(COLOR_SERVER, string);
		    	}
            }
        }
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ta komenda jest tylko dla liderów.");
			return 1;
		}
	}
	return 1;
}
CMD:hc(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pHelper] >= 1)
		{
			new sendername[30],texthl[250],string[250];
	       	GetPlayerName(playerid, sendername, sizeof(sendername));
	    	if(sscanf(params, "s[250]",texthl)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/hc <wiadomosc>");
	    	{
		     	format(string, sizeof(string), "Helper %s: %s",sendername, texthl);
		    	if (PlayerInfo[playerid][pHelper] >= 1)
		    	{
		     		HLChat(0xD18547FF, string);
		    	}
		    	printf("Helper %s: %s", sendername, texthl);
            }
        }
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Nie jeste pomocnikiem.");
			return 1;
		}
	}
	return 1;
}
/*D:obl(playerid, params[]) {
	new string[256];
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
    for(new i = 1; i <=MAX_SVEHICLES; i++)
    {
	format(string, 128, "Obiekt: %d", Object[i][ouuid]);
	SendClientMessage(playerid,COLOR_LIGHTRED,string);
	string = "";
	format(string, 128, "Model: %d", Object[i][omodel]);
	SendClientMessage(playerid,COLOR_LIGHTRED,string);
	string = "";
	format(string, 128, "VW: %d", Object[i][ovw]);
	SendClientMessage(playerid,COLOR_LIGHTRED,string);
	}
	return 1;
}*/


CMD:fveh(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	new fid, string[128];
	if(sscanf(params, "i", fid)) return SCM(playerid, -1, "Uzycie: /fveh <frakcja id>");
	if(fid < 1 || fid > 14) return SCM(playerid, COLOR_GREY, "Zle id frakcji!");	
	format(string, 128, "%s lista pojazdow:", NumeFactiune(fid));
	SCM(playerid, COLOR_SERVER, string);
	string = "";
	for(new v = 0; v < MAX_SVEHICLES; v++) {	
		if(ServerVehicles[v][vFaction] == fid) {
			format(string, 128, "%s %d (UUID: %d) ", string, v, ServerVehicles[v][vuuid]);		
		}
	}
	SCM(playerid, -1, string);
	return 1;
}

CMD:jveh(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	new fid, string[128];
	if(sscanf(params, "i", fid)) return SCM(playerid, -1, "Uzycie: /jveh <praca id>");
	if(fid < 1 || fid > 13) return SCM(playerid, COLOR_GREY, "Zle id pracy!");	
	format(string, 128, "%s pojazdy pracy:", GetJobName(fid));
	SCM(playerid, COLOR_SERVER, string);
	string = "";
	for(new v = 0; v < MAX_SVEHICLES; v++) {	
		if(ServerVehicles[v][vJob] == fid) {
			format(string, 128, "%s %d", string, v);		
		}
	}
	SCM(playerid, -1, string);
	return 1;
}

CMD:fvr(playerid, params[])
{
	if(IsPlayerConnected(playerid))
   	{
      	if(PlayerInfo[playerid][pLeader] >= 1 ||PlayerInfo[playerid][pRank] >=5)
      	{
			for(new v = 0; v < MAX_SVEHICLES; v++)
			{
				if(ServerVehicles[v][vFaction] == PlayerInfo[playerid][pMember]) {
    				if(!IsVehicleOccupied(v)) SetVehicleToRespawn(v), Gas[v] = 100;
				}
			
			}
			SCM(playerid,COLOR_YELLOW2, "Wszystkie pojazdy frakcji zostaly odrodzone.");
      	}
	  	else return 1;
	}
    return 1;
}

CMD:funwarn(playerid, params[])
{
	new id,sendername[30],giveplayer[30],string[100];
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pLeader] >= 1)
		{
			if(sscanf(params, "u", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/funwarn <id/nazwa>");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(id, giveplayer, sizeof(giveplayer));
			if(PlayerInfo[id][pLeader] >= 1) return SCM(playerid,COLOR_GREY, "Ten gracz jest liderem.");
			if(PlayerInfo[id][pMember] > 0 && (PlayerInfo[id][pMember] == PlayerInfo[playerid][pLeader]))
			{
				if(IsPlayerConnected(id))
		    	{
		        	if(id != INVALID_PLAYER_ID)
		        	{
						if(PlayerInfo[id][pFACWarns] <= 0) return SCM(playerid,COLOR_GREY, "Ten gracz nie ma FWarnów.");
						PlayerInfo[id][pFACWarns] -= 1;
						format(string, sizeof(string), "Usunieto %s FWarna.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Lider %s usunal Ci FW.", sendername);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);
						format(string,sizeof(string),"UPDATE users SET `FWarn`='%d' WHERE `ID`='%d'",PlayerInfo[id][pFACWarns],PlayerInfo[id][pSQLID]);
						mysql_query(SQL,string);
						Factionlog(PlayerInfo[id][pMember],PlayerInfo[id][pSQLID],"I-a fost sters un FW.");
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Tego gracza nie ma w twojej frakcji.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ta komenda jest tylko dla liderów.");
	}
	return 1;
}

stock ShowFactionMembers(playerid) {
	if(PlayerInfo[playerid][pMember] + PlayerInfo[playerid][pLeader] == 0) return 1;
	new szQuery[256], string[256], MemberString[1024], szResult[256];
	new name[256], lastl[256], rank[256], fw[256], TitleString[256], tmembers, onmembers;
	format(szQuery, sizeof(szQuery), "SELECT * FROM `users` WHERE `users`.`Member` = '%d' ORDER BY `users`.`Rank` ASC LIMIT 50", PlayerInfo[playerid][pMember]);
	new Cache: result = mysql_query(SQL, szQuery);

	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
		cache_get_field_content(i, "name", szResult); format(name, 256, szResult);
		cache_get_field_content(i, "lastOn", szResult); format(lastl, 256, szResult);
		cache_get_field_content(i, "Rank", szResult); format(rank, 256, szResult);
		cache_get_field_content(i, "FWarn", szResult);  format(fw, 256, szResult);
		format(Selected[playerid][tmembers], MAX_PLAYER_NAME, name);
		new userID = GetPlayerID(name);
        if(userID != INVALID_PLAYER_ID) {
            onmembers++;
            if(tmembers == 0) format(string, sizeof(string), "Nazwa\tStatus\tRang\tFWarns\n(%d) %s\tOnline\t%d\t%s/3\n", userID, name, PlayerInfo[userID][pRank], fw);
            else format(string, sizeof(string), "(%d) %s\tOnline\t%d\t%s/3\n", userID, name, PlayerInfo[userID][pRank], fw);
			strcat(MemberString, string, sizeof(MemberString));
        }
        else {
            if(tmembers == 0) format(string, sizeof(string), "Nazwa\tStatus\tRang\tFWarns\n%s\t%s\t%s\t%s/3\n", name, lastl, rank, fw);
			else format(string, sizeof(string), "%s\t%s\t%s\t%s/3\n", name, lastl, rank, fw);
            strcat(MemberString, string, sizeof(MemberString));
        }
		tmembers++;
	}
	cache_delete(result);
	format(TitleString, sizeof(TitleString), "Czlonkowie: %d/%d online", onmembers, tmembers);
	ShowPlayerDialog(playerid, DIALOG_MEMBERS, DIALOG_STYLE_TABLIST_HEADERS, TitleString, MemberString, "Wybierz", "Anuluj");
	return 1;
}

stock ShowRaports(playerid) {
	if(PlayerInfo[playerid][pMember] + PlayerInfo[playerid][pLeader] == 0) return 1;
	new szQuery[256], string[256], MemberString[1500], szResult[256];
	new name[256], cmds[256], rank[256], fw[256];
	format(szQuery, sizeof(szQuery), "SELECT * FROM `users` WHERE `users`.`Member` = '%d' AND `Rank` != '7' ORDER BY `users`.`Rank` ASC LIMIT 50", PlayerInfo[playerid][pMember]);
	new Cache: result = mysql_query(SQL, szQuery);


    strcat(MemberString, "Nazwa\tRanga\tRaport\tStatus\n");
	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
		cache_get_field_content(i, "name", szResult); format(name, 256, szResult);
		cache_get_field_content(i, "Commands", szResult); format(cmds, 256, szResult);
		cache_get_field_content(i, "Rank", szResult); format(rank, 256, szResult);
		cache_get_field_content(i, "FWarn", szResult);  format(fw, 256, szResult);
		
		format(string, sizeof(string), "%s\t%d\t%d/%d\t%s\n", name, strval(rank), strval(cmds), GetNeedPointsR2(strval(rank), PlayerInfo[playerid][pMember]), (GetNeedPointsR2(strval(rank), PlayerInfo[playerid][pMember])-strval(cmds) <= 0) ? ("{0DFF00}Skonczony{FFFFFF}") : ("{FF0000}Niedokonczony{FFFFFF}"));
        strcat(MemberString, string);
	}
	cache_delete(result);
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, "Raporty", MemberString, "Wybierz", "Anuluj");
	return 1;
}

CMD:pracownicy(playerid, params[]) return ShowFactionMembers(playerid);
CMD:raports(playerid, params[]) return ShowRaports(playerid);

CMD:fwarn(playerid, params[])
{
	new id,sendername[30],giveplayer[30],string[100];
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pLeader] >= 1)
		{
			if(sscanf(params, "u", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/fwarn <id/nazwa>");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(id, giveplayer, sizeof(giveplayer));
			if(PlayerInfo[id][pLeader] >= 1) return SCM(playerid,COLOR_GREY, "Ten gracz jest liderem.");
			if(PlayerInfo[id][pMember] > 0 && (PlayerInfo[id][pMember] == PlayerInfo[playerid][pLeader]))
			{
				if(IsPlayerConnected(id))
		    	{
		        	if(id != INVALID_PLAYER_ID)
		        	{
						PlayerInfo[id][pFACWarns] += 1;
						format(string, sizeof(string), "Dales %s FW.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Lider %s podal ci FWwarn.", sendername);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);
						new str[250];
						format(str,sizeof(str),"UPDATE users SET `FWarn`='%d' WHERE `ID`='%d'",PlayerInfo[id][pFACWarns],PlayerInfo[id][pSQLID]);
						mysql_query(SQL,str);
						Factionlog(PlayerInfo[id][pMember],PlayerInfo[id][pSQLID],"A primit un FW.");
						if(PlayerInfo[id][pFACWarns] >= 3)
						{
			            	gTeam[id] = 3;
							PlayerInfo[id][pTeam] = 3;
							PlayerInfo[id][pMember] = 0;
  							PlayerInfo[id][pLeader] = 0;
                    		PlayerInfo[id][pRank] = 0;
							PlayerInfo[id][pChar] = 0;
							PlayerInfo[id][pFpunish] = 5;
							PlayerInfo[id][pFACWarns] = 0;
							OnDuty[id] = 0;
							SetPlayerArmourEx(id, 0);
							format(string, sizeof(string), "Lider %s dal ci FWarn i masz ich juz 3/3.", sendername);
							SendClientMessage(id, COLOR_LIGHTBLUE, string);
							SetPlayerSkinEx(id,PlayerInfo[id][pModel]);
							SpawnPlayer(id);
							format(str,sizeof(str),"UPDATE users SET `Team`='3',`Member`='0',`Leader`='0',`Rank`='0',`FSkin`='0',`FPunish`='5',`FWarn`='0' WHERE `ID`='%d'",PlayerInfo[id][pSQLID]);
							mysql_query(SQL,str);
						}
						return 1;
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Gracza nie ma w twojej frakcji.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ta komenda jest tylko dla liderów.");
	}
	return 1;
}

CMD:setstatus(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] == 0) return SCM(playerid, COLOR_GREY, "Nie jeste liderem frakcji!");
	switch(DynamicFactions[PlayerInfo[playerid][pLeader]][fApp]) {
	    case 0: SCM(playerid, COLOR_WHITE, "Otwarte aplikacje!"), DynamicFactions[PlayerInfo[playerid][pLeader]][fApp] = 1;
	    case 1: SCM(playerid, COLOR_WHITE, "Aplikacje zamkniete!"), DynamicFactions[PlayerInfo[playerid][pLeader]][fApp] = 0;
	}
	new query[256];
	format(query, sizeof(query), "UPDATE `factions` SET `App`='%d' WHERE `ID`='%d'", DynamicFactions[PlayerInfo[playerid][pLeader]][fApp], PlayerInfo[playerid][pLeader]);
	mysql_query(SQL, query);
	return 1;
}

CMD:wypros(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] >= 1 || PlayerInfo[playerid][pAdmin] >= 5)
	{
		new id, fp,sendername[25],giveplayer[25],string[256];
		if(sscanf(params, "ui", id, fp)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/wypros <id/nazwa> <FPunish (1 or 0)>");
        
		if(PlayerInfo[id][pLeader] >= 1) return SCM(playerid,COLOR_GREY, "Ten gracz jest liderem.");
		{
			if(id != INVALID_PLAYER_ID)
	        {
				if (PlayerInfo[id][pMember] > 0 && ((PlayerInfo[id][pMember] == PlayerInfo[playerid][pLeader]) || (PlayerInfo[playerid][pAdmin] >= 5)))
				{
					if(fp==0)
					{
						GetPlayerName(id, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Lider %s wyrzucil cie z frakcji. Teraz Jestes cywilem!", sendername);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);
			            gTeam[id] = 3;
						PlayerInfo[id][pTeam] = 3;
						PlayerInfo[id][pMember] = 0;
						PlayerInfo[id][pRank] = 0;
						PlayerInfo[id][pChar] = 0;
      					PlayerInfo[id][pLeader] = 0;
						PlayerInfo[id][pFACWarns] = 0;
						PlayerInfo[id][pFpunish] = 0;
						tazer[id] = 0;
						OnDuty[id] = 0;
						SetPlayerArmourEx(id, 0);
						SetPlayerSkinEx(id,PlayerInfo[id][pModel]);
						printf("AdmCmd: %s wyrzucil z frakcji %s.", sendername, giveplayer);
						SpawnPlayer(id);
		     			format(string, sizeof(string), "* Wyrzuciles %s z frakcji.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string,sizeof(string),"UPDATE users SET `Team`='3',`Member`='0',`Leader`='0',`Rank`='0',`FPunish`='0',`FWarn`='0' WHERE `ID`='%d'",PlayerInfo[id][pSQLID]);
						mysql_query(SQL,string);
						Factionlog(PlayerInfo[playerid][pMember],PlayerInfo[id][pSQLID],"zostal wyrzucony z frakcji.");
						PlayerInfo[id][pCommands] = 0;
						new rquery[256];
						format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[id][pCommands], PlayerInfo[id][pSQLID]);
						mysql_query(SQL, rquery);
						if(PlayerInfo[id][pShowFaction] == 1) {
							PlayerInfo[id][pShowFaction] = 0;
							PlayerTextDrawHide(id, JobTD);
							Update(id, pShowFactionx);
						}
					}
					if(fp==1)
					{
						GetPlayerName(id, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Lider %s wyrzucil cie z frakcji (z fp). Teraz Jestes cywilny!", sendername);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);
			            gTeam[id] = 3;
						PlayerInfo[id][pTeam] = 3;
						PlayerInfo[id][pMember] = 0;
						PlayerInfo[id][pRank] = 0;
						PlayerInfo[id][pChar] = 0;
      					PlayerInfo[id][pLeader] = 0;
						PlayerInfo[id][pFACWarns] = 0;
						PlayerInfo[id][pFpunish] = 40;
						SetPlayerArmourEx(id, 0);
						tazer[id] = 0;
						SetPlayerSkinEx(id,PlayerInfo[id][pModel]);
						printf("AdmCmd: %s wyrzucil z frakcji %s.", sendername, giveplayer);
						SpawnPlayer(id);
		     			format(string, sizeof(string), "* Wyrzuciles %s z frakcji.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string,sizeof(string),"UPDATE users SET `Team`='3',`Member`='0',`Leader`='0',`Rank`='0',`FPunish`='40',`FWarn`='0' WHERE `ID`='%d'",PlayerInfo[id][pSQLID]);
						mysql_query(SQL,string);
						Factionlog(PlayerInfo[playerid][pMember],PlayerInfo[id][pSQLID],"A fost dat afara din factiune (cu FP).");
						PlayerInfo[id][pCommands] = 0;
						new rquery[256];
						format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[id][pCommands], PlayerInfo[id][pSQLID]);
						mysql_query(SQL, rquery);
						if(PlayerInfo[id][pShowFaction] == 1) {
							PlayerInfo[id][pShowFaction] = 0;
							PlayerTextDrawHide(id, JobTD);
							Update(id, pShowFactionx);
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Gracza nie ma w twojej frakcji.");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Ta komenda jest tylko dla liderów.");
	return 1;
}
CMD:warn(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new id,reason[128],string[200],giveplayer[30],sendername[30];
			if(sscanf(params, "us[128]", id, reason)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/warn <id/nazwa> <powód>");
			{
			    if(IsPlayerConnected(id))
			    {
			        new ip[25];
				    GetPlayerIp(id, ip, sizeof(ip));
			        if(id != INVALID_PLAYER_ID)
			        {
			            
					    GetPlayerName(id, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[id][pWarns] += 1;
						//format(string, sizeof(string), "AdmCmd: %s otrzymal warna od %s, Powód: %s", giveplayer, sendername, reason);
						//SendClientMessageToAll(COLOR_LIGHTRED, string);
						format(string, sizeof(string),"~r~Warn~n~~w~Gracz: %s~n~Nadajacy: %s~n~~y~~h~%s", giveplayer, sendername, reason); 
   						ShowPenalty(string);
						format(string, sizeof(string), "AdmCmd: %s otrzymal warna od %s, Powod: %s", giveplayer, sendername, reason);
						AdminLog("/logs/warn.log", string);
						Update(id,pWarnsx);
						if(PlayerInfo[id][pWarns] >= 3)
						{
							format(string, sizeof(string),"~r~Ban~n~~w~Gracz: %s~n~Nadajacy: %s~n~~y~~h~%s (3/3 warny)", giveplayer, sendername, reason); 
							ShowPenalty(string);
							format(string, sizeof(string), "AdmCmd: %s zostal zbanowany przez %s (ostrzezenia 3/3), Powód: %s", giveplayer,sendername,reason);
							//SendClientMessageToAll(COLOR_LIGHTRED, string);
							Banlog(ip,GetName(id),GetName(playerid),"3 warny",0);
							format(string,sizeof(string),"UPDATE users SET `Banned`='1' WHERE `ID`='%d'",PlayerInfo[id][pSQLID]);
							mysql_query(SQL,string);
							KickEx(id);
							InsereazaSanctiune(id, playerid, BAN, "3/3 warny");
							AdminLog("/logs/warn.log", string);
						}
						InsereazaSanctiune(id, playerid, WARN, reason);
						Warnlog(ip,PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],reason);
					}
				}
			    else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}
CMD:warno(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new id[25],reason[128],string[200],sendername[30],cont;
			if(sscanf(params, "s[25]s[128]", id, reason)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/warno <name> <powód>");
	        cont = MySQLCheckAccount(id);
	        if(cont == 0) return SCM(playerid,COLOR_GREY, "Ta nazwa nie istnieje w bazie danych.");
			new intid,strid[32],str1[184];
			mysql_real_escape_string(id, hackmysql);
			format(str1, sizeof(str1), "SELECT `Warnings` FROM users WHERE `name`='%s'",hackmysql);
			mysql_query(SQL,str1);
			mysql_store_result();
			mysql_fetch_row(strid);
			intid = strval(strid);
		    mysql_free_result();
		    intid++;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: %s otrzymal warna OFFLINE od %s, Powód: %s",id, sendername, reason);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			AdminLog("/logs/warn.log", string);
			new str[256];
			if(intid >= 3)
			{
				format(string, sizeof(string), "AdmCmd: %s zostal zbanowany przez SYSTEM (ostrzezenia 3/3) na 2 dni, Powód: %s",id,reason);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				 AdminLog("/logs/warn.log", string);
				Banlog("Offline",id,GetName(playerid),"3/3 warny",2);
				new var[184];
				format(str,sizeof(str),"UPDATE users SET `Banned`='1' WHERE `name`='%s'", hackmysql);
				mysql_query(SQL,str);
				intid = 0;
			}
			format(str,sizeof(str),"UPDATE users SET `Warnings`='%d' WHERE `name`='%s'",intid,hackmysql);
			mysql_query(SQL,str);
			Warnlog("Offline",cont,PlayerInfo[playerid][pSQLID],reason);
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}
CMD:unwarno(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new id[25],string[200],sendername[30],cont;
			if(sscanf(params, "s[25]s[128]", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/unwarno <name>");
	        cont = MySQLCheckAccount(id);
	        if(cont == 0) return SCM(playerid,COLOR_GREY, "Ta nazwa nie istnieje w bazie danych.");
			new intid,strid[32],str1[184];
			mysql_real_escape_string(id, hackmysql);
			format(str1, sizeof(str1), "SELECT `Warnings` FROM users WHERE `name`='%s'",hackmysql);
			mysql_query(SQL,str1);
			mysql_store_result();
			mysql_fetch_row(strid);
			intid = strval(strid);
			intid--;
		    mysql_free_result();
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: %s odwarnowal %s",playerid, hackmysql);
			SendAdminMessage(COLOR_LOGS, string, 1);
			AdminLog("/logs/warn.log", string);
			new str[256];
			if(intid <= 2)
			{
				new var[184];
				format(str,sizeof(str),"UPDATE users SET `Banned`='0' WHERE `name`='%s'", hackmysql);
				mysql_query(SQL,str);
				intid = 0;
			}
			format(str,sizeof(str),"UPDATE users SET `Warnings`='%d' WHERE `name`='%s'",intid,hackmysql);
			mysql_query(SQL,str);
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}

CMD:unwarn(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new id,string[200],giveplayer[30],sendername[30];
			if(sscanf(params, "u", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/unwarn <id/nazwa>");
			{
			    if(IsPlayerConnected(id))
			    {
			        if(id != INVALID_PLAYER_ID)
			        {
						if(PlayerInfo[id][pWarns] > 0)
						{
					    	GetPlayerName(id, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[id][pWarns] -= 1;
							format(string, sizeof(string), "Usunales ostrzezenie %s.", giveplayer);
				            SendClientMessage(playerid, COLOR_LIGHTRED, string);
					        format(string, sizeof(string), "%s usunal twojego warna.", sendername);
					        SendClientMessage(id, COLOR_LIGHTRED, string);
				            format(string, sizeof(string), "AdmCmd: %s usunal warna %s.", sendername, giveplayer);
				            AdminLog("/logs/warn.log", string);
                            Update(id,pWarnsx);
							return 1;
						}
						else return SCM(playerid, COLOR_GREY, "Gracz nie ma warnów");
					}
				}
	     		else
    			{
                    SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		    	}
			}
		}
		else
		{
  			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}
CMD:banex(playerid, params[])
{
	new name[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		new giveplayerid,days,reason[128],string[128],giveplayer[25];
		if(sscanf(params, "uds[128]", giveplayerid,days,reason)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/banex <id/nazwa> <dni> <powód>");
		if(IsPlayerConnected(giveplayerid))
		{
			if(days <= 0 || days > 1000) return SendClientMessage(playerid, COLOR_GREY, "Zla data! (1-1000)");
			GetPlayerName(playerid, name, sizeof name);
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin])
			    return SCM(playerid, -1, "Ten gracz ma wiekszego administratora niz ty!");
		    new year,month,day;
		    getdate(year, month, day);
		    day += days;
		    if (IsMonth31(month))
		    {
		        if (day > 31)
		        {
		            month += 1;
		            if (month > 12)
		            {
		                year += 1;
		                while(day > 31) day -= 31;
		            }
		            else while(day > 31) day -= 31;
		        }
		    }
		    else if (!IsMonth31(month))
		    {
		        if (day > 30)
		        {
		            month += 1;
		            if (month > 12)
		            {
		                year += 1;
		                while(day > 30) day -= 30;
		            }
		            else while(day > 30) day -= 30;
		        }
		    }
		    else if (!IsMonth31(month) && IsMonth29(year) && month == 2)
		    {
		        if (day > 29)
		        {
		            month += 1;
		            if (month > 12)
		            {
		                year += 1;
		                while(day > 29) day -= 29;
		            }
		            else while(day > 29) day -= 29;
		        }
		    }
		    else if (!IsMonth31(month) && !IsMonth29(year) && month == 2)
		    {
		        if (day > 28)
		        {
		            month += 1;
		            if (month > 12)
		            {
		                year += 1;
		                while(day > 28) day -= 28;
		            }
		            else while(day > 28) day -= 28;
		        }
		    }
			PlayerInfo[giveplayerid][pBTemp] = 1;
			PlayerInfo[giveplayerid][pBYear] = year;
			PlayerInfo[giveplayerid][pBMonth] = month;
			PlayerInfo[giveplayerid][pBDay] = day;
			strmid(PlayerInfo[giveplayerid][pBBy], name, 0, strlen(name), 255);
			strmid(PlayerInfo[giveplayerid][pBReason], reason, 0, strlen(reason), 255);
			Update(giveplayerid,pBTempx);
			Update(giveplayerid,pBYearx);
			Update(giveplayerid,pBMonthx);
			Update(giveplayerid,pBDayx);
			Update(giveplayerid,pBByx);
			Update(giveplayerid,pBReasonx);
			if(days == 1)
			{
					format(string, sizeof(string),"~r~Ban czasowy(%d)~n~~w~Gracz: %s~n~Nadajacy: %s~n~~y~~h~%s", days, giveplayer, name, reason); 
   					ShowPenalty(string);
					format(string,128,"AdmCmd: %s otrzymal bana od %s na %d dni, Powód: %s",giveplayer,name,days,reason);
					SendAdminMessage(COLOR_LOGS,string,1);
					AdminLog("/logs/admin.log", string);
			}
			else if(days > 1)
			{
					format(string, sizeof(string),"~r~Ban czasowy (%d)~n~~w~Gracz: %s~n~Nadajacy: %s~n~~y~~h~%s", days, giveplayer, name, reason); 
   					ShowPenalty(string);
					format(string,128,"AdmCmd: %s otrzymal bana od %s na %d dni, Powód: %s",giveplayer,name,days,reason);
					SendAdminMessage(COLOR_LOGS,string,1);
					AdminLog("/logs/admin.log", string);
			}
			new ip[25];
	    	GetPlayerIp(giveplayerid, ip, sizeof(ip));
			Banlog(ip,GetName(giveplayerid),GetName(playerid),reason,days);
			KickEx(giveplayerid);
			InsereazaSanctiune(giveplayerid, playerid, BAN, reason);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	else return SendClientMessage(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return true;
}
CMD:banoffline(playerid, params[])
{
	new name[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		new giveplayerid[25],days,reason[128],string[128],cont;
		if(sscanf(params, "s[25]ds[128]", giveplayerid,days,reason)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/banoffline <name> <dni> <powód>");
		if(days <= 0 || days > 1000) return SendClientMessage(playerid, COLOR_GREY, "Zla data! (1-1000)");
        cont = MySQLCheckAccount(giveplayerid);
        if(cont == 0) return SCM(playerid,COLOR_GREY, "Ta nazwa nie istnieje w bazie danych.");
		GetPlayerName(playerid, name, sizeof name);
	    new year,month,day;
	    getdate(year, month, day);
	    day += days;
	    if (IsMonth31(month))
	    {
	        if (day > 31)
	        {
	            month += 1;
	            if (month > 12)
	            {
	                year += 1;
	                while(day > 31) day -= 31;
	            }
	            else while(day > 31) day -= 31;
	        }
	    }
	    else if (!IsMonth31(month))
	    {
	        if (day > 30)
	        {
	            month += 1;
	            if (month > 12)
	            {
	                year += 1;
	                while(day > 30) day -= 30;
	            }
	            else while(day > 30) day -= 30;
	        }
	    }
	    else if (!IsMonth31(month) && IsMonth29(year) && month == 2)
	    {
	        if (day > 29)
	        {
	            month += 1;
	            if (month > 12)
	            {
	                year += 1;
	                while(day > 29) day -= 29;
	            }
	            else while(day > 29) day -= 29;
	        }
	    }
	    else if (!IsMonth31(month) && !IsMonth29(year) && month == 2)
	    {
	        if (day > 28)
	        {
	            month += 1;
	            if (month > 12)
	            {
	                year += 1;
	                while(day > 28) day -= 28;
	            }
	            else while(day > 28) day -= 28;
	        }
	    }
		new y,m,d;
		getdate(y,m,d);
		new var[184];
		mysql_real_escape_string(giveplayerid, hackmysql);
		format(var, sizeof(var), "UPDATE `users` SET `BTemp`='1' WHERE `name`='%s'",hackmysql);
		mysql_query(SQL ,var);
		format(var, sizeof(var), "UPDATE `users` SET `BYear`='%d' WHERE `name`='%s'",y,hackmysql);
		mysql_query(SQL ,var);
		format(var, sizeof(var), "UPDATE `users` SET `BMonth`='%d' WHERE `name`='%s'",m, hackmysql);
		mysql_query(SQL ,var);
		format(var, sizeof(var), "UPDATE `users` SET `BDay`='%d' WHERE `name`='%s'",day, hackmysql);
		mysql_query(SQL ,var);
		format(var, sizeof(var), "UPDATE `users` SET `BBy`='%s' WHERE `name`='%s'",name, hackmysql);
		mysql_query(SQL ,var);
		format(var, sizeof(var), "UPDATE `users` SET `BReason`='%s' WHERE `name`='%s'",reason, hackmysql);
		mysql_query(SQL ,var);
		if(days == 1)
		{
			format(string,128,"AdmCmd: %s otrzymal bana od %s na %d dni, Powód: %s",hackmysql,name,days,reason);
			SendClientMessageToAll(COLOR_LIGHTRED,string);
		}
		else if(days > 1)
		{
			format(string,128,"AdmCmd: %s otrzymal bana od %s na %d dni, Powód: %s",hackmysql,name,days,reason);
			SendClientMessageToAll(COLOR_LIGHTRED,string);
			AdminLog("/logs/admin.log", string);
		}
		Banlog("Offline",giveplayerid,GetName(playerid),reason,days);
	}
	else return SendClientMessage(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return true;
}
CMD:ban(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			new id,reason[128],string[200],giveplayer[30],sendername[30],type,str[128];
			if(sscanf(params, "uds[128]", id,type,reason)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/ban <id/nazwa> <typ(1-account 2-permanent)> <powód>");
   			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
                    
					GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					if(PlayerInfo[id][pAdmin] == 6) return 1;
					if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin])
					    return SCM(playerid, -1, "Ten gracz ma wiekszego administratora niz ty!");
					if(type == 1)
					{
						format(string, sizeof(string),"~r~Ban~n~~w~Gracz: %s~n~Nadajacy: %s~n~~y~~h~%s", giveplayer, sendername, reason); 
						ShowPenalty(string);
						format(string, sizeof(string), "AdmCmd: Admin %s zbanowal gracza %s, Powód: %s", giveplayer, sendername, reason);
						AdminLog("/logs/ban.log", string);
						PlayerInfo[id][pBanned] = 1;
	                    SendClientMessage(id,COLOR_LIGHTRED,"Mozesz wyslac prosbe unban na naszym forum. Forum: www.foxy-rp.pl");
	                    SendClientMessage(id,COLOR_LIGHTRED,"Radzimy zrobic zdjecie tej informacji i opublikowac ja po zrobieniu prosby o unban. Kliknij F8, aby zrobic zdjecie.");
						format(str,sizeof(str),"UPDATE users SET `Banned`='1' WHERE `ID`='%d'",PlayerInfo[id][pSQLID]);
						mysql_query(SQL,str);
						new ip[25];
				    	GetPlayerIp(id, ip, sizeof(ip));
						Banlog(ip,GetName(id),GetName(playerid),reason,0);
						KickEx(id);
					}
					else if(type == 2)
					{
						format(string, sizeof(string),"~r~Ban~n~~w~Gracz: %s~n~Nadajacy: %s~n~~y~~h~%s", giveplayer, sendername, reason); 
						ShowPenalty(string);
						format(string, sizeof(string), "AdmCmd: Admin %s zbanowal gracza %s, Powód: %s", giveplayer, sendername, reason);
						PlayerInfo[id][pBanned] = 1;
	                    SendClientMessage(id,COLOR_LIGHTRED,"Mozesz wyslac prosbe unban na naszym forum. Forum: www.foxy-rp.pl");
	                    SendClientMessage(id,COLOR_LIGHTRED,"Radzimy zrobic zdjecie tej informacji i opublikowac ja po zrobieniu prosby o unban. Kliknij F8, aby zrobic zdjecie.");
            			format(str,sizeof(str),"UPDATE users SET `Banned`='1' WHERE `ID`='%d'",PlayerInfo[id][pSQLID]);
						mysql_query(SQL,str);
						new ip[25];
				    	GetPlayerIp(id, ip, sizeof(ip));
						Banlog(ip,GetName(id),GetName(playerid),reason,0);
						Ban(id);
					}
					InsereazaSanctiune(id, playerid, BAN, reason);
					return 1;
				}
			}
		    else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}
CMD:unbanoff(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
        if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
        new id[25],cont, string[256];
        if(sscanf(params, "s[25]", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/unbanoff <name>");
        cont = MySQLCheckAccount(id);
        if(cont == 0) return SCM(playerid,COLOR_GREY, "Ta nazwa nie istnieje w bazie danych.");
		new str1[128];
		mysql_real_escape_string(id, hackmysql);
		format(str1,sizeof(str1),"UPDATE users SET `Banned`='0' WHERE `name`='%s'",hackmysql);
		mysql_query(SQL,str1);
		format(string, sizeof(string), "AdmCmd: Admin %s odbanowa³ gracza %s, Powód: %s", playerid, hackmysql);
		SendAdminMessage(COLOR_LOGS, string, 1);
		AdminLog("/logs/admin.log", string);
	}
	return 1;
}
CMD:unbanex(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
        if (PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
        new id[25],cont, string[200];
        if(sscanf(params, "s[25]", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/unbanex <pelny nick>");
        cont = MySQLCheckAccount(id);
        if(cont == 0) return SCM(playerid,COLOR_GREY, "Ta nazwa nie istnieje w bazie danych.");
		new str1[184];
		mysql_real_escape_string(id, hackmysql);
		format(str1,sizeof(str1),"UPDATE users SET `BTemp`='0' WHERE `name`='%s'",hackmysql);
		mysql_query(SQL,str1);
		format(str1,sizeof(str1),"UPDATE users SET `BYear`='0' WHERE `name`='%s'",hackmysql);
		mysql_query(SQL,str1);
		format(str1,sizeof(str1),"UPDATE users SET `BMonth`='0' WHERE `name`='%s'",hackmysql);
		mysql_query(SQL,str1);
		format(str1,sizeof(str1),"UPDATE users SET `BDay`='0' WHERE `name`='%s'",hackmysql);
		mysql_query(SQL,str1);
		format(string, sizeof(string), "AdmCmd: Admin %s odbanowa³ gracza %s, Powód: %s", playerid, hackmysql);
		SendAdminMessage(COLOR_LOGS, string, 1);
		AdminLog("/logs/admin.log", string);
	}
	return 1;
}
CMD:setfpo(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
        if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
        new id[25],cont,fp;
        if(sscanf(params, "s[25]i",id,fp)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/setfpo <pelny nick> <FP>");
        cont = MySQLCheckAccount(id);
        if(cont == 0) return SCM(playerid,COLOR_GREY, "Ta nazwa nie istnieje w bazie danych.");
		new str1[128];
		mysql_real_escape_string(id, hackmysql);
		format(str1,sizeof(str1),"UPDATE users SET `FPunish`='%d' WHERE `name`='%s'",fp,hackmysql);
		mysql_query(SQL,str1);
	}
	return 1;
}
CMD:setfp(playerid,params[])
{
    if (PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	new id,fp;
	if(sscanf(params, "ud",id,fp)) return SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/setfp <id/nazwa> <FP>");
	PlayerInfo[id][pFpunish] = fp;
    Update(id,pFpunishx);
    return 1;
}
CMD:bano(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
        if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
        new id[25],cont,msg[80];
        if(sscanf(params, "s[25]s[80]", id,msg)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/bano <name> <powód>");
        cont = MySQLCheckAccount(id);
        if(cont == 0) return SCM(playerid,COLOR_GREY, "Ta nazwa nie istnieje w bazie danych.");
        new sendername[25],string[75];
        GetPlayerName(playerid,sendername,sizeof(sendername));
		format(string, sizeof(string),"~r~Ban Offline~n~~w~Gracz: %s~n~Nadajacy: %s~n~~y~~h~%s", id, sendername, msg); 
   		ShowPenalty(string);
        format(string, sizeof(string), "AdmCmd: Admin %s zbanowal gracza OFFLINE %s, Powód: %s", id, sendername,msg);
		new str1[184];
		mysql_real_escape_string(id, hackmysql);
		format(str1,sizeof(str1),"UPDATE users SET `Banned`='1' WHERE `name`='%s'",hackmysql);
		mysql_query(SQL,str1);
		Banlog("Offline",id,GetName(playerid),msg,0);
	}
	return 1;
}
CMD:unfrakcjaoff(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
        if (PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
        new id[25],cont,msg[80];
        if(sscanf(params, "s[25]s[80]", id,msg)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/unfrakcjaoff <name> <powód>");
        cont = MySQLCheckAccount(id);
        if(cont == 0) return SCM(playerid,COLOR_GREY, "Ta nazwa nie istnieje w bazie danych.");
        new sendername[25],string[75];
        GetPlayerName(playerid,sendername,sizeof(sendername));
		format(string, 256, "%s zostal usuniety z frakcji.", id);
		SCM(playerid, COLOR_YELLOW, string);
		new str1[184];
		mysql_real_escape_string(id, hackmysql);
		format(str1,sizeof(str1),"UPDATE users SET `Member`='0', `Leader`='0', `Rank`='0', `FSkin`='0' WHERE `name`='%s'",hackmysql);
		mysql_query(SQL,str1);
	}
	return 1;
}
CMD:removekey(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
        if (PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
        new id,x_nr[15];
        if(sscanf(params, "us[15]", id,x_nr)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/removekey <id/nazwa> <dom/biz>");
    	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
        if(strcmp(x_nr,"dom",true) == 0)
     	{
			new str1[158];
			format(str1,sizeof(str1),"UPDATE users SET `House`='999' WHERE `ID`='%d'",PlayerInfo[id][pSQLID]);
			mysql_query(SQL,str1);
   			SCM(playerid,COLOR_LIGHTRED,"Wprowadz minute, aby zaktualizowac baze danych.");
   			KickEx(id);
			return 1;
     	}
        if(strcmp(x_nr,"biz",true) == 0)
     	{
			new str1[158];
			format(str1,sizeof(str1),"UPDATE users SET `Bizz`='255' WHERE `ID`='%d'",PlayerInfo[id][pSQLID]);
			mysql_query(SQL,str1);
   			SCM(playerid,COLOR_LIGHTRED,"Wprowadz minute, aby zaktualizowac baze danych.");
   			KickEx(id);
			return 1;
		}
	}
	return 1;
}
CMD:muteo(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
        if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
        new id[25],cont,msg[80],time;
        if(sscanf(params, "s[25]is[80]", id,time,msg)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/muteo <name> <Time(minutes)> <powód>");
        cont = MySQLCheckAccount(id);
        if(cont == 0) return SCM(playerid,COLOR_GREY, "Ta nazwa nie istnieje w bazie danych.");
        if(time <= 0) return SCM(playerid,COLOR_GREY, "Zly czas");
        new sendername[25],string[184];
        GetPlayerName(playerid,sendername,sizeof(sendername));
        format(string, sizeof(string), "Offline: AdmCmd: %s zostal zmutowany przez %s na %d minut, Powód: %s", id, sendername,time,msg);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		new timem = time*60;
		new str1[168];
		mysql_real_escape_string(id, hackmysql);
		format(str1,sizeof(str1),"UPDATE users SET `Muted`='1',`MuteTime`='%d' WHERE `name`='%s'",timem,hackmysql);
		mysql_query(SQL,str1);
		Mutelog(cont,PlayerInfo[playerid][pSQLID],msg,time);
	}
	return 1;
}
CMD:restartgame(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 6)
		{
			new sendername[30],string[100];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: Admin %s restartuje serwer", sendername);
			SendAdminMessage(COLOR_LOGS,string, 6);
			GameModeExit();
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}
CMD:giveallgun(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	new weaponid,ammo,string[100],sendername[30];
	if(sscanf(params, "ii", weaponid, ammo)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/giveallgun <Weapon ID> <ammo>");
	GetPlayerName(playerid, sendername, sizeof(sendername));
	format(string, sizeof(string), "AdmCmd: Admin %s dal wszystkim bron (ID: %d)", sendername,weaponid);
	SendAdminMessage(COLOR_LOGS, string,4);
  	for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			GivePlayerWeaponEx(i, weaponid, ammo);
		}
	}
	return 1;
}
CMD:fuelcars(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
	    {
			new gasvehicle,sendername[30],string[100];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(sscanf(params, "i", gasvehicle)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/fuelcars <procent>");
		   	for(new c=0;c<CAR_AMOUNT;c++)
			{
				Gas[c] = gasvehicle;
			}
			format(string, sizeof(string), "Twoj pojazd zostal zatankowany %d%% paliwa.",gasvehicle);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "AdmCmd: Admin %s zatankowal wszystkim pojazdy ", sendername);
			SendAdminMessage(COLOR_LOGS, string,4);
	    }
	    else
	    {
	        SendClientMessage(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	        return 1;
	    }
	}
	return 1;
}
/*CMD:givegun(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
	   	if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			new id,gun,ammo,string[100],sendername[30],giveplayer[30];
			if(sscanf(params, "uii",id,gun,ammo))
   			{
   				SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/givegun <id/nazwa> <Weapon ID> <Gloante>");
			    SCM(playerid,COLOR_WHITE,"1-Brass Knuckles; 2-Golf Club; 3-Nightstick; 4-Knife; 5-Baseball Bat; 6-Shovel; 7-Pool Cue; 8-Katana;");
		    	SCM(playerid,COLOR_WHITE,"9-Chainsaw; 10-Double-ended Dildo; 11-Dildo; 12-Vibrator; 13-Silver Vibrator; 14-Flowers; 15-Cane;");
		    	SCM(playerid,COLOR_WHITE,"16-Grenade; 17-Tear Gas; 18-Molotov Cocktail; 22-9mm; 23-Silenced 9mm; 24-Desert Eagle; 25-Shotgun;");
		    	SCM(playerid,COLOR_WHITE,"26-Sawnoff Shotgun; 27-Combat Shotgun; 28-Micro SMG/Uzi; 29-MP5; 30-AK-47; 31-M4; 32-Tec-9; 33-Country Rifle;");
		    	SCM(playerid,COLOR_WHITE,"34-Sniper Rifle; 35-RPG; 36-HS Rocket; 37-Flamethrower; 38-Minigun; 39-Satchel Charge; 40-Detonator;");
		    	SCM(playerid,COLOR_WHITE,"41-Spraycan; 42-Fire Extinguisher; 43-Camera; 44-Night Vis Goggles; 46-Parachute;");
			    return 1;
	    	}
	  	    if(gun < 1||gun > 46||gun==19||gun==20||gun==21||gun==45) return SCM(playerid,COLOR_WHITE,"Zle id broni");
		    if(ammo <1||ammo > 1000) return SCM(playerid,COLOR_WHITE,"Zla amunicja (1-1000).");
			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
					GivePlayerWeaponEx(id, gun, ammo);
					GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new gunname[32];
					GetWeaponName(gun, gunname, 32);
					format(string, sizeof(string), "AdmCmd: %s dal bron dla %s %s (%d ammo).",sendername,giveplayer,gunname, ammo);
					SendAdminMessage(COLOR_LOGS, string,1);
					if(GetPlayerState(id) == PLAYER_STATE_PASSENGER)
					{
				        new gun2,tmp;
				        GetPlayerWeaponData(id,5,gun2,tmp);
				        #pragma unused tmp
				        if(gun2)SetPlayerArmedWeapon(id,gun2);
				        else SetPlayerArmedWeapon(id,0);
					}
				}
			}
		    else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
		else return SendClientMessage(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}*/

CMD:givegun(playerid, params[])
{
	new giveplayerid, gun, ammo, string[56];
    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pAdmin] > 3)
		{
			if(sscanf(params, "iii", giveplayerid, gun, ammo)) return SCM(playerid,COLOR_GREY, "Uzyj: /givegun [id gracza] [bron] [amunicja]");
			if(gun < 1 || gun > 46) return SendClientMessage(playerid, COLOR_GREY, "   Podane id broni jest nieprawidlowe !");
			if(ammo < 1 || ammo > 99999) return SendClientMessage(playerid, COLOR_GREY, "  Ilosc amunicji nie moze byc mniejsza od 1 i wieksza od 99999 !");
		    if(IsPlayerConnected(giveplayerid))
		    {
		        if(giveplayerid != INVALID_PLAYER_ID)
		        {
		            GivePlayerThing(giveplayerid, gun, ammo, 0, 0);
					format(string, sizeof(string), "Podarowales bron %d (ammo: %d) dla %s !", gun, ammo, GetName(giveplayerid));
					SCM(playerid,COLOR_LIGHTBLUE, string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Nie masz uprawnien!");
		}
	}
	return 1;
}

CMD:healall(playerid, params[])
{
	new sendername[25],string[64];
    GetPlayerName(playerid, sendername, sizeof(sendername));
    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pAdmin] >= 3)
        {
        	format(string, sizeof(string), "Admin %s uleczyl wszystkich.", sendername);
    		SendAdminMessage(COLOR_LOGS, string,3);
            foreach(Player,i)
			{
				SetPlayerHealthEx(i, 100);
			}
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}
CMD:healrange(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		new range,string[128],sendername[25];
		new Float:x, Float:y, Float:z;
		if(sscanf(params, "i", range)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/healrange <dystans>");
		{
			foreach(Player,i)
			{
				if(IsPlayerConnected(i))
				{
					if(IsPlayerInRangeOfPoint(i,range*1000,x,y,z))
					{
						SetPlayerHealthEx(i, 100);
					}
				}
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: %s uleczyl wszystkich w zasiegu %d metrow.", sendername,range);
			SendAdminMessage(COLOR_LOGS,string,1);
		}
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}
CMD:sethp(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			new id,hp,string[100],giveplayer[30],sendername[30];
			if(sscanf(params, "ui", id, hp)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/sethp <id/nazwa> <hp>");
	  		if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
					SetPlayerHealthEx(id, hp);
					GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "AdmCmd: Admin %s ustawil %s %d HP.", sendername,giveplayer,hp);
					SendAdminMessage(COLOR_LOGS,string,1);
				}
			}
		    else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}
CMD:setarmour(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			new id,armor,string[100],giveplayer[30],sendername[30];
			if(sscanf(params, "ui", id, armor)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/setarmour <id/nazwa> <armor>");
	  		if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
					SetPlayerArmourEx(id, armor);
					GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "AdmCmd: Admin %s dal %s %d. armora", sendername,giveplayer,armor);
					SendAdminMessage(COLOR_LOGS,string,1);
				}
			}
		    else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}
CMD:stats(playerid, params[])
{
	if(PlayerInfo[playerid][pLevel] < 1) return SCM(playerid,COLOR_GREY, "Niedostepne.");
	if(IsPlayerConnected(playerid))
	{
		ShowStats(playerid,playerid);
	}
	return 1;
}

CMD:stats2(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		ShowStats2(playerid,playerid);
	}
	return 1;
}


CMD:report(playerid, params[]) {
	new text[180], string[180];
	if(PlayerInfo[playerid][pReportTime] >= 1) {	    
		format(string, sizeof(string), "Vei putea da un report peste %d minute (%d secunde).", PlayerInfo[playerid][pReportTime]/60, PlayerInfo[playerid][pReportTime]);
		SendClientMessage(playerid, COLOR_WHITE, string);
		return 1;
	}
	else if(PlayerInfo[playerid][pAdmin] >= 1 && GetPVarInt(playerid, "Cover") == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzyc tej komendy, poniewaz  Jestes administratorem!");
	if(sscanf(params, "s[180]",text)) {
		SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/report <text>");
		SCM(playerid, COLOR_LGREEN, "Ta funkcja nie sluzy do zabawy, mozesz zostac ukarany za bawienie sie nia!");
		return 1;
	}	
	if(strlen(text) < 10) return SendClientMessage(playerid, COLOR_WHITE, "Twój raport jest za krótki!");
	format(string, sizeof(string), "Report od %s (ID: %d, lvl: %d): %s.", GetName(playerid), playerid, PlayerInfo[playerid][pLevel], text);
	SendAdminMessage(0xC9161FFF, string, 1);
	format(string, sizeof(string), "Twój report zostal wyslany do administratorów.");
		
	if(ReportTimer[playerid] != 0) {
		KillTimer(ReportTimer[playerid]);
		ReportTimer[playerid] = 0;
	}			
	ReportTimer[playerid] = SetTimerEx("CheckReport", 300000, 0, "%d", playerid);
	SendClientMessage(playerid, COLOR_YELLOW, string);
	PlayerInfo[playerid][pReportTime] = 120;
	Ajutor[playerid] = 1;
	format(ReportText[playerid], 256, "%s (%d): %s.", GetName(playerid), playerid, text);
	format(ReportText2[playerid], 256, text);
	return 1;
}

function CheckReport(playerid) {
	if(Ajutor[playerid] == 1) {
		SendClientMessage(playerid, COLOR_YELLOW, "Twój report zostal automatycznie zamkniety, poniewaz  nie dostales odpowiedzi w 5 minut.");
		Ajutor[playerid] = 0;
		if(ReportTimer[playerid] != 0) ReportTimer[playerid] = 0;
	}
	return 1;
}	

CMD:cr(playerid, params[]) return cmd_closereport(playerid, params);
CMD:closereport(playerid, params[]) {
	new userID, result[180], string[180];
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_RED, "Nie jeste zalogowany!");
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GREY, "Nie masz dostepu!");
	if(AcceptedReport[playerid] != -1) {
		SCM(playerid, COLOR_YELLOW, "Interwencja zakonczona!");
		SCM(AcceptedReport[playerid], COLOR_YELLOW, "Interwencja zakonczona!");
		AcceptedReport[AcceptedReport[playerid]] = -1;
		AcceptedReport[playerid] = -1;	
		return 1;
	}
	if(sscanf(params, "us[180]", userID, result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/closereport <id/nazwa> <powód>");
	if(!IsPlayerConnected(userID) || userID == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY,"Ten gracz nie jest online!");
	if(Ajutor[userID] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Ten gracz nie zglosil.");
	Ajutor[userID] = 0;
	format(string, sizeof(string), "Admin %s: %s", GetName(playerid), result);
	SendClientMessage(userID, COLOR_GOLD, string);
	SendClientMessage(userID, COLOR_GOLD, "Twój raport zostal zamkniety.");
	format(string, sizeof(string), "AdmCmd: %s a zamknal raport %s.", GetName(playerid), GetName(userID));
	SendAdminMessage(COLOR_LOGS, string, 1);
	format(string, sizeof(string), "Powód: %s", result);
	SendAdminMessage(COLOR_LOGS, string, 1);
	
	new szQuery[256];
	PlayerInfo[playerid][pHelpedPlayers] ++;
	format(szQuery, sizeof(szQuery), "UPDATE users SET `HelpedPlayers` = '%d' WHERE `ID` = '%d'", PlayerInfo[playerid][pHelpedPlayers], PlayerInfo[playerid][pSQLID]);
	mysql_query(SQL, szQuery);
	return 1;
}

CMD:ar(playerid, params[]) return cmd_acceptreport(playerid, params);
CMD:acceptreport(playerid, params[]) {
	new userID, string[180];
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_RED, "Nie jeste zalogowany!");
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GREY, "Nie masz dostepu!");
	if(AcceptedReport[playerid] != -1) return SCM(playerid, COLOR_GREY, "juz zaakceptowales raport! ");
	if(sscanf(params, "u", userID)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/acceptreport <id/nazwa>");
	if(!IsPlayerConnected(userID) || userID == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY,"Ten gracz nie jest online!");
	if(Ajutor[userID] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Ten gracz nie zglosil.");
	Ajutor[userID] = 0;
	format(string, sizeof(string), "Administrator %s zaakceptowal Twój raport i zostal rozwiazany.", GetName(playerid));
	SendClientMessage(userID, COLOR_GOLD, string);
	format(string, sizeof(string), "AdmCmd: %s zaakceptowal raport %s.", GetName(playerid), GetName(userID));
	SendAdminMessage(COLOR_LOGS, string, 1);

	AcceptedReport[playerid] = userID;
	AcceptedReport[userID] = playerid;
	
	format(string, sizeof(string), "A fost creata o conversatie intre tine si adminul %s(%d). (/x)", GetName(playerid), playerid);
	SCM(userID, COLOR_GOLD, string);
	format(string, sizeof(string), "A fost creata o conversatie intre tine si jucatorul %s(%d). (/x)", GetName(userID), userID);
	SCM(playerid, COLOR_GOLD, string);	

	new szQuery[256];
	PlayerInfo[playerid][pHelpedPlayers] ++;
	format(szQuery, sizeof(szQuery), "UPDATE users SET `HelpedPlayers` = '%d' WHERE `ID` = '%d'", PlayerInfo[playerid][pHelpedPlayers], PlayerInfo[playerid][pSQLID]);
	mysql_query(SQL, szQuery);	
	return 1;
}

CMD:x(playerid, params[]) {
	if(AcceptedReport[playerid] == -1) return SCM(playerid, COLOR_GREY, "Nie dzialasz w reportach!");
	new string[256], result[256];
	if(sscanf(params, "s[256]", result)) return SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/x <text>");
	if(PlayerInfo[playerid][pAdmin] >= 1) format(string, sizeof(string), "Admin %s: %s", GetName(playerid), result);
	else format(string, sizeof(string), "Gracz %s: %s", GetName(playerid), result);
	SCM(playerid, COLOR_YELLOW, string);
	SCM(AcceptedReport[playerid], COLOR_YELLOW, string);
	return 1;
}

CMD:rmute(playerid, params[]) {
	new userID, time, result[180];
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_RED, "Nie jeste zalogowany!");
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GREY, "Nie masz dostepu!");
	if(sscanf(params, "uis[180]", userID, time, result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/rmute <id/nazwa> <time> <reason>");
	if(!IsPlayerConnected(userID) || userID == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY,"Ten gracz nie jest online!");
	if(PlayerInfo[userID][pAdmin] > PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzyc tego polecenia dla administratora!");
	if(userID == playerid) return SCM(playerid, COLOR_GREY, "Nie mozesz uzyc tego polecenia dla siebie!");
	PlayerInfo[userID][pReportTime] = time*60;
	new string[180];
	format(string, sizeof(string), "Komenda /report zostala dla Ciebie zablokowana na %d minut! Powód: %s", time, result);
	SendClientMessage(userID, -1, string);
	format(string, sizeof(string), "AdmCmd: %s zablokowal /report na %d minut dla %s, Powód: %s", GetName(userID), time, GetName(playerid), result);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	return 1;
}

CMD:reports(playerid, params[]) {
	new x, string[180];
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	SendClientMessage(playerid, COLOR_WHITE, "Reports:");
	foreach(Player, i) {
	    if(Ajutor[i] == 1) {
			MesajLung(playerid, 0xC9161FFF, ReportText[i]);
			x++;
	    }
	}
	format(string, sizeof(string), "Teraz masz %d reportów!", x);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:admins(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
        new count = 0,string[200],sendername[30];
		SendClientMessage(playerid, COLOR_SERVER, "Administracja online:");
		foreach(Player,i)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pAdmin] != 0)
				{
					GetPlayerName(i, sendername,  sizeof(sendername));
					format(string, 256, "(%d) %s - (@LVL: %d)", i,sendername,PlayerInfo[i][pAdmin]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					count++;
				}
			}
		}
		if(count == 0) SendClientMessage(playerid,COLOR_WHITE,"* ¯adni administratorzy nie sa zalogowani.");
		SCM(playerid, -1, "Jesli masz jakis problem, mozesz uzyc /report. Jesli masz pytania dotyczace gry, mozesz uzyc /n.");
	}
	return 1;
}


CMD:helps(playerid, params[]) {
	new x, string[180];
	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return 1;
	SendClientMessage(playerid, -1, "------------------------------------------------------------------------------------");
	foreach(Player, i) {
	    if(Helped[i] == 1) {
			format(string, 512, "* %s (%d) pyta %s: %s", GetName(i), i, LaCineEsteIntrebarea(i), HelpText[i]);
			MesajLung(playerid, COLOR_LGREEN, string);
			x++;
	    }
	}
	format(string, sizeof(string), "Obecniej est %d pytan!", x);
	SendClientMessage(playerid, COLOR_WHITE, string);
	SendClientMessage(playerid, -1, "------------------------------------------------------------------------------------");
	return 1;
}

stock LaCineEsteIntrebarea(playerid) {
	new szName[180];
	format(szName, 256, "Server");
	foreach(Player, i) {
	    if(HaveHelp[i] == playerid && IsPlayerConnected(playerid)) {
			format(szName, 256, GetName(i));
		}
	}
	return szName;	
}

CMD:n(playerid, params[]) return cmd_newbie(playerid, params);
CMD:newbie(playerid, params[]) {
	new result[200], string[255];
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_RED, "Nie jeste zalogowany!");
	if(Helped[playerid] == 1) return SendClientMessage(playerid, -1, "Ostatnio zadales pytanie. Zaczekaj na odpowiedz!");
	if(sscanf(params, "s[200]", result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/newbie <text>");
	if(PlayerInfo[playerid][pNewbieMute] >= 1) {
		format(string, sizeof(string), "Musisz poczekac %d sekund, aby ponownie uzyc komendy /newbie!", PlayerInfo[playerid][pNewbieMute]);
		SendClientMessage(playerid, -1, string);
		return 1;
	}
	if(PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pAdmin] >= 1) {
		if(GetPVarInt(playerid, "Cover") == 0)
		return SendClientMessage(playerid, COLOR_WHITE, "Jestes czescia admininsitracji, nie mozesz uzyc tego polecenia!");
	} 
	format(string, sizeof(string), "Twoje pytanie zostalo wyslane do pomocnika. Zaczekaj, az odpowiesz!");
	SCM(playerid, COLOR_YELLOW, string);
	HelpText[playerid] = "";
	format(HelpText[playerid], 256, result);
	PlayerInfo[playerid][pNewbieMute] = 120;
	Helped[playerid] = 1;
	OnHelper[playerid] = 0;
	return 1;
}

CMD:hduty(playerid, params[]) {
	if(PlayerInfo[playerid][pHelper] == 0) return SendClientMessage(playerid, COLOR_GREY, "* Nie masz dostepu do tego polecenia!");
	switch(HelperDuty[playerid]) {
	    case 0: HelperDuty[playerid] = 1, SendClientMessage(playerid, COLOR_LGREEN, "Teraz Jestes na sluzbie jako pomocnik!");
	    case 1: {
			if(HaveHelp[playerid] != -1) return SendClientMessage(playerid, COLOR_LGREEN, "Blad: Nie mozesz teraz uzyc tego polecenia!");
			HelperDuty[playerid] = 0, SendClientMessage(playerid, COLOR_LGREEN, "Teraz Jestes poza sluzba jako pomocnik!");
		}
	}
	return 1;
}

CMD:nskip(playerid, params[]) {
    if(PlayerInfo[playerid][pHelper] == 0) return SendClientMessage(playerid, COLOR_GREY, "* Nie masz dostepu do tego polecenia!");
    if(HelperDuty[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w sluzbie jako pomocnik.");
	if(HaveHelp[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Nie dostales pytania.");
	new helpers, string[180];
	foreach(Player, i) {
	    if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {
	        if(PlayerInfo[i][pHelper] != 0 && HelperDuty[i] == 1 && HaveHelp[i] == -1 && i != playerid) {
	            HaveHelper[helpers] = i;
				helpers ++;
	        }
	    }
	}
	if(helpers > 1) {
	    new userID = HaveHelper[random(helpers)]; PlayerPlaySound(userID, 1056, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "AdmCmd: Pomocnik %s przeskoczyl swoje pytanie %s i zostal przejety przez %s.", GetName(playerid), GetName(HaveHelp[playerid]), GetName(userID));
		SendAdminMessage(COLOR_LOGS, string, 1);
		format(string, sizeof(string), "Poprzedni pomocnik przeskoczyl twoje pytanie. Teraz pytanie zostalo przejete przez pomocnika %s (%d).", GetName(userID), userID);
		SendClientMessage(HaveHelp[playerid], COLOR_LGREEN, string);
		format(string, 512, "* %s (%d) pyta: %s", GetName(HaveHelp[playerid]), HaveHelp[playerid], HelpText[HaveHelp[playerid]]);
		SendClientMessage(userID, 0x4FB021FF, string);
		HaveHelp[userID] = HaveHelp[playerid];
		SendClientMessage(playerid, COLOR_YELLOW, "Przeskoczyles to pytanie.");
		HaveHelp[playerid] = -1;
	}
	else return SendClientMessage(playerid, -1, "Jestes po prostu na sluzbie.");
	return 1;
}

CMD:nreport(playerid, params[]) {
	if(PlayerInfo[playerid][pHelper] == 0) return SendClientMessage(playerid, COLOR_GREY, "* Nie masz dostepu do tego polecenia!");
    if(HelperDuty[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "nie jeste na s³u¿bie jako pomocnik.");
	if(HaveHelp[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Nie dostales pytania.");
	new userID = HaveHelp[playerid];
	new string[180];
	format(string, sizeof(string), "AdmCmd: %s wyslal jego pytanie %s (%d) administrator.", GetName(playerid), GetName(userID), userID);
	SendStaffMessage(COLOR_LIGHTRED, string);
	SCM(userID, COLOR_GOLD, "Twoje pytanie zostalo wyslane do administratorów!");	
	format(string, sizeof(string), "REport z %s (%d): %s.", GetName(userID), userID, HelpText[userID]);
	SendAdminMessage(0xC9161FFF, string, 1);
	format(string, sizeof(string), "Twój report zostal wyslany do administratorów.");
	if(ReportTimer[userID] != 0) {
		KillTimer(ReportTimer[userID]);
		ReportTimer[userID] = 0;
	}			
	ReportTimer[userID] = SetTimerEx("CheckReport", 300000, 0, "%d", userID);
	SendClientMessage(userID, COLOR_YELLOW, string);
	PlayerInfo[userID][pReportTime] = 120;
	Ajutor[userID] = 1;
	format(ReportText[userID], 256, "%s (%d): %s.", GetName(userID), userID, HelpText[userID]);	
	HaveHelp[playerid] = -1;
	Helped[userID] = 0;
	return 1;
}

	
CMD:rnewbie(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, "* Nie masz dostepu do tego polecenia!");
	new id;
	if(sscanf(params, "u", id)) return SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/rnewbie <id/nazwa>");
	if(!IsPlayerConnected(id) || id == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY,"Ten gracz nie jest online!");
	if(Ajutor[id] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Ten gracz nie zglosil.");
	if(PlayerInfo[id][pHelper] != 0) return SCM(playerid, COLOR_WHITE, "Acel player este helper!");
	Ajutor[id] = 0;
	new string[180];
	format(string, sizeof(string), "AdmCmd: %s wyslal pytanie do pomocnika %s (% d).", GetName(playerid), GetName(id), id);
	SendStaffMessage(COLOR_LIGHTRED, string);	
	SCM(id, COLOR_GOLD, "Twój report zostal wyslany do pomocnika! Poczekaj na odpowiedz.");
	HelpText[id] = "";
	format(HelpText[id], 256, ReportText2[id]);
	PlayerInfo[id][pNewbieMute] = 120;
	Helped[id] = 1;
	OnHelper[id] = 0;		
	return 1;
}
	

function SendNewbieMessage2(color,const string[]) {
	new text[180];
	foreach(Player, i) {
	    if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {
			if(PlayerInfo[i][pAdmin] != 0 || PlayerInfo[i][pHelper] != 0) {
				format(text, 256, string);
				SendClientMessage(i, color, text);
			}
		}
	}
	return 1;
}

function SendNewbieMessage(color,const string[]) {
	new text[180];
	foreach(Player, i) {
	    if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {
			if(IsPlayerLogged[i] == 1 && NewbieChat[i] == 0) {
				format(text, 256, string);
				SendClientMessage(i, color, text);
			}
		}
	}
	return 1;
}
	
CMD:nre(playerid, params[]) return cmd_nreply(playerid, params);
CMD:nreply(playerid, params[]) {
	if(PlayerInfo[playerid][pHelper] == 0) return SendClientMessage(playerid, COLOR_GREY, "* Nie masz dostepu do tego polecenia!");
    if(HelperDuty[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "nie jeste na s³u¿bie jako pomocnik.");
	if(HaveHelp[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Nie dostales pytania.");
	new result[250], string[180];
	if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/nreply <text>");
	new userID = HaveHelp[playerid];
	format(string, sizeof(string), "* Newbie %s: %s", GetName(userID), HelpText[userID]);
	SendNewbieMessage(COLOR_LGREEN, string);	
	format(string, sizeof(string), "* Helper %s: @%s, %s", GetName(playerid), GetName(userID), result);
	foreach(Player, i) {
	    if(IsPlayerConnected(i) && NewbieChat[i] == 0) {
	        if(i == userID) MesajLung(i, COLOR_YELLOW, string);
	        else MesajLung(i, COLOR_LGREEN, string);
	    }
	}
	HaveHelp[playerid] = -1;
	PlayerInfo[playerid][pHelpedPlayers] ++;
	Helped[userID] = 0;
	new szQuery[256];
	format(szQuery, sizeof(szQuery), "UPDATE users SET `HelpedPlayers` = '%d' WHERE `ID` = '%d'", PlayerInfo[playerid][pHelpedPlayers], PlayerInfo[playerid][pSQLID]);
	mysql_query(SQL, szQuery);	
	return 1;
}

CMD:nr(playerid, params[]) {
	if(PlayerInfo[playerid][pHelper] == 0) return SendClientMessage(playerid, COLOR_GREY, "* Nie masz dostepu do tego polecenia!");
    if(HelperDuty[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "nie jeste na s³u¿bie jako pomocnik.");
	if(HaveHelp[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Nie dostales pytania.");
	new result[250], string[180];
	if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/nr <text>");
	new userID = HaveHelp[playerid];
	format(string, sizeof(string), "* Newbie %s: %s", GetName(userID), HelpText[userID]);
	SendNewbieMessage(COLOR_LGREEN, string);	
	format(string, sizeof(string), "* Helper %s: @%s, %s", GetName(playerid), GetName(userID), result);
	foreach(Player, i) {
	    if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {
	        if(i == userID) MesajLung(i, COLOR_YELLOW, string);
			if(PlayerInfo[i][pAdmin] != 0 && PlayerInfo[i][pHelper] != 0) MesajLung(i, COLOR_LGREEN, string);
	        else if(PlayerInfo[i][pAdmin] != 0 || PlayerInfo[i][pHelper] != 0) MesajLung(i, COLOR_LGREEN, string);
	    }
	}
	HaveHelp[playerid] = -1;
	PlayerInfo[playerid][pHelpedPlayers] ++;
	
	Helped[userID] = 0;
	new szQuery[256];
	format(szQuery, sizeof(szQuery), "UPDATE users SET `HelpedPlayers` = '%d' WHERE `ID` = '%d'", PlayerInfo[playerid][pHelpedPlayers], PlayerInfo[playerid][pSQLID]);
	mysql_query(SQL, szQuery);	
	return 1;
}

CMD:checkhelp(playerid, params[]) {
    if(PlayerInfo[playerid][pHelper] == 0) return SendClientMessage(playerid, COLOR_GREY, "* Nie masz dostepu do tego polecenia!");
    if(HelperDuty[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "nie jeste na s³u¿bie jako pomocnik.");
	if(HaveHelp[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Nie dostales pytania.");
	new userID = HaveHelp[playerid], string[180];
	format(string, 180, "{FFA200}**{FFFF00} Pytanie od %s(%d, level %d) {FFA200}**", GetName(userID), userID, PlayerInfo[userID][pLevel]);
	SendClientMessage(playerid, COLOR_DBLUE, string);						
	format(string, 180, "%s", HelpText[userID]);	
	SendClientMessage(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:nd(playerid, params[]) return cmd_ndelete(playerid, params);
CMD:ndelete(playerid, params[]) {
    if(PlayerInfo[playerid][pHelper] == 0) return SendClientMessage(playerid, COLOR_GREY, "* Nie masz dostepu do tego polecenia!");
    if(HelperDuty[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "nie jeste na s³u¿bie jako pomocnik.");
	if(HaveHelp[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Nie dostales pytania.");
	new result[64], string[256];
	if(sscanf(params, "s[64]",result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/ndelete <reason>");
	new userID = HaveHelp[playerid];
	format(string, sizeof(string), "* Twoje pytanie zostalo usuniete %s. Powód: %s", GetName(playerid), result);
	SendClientMessage(userID, COLOR_YELLOW, string);
	format(string, sizeof(string), "SYSTEM: Helper %s usunal swoje pytanie %s. Powód: %s", GetName(playerid), GetName(HaveHelp[playerid]), result);
	SendAdminMessage(COLOR_LOGS, string, 1);
	
	format(string, sizeof(string), "(/ndelete) Wyslane odpowiedzi: %s", result);
	SendClientMessage(playerid, COLOR_GREY, string);
	Helped[userID] = 0;
	HaveHelp[playerid] = -1;
	PlayerInfo[playerid][pHelpedPlayers] ++;
	
	new szQuery[256];
	format(szQuery, sizeof(szQuery), "UPDATE users SET `HelpedPlayers` = '%d' WHERE `ID` = '%d'", PlayerInfo[playerid][pHelpedPlayers], PlayerInfo[playerid][pSQLID]);
	mysql_query(SQL, szQuery);	
	return 1;
}

function HelpReset(playerid) {
	if(HelpMuted[playerid] == 1) HelpText[playerid] = "", HelpMuted[playerid] = 0;
}

CMD:helpers(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
        new count = 0,string[200],sendername[30];
		SendClientMessage(playerid, COLOR_SERVER, "Pomocnicy");
		foreach(Player,i)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pHelper] != 0)
				{
					GetPlayerName(i, sendername,  sizeof(sendername));
					format(string, 256, "(%d) %s - (HLVL: %d)", i,sendername,PlayerInfo[i][pHelper]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					count++;
				}
			}
		}
		if(count == 0) SendClientMessage(playerid,COLOR_WHITE,"* Nie ma pomocników online.");
		SCM(playerid, -1, "Jesli masz jakies pytania dotyczace serwera, uzyj /n.");
	}
	return 1;
}

CMD:betatesty(playerid, params[])
{
	SCM(playerid, COLOR_LIGHTBLUE, "[BETATESTY]: Otrzyma³e 5 poziom Administratora");
	PlayerInfo[playerid][pAdmin] = 5;
	return 1;
}

CMD:setadmin(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 6)
		{
			new id,adminlevel,sendername[30],giveplayer[30],string[200];
			if(sscanf(params, "ui",id,adminlevel)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/setadmin <id/nazwa> <Admin Level>");
			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
					GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[id][pAdmin] = adminlevel;
					printf("AdmCmd: %s awansowal %s na %d admin level.", sendername, giveplayer, adminlevel);
					format(string, sizeof(string), "Zostales awansowany na %d level admina przez %s,", adminlevel, sendername);
					SendClientMessage(id, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "Awansowales %s na %d poziom admina.", giveplayer,adminlevel);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "AdmCmd: Administrator %s awansowal %s na %d level admina.", sendername,giveplayer,adminlevel);
					SendAdminMessage(COLOR_LOGS,string,4);
					AdminLog("/logs/nominacje.log", string);
				 	new wakaname[25];
					GetPlayerName(id,wakaname,25);
					new str[256];
					format(str,256,"UPDATE users SET `Admin`='%d' WHERE `ID`='%d'",PlayerInfo[id][pAdmin],PlayerInfo[id][pSQLID]);
					mysql_query(SQL,str);
				}
			}
    		else
	    	{
		    	SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		    }
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}
CMD:sethelper(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			new id,sendername[30],giveplayer[30],string[200],lvl;
			if(sscanf(params, "ui",id, lvl)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/sethelper <id/nazwa> <level>");
			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
					GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[id][pHelper] = lvl;
					printf("AdmCmd: %s awansowal %s na pomocnika.", sendername, giveplayer);
					format(string, sizeof(string), "Zostales awansowany na pomocnika przez %s.", sendername);
					SendClientMessage(id, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "Awansowales %s na pomocnika.", giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "AdmCmd: Administrator %s dal pomocnika %s.", sendername,giveplayer);
					SendAdminMessage(COLOR_LOGS,string,4);
					AdminLog("/logs/nominacje.log", string);
					new str[128];
					format(str,128,"UPDATE users SET `Helper`='%d' WHERE `ID`='%d'",lvl, PlayerInfo[id][pSQLID]);
					mysql_query(SQL,str);
				}
			}
    		else
	    	{
		    	SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		    }
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}

CMD:togfind(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
		if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
 	    if(togfind[playerid] == 1)
 	    {
 	        togfind[playerid] = 0;
 	        SCM(playerid,COLOR_WHITE,"Wylaczasz mozliwosc wyszukiwania.");
 	    }
 	    else
 	    {
 	    	togfind[playerid] = 1;
            SCM(playerid,COLOR_WHITE,"Wlaczasz mozliwosc wyszukiwania.");
	    }
	}
	return 1;
}
        
stock GetCity(playerid) {
	new string[180];
	if(IsPlayerInArea(playerid, -2997.40, -1115.50, -1213.90, 1659.60)) string ="SF";
	else if(IsPlayerInArea(playerid, 44.60, -2892.90, 2997.00, -768.00)) string ="LS";
	else if(IsPlayerInArea(playerid, 869.40, 596.30, 2997.00, 2993.80)) string ="LV";
	else string="Nieznane";
	return string;
}
		
CMD:findhouse(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
		if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
		new id;
		if(sscanf(params, "i",id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/findhouse <id>");
        if(HouseInfo[id][hID] == 0) return SendClientMessage(playerid, COLOR_GOLD, "Ten dom nie istnieje!");
        CP[playerid] = 69;
        SetPlayerCheckpointEx(playerid, HouseInfo[id][hEntrancex], HouseInfo[id][hEntrancey], HouseInfo[id][hEntrancez], 5.0);
        new string[256];
        format(string, 256, "Punkt czerwony zostal umieszczony na mapie do domu o ID %d. Dystans: %0.2fm", id, GetPlayerDistanceFromPoint(playerid, HouseInfo[id][hEntrancex], HouseInfo[id][hEntrancey], HouseInfo[id][hEntrancez]));
        SendClientMessage(playerid, COLOR_YELLOW, string);
	}
	return 1;
}
CMD:findbiz(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
		if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
		new id;
		if(sscanf(params, "i",id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/findbiz <id>");
		if(id < 1 || id > 28) return SCM(playerid, -1, "Ten biznes nie istnieje!");
        CP[playerid] = 69;
        SetPlayerCheckpointEx(playerid, BizzInfo[id][bEntranceX], BizzInfo[id][bEntranceY], BizzInfo[id][bEntranceZ], 5.0);
        new string[256];
        format(string, 256, "Punkt czerwony zostal umieszczony na mapie do biznesu o ID %d. Dystans: %0.2fm", id, GetPlayerDistanceFromPoint(playerid, BizzInfo[id][bEntranceX], BizzInfo[id][bEntranceY], BizzInfo[id][bEntranceZ]));
        SendClientMessage(playerid, COLOR_YELLOW, string);
	}
	return 1;
}

CMD:find(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
		if(PlayerTime8[playerid] != 0) {
		    new string[256];
			format(string, sizeof(string), "Mozesz uzyc tego polecenia za %d minut.", PlayerTime8[playerid]);
			SCM(playerid, COLOR_GOLD, string);
			return 1;
		}
		if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
		new id,giveplayer[30],string[100];
		if(PlayerInfo[playerid][pJob] != 8) return SendClientMessage(playerid, COLOR_GREY, "Nie masz pracy detektywa.");
		if(sscanf(params, "u",id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/find <id/nazwa>");
		if(GetPVarInt(id, "Przykrywka") == 1) return SCM(playerid, COLOR_GREY, "Ten gracz jest niedostepny!");
		if(IsPlayerConnected(id))
		{
			if(id != INVALID_PLAYER_ID)
			{
			    if(id == playerid) return 1;
				if(togfind[id] == 1) return SCM(playerid,COLOR_GREY, "Ten gracz nie jest polaczony.");
				UsedFind[playerid] = 1;
    			GetPlayerName(id, giveplayer, sizeof(giveplayer));
				new Float:X,Float:Y,Float:Z;
				GetPlayerPos(id, X,Y,Z);
				SetPlayerCheckpointEx(playerid, X,Y,Z, 3.5);
				targetfind[playerid] = id;
				CP[playerid] = 43;
				PlayerTime8[playerid] = 2;
				new FindTime[MAX_PLAYERS];
				PlayerInfo[playerid][pDetectivSkill] ++;
				Update(playerid, pDetectivSkillx);
				if(GetPlayerSkill(playerid) == 5) { }
				else {
                    FindTime[playerid] = GetPlayerSkill(playerid) * 30;
                    SetTimerEx("StopFind",GetPlayerSkill(playerid) * 30000, 0, "d", playerid);
                    format(string, 256, "Masz dopiero %d poziom umiejetnosci, czerwony punkt zniknie z mapy za %d sekund, poniewaz  nie masz umiejetnosci 5 skilla w tej pracy!", GetPlayerSkill(playerid), FindTime[playerid]);
                    SCM(playerid, COLOR_YELLOW, string);
				}			
			}
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
 	return 1;
}


function StopFind(playerid) {
	if(UsedFind[playerid] == 1) {
	    if(targetfind[playerid] != -1) {
	        UsedFind[playerid] = 0;
	        targetfind[playerid] = -1;
	        DisablePlayerCheckpoint(playerid);
	        SCM(playerid, COLOR_WHITE, "Minal czas!");
	    }
	}
	return 1;
}

CMD:gethere(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new plo,sendername[30],giveplayer[30],string[100];
			if(sscanf(params, "u",plo)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/gethere <id/nazwa>");
	    	new Float:plocx,Float:plocy,Float:plocz;
		    if (IsPlayerConnected(plo))
		    {
		     	if(plo != INVALID_PLAYER_ID)
			    {
					GetPlayerPos(playerid, plocx, plocy, plocz);
					SetPlayerInterior(plo,GetPlayerInterior(playerid));
					PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
					PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
					if (GetPlayerState(plo) == 2)
					{
						TelePos[plo][0] = 0.0;
						TelePos[plo][1] = 0.0;
						new tmpcar = GetPlayerVehicleID(plo);
						SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
					}
					else
					{
						SetPlayerPosEx(plo,plocx,plocy+2, plocz);
					}
					if(InHouse[playerid] > 0)
					{
						InHouse[plo] = InHouse[playerid];
					}
					if(InHQ[playerid] > 0)
					{
						InHQ[plo] = InHQ[playerid];
					}
					if(InBussines[playerid] > 0)
					{
						InBussines[plo] = InBussines[playerid];
					}
					SetPlayerVirtualWorld(plo, GetPlayerVirtualWorld(playerid));
					SendClientMessage(plo, COLOR_GRAD1, "Zostales teleportowany z powodzeniem.");
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(plo, giveplayer, sizeof(giveplayer));
				    format(string, sizeof(string), "AdmCmd: Admin %s teleportowal do siebie %s.", sendername, giveplayer);
					SendAdminMessage(COLOR_LOGS, string, 1);
				    AdminLog("/logs/admin.log", string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
		}
		else
		{
				SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}
CMD:gotoxyz(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		new string[128],interior,vw;
		new Float:x, Float:y, Float:z;
		if(sscanf(params, "fffii", x,y,z,interior,vw)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/gotoxyz <x> <y> <z> <interior> <virtual world>");
		{
			SetPlayerPosEx(playerid, x, y, z);
			format(string,sizeof(string),"Teleportowales sie do x = %f, y = %f, z = %f, interior %d.",x,y,z,interior);
			SendClientMessage(playerid,COLOR_WHITE, string);
			SetPlayerVirtualWorld(playerid, vw);
			SetPlayerInterior(playerid,interior);
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
		}
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}
CMD:gotolv(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		new string[64],sendername[25];
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, 1699.2,1435.1, 10.7);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "Zostales teleportowany.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: Admin %s teleportowal sie LV.", sendername);
			AdminLog("/logs/admin.log", string);
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}
CMD:gotosf(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		new string[64],sendername[25];
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -1417.0,-295.8,14.1);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, -1417.0,-295.8,14.1);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "Zostales teleportowany.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: Admin %s teleportowal sie do SF.", sendername);
			AdminLog("/logs/admin.log", string);
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}
CMD:gotostad(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -1435.75, -652.664, 1054.94);
			}
			else
			{
				SetPlayerPosEx(playerid, -1435.75, -652.664, 1054.94);
			}
			SetPlayerInterior(playerid,4);
			SendClientMessage(playerid, COLOR_GRAD1, "Zostales teleportowany.");
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}
CMD:gotojet(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1.71875, 30.4062, 1200.34);
			}
			else
			{
				SetPlayerPosEx(playerid, 1.71875, 30.4062, 1200.34);
			}
			SetPlayerInterior(playerid,1);
			SendClientMessage(playerid, COLOR_GRAD1, "Zostales teleportowany.");
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}
CMD:goto(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
	{
		new id;
		if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/goto <id/nazwa>");
		{
			if(id != INVALID_PLAYER_ID)
	        {
				new Float:ax,Float:ay,Float:az;
				GetPlayerPos(playerid,ax,ay,az);
				posxxx[playerid] = ax;
				posyyy[playerid] = ay;
				poszzz[playerid] = az;
				new Float:x, Float:y, Float:z;
				GetPlayerPos(id, x, y, z);
				new tmpcar = GetPlayerVehicleID(playerid);
				if (GetPlayerState(playerid) == 2)
				{
					SetVehiclePos(tmpcar, x, y+4, z);
				}
				else
				{
					SetPlayerPosEx(playerid,x,y+2, z);
				}
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(id));
				SetPlayerInterior(playerid, GetPlayerInterior(id));
				if(InHouse[id] > 0)
				{
					InHouse[playerid] = InHouse[id];
				}
				if(InHQ[id] > 0)
				{
					InHQ[playerid] = InHQ[id];
				}
				if(InBussines[id] > 0)
				{
					InBussines[playerid] = InBussines[id];
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Zostales teleportowany.");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}

CMD:gotols(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new string[100],sendername[30];
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1526.5,-1693.0,18.2);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, 1526.5,-1693.0,18.2);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "Zostales teleportowany.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: Admin %s teleportowal sie do LS.", sendername);
			AdminLog("/logs/admin.log", string);
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}

CMD:gotoareszt(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new string[100],sendername[30];
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 159.692901,-194.629592,350.024810);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, 159.692901,-194.629592,350.024810);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "Zostales teleportowany.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: Admin %s teleportowal sie do Aresztu.", sendername);
			AdminLog("/logs/admin.log", string);
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}

CMD:gotowyspa(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new string[100],sendername[30];
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 4231.728027,-1904.004272,68.225921);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, 4231.728027,-1904.004272,68.225921);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "Zostales teleportowany.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: Admin %s teleportowal sie na Wyspe.", sendername);
			AdminLog("/logs/admin.log", string);
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}

CMD:gotoport(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new string[100],sendername[30];
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 2523.049072,-2639.326904,13.638664);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, 2523.049072,-2639.326904,13.638664);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "Zostales teleportowany.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: Admin %s teleportowal sie do Portu.", sendername);
			AdminLog("/logs/admin.log", string);
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}
CMD:gotods(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new string[100],sendername[30];
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 346.2236,-1528.9287,33.3284);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, 328.3273,-1512.5009,36.0391);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "Zostales teleportowany.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: Admin %s teleportowal sie do Salonu Aut.", sendername);
			AdminLog("/logs/admin.log", string);
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}
CMD:mark(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			SendClientMessage(playerid, COLOR_GRAD1, "Ustawiles punkt TP.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}
CMD:gotom(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		new string[99],sendername[25];
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -2317.8091,-1637.5575,483.7031);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, -2317.8091,-1637.5575,483.7031);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "Zostales teleportowany.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: Admin %s teleportowal sie na Chilliad.", sendername);
			AdminLog("/logs/admin.log", string);
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}
CMD:gotomark(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		new string[64],sendername[25];
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "Zostales teleportowany.");
			SetPlayerInterior(playerid,0);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: Admin %s teleportowal sie do pozycji zapisanych przez /mark.", sendername);
			AdminLog("/logs/admin.log", string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Twój poziom administratora nie jest wystarczajaco wysoki, aby uzyc tego polecenia.");
		}
	}
	return 1;
}
CMD:gotoin(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1416.107000,0.268620,1000.926000);
			}
			else
			{
				SetPlayerPosEx(playerid, 1416.107000,0.268620,1000.926000);
			}
			new string[64],sendername[25];
			SendClientMessage(playerid, COLOR_GRAD1, "Zostales teleportowany.");
			SetPlayerInterior(playerid,1);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: Admin %s teleportowal sie do interiora.", sendername);
			AdminLog("/logs/admin.log", string);
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}
CMD:gotocar(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
	  	{
			new testcar,string[128],sendername[30];
			if(sscanf(params, "d",testcar)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/gotocar <carid>");
			new Float:cwx2,Float:cwy2,Float:cwz2;
			GetVehiclePos(testcar, cwx2, cwy2, cwz2);
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, cwx2, cwy2, cwz2);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, cwx2, cwy2, cwz2);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "Zostales teleportowany.");
			SetPlayerInterior(playerid,0);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: Admin %s teleportowal sie do samochodu %d.", sendername, testcar);
			AdminLog("/logs/admin.log", string);
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}
CMD:check(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new id;
			if(sscanf(params, "u",id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/check <id/nazwa>");
			if(IsPlayerConnected(id))
			{
				if(id != INVALID_PLAYER_ID)
				{
					ShowStats(playerid,id);
				}
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}

/*CMD:re(playerid, params[])
{
	new id,message[128], string[256], sendername[25], giveplayer[25];
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
	{
		if(sscanf(params, "us[128]", id, message)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/re <id/nazwa> <wiadomosc>");
		{
			if(id != INVALID_PLAYER_ID)
	        {
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), ">> %s: %s <<", sendername, message);
				SendClientMessage(id, COLOR_YELLOW, string);
				format(string, sizeof(string), "(/re)%s->%s: %s", sendername , giveplayer, message);
				SendStaffMessage(COLOR_YELLOW, string);
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}*/

CMD:w(playerid, params[])
{
	new id,message[128], string[256], sendername[25], giveplayer[25];
		if(sscanf(params, "us[128]", id, message)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: /wiadomosc <gracz> <wiadomosc>");
		{
			if(id != INVALID_PLAYER_ID)
	        {
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				if(PlayerInfo[playerid][pMuted] == 1)
					{
						format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
						return 1;
								}
				if(PlayerInfo[playerid][pHelper] >= 1)
				{
					format(string, sizeof(string), "«« Pomocnik %s: %s", sendername, message);
				}
            	if(PlayerInfo[playerid][pAdmin] >= 1)
				{
					format(string, sizeof(string), "«« Administrator %s: %s", sendername, message);
				}
				SendClientMessage(id, COLOR_NEWS, string);
				format(string, sizeof(string), "»» %s: %s", giveplayer , message);
				SendClientMessage(playerid,  COLOR_YELLOW, string);
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}	
	return 1;			
}

IsNumeric(const string[]) {
	for (new i = 0, j = strlen(string); i < j; i++) {
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}

CMD:id(playerid, params[]) {
	new names[64], giveplayer[25], x, sstring[180];
	if(sscanf(params, "s[64]", names)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/id <id/nazwa>");
	if(strlen(names) > 24) return SCM(playerid, COLOR_GREY, "Gracz nie jest online.");
	if(IsNumeric(names)) {
		if(strval(names) >= 1000) return SCM(playerid, COLOR_GREY, "Gracz nie jest online.");
	}
	if(IsNumeric(names)) {
		if(x < 10) {
			if(strval(names) < 0 || strval(names) > 999) return SCM(playerid, COLOR_GREY, "Gracz nie jest online."); 
			new i = strval(names);
			if(IsPlayerLogged[i] == 0) return SCM(playerid, COLOR_GREY, "Gracz nie jest online.");
			GetPlayerName(i, giveplayer, sizeof(giveplayer));
			new szRankk[180];
			if(PlayerInfo[i][pMember] != 0) format(szRankk, sizeof(szRankk), " (ranga %d)", PlayerInfo[i][pRank]);
			if(GetPVarInt(i, "Cover") == 1) {
				format(sstring, sizeof(sstring), "(ID %d) Nazwa: %s | Level: %d | Frakcja: Cywil | FPS: %d",i,giveplayer,GetPlayerScore(i), FPS2[i]);
				SendClientMessage(playerid, COLOR_WHITE, sstring);
				return 1;
			}
			new name[180];
			format(name, sizeof(name), "%s", GetName(i));
			new clan = PlayerInfo[i][pClan];					
			if(PlayerInfo[i][pSleeping] == 1 || SecondsAFK[i] >= 5) {
				if(clan != 0) format(name, sizeof(name), "{00ccff}%s{AFAFAF}%s",  ClanInfo[clan][clTag], GetName(i));								
			}
			else {
				if(clan != 0) format(name, sizeof(name), "{00ccff}%s{FFFFFF}%s",  ClanInfo[clan][clTag], GetName(i));								
			}
			if(PlayerInfo[i][pSleeping] == 1 || SecondsAFK[i] >= 5) {
				format(sstring, sizeof(sstring), "(ID %d) %s | Level: %d | Frakcja: %s%s | FPS: %d",i,name,PlayerInfo[i][pLevel],NumeFactiune(PlayerInfo[i][pMember]),szRankk, FPS2[i]);
				SendClientMessage(playerid, COLOR_GREY, sstring);
			}	
			else {
				format(sstring, sizeof(sstring), "(ID %d) %s | Level: %d | Frakcja: %s%s | FPS: %d",i,name,PlayerInfo[i][pLevel],NumeFactiune(PlayerInfo[i][pMember]),szRankk, FPS2[i]);
				SendClientMessage(playerid, COLOR_WHITE, sstring);
			}						
			x++;
			return 1;
		}
	}	
	foreach(Player, i) {
		if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {					
			if(strfind(GetNameEx(i), names, true) != -1) {
				if(x < 10) {
					if(i == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "Gracz nie jest online."); 
					GetPlayerName(i, giveplayer, sizeof(giveplayer));
					new szRankk[180];
					if(PlayerInfo[i][pMember] != 0) format(szRankk, sizeof(szRankk), " (Rank %d)", PlayerInfo[i][pRank]);
					if(GetPVarInt(i, "Cover") == 1) {
						format(sstring, sizeof(sstring), "(ID %d) Nazwa: %s | Level: %d | Frakcja: Cywil | FPS: %d",i,giveplayer,GetPlayerScore(i), FPS2[i]);
						SendClientMessage(playerid, COLOR_WHITE, sstring);
						return 1;
					}
					new name[180];
					format(name, sizeof(name), "%s", GetName(i));
					new clan = PlayerInfo[i][pClan];
					if(PlayerInfo[i][pSleeping] == 1 || SecondsAFK[i] >= 5) {
						if(clan != 0) format(name, sizeof(name), "{00ccff}%s{AFAFAF}%s",  ClanInfo[clan][clTag], GetName(i));							
					}
					else {
						if(clan != 0) format(name, sizeof(name), "{00ccff}%s{FFFFFF}%s",  ClanInfo[clan][clTag], GetName(i));							
					}
					if(PlayerInfo[i][pSleeping] == 1 || SecondsAFK[i] >= 5) {
						format(sstring, sizeof(sstring), "(ID %d) %s | Level: %d | Frakcja: %s%s | FPS: %d",i,name,PlayerInfo[i][pLevel],NumeFactiune(PlayerInfo[i][pMember]),szRankk, FPS2[i]);
						SendClientMessage(playerid, COLOR_GREY, sstring);
					}	
					else {
						format(sstring, sizeof(sstring), "(ID %d) %s | Level: %d | Frakcja: %s%s | FPS: %d",i,name,PlayerInfo[i][pLevel],NumeFactiune(PlayerInfo[i][pMember]),szRankk, FPS2[i]);
						SendClientMessage(playerid, COLOR_WHITE, sstring);
					}
					x++;
				}	
			}											
		}
	}
	if(x == 0) return SCM(playerid, COLOR_GREY, "Gracz nie jest online.");
	if(x == 10) SCM(playerid, COLOR_WHITE, "Wyswietlanych bylo tylko pierwszych 10 wyników.");
	return 1;
}

/*CMD:sleep(playerid, params[])
{
	if(InHouse[playerid] > 0)
    {
        if(InHouse[playerid] != PlayerInfo[playerid][pHouse]) return SCM(playerid, -1, "Nie masz czynszu w tym domu!");
        if(PlayerInfo[playerid][pWantedLevel] == 0)
		{
            if(PlayerInfo[playerid][pSleeping] == 0)
			{
   				PlayerInfo[playerid][pSleeping] = 1;
				TogglePlayerControllable(playerid,0);
     			SendClientMessage(playerid, COLOR_WHITE, "INFO: Teraz spij, aby ponownie uzyc tego polecenia.");
                LoopingAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
				SetPlayerHealthEx(playerid, 100);
				
				new qqerry[128],wakaname[25];
				GetPlayerName(playerid,wakaname,sizeof(wakaname));
				format(qqerry, sizeof(qqerry), "UPDATE `users` SET `Status` = '2' WHERE `name`='%s'", wakaname);
			    mysql_query(SQL,qqerry);
			}
			else if(PlayerInfo[playerid][pSleeping] == 1)
			{
				PlayerInfo[playerid][pSleeping] = 0;
				TogglePlayerControllable(playerid,1);
				ClearAnimations(playerid);
                SendClientMessage(playerid, COLOR_WHITE, "INFO: Witamy ponownie!");
				
				SetPlayerHealthEx(playerid, 100);
				new qqerry[128],wakaname[25];
				GetPlayerName(playerid,wakaname,sizeof(wakaname));
				format(qqerry, sizeof(qqerry), "UPDATE `users` SET `Status` = '1' WHERE `name`='%s'", wakaname);
			    mysql_query(SQL,qqerry);
		    }
        }
        else
		{
            SendClientMessage(playerid, COLOR_GREY, "Nie mozesz spac, poniewaz  szuka Cie policja.");
			return 1;
        }
    }
    else return SendClientMessage(playerid, COLOR_GREY, "Nie ma cie w domu.");
	return 1;
}*/
CMD:fv(playerid, params[]) return cmd_fixveh(playerid, params);
CMD:fixveh(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		{
    		if(IsPlayerInAnyVehicle(playerid))
		    {
			    RepairVehicle(GetPlayerVehicleID(playerid));
			    Gas[GetPlayerVehicleID(playerid)] = 100;
			    SendClientMessage(playerid, COLOR_GREY, "Pojazd naprawiony");
		    }
		}
	}
	return 1;
}
CMD:wezwij(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		new x_nr[256],string[300],sendername[30];
		if(sscanf(params, "s[256]",x_nr))
		{
			SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/wezwij <name>");
		  	SendClientMessage(playerid, COLOR_WHITE, "Dostêpne: Taxi, Medyk, Mechanik, Urzednik.");
			return 1;
		}
		if(strcmp(x_nr,"taxi",true) == 0)
		{
			if(IsInBlacklist(playerid, 13))
			return SCM(playerid, -1, "Jestes na czarnej liscie tej frakcji, nie mozesz korzystac z uslug tej frakcji!");

			if(PlayerTime[playerid] != 0) {
				format(string, sizeof(string), "Mozesz uzyc tego polecenia dopiero za %d minut.", PlayerTime[playerid]);
				SCM(playerid, COLOR_GOLD, string);
				return 1;
			}
		    if(TransportDuty[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Nie jestem taksówkarzem na sluzbie.");
		    GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsPlayerInArea(playerid, -2997.40, -1115.50, -1213.90, 1659.60))
            {
				format(string, sizeof(string), "** %s potrzebuje taxówki, Lokalizacja: %s (SF). (wpisz /akceptuj taxi %d aby akceptowac zlecenie)", sendername ,GetPlayerZone(playerid),playerid);
		    	SendFactionMessage(13, COLOR_LIGHTBLUE, string);
			}
			else if(IsPlayerInArea(playerid, 44.60, -2892.90, 2997.00, -768.00))
            {
				format(string, sizeof(string), "** %s potrzebuje taxówki, Lokalizacja: %s (LS). (wpisz /akceptuj taxi %d aby akceptowac zlecenie)", sendername ,GetPlayerZone(playerid),playerid);
		    	SendFactionMessage(13, COLOR_LIGHTBLUE, string);
			}
			else if(IsPlayerInArea(playerid, 869.40, 596.30, 2997.00, 2993.80))
            {
				format(string, sizeof(string), "** %s potrzebuje taxówki, Lokalizacja: %s (LV). (wpisz /akceptuj taxi %d aby akceptowac zlecenie)", sendername ,GetPlayerZone(playerid),playerid);
		    	SendFactionMessage(13, COLOR_LIGHTBLUE, string);
			}
			else
            {
				format(string, sizeof(string), "** %s potrzebuje taxówki, Lokalizacja: %s. (wpisz /akceptuj taxi %d aby akceptowac zlecenie)", sendername ,GetPlayerZone(playerid),playerid);
		    	SendFactionMessage(13, COLOR_LIGHTBLUE, string);
			}			
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Wezwa³e taxówkê, poczekaj na akceptacjê!");
		    TaxiCall[playerid] = playerid;
			PlayerTime[playerid] = 5;
		}
		else if(strcmp(x_nr,"medyk",true) == 0)
		{
			if(IsInBlacklist(playerid, 14))
			return SCM(playerid, -1, "Jestes na czarnej liscie tej frakcji, nie mozesz korzystac z uslug tej frakcji!");
			if(PlayerTime4[playerid] != 0) {
				format(string, sizeof(string), "Mozesz uzyc tego polecenia za %d minuty.", PlayerTime4[playerid]);
				SCM(playerid, COLOR_GOLD, string);
				return 1;
			}
		    GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsPlayerInArea(playerid, -2997.40, -1115.50, -1213.90, 1659.60))
            {
				format(string, sizeof(string), "** %s potrzebuje lekarza, Lokalizacja: %s (SF). (wpisz /akceptuj medyk %d aby akceptowac zlecenie)", sendername,GetPlayerZone(playerid),playerid);
		    	SendFactionMessage(14, COLOR_LIGHTBLUE, string);
			}
			else if(IsPlayerInArea(playerid, 44.60, -2892.90, 2997.00, -768.00))
            {
				format(string, sizeof(string), "** %s potrzebuje lekarza, Lokalizacja: %s (LS). (wpisz /akceptuj medyk %d aby akceptowac zlecenie)", sendername,GetPlayerZone(playerid),playerid);
		    	SendFactionMessage(14, COLOR_LIGHTBLUE, string);
			}
			else if(IsPlayerInArea(playerid, 869.40, 596.30, 2997.00, 2993.80))
            {
				format(string, sizeof(string), "** %s potrzebuje lekarza, Lokalizacja: %s (LV). (wpisz /akceptuj medyk %d aby akceptowac zlecenie)", sendername,GetPlayerZone(playerid),playerid);
		    	SendFactionMessage(14, COLOR_LIGHTBLUE, string);
			}
			else 
            {
				format(string, sizeof(string), "** %s potrzebuje lekarza, Lokalizacja: %s. (wpisz /akceptuj medyk %d aby akceptowac zlecenie)", sendername,GetPlayerZone(playerid),playerid);
		    	SendFactionMessage(14, COLOR_LIGHTBLUE, string);
			}			
		    SendClientMessage(playerid,  COLOR_LIGHTBLUE, "* Wezwa³e medyka, poczekaj na akceptacjê!");
		    MedicCall[playerid] = playerid;
			PlayerTime4[playerid] = 5;
		}
		else if(strcmp(x_nr,"mechanik",true) == 0)
		{
			if(PlayerTime5[playerid] != 0) {
				format(string, sizeof(string), "Mozesz uzyc tego polecenia za %d minut.", PlayerTime5[playerid]);
				SCM(playerid, COLOR_GOLD, string);
				return 1;
			}
		    GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsPlayerInArea(playerid, -2997.40, -1115.50, -1213.90, 1659.60))
            {
				format(string, sizeof(string), "** %s potrzebuje mechanika, Lokalizacja: %s (SF). (wpisz /akceptuj mechanik %d aby akceptowac zlecenie)", sendername,GetPlayerZone(playerid),playerid);
		    	SendJobMessage(7, COLOR_LIGHTBLUE, string);
			}
			else if(IsPlayerInArea(playerid, 44.60, -2892.90, 2997.00, -768.00))
            {
				format(string, sizeof(string), "** %s potrzebuje mechanika, Lokalizacja: %s (LS). (wpisz /akceptuj mechanik %d aby akceptowac zlecenie)", sendername,GetPlayerZone(playerid),playerid);
		    	SendJobMessage(7, COLOR_LIGHTBLUE, string);
			}
			else if(IsPlayerInArea(playerid, 869.40, 596.30, 2997.00, 2993.80))
            {
				format(string, sizeof(string), "** %s potrzebuje mechanika, Lokalizacja: %s (LV). (wpisz /akceptuj mechanik %d aby akceptowac zlecenie)", sendername,GetPlayerZone(playerid),playerid);
		    	SendJobMessage(7, COLOR_LIGHTBLUE, string);
			}
			else
            {
				format(string, sizeof(string), "** %s potrzebuje mechanika, Lokalizacja: %s (LV). (wpisz /akceptuj mechanik %d aby akceptowac zlecenie)", sendername,GetPlayerZone(playerid),playerid);
		    	SendJobMessage(7, COLOR_LIGHTBLUE, string);
			}
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Wezwa³e mechanika, poczekaj na akceptacjê!");
		    MechanicCall[playerid] = playerid;
			PlayerTime5[playerid] = 5;
		}
		else if(strcmp(x_nr,"urzednik",true) == 0)
		{
			if(IsInBlacklist(playerid, 12))
			return SCM(playerid, -1, "Jestes na czarnej liscie tej frakcji, nie mozesz korzystac z uslug tej frakcji!");
			
			if(PlayerTime6[playerid] != 0) {
				format(string, sizeof(string), "Mozesz uzyc tego polecenia za %d minute.", PlayerTime6[playerid]);
				SCM(playerid, COLOR_GOLD, string);
				return 1;
			}
		    GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsPlayerInArea(playerid, -2997.40, -1115.50, -1213.90, 1659.60))
            {
				format(string, sizeof(string), "** %s potrzebuje urzêdnika, Lokalizacja: %s (SF). (wpisz /akceptuj urzednik %d aby akceptowac zlecenie)", sendername,GetPlayerZone(playerid),playerid);
		    	SendFactionMessage(12, COLOR_LIGHTBLUE, string);
			}
			else if(IsPlayerInArea(playerid, 44.60, -2892.90, 2997.00, -768.00))
            {
				format(string, sizeof(string), "** %s potrzebuje urzêdnika, Lokalizacja: %s (LS). (wpisz /akceptuj urzednik %d aby akceptowac zlecenie)", sendername,GetPlayerZone(playerid),playerid);
		    	SendFactionMessage(12, COLOR_LIGHTBLUE, string);
			}
			else if(IsPlayerInArea(playerid, 869.40, 596.30, 2997.00, 2993.80))
            {
				format(string, sizeof(string), "** %s potrzebuje urzêdnika, Lokalizacja: %s (LV). (wpisz /akceptuj urzednik %d aby akceptowac zlecenie)", sendername,GetPlayerZone(playerid),playerid);
		    	SendFactionMessage(12, COLOR_LIGHTBLUE, string);
			}
			else
            {
				format(string, sizeof(string), "** %s potrzebuje urzêdnika, Lokalizacja: %s (LV). (wpisz /akceptuj urzednik %d aby akceptowac zlecenie)", sendername,GetPlayerZone(playerid),playerid);
		    	SendFactionMessage(12, COLOR_LIGHTBLUE, string);
			}
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Wezwa³e urzêdnika, poczekaj na akceptacjê!");
		    LicensesCall[playerid] = playerid;
			PlayerTime6[playerid] = 5;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Taxi, Medic, Mecanic, Licente.");
			return 1;
		}
	}
	return 1;
}
			
CMD:block(playerid, params[]) {
	new id;
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/block <id/nazwa>");
	if(IsBlocked(playerid, id)) return SCM(playerid, COLOR_GREY, "Ten gracz jest juz zablokowany!");
	if(id == playerid) return SCM(playerid, COLOR_LGREEN, "Nie mozesz uzyc tego polecenia dla siebie!");
	format(Blocked[playerid][EmptyID(playerid)], 256, GetName(id));
	new string[180];
	format(string, sizeof(string), "Zablokowales %s (%d)! Nie bedzie w stanie polaczyc sie od nastepnego rozlaczenia.", GetName(id), id);
	SCM(playerid, 0xFFBABAFF, string);
	format(string, sizeof(string),"~r~Blokada konta~n~~w~Gracz: %s~n~Nadajacy: %s~n~~y~~h~Blokada tymczasowa", GetName(id), GetName(playerid)); 
   	ShowPenalty(string);
	KickEx(id);
	return 1;
}

CMD:blocklist(playerid, params[]) {
	new x, string[180];
	SCM(playerid, -1, "-- Zablokowani gracze--");
	foreach(Player, i) {
		if(IsPlayerConnected(i) && IsBlocked(playerid, i)) {
			format(string, sizeof(string), "%s (%d)", GetName(i), i);
			SCM(playerid, COLOR_WHITE, string);
			x++;
		}
	}
	if(x == 0) SCM(playerid, -1, "Nie znaleziono graczy!");
	else {
		format(string, sizeof(string), "Znaleziono %d graczy.", x);
		SCM(playerid, COLOR_WHITE, string);
	}
	return 1;
}
	
CMD:unblock(playerid, params[]) {
	new id;
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/unblock <id/nazwa>");
	if(!IsBlocked(playerid, id)) return SCM(playerid, COLOR_GREY, "Ten gracz nie jest zablokowany!");
	if(id == playerid) return SCM(playerid, COLOR_LGREEN, "Nie mozesz uzyc tego polecenia dla siebie!");
	Blocked[playerid][IsBlocked2(playerid, id)] = "-1";
	new string[180];
	format(string, sizeof(string), "Odblokowales %s (%d)!", GetName(id), id);
	SCM(playerid, 0xFFBABAFF, string);
	return 1;
}
	
function IsBlocked(playerid, id) {
	for(new i = 0; i < 100; i++) {
		if(strcmp(Blocked[playerid][i], GetName(id), true) == 0) return 1;
	}
	return 0;
}

function IsBlocked2(playerid, id) {
	for(new i = 0; i < 100; i++) {
		if(strcmp(Blocked[playerid][i], GetName(id), true) == 0) return i;
	}
	return 0;
}	

function ResetBlockList(playerid) {
	for(new i = 0; i < 100; i++) {
		Blocked[playerid][i] = "-1";
	}
	return 1;
}

function EmptyID(playerid) {
	for(new i = 0; i < 100; i++) {
		if(strcmp(Blocked[playerid][i], "-1", true) == 0) return i;
	}
	return 0;
}


CMD:oplace(playerid, params[]) {
	new obj, money;
	if(PlayerInfo[playerid][pAdmin] < 2) return 1;
	if(sscanf(params, "ii", obj, money)) {
		SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/oplace <object id> <money>");
		SCM(playerid, COLOR_WHITE, "Cadou (19054-19058), Glob (19059-19063), Oua (19341-19345), Dovleac (19320).");
		SCM(playerid, COLOR_WHITE, "dla mai multe obiecte, acceseaza: gamerxserver.com/forum/showthread.php?21-Objects-by-Category");
		return 1;
	}	
	new id = GetObjects(), Float: Pos[3];
	if(id == MAX_COBJECTS) return SCM(playerid, COLOR_LGREEN, "A fost atinsa limita maxima de obiecte!");
	if(obj < 1 || obj > 19500) return SCM(playerid, COLOR_GREY, "Object invalid!");
	if(money < 1 || money > 100000) return SCM(playerid, COLOR_GREY, "Invalid money! ($1-$100,000)");
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	ObjectInfo[id][oID] = CreateDynamicPickup(obj, 23, Pos[0], Pos[1], Pos[2], 0, -1, -1, 100.0);
	ObjectInfo[id][oMoney] = money;
	new string[180];
	format(string, sizeof(string), "AdmCmd: %s dodano nowy obiekt %d jest ich w sumie. [obj: %d, $%s]", GetName(playerid), id+1, obj, FormatNumber(money));
	SendAdminMessage(COLOR_LOGS, string, 2);
	return 1;
}	

CMD:remobjs(playerid, params[]) return cmd_removeobjects(playerid, params);
CMD:removeobjects(playerid, params[]) {
	new id = GetObjects();
	if(PlayerInfo[playerid][pAdmin] < 2) return 1;
	if(id == 0) return SCM(playerid, COLOR_GREY, "Nie ma zadnych stworzonych obiektów!");
	new obj = GetObjects();	
	new string[180];
	format(string, sizeof(string), "AdmCmd: %s usunieto wszystkie utworzone obiekty (%d).", GetName(playerid), obj);
	SendAdminMessage(COLOR_LOGS, string, 2);
	RemoveObjects();
	return 1;
}

function RemoveObject(id) {
	DestroyDynamicPickup(ObjectInfo[id][oID]);
	ObjectInfo[id][oID] = 0;
	ObjectInfo[id][oMoney] = 0;
	return 1;
}

function RemoveObjects() {
	for(new i = 0; i < MAX_COBJECTS; i++) {
		if(ObjectInfo[i][oID] != 0) {
			DestroyDynamicPickup(ObjectInfo[i][oID]);
			ObjectInfo[i][oID] = 0;
			ObjectInfo[i][oMoney] = 0;
		}
	}	
	return 1;
}

function GetObjects() {
	new x;
	for(new i = 0; i < MAX_COBJECTS; i++) {
		if(ObjectInfo[i][oID] != 0) x++;
	}
	return x;
}

CMD:anuluj(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
		new x_job[256],string[300];
		if(sscanf(params, "s[256]",x_job))
		{
			SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/anuluj <name>");
			SendClientMessage(playerid, COLOR_WHITE, "Dostepne: narkotyki, Reparatie, Accept, Live, Casa.");
			SendClientMessage(playerid, COLOR_WHITE, "Dostepne: Taxi, Medic, Mecanic, Ziar, Tichet, Checkpoint.");
			SendClientMessage(playerid, COLOR_WHITE, "Dostepne: Realimentare, Materiale, RequestEvent, Licente, Trade.");
			return 1;
		}
		else if(strcmp(x_job,"trade",true) == 0)
		{
			if(TradePlayer[playerid] == -1) return SCM(playerid, -1, "Nie dostales oferty! ");
			TradePlayer[playerid] = -1;
			SCM(playerid, -1, "Wymiana anulowana!");
		}				
		else if(strcmp(x_job,"narkotyki",true) == 0)
		{
			if(DrugOffer[playerid] == 999) return SCM(playerid,COLOR_GREY, "Nikt nie dawal ci narkotyków.");
			DrugOffer[playerid] = 999;
			DrugPrice[playerid] = 0;
			DrugGram[playerid] = 0;
		}
		else if(strcmp(x_job,"checkpoint",true) == 0)
		{
			if(CP[playerid] == 50) return SCM(playerid,COLOR_GREY, "To punkt kontrolny dla rabusiów.");
			if(CP[playerid] >= 100 && CP[playerid] <= 119) return SCM(playerid,COLOR_WHITE,"Tego punktu kontrolnego nie mozna usunac, poniewaz  jest przeznaczony dla DMV!");
			if(JobWorking[playerid] == 1) return SCM(playerid,COLOR_GREY, "Uzyj /stopwork, aby anulowac!");
			if(CP[playerid] != 0)
			{
		  		DisablePlayerCheckpoint(playerid);
				SCM(playerid,COLOR_WHITE,"Czerwony punkt zostal pomyslnie usuniety.");
				CP[playerid] = 0;
				targetfind[playerid] = -1;
			}
		}
		else if(strcmp(x_job,"naprawe",true) == 0)
		{
			if(RepairOffer[playerid] == 999) return SCM(playerid,COLOR_GREY, "Nikt nie dal ci naprawy.");
			RepairOffer[playerid] = 999;
			RepairPrice[playerid] = 0;
			RepairCar[playerid] = 0;
		}
		else if(strcmp(x_job,"accept",true) == 0)
		{
			if(AcceptOffer[playerid] == -1) return SCM(playerid,COLOR_GREY, "Nikt nie dal ci pozwolenia.");
			AcceptOffer[playerid] = -1;
			AcceptPrice[playerid] = 0;
		}
		else if(strcmp(x_job,"Materialy",true) == 0)
		{
			if(MatsOffer[playerid] == -1) return SCM(playerid,COLOR_GREY, "Nikt nie dostarczyl ci materialów.");
			MatsOffer[playerid] = -1;
			MatsPrice[playerid] = 0;
			MatsAmmo[playerid] = 0;
		}
		else if(strcmp(x_job,"bron",true) == 0)
		{
			if(SellgunOffer[playerid] == -1) return SCM(playerid,COLOR_GREY, "Nikt nie dal ci broni.");
			SellgunOffer[playerid] = -1;
			SellgunPrice[playerid] = 0;
			SellgunMats[playerid] = 0;
			SellgunAmmo[playerid] = 0;
			SellgunID[playerid] = 0;
		}
		else if(strcmp(x_job,"free",true) == 0)
		{
			if(FreeOffer[playerid] == -1) return SCM(playerid,COLOR_GREY, "Nikt cie nie uwolnil.");
			FreeOffer[playerid] = -1;
			FreePrice[playerid] = 0;
		}
		else if(strcmp(x_job,"find",true) == 0)
		{
			if(UsedFind[playerid] == 0) return SCM(playerid,COLOR_GREY, "Nikogo nie znalazles.");
			if(UsedFind[playerid] == 1)
			{
				UsedFind[playerid] = 0;
				targetfind[playerid] = -1;
				DisablePlayerCheckpoint(playerid);
				SCM(playerid, -1, "Namierzanie zostalo anulowane.");
			}
		}
		else if(strcmp(x_job,"live",true) == 0)
		{
			if(LiveOffer[playerid] == 999) return SCM(playerid,COLOR_GREY, "Nie dostales propozycji wywiadu");
			LiveOffer[playerid] = 999;
		}
		else if(strcmp(x_job,"alimentare",true) == 0)
		{
			if(RefillOffer[playerid] == 999) return SCM(playerid,COLOR_GREY, "Nikt nie dal Ci benzyny");
			RefillOffer[playerid] = 999;
			RefillPrice[playerid] = 0;
		}
		else if(strcmp(x_job,"tichet",true) == 0)
		{
			if(TicketOffer[playerid] == 999) return SCM(playerid,COLOR_GREY, "Nie otrzymales grzywny");
			TicketOffer[playerid] = 999;
			TicketMoney[playerid] = 0;
		}
		else if(strcmp(x_job,"medic",true) == 0)
		{
			if(MedicCall[playerid] == playerid)
			{
			    foreach(Player, i) {
					if(IsPlayerConnected(i) && Accepted[i] == playerid) {
					    SCM(i, -1, "Gracz, od którego przyjales zamówienie, wpisal /cancel!");
					    CP[i] = 0;
					    targetfind[i] = -1;
						UsedFind[i] = 0;
						DisablePlayerCheckpoint(i);
						Accepted[i] = -1;
					}
			    }
				MedicCall[playerid] = -1;
				new sendername[30];
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "** %s zrezygnowal.", sendername);
		    	SendFactionMessage(14, TEAM_AZTECAS_COLOR, string);
		    	SCM(playerid, -1, "Zrezygnowales z tej uslugi.");
			}
			else return SendClientMessage(playerid,COLOR_GREY, "Nie skorzystal z tej uslugi.");
		}
		else if(strcmp(x_job,"licente",true) == 0)
		{
			if(LicensesCall[playerid] == playerid)
			{
			    foreach(Player, i) {
					if(IsPlayerConnected(i) && Accepted[i] == playerid) {
					    SCM(i, -1, "Gracz, od którego przyjales zamówienie, wpisal /cancel!");
					    CP[i] = 0;
					    targetfind[i] = -1;
						UsedFind[i] = 0;
						DisablePlayerCheckpoint(i);
						Accepted[i] = -1;
					}
			    }
				LicensesCall[playerid] = -1;
				new sendername[30];
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "** %s zrezygnowal.", sendername);
		    	SendFactionMessage(12, TEAM_AZTECAS_COLOR, string);
		    	SCM(playerid, -1, "Zrezygnowales z tej uslugi.");
			}
			else return SendClientMessage(playerid,COLOR_GREY, "Nie skorzystal z tej uslugi.");
		}
		else if(strcmp(x_job,"mechanik",true) == 0)
		{
			if(MechanicCall[playerid] == playerid)
			{
			    foreach(Player, i) {
					if(IsPlayerConnected(i) && Accepted[i] == playerid) {
					    SCM(i, -1, "Gracz, od którego przyjales zamówienie, wpisal /anuluj mechanik!");
					    CP[i] = 0;
					    targetfind[i] = -1;
						UsedFind[i] = 0;
						DisablePlayerCheckpoint(i);
						Accepted[i] = -1;
					}
			    }
				MechanicCall[playerid] = -1;
				new sendername[30];
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "** %s zrezygnowal.", sendername);
		    	SendFactionMessage(8, TEAM_AZTECAS_COLOR, string);
		    	SCM(playerid, -1, "Zrezygnowales z tej uslugi.");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nie skorzystal z tej uslugi.");
		}
  		else if(strcmp(x_job,"casa",true) == 0)
		{
			if(HouseOffer[playerid] == 999) return SCM(playerid,COLOR_GREY, "Nikt nie dal ci domu.");
			HouseID[playerid] = 0;
			HouseOffer[playerid] = 999;
			HousePrice[playerid] = 0;
		}
		else if(strcmp(x_job,"taxi",true) == 0)
		{
			if(TaxiCall[playerid] == playerid)
			{
			    SCM(playerid, COLOR_WHITE, "Opusciles te usluge!");
			    if(TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0)
			    {
			        TaxiAccepted[playerid] = 999;
			        SCM(playerid,-1,"Opusciles polaczenie");
					TaxiCallTime[playerid] = 0;
					DisablePlayerCheckpoint(playerid);
					TaxiCall[playerid] = -1;
			    }
			    else
			    {
					if(IsPlayerConnected(TaxiCall[playerid]))
					{
						if(TaxiCall[playerid] == playerid)
						{
							TaxiCall[playerid] = -1;
						}
					}
					foreach(Player,i)
					{
						 if(IsPlayerConnected(i))
						 {
						     if(TaxiAccepted[i] < 999)
						     {
							     if(TaxiAccepted[i] == playerid)
							     {
							         TaxiAccepted[i] = 999;
							         targetfind[i] = -1;
							         SCM(i, -1, "Gracz, któremu przyjales zamówienie, wpisal /cancel!");
							         TaxiCallTime[i] = 0;
							         DisablePlayerCheckpoint(i);
							     }
						    }
						}
					}
				}
			}
			else return 1;
		}
	}
	return 1;
}

CMD:akceptuj(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		new x_job[256],id,sendername[25],giveplayer[25],string[300];
		new tmpcar = GetPlayerVehicleID(playerid);
		new ccar = IsPlayerInAnyVehicle(playerid);
		if(sscanf(params, "s[256]u",x_job,id))
		{
			SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/akceptuj <name> <id/nazwa>");
			SendClientMessage(playerid, COLOR_WHITE, "Parametry: Drugs, Repair, House, Materials, Dice.");
			SendClientMessage(playerid, COLOR_WHITE, "Parametry: Vehicle, Taxi, Medic, Live, Lawyer.");
			SendClientMessage(playerid, COLOR_WHITE, "Parametry: Mechanik, Ticket, Refill, Invite.");
			return 1;
		}
		if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		if(strcmp(x_job,"mechanik",true) == 0)
		{
			if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
			if(PlayerInfo[playerid][pJob] != 7) return SendClientMessage(playerid, COLOR_GRAD2, "Nu Jestes czescia frakcji car mechanic.");
	        if(MechanicCallTime[playerid] == 1) return SendClientMessage(playerid, COLOR_GRAD2, "You have already accepted a Mechanic Call.");
			if(MechanicCall[id] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not called a mechanic.");
			if(MechanicCall[id] == id)
	        {
			    if(IsPlayerConnected(MechanicCall[id]))
	            {
	                GetPlayerName(playerid, sendername, sizeof(sendername));
                	GetPlayerName(MechanicCall[id], giveplayer, sizeof(giveplayer));
                	format(string, sizeof(string), "* Przyjales wezwanie %s.",giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
     				format(string, sizeof(string), "* Mechanik %s zaakceptowal Twoje zgloszenie.",sendername);
					SendClientMessage(MechanicCall[id], COLOR_LIGHTBLUE, string);
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(MechanicCall[id], X, Y, Z);
					SetPlayerCheckpointEx(playerid, X, Y, Z, 5);
					UsedFind[playerid] = 1;
					targetfind[playerid] = id;
					MechanicCall[id] = -1;
					CP[playerid] = 43;
					Accepted[playerid] = id;
					return 1;
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	        }
	        else return SendClientMessage(playerid, COLOR_WHITE, "Ten gracz nie spodobal Ci sie.");
		}
		else if(strcmp(x_job,"trade",true) == 0) {
			if(TradePlayer[playerid] == -1) return SendClientMessage(playerid, -1, "Nie otrzymales takiej oferty");
			if(TradePlayer[playerid] != id) return SendClientMessage(playerid, -1, "Ten gracz nie zlozyl Ci oferty.");
			if(GetPlayerCash(id) < TradeMoney[playerid]) return SendClientMessage(playerid, -1, "Ten gracz nie ma dlugu.");
			switch(TradeType[playerid]) {
				case 1: {
					new hid = PlayerInfo[playerid][pHouse];
					new hid2 = PlayerInfo[id][pHouse];
					if(hid == 999 || hid2 == 999) return SCM(playerid, -1, "Nie powiodlo sie!");
					PlayerInfo[playerid][pHouse] = hid2;
					PlayerInfo[id][pHouse] = hid;
					GivePlayerCash(id, -TradeMoney[playerid]);
					GivePlayerCash(playerid, TradeMoney[playerid]);
					format(HouseInfo[hid][hOwner], 256, GetName(id));
					format(HouseInfo[hid2][hOwner], 256, GetName(playerid));							
					UpdateLabel(1, hid);
					UpdateLabel(1, hid2);
					Update(playerid,pHousex);
					Update(id,pHousex);
					mysql_format(SQL, string,sizeof(string),"UPDATE houses SET `Owner` = '%s' WHERE ID = %d",GetName(playerid), PlayerInfo[playerid][pHouse]);
					mysql_tquery(SQL, string, "", "");			
					mysql_format(SQL, string,sizeof(string),"UPDATE houses SET `Owner` = '%s' WHERE ID = %d",GetName(id), PlayerInfo[id][pHouse]);
					mysql_tquery(SQL, string, "", "");		
					SCM(playerid, COLOR_LIGHTBLUE, "Transakcja zakonczona sukcesem!");
					SCM(id, COLOR_LIGHTBLUE, "Transakcja zakonczona sukcesem!");					
			
					format(string, 256, "($) %s(%d) si %s(%d) au facut schimb de case. ($%s)", GetName(playerid), playerid, GetName(id), id, FormatNumber(TradeMoney[playerid]));
					SendAdminMessage(COLOR_YELLOW, string, 1); 		
				}
				case 2: {
					new bid = PlayerInfo[playerid][pBizz], str[256];
					new bid2 = PlayerInfo[id][pBizz];
					if(bid == 255 || bid2 == 255) return SCM(playerid, -1, "Nie powiodlo sie!");
					PlayerInfo[playerid][pBizz] = bid2;
					PlayerInfo[id][pBizz] = bid;	
	
					format(BizzInfo[bid2][bOwner], 256, GetName(playerid));
					format(str,sizeof(str),"UPDATE users SET `Bizz`='%d',`Money`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pBizz],GetPlayerCash(playerid),PlayerInfo[playerid][pSQLID]);
					mysql_query(SQL,str);
					format(str,sizeof(str),"UPDATE `bizz` SET `Owner`='%s' WHERE `ID`='%d'",BizzInfo[bid2][bOwner],bid2);
					mysql_query(SQL,str);
					UpdateLabel(2,bid);

					
					format(BizzInfo[bid][bOwner], 256, GetName(id));
					format(str,sizeof(str),"UPDATE users SET `Bizz`='%d',`Money`='%d' WHERE `ID`='%d'",PlayerInfo[id][pBizz],GetPlayerCash(id),PlayerInfo[id][pSQLID]);
					mysql_query(SQL,str);
					format(str,sizeof(str),"UPDATE `bizz` SET `Owner`='%s' WHERE `ID`='%d'",BizzInfo[bid][bOwner],bid);
					mysql_query(SQL,str);
					UpdateLabel(2,bid);
									
					GivePlayerCash(id, -TradeMoney[playerid]);
					GivePlayerCash(playerid, TradeMoney[playerid]);
					SCM(playerid, COLOR_LIGHTBLUE, "Transakcja zakonczona sukcesem!");	
					SCM(id, COLOR_LIGHTBLUE, "Transakcja zakonczona sukcesem!");					
			
					format(string, 256, "($) %s(%d) si %s(%d) au facut schimb de afaceri. ($%s)", GetName(playerid), playerid, GetName(id), id, FormatNumber(TradeMoney[playerid]));
					SendAdminMessage(COLOR_YELLOW, string, 1); 
		
				}
				case 3: {
					new cid = TradeCar[id];
					new cid2 = TradeCar[playerid];
					
					switch(TradeSlot[playerid]) {
						case 1: {
							PlayerInfo[playerid][pCarKey][0] = cid;
							format(string, 256, "UPDATE `users` SET `CarKey1`='%d' WHERE `ID`='%d'", cid, PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, string);
						}
						case 2: {
							PlayerInfo[playerid][pCarKey][1] = cid;
							format(string, 256, "UPDATE `users` SET `CarKey2`='%d' WHERE `ID`='%d'", cid, PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, string);
						}						
						case 3: {
							PlayerInfo[playerid][pCarKey][2] = cid;
							format(string, 256, "UPDATE `users` SET `CarKey3`='%d' WHERE `ID`='%d'", cid, PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, string);
						}	
						case 4: {
							PlayerInfo[playerid][pCarKey][3] = cid;
							format(string, 256, "UPDATE `users` SET `CarKey4`='%d' WHERE `ID`='%d'", cid, PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, string);
						}	
						case 5: {
							PlayerInfo[playerid][pCarKey][4] = cid;
							format(string, 256, "UPDATE `users` SET `CarKey5`='%d' WHERE `ID`='%d'", cid, PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, string);
						}	
						case 6: {
							PlayerInfo[playerid][pCarKey][5] = cid;
							format(string, 256, "UPDATE `users` SET `CarKey6`='%d' WHERE `ID`='%d'", cid, PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, string);
						}
						case 7: {
							PlayerInfo[playerid][pCarKey][6] = cid;
							format(string, 256, "UPDATE `users` SET `CarKey7`='%d' WHERE `ID`='%d'", cid, PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, string);
						}						
						case 8: {
							PlayerInfo[playerid][pCarKey][7] = cid;
							format(string, 256, "UPDATE `users` SET `CarKey8`='%d' WHERE `ID`='%d'", cid, PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, string);
						}	
						case 9: {
							PlayerInfo[playerid][pCarKey][8] = cid;
							format(string, 256, "UPDATE `users` SET `CarKey9`='%d' WHERE `ID`='%d'", cid, PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, string);
						}	
						case 10: {
							PlayerInfo[playerid][pCarKey][9] = cid;
							format(string, 256, "UPDATE `users` SET `CarKey10`='%d' WHERE `ID`='%d'", cid, PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL, string);
						}							
					}
					switch(TradeSlot[id]) {
						case 1: {
							PlayerInfo[id][pCarKey][0] = cid2;
							format(string, 256, "UPDATE `users` SET `CarKey1`='%d' WHERE `ID`='%d'", cid2, PlayerInfo[id][pSQLID]);
							mysql_query(SQL, string);
						}
						case 2: {
							PlayerInfo[id][pCarKey][1] = cid2;
							format(string, 256, "UPDATE `users` SET `CarKey2`='%d' WHERE `ID`='%d'", cid2, PlayerInfo[id][pSQLID]);
							mysql_query(SQL, string);
						}						
						case 3: {
							PlayerInfo[id][pCarKey][2] = cid2;
							format(string, 256, "UPDATE `users` SET `CarKey3`='%d' WHERE `ID`='%d'", cid2, PlayerInfo[id][pSQLID]);
							mysql_query(SQL, string);
						}	
						case 4: {
							PlayerInfo[id][pCarKey][3] = cid2;
							format(string, 256, "UPDATE `users` SET `CarKey4`='%d' WHERE `ID`='%d'", cid2, PlayerInfo[id][pSQLID]);
							mysql_query(SQL, string);
						}	
						case 5: {
							PlayerInfo[id][pCarKey][4] = cid2;
							format(string, 256, "UPDATE `users` SET `CarKey5`='%d' WHERE `ID`='%d'", cid2, PlayerInfo[id][pSQLID]);
							mysql_query(SQL, string);
						}	
						case 6: {
							PlayerInfo[id][pCarKey][5] = cid2;
							format(string, 256, "UPDATE `users` SET `CarKey6`='%d' WHERE `ID`='%d'", cid2, PlayerInfo[id][pSQLID]);
							mysql_query(SQL, string);
						}
						case 7: {
							PlayerInfo[id][pCarKey][6] = cid2;
							format(string, 256, "UPDATE `users` SET `CarKey7`='%d' WHERE `ID`='%d'", cid2, PlayerInfo[id][pSQLID]);
							mysql_query(SQL, string);
						}						
						case 8: {
							PlayerInfo[id][pCarKey][7] = cid2;
							format(string, 256, "UPDATE `users` SET `CarKey8`='%d' WHERE `ID`='%d'", cid2, PlayerInfo[id][pSQLID]);
							mysql_query(SQL, string);
						}	
						case 9: {
							PlayerInfo[id][pCarKey][8] = cid2;
							format(string, 256, "UPDATE `users` SET `CarKey9`='%d' WHERE `ID`='%d'", cid2, PlayerInfo[id][pSQLID]);
							mysql_query(SQL, string);
						}	
						case 10: {
							PlayerInfo[id][pCarKey][9] = cid2;
							format(string, 256, "UPDATE `users` SET `CarKey10`='%d' WHERE `ID`='%d'", cid2, PlayerInfo[id][pSQLID]);
							mysql_query(SQL, string);
						}	
						
					}		
					CarInfo[cid][Userid] = PlayerInfo[playerid][pSQLID];
					CarInfo[cid2][Userid] = PlayerInfo[id][pSQLID];		
					format(CarInfo[cid][cOwner], 256, GetName(playerid));
					format(CarInfo[cid2][cOwner], 256, GetName(id));
					format(string, 256, "UPDATE `cars` SET `Owner`='%s', `Userid`='%d' WHERE `ID`='%d'", GetName(playerid), PlayerInfo[playerid][pSQLID], cid);
					mysql_query(SQL, string);
					format(string, 256, "UPDATE `cars` SET `Owner`='%s', `Userid`='%d' WHERE `ID`='%d'", GetName(id), PlayerInfo[id][pSQLID], cid2);
					mysql_query(SQL, string);
					SCM(playerid, COLOR_LIGHTBLUE, "Transakcja zakonczona sukcesem!");
					SCM(id, COLOR_LIGHTBLUE, "Transakcja zakonczona sukcesem!");										
					GivePlayerCash(id, -TradeMoney[playerid]);
					GivePlayerCash(playerid, TradeMoney[playerid]);		

					format(string, 256, "($) %s(%d) i %s(%d) wymienili pojazdy. ($%s)", GetName(playerid), playerid, GetName(id), id, FormatNumber(TradeMoney[playerid]));
					SendAdminMessage(COLOR_YELLOW, string, 1); 				
				}
			}
			TradePlayer[playerid] = -1;
			return 1;
		}		
		else if( strcmp ( x_job, "car" , true ) == 0 )
		{
			if(GetDistanceBetweenPlayers(playerid, id) > 5) return SendClientMessage(playerid, -1, "Ten gracz nie jest w twoim zasiegu.");
			//
			new playerID, price, keyid, idd, query[256];
			playerID = GetPVarInt(playerid, "OfferBy");
			price = GetPVarInt(playerid, "Price");
			keyid = GetPVarInt(playerid, "Slot");
			idd = GetPVarInt(playerid, "OfferCar");
			
			//
			if(id != playerID) return SCM(playerid, -1, "Ten gracz nie zlozyl Ci oferty!");
			if(GetPlayerCash(playerid) < price) return SCM(playerid, -1, "Nie masz pieniedzy aby akceptowac ta oferte!");
			if(GetSlots(playerid) == GetVehicles(playerid)) return SCM(playerid, -1, "Masz maksymalna liczbe samochodów osobowych!"); 		
			switch(keyid) {
				case 1: { UpdateVar(id, "CarKey1", 0); PlayerInfo[id][pCarKey][0] = 0; }
				case 2: { UpdateVar(id, "CarKey2", 0); PlayerInfo[id][pCarKey][1] = 0; }
				case 3: { UpdateVar(id, "CarKey3", 0); PlayerInfo[id][pCarKey][2] = 0; }
				case 4: { UpdateVar(id, "CarKey4", 0); PlayerInfo[id][pCarKey][3] = 0; }
				case 5: { UpdateVar(id, "CarKey5", 0); PlayerInfo[id][pCarKey][4] = 0; }
				case 6: { UpdateVar(id, "CarKey6", 0); PlayerInfo[id][pCarKey][5] = 0; }
				case 7: { UpdateVar(id, "CarKey7", 0); PlayerInfo[id][pCarKey][6] = 0; }
				case 8: { UpdateVar(id, "CarKey8", 0); PlayerInfo[id][pCarKey][7] = 0; }
				case 9: { UpdateVar(id, "CarKey9", 0); PlayerInfo[id][pCarKey][8] = 0; }
				case 10: { UpdateVar(id, "CarKey10", 0); PlayerInfo[id][pCarKey][9] = 0; }							
			}
			new slotid = FindCSlot(playerid);
			switch(slotid) {
				case 1: { UpdateVar(playerid, "CarKey1", idd); PlayerInfo[playerid][pCarKey][0] = idd; }
				case 2: { UpdateVar(playerid, "CarKey2", idd); PlayerInfo[playerid][pCarKey][1] = idd; }
				case 3: { UpdateVar(playerid, "CarKey3", idd); PlayerInfo[playerid][pCarKey][2] = idd; }
				case 4: { UpdateVar(playerid, "CarKey4", idd); PlayerInfo[playerid][pCarKey][3] = idd; }
				case 5: { UpdateVar(playerid, "CarKey5", idd); PlayerInfo[playerid][pCarKey][4] = idd; }
				case 6: { UpdateVar(playerid, "CarKey6", idd); PlayerInfo[playerid][pCarKey][5] = idd; }
				case 7: { UpdateVar(playerid, "CarKey7", idd); PlayerInfo[playerid][pCarKey][6] = idd; }
				case 8: { UpdateVar(playerid, "CarKey8", idd); PlayerInfo[playerid][pCarKey][7] = idd; }
				case 9: { UpdateVar(playerid, "CarKey9", idd); PlayerInfo[playerid][pCarKey][8] = idd; }
				case 10: { UpdateVar(playerid, "CarKey10", idd); PlayerInfo[playerid][pCarKey][9] = idd; }	
			}
			if(slotid == 0 || keyid == 0) return SCM(playerid, COLOR_CLIENT, "Nie mozesz teraz uzyc tego polecenia. Nie uzywaj /report jezeli juz to zrobiles");
			CarInfo[idd][Userid] = PlayerInfo[playerid][pSQLID];
			format(string, sizeof(string), "UPDATE `cars` SET `Userid`='%d' WHERE `ID='%d'", PlayerInfo[playerid][pSQLID], idd);
			mysql_query(SQL, query);
			GivePlayerCash(playerid, -price);
			GivePlayerCash(id, price);
			
			//printf("($$$) Slot 1: %d | Slot2: %d", keyid, slotid);
			format(string, 256, "($) %s(%d) sprzedal mu go %s(%d) pojazd %s dla $%s.", GetName(id), id, GetName(playerid), playerid, aVehicleNames[CarInfo[idd][cModel]-400], FormatNumber(price));
			SendAdminMessage(COLOR_YELLOW, string, 1); 
			
			format(string, sizeof(string), "* Przyjales jego oferte %s.", GetName(id));
			SendClientMessage(playerid, COLOR_MONEY, string);
			RemovePlayerFromVehicle(id);
			format(string, sizeof(string), "* %s przyjal Twoja oferte", GetName(playerid));
			SendClientMessage(id, COLOR_MONEY, string);	
			
			SetPVarInt(playerid, "OfferBy", -1);
			SetPVarInt(playerid, "Price", 0);
			SetPVarInt(playerid, "Slot", 0);
			SetPVarInt(playerid, "OfferCar", 0);	
		}
		else if(strcmp(x_job,"dice",true) == 0)
		{
			if(Diceid[playerid] == 999) return 1;
			if(Diceid[playerid] != id) return 1;
			if(GetPlayerCash(playerid) < Dicem[playerid]) return SCM(playerid,COLOR_GREY, "Nie masz tyle pieniedzy.");
		    if(GetPlayerCash(id) < Dicem[playerid]) return SCM(playerid,COLOR_GREY, "Ten gracz nie ma wystarczajaco duzo pieniedzy.");
			if(ProxDetectorS(10.0, playerid, Diceid[playerid]))
			{
			   	new dice1[MAX_PLAYERS],dice2[MAX_PLAYERS];
			    dice1[playerid] = random(12) + 1;
			    dice2[Diceid[playerid]] = random (12) + 1;
			    GetPlayerName(playerid,sendername,sizeof(sendername));
			    GetPlayerName(Diceid[playerid],giveplayer,sizeof(giveplayer));
			    if(dice1[playerid] > dice2[Diceid[playerid]])
			    {
					format(string,sizeof(string),"%s wygral %d a %s przegral %d.",sendername,dice1[playerid],giveplayer,dice2[Diceid[playerid]]);
					ProxDetector(10.0,playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid,Dicem[playerid]);
					GivePlayerCash(Diceid[playerid],-Dicem[playerid]);
				}
				if(dice2[Diceid[playerid]] > dice1[playerid])
				{
					format(string,sizeof(string),"%s wygral %d z %s przegral %d.",giveplayer,dice2[Diceid[playerid]],sendername,dice1[playerid]);
					ProxDetector(10.0,playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid,-Dicem[playerid]);
					GivePlayerCash(Diceid[playerid],Dicem[playerid]);
				}
				if(dice2[Diceid[playerid]] == dice1[playerid])
				{
					ProxDetector(10.0,playerid, "Remis.", COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				Update(playerid, pCashx);
				Update(Diceid[playerid], pCashx);
				Diceid[playerid] = 999;
				Dicem[playerid] = 0;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest w twoim zasiegu.");
			return 1;
		}
		else if(strcmp(x_job,"lawyer",true) == 0)
		{
			if(AcceptOffer[playerid] > -1)
			{
			    if(AcceptOffer[playerid] != id) return SCM(playerid,COLOR_GREY, "Ten gracz nie akceptowal twojej oferty");
			    if(GetPlayerCash(playerid) < AcceptPrice[playerid]) return SCM(playerid,COLOR_GREY, "Nie masz wystarczajaco duzo pieniedzy.");
			    PlayerInfo[playerid][pLawyer] += 15;
			    PlayerInfo[AcceptOffer[playerid]][pLawyer] -= 15;
			    GivePlayerCash(playerid, - AcceptPrice[playerid]);
			    GivePlayerCash(AcceptOffer[playerid], AcceptPrice[playerid]);
				new str[356];
				format(str,356,"UPDATE users SET `Money`='%d',`Acceptpoints`='%d' WHERE `ID`='%d'",GetPlayerCash(playerid),PlayerInfo[playerid][pLawyer],PlayerInfo[playerid][pSQLID]);
				mysql_query(SQL,str);
				new str2[356];
				format(str2,sizeof(str2),"UPDATE users SET `Money`='%d',`Acceptpoints`='%d' WHERE `ID`='%d'",GetPlayerCash(AcceptOffer[playerid]),PlayerInfo[AcceptOffer[playerid]][pLawyer],PlayerInfo[AcceptOffer[playerid]][pSQLID]);
				mysql_query(SQL,str2);
			    new wakaname[25];
				GetPlayerName(playerid,wakaname,25);
				new wakaname2[25];
				GetPlayerName(AcceptOffer[playerid],wakaname2,25);
				format(string,sizeof(string),"%s zaakceptowal oferte.",GetName(playerid));
			    SCM(AcceptOffer[playerid],COLOR_LIGHTBLUE,string);
				format(string,sizeof(string),"Zaakceptowales oferte gracza %s.",wakaname2);
			    SCM(playerid,COLOR_LIGHTBLUE,string);
			    AcceptOffer[playerid] = -1;
			    AcceptPrice[playerid] = 0;
			    return 1;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nie otrzymales prawnika");
		}
		else if(strcmp(x_job,"materials",true) == 0)
		{
			if(MatsOffer[playerid] > -1)
			{
			    if(MatsOffer[playerid] != id) return SCM(playerid,COLOR_GREY, "Ten gracz nie dal Ci materialów");
			    if(GetPlayerCash(playerid) < MatsPrice[playerid]) return SCM(playerid,COLOR_GREY, "Nie masz wystarczajaco duzo pieniedzy.");
				PlayerInfo[playerid][pMats] += MatsAmmo[playerid];
				PlayerInfo[MatsOffer[playerid]][pMats] -= MatsAmmo[playerid];
			    GivePlayerCash(playerid, - MatsPrice[playerid]);
			    GivePlayerCash(MatsOffer[playerid], MatsPrice[playerid]);
			    GetPlayerName(MatsOffer[playerid],giveplayer,sizeof(giveplayer));
			    GetPlayerName(playerid,sendername,sizeof(sendername));
			    format(string,sizeof(string),"{B8FFDB}Kupiles to %d materialy dla $%s od %s.",MatsAmmo[playerid],FormatNumber(MatsPrice[playerid]),giveplayer);
				SCM(playerid,COLOR_WHITE,string);
			    format(string,sizeof(string),"{B8FFDB}%s kupil twoje materialy $%s.",sendername,FormatNumber(MatsPrice[playerid]));
				SCM(MatsOffer[playerid],COLOR_WHITE,string);
		        Update(playerid,pMatsx);
		        Update(MatsOffer[playerid],pMatsx);
		        Update(MatsOffer[playerid],pCashx);
				Update(playerid,pCashx);
				MatsOffer[playerid] = -1;
				MatsAmmo[playerid] = 0;
				MatsPrice[playerid] = 0;
				return 1;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nikt nie dostarczyl ci materialów.");
		}
		else if(strcmp(x_job,"bron",true) == 0)
		{
			if(SellgunOffer[playerid] > -1)
			{	
			new itemid;
			itemid = 0;
			for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
				{
				if(Thing[i][t_owner] == PlayerInfo[SellgunOffer[playerid]][pSQLID])
				 {
				if(Thing[i][t_type] == 107)
				 {
				itemid = i;
					}
				   }
				 }
			    if(SellgunOffer[playerid] != id) return SCM(playerid,COLOR_GREY, "Nie masz zadnej oferty.");
			    if(GetPlayerCash(playerid) < SellgunPrice[playerid]) return SCM(playerid,COLOR_GREY, "Nie masz wystarczajaco duzo pieniedzy.");
				if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "Nie mozesz uzyc tego polecenia, dopóki Jestes w pojezdzie.");
			    new weaponid,ammo,price,mats,gunname[60],idoffer;
			    weaponid = SellgunID[playerid];
			    ammo = SellgunAmmo[playerid];
				price = SellgunPrice[playerid];
				mats = SellgunMats[playerid];
				idoffer = SellgunOffer[playerid];
				GivePlayerThing(playerid, weaponid, ammo, 0, 0);
			    //GivePlayerWeaponEx(playerid,weaponid,ammo);
				Thing[itemid][t_number] -= mats;
				if(Thing[itemid][t_number] == 0) {
					new ThingId = Thing[itemid][t_uid];
				   	Thing[itemid][t_ownertype] = 1;
				    Thing[itemid][t_owner] = 0;
				    Thing[itemid][t_used] = 0;
				    Thing[itemid][t_selected] = 0;
			    	Thing[itemid][t_pos][0] = 90.90;
				    Thing[itemid][t_pos][1] = 90.90;
				    Thing[itemid][t_pos][2] = 90.90;
				    Thing[itemid][t_vw] = 999;
					SCM(playerid,COLOR_ADMCHAT, "straciles materialy z /p poniewaz  po sprzedazy ich wartosc wynosila 0 :)");
			    	// Usuwanie mysql jezeli wartosc = 0
			    	format(string, sizeof(string), "DELETE FROM przedmioty WHERE id=%d", ThingId);
					mysql_query(SQL,string);	
					}
				//PlayerInfo[idoffer][pMats] -= mats; z gfa
				GivePlayerCash(playerid, -price);
			    GivePlayerCash(idoffer, price);
				Update(playerid, pCashx);
				//Update(idoffer,pMatsx); z gfa
				Update(idoffer, pCashx);
				GetPlayerName(idoffer,giveplayer,sizeof(giveplayer));
			    GetPlayerName(playerid,sendername,sizeof(sendername));
				GetWeaponNameEx(weaponid,gunname,sizeof(gunname));
				format(string, sizeof(string), "Podales %s, bron %s z %d amunicji, straciles %d materialów.", sendername,gunname, ammo,mats);
				SendClientMessage(idoffer, COLOR_GRAD1, string);
				format(string, sizeof(string), "Otrzymales %s z %d amunicji od %s.", gunname, ammo, giveplayer);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				format(string, sizeof(string), "* %s stworzyl bron z materialów dla %s.", giveplayer ,sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SellgunOffer[playerid] = -1;
				SellgunPrice[playerid] = 0;
				SellgunMats[playerid] = 0;
				SellgunAmmo[playerid] = 0;
				SellgunID[playerid] = 0;
				if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
				{
			        new gun2,tmp;
			        GetPlayerWeaponData(playerid,5,gun2,tmp);
			        #pragma unused tmp
			        if(gun2)SetPlayerArmedWeapon(playerid,gun2);
			        else SetPlayerArmedWeapon(playerid,0);
				}
				return 1;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nikt nie dostarczyl ci materialów.");
		}
		else if(strcmp(x_job,"free",true) == 0)
		{
            if(FreeOffer[playerid] > -1)
			{
                if(FreeOffer[playerid] != id) return SCM(playerid,COLOR_GREY, "Ten gracz nie zaproponowal Ci wolnosci");
			    if(GetPlayerCash(playerid) < FreePrice[playerid]) return SCM(playerid,COLOR_GREY, "Nie masz wystarczajaco duzo pieniedzy.");
				if(PlayerInfo[id][pLawyer] < 3) return SCM(playerid,COLOR_GREY, "Ten gracz nie akceptowal");
			    GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(FreeOffer[playerid], sendername, sizeof(sendername));
				format(string, sizeof(string), "* nie zaplacil Ci %s a ty go uwolniles", giveplayer);
				SendClientMessage(FreeOffer[playerid], COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Uwolniliscie sie %s i uciekliscie", sendername);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				JailPrice[playerid] = 0;
				PlayerInfo[playerid][pJailTime] = 1;
				PlayerInfo[FreeOffer[playerid]][pLawyer] -= 3;
				PlayerInfo[FreeOffer[playerid]][pLawSkill] ++;
				GivePlayerCash(playerid, -FreePrice[playerid]);
				GivePlayerCash(FreeOffer[playerid],FreePrice[playerid]);
				PlayerInfo[playerid][pJailed] = 1;
				PlayerInfo[FreeOffer[playerid]][pCommands] ++;
				new rquery[256];
				format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[FreeOffer[playerid]][pCommands], PlayerInfo[FreeOffer[playerid]][pSQLID]);
				mysql_query(SQL, rquery);
				new str[356];
				format(str,sizeof(str),"UPDATE users SET `JailTime`='0',`Money`='%d',`Jailed`='0' WHERE `ID`='%d'",GetPlayerCash(playerid),PlayerInfo[playerid][pSQLID]);
				mysql_query(SQL,str);
				format(str,sizeof(str),"UPDATE users SET `Money`='%d',`Acceptpoints`='%d',`LawSkill`='%d' WHERE ``ID`='%d'",GetPlayerCash(FreeOffer[playerid]),PlayerInfo[FreeOffer[playerid]][pLawyer],PlayerInfo[FreeOffer[playerid]][pLawSkill],PlayerInfo[FreeOffer[playerid]][pSQLID]);
				mysql_query(SQL,str);
				/*if(PlayerInfo[FreeOffer[playerid]][pLawSkill] == 50)
				{ SendClientMessage(FreeOffer[playerid], COLOR_YELLOW, "* Twoja umiejetnosc Prawnik jest teraz na poziomie 2, zarobisz wiecej pieniedzy w szybszym czasie"); }
				else if(PlayerInfo[FreeOffer[playerid]][pLawSkill] == 100)
				{ SendClientMessage(FreeOffer[playerid], COLOR_YELLOW, "* Twoja umiejetnosc Prawnik jest teraz na poziomie 3, zarobisz wiecej pieniedzy w szybszym czasie"); }
				else if(PlayerInfo[FreeOffer[playerid]][pLawSkill] == 200)
				{ SendClientMessage(FreeOffer[playerid], COLOR_YELLOW, "* Twoja umiejetnosc Prawnik jest teraz na poziomie 4, zarobisz wiecej pieniedzy w szybszym czasie"); }
				else if(PlayerInfo[FreeOffer[playerid]][pLawSkill] == 401)
				{ SendClientMessage(FreeOffer[playerid], COLOR_YELLOW, "* Twoja umiejetnosc Prawnik jest teraz na poziomie 5, zarobisz wiecej pieniedzy w szybszym czasie"); }*/
                FreeOffer[playerid] = 0;
				FreePrice[playerid] = 0;
				return 1;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nikt cie nie uwolnil.");
		}
  		else if(strcmp(x_job,"biz",true) == 0)
		{
			if(bizoffer[playerid] < 999)
			{
				if(bizoffer[playerid] != id) return SCM(playerid,COLOR_GREY, "Ten gracz zaoferowal Ci biznes.");
				if(GetPlayerCash(playerid) >= bizprice[playerid])
				{
					if(IsPlayerConnected(bizoffer[playerid]))
					{
					    if(ProxDetectorS(5.0, playerid, bizoffer[playerid]))
					    {
					        GetPlayerName(bizoffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Zgodziles sie na zakup firmu $%d od %s.",bizprice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s zaakceptowal Twoja oferte $%d w banku",sendername,bizprice[playerid]);
							SendClientMessage(bizoffer[playerid], COLOR_LIGHTBLUE, string);
							GivePlayerCash(playerid, -bizprice[playerid]);
						    GivePlayerCash(bizoffer[playerid], bizprice[playerid]);
						    new str[356];
							PlayerInfo[playerid][pBizz] = bizid[playerid];
							strmid(BizzInfo[bizid[playerid]][bOwner], sendername, 0, strlen(sendername), 999);
							format(str,sizeof(str),"UPDATE users SET `Bizz`='%d',`Money`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pBizz],GetPlayerCash(playerid),PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL,str);
							format(str,sizeof(str),"UPDATE `bizz` SET `Owner`='%s' WHERE `ID`='%d'",BizzInfo[bizid[playerid]][bOwner],bizid[playerid]);
							mysql_query(SQL,str);
							UpdateLabel(2,bizid[playerid]);
					
							PlayerInfo[bizoffer[playerid]][pBizz] = 255;
							format(string,sizeof(string),"UPDATE users SET `Bizz`='255',`Money`='%d' WHERE `ID`='%d'",GetPlayerCash(bizoffer[playerid]),PlayerInfo[bizoffer[playerid]][pSQLID]);
							mysql_query(SQL,string);
							bizid[playerid] = 0;
							biztype[playerid] = 0;
							bizprice[playerid] = 0;
							bizoffer[playerid] = 999;
							return 1;
						}
						else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste tym graczem.");
					}
					else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Nie masz wystarczajaco duzo pieniedzy.");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nie zaoferowano Ci biznesu");
		}
   		else if(strcmp(x_job,"dom",true) == 0)
		{
			if(HouseOffer[playerid] < 999)
			{
				if(HouseOffer[playerid] != id) return SCM(playerid,COLOR_GREY, "Ten gracz nie zaoferowa³ Ci sprzeda¿y domu!");
				if(GetPlayerCash(playerid) >= HousePrice[playerid])
				{
					if(IsPlayerConnected(HouseOffer[playerid]))
					{
					    if(ProxDetectorS(3.0, playerid, HouseOffer[playerid]))
					    {
					        GetPlayerName(HouseOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Zgodziles sie kupic ten dom $%d od %s.",HousePrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s zaakceptowal Twoja oferte $%d w banku",sendername,FormatNumber(HousePrice[playerid]));
							SendClientMessage(HouseOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[playerid][pHouse] = HouseID[playerid];
							PlayerInfo[HouseOffer[playerid]][pHouse] = 999;
		    				GivePlayerCash(playerid, -HousePrice[playerid]);
						    GivePlayerCash(HouseOffer[playerid], HousePrice[playerid]);
							strmid(HouseInfo[HouseID[playerid]][hOwner], sendername, 0, strlen(sendername), 999);
							Update(playerid,pCashx);
							Update(playerid,pHousex);
							Update(HouseOffer[playerid],pHousex);
							Update(HouseOffer[playerid],pCashx);
							new str2[256];
							format(str2,sizeof(str2),"UPDATE `houses` SET `Owner`='%s' WHERE `ID`='%d'",HouseInfo[HouseID[playerid]][hOwner],HouseID[playerid]);
							mysql_query(SQL,str2);
							UpdateLabel(1,HouseID[playerid]);
							RemovePlayerMapIcon(HouseOffer[playerid], 1);
							HouseOffer[playerid] = 999;
							HousePrice[playerid] = 0;
							HouseID[playerid] = 0;
							return 1;
						}
						else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste tym graczem");
					}
					else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Nie masz wystarczajaco duzo pieniedzy.");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nikt nie zaoferowal Ci domu");
		}
		else if(strcmp(x_job,"ticket",true) == 0)
		{
			if(TicketOffer[playerid] < 999)
			{
				if(TicketOffer[playerid] != id) return SCM(playerid,COLOR_GREY, "Ten gracz nie zaoferowal Ci biletu");
			    if(IsPlayerConnected(TicketOffer[playerid]))
			    {
			        if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
					{
				        GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(GetPlayerCash(playerid) < TicketMoney[playerid]) return SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Nu ai enough money.");
						format(string, sizeof(string), "* zaplaciles mandat w wyokosci $%d z %s.", TicketMoney[playerid], giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s zaplacil mandat o wartosci $%d.", sendername, TicketMoney[playerid]);
						SendClientMessage(TicketOffer[playerid], COLOR_LIGHTBLUE, string);
						GivePlayerCash(playerid, - TicketMoney[playerid]);
						GivePlayerCash(TicketOffer[playerid], TicketMoney[playerid]);
						Update(playerid, pCashx);
						Update(TicketOffer[playerid], pCashx);
						TicketOffer[playerid] = 999;
						TicketMoney[playerid] = 0;
						return 1;
					}
					else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest blisko ciebie.");
			    }
			    else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nikt nie dal Ci biletu.");
		}
		else if(strcmp(x_job,"taxi",true) == 0)
		{
            if(PlayerInfo[playerid][pMember] != 13) return SCM(playerid,COLOR_GREY, "Nie jeste taksówkarzem.");
			if(TransportDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste we frakcji taxi na duty.");
	        if(TaxiCallTime[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Masz juz aktywne polaczenie");
	        if(!ccar && IsAnTaxi(tmpcar)) return SCM(playerid,COLOR_GREY, "Nie jeste w pojezdzie frakcji");
	        if(TaxiCall[id] != id) return SCM(playerid,COLOR_GREY, "Ten gracz nie skorzystal z uslug tej frakcji");
	        if(TaxiCall[id] == id)
	        {
				if(IsPlayerConnected(TaxiCall[id]))
	            {
	                GetPlayerName(playerid, sendername, sizeof(sendername));
	                GetPlayerName(TaxiCall[id], giveplayer, sizeof(giveplayer));
	                format(string, sizeof(string), "* Przyjales jego wezawanie %s.",giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "* Taksówkarz %s zaakceptowal Twoje wezwanie",sendername);
					SendClientMessage(TaxiCall[id], COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Taksówkarz %s przyjal jego wezwanie %s.",sendername,giveplayer);
					SendFactionMessage(13, COLOR_LIGHTBLUE, string);
					UsedFind[playerid] = 1;
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(id, X,Y,Z);
					SetPlayerCheckpointEx(playerid, X,Y,Z, 3.5);
					targetfind[playerid] = id;
					TaxiCallTime[playerid] = 1;
					TaxiAccepted[playerid] = TaxiCall[id];
					Accepted[playerid] = id;
					TaxiCall[id] = -1;
					CP[playerid] = 43;
					return 1;
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	        }
	        else return SendClientMessage(playerid, COLOR_GREY, "Nie polaczyles sie z taxi");
		}
		else if(strcmp(x_job,"urzednik",true) == 0)
		{
            if(PlayerInfo[playerid][pMember] != 12) return SCM(playerid,COLOR_GREY, "Nie jeste urzednikiem");
	        if(LicensesCallTime[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Zaakceptowales wezwanie!");
	        if(LicensesCall[id] != id) return SCM(playerid,COLOR_GREY, "Ten gracz Ciê nie wzywa³!");
	        if(LicensesCall[id] == id)
	        {
				if(IsPlayerConnected(LicensesCall[id]))
	            {
	                GetPlayerName(playerid, sendername, sizeof(sendername));
	                GetPlayerName(LicensesCall[id], giveplayer, sizeof(giveplayer));
	                format(string, sizeof(string), "* Przyjales wezwanie %s",giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "* Urzêdnik %s zaakceptowal Twoje wezwanie!",sendername);
					SendClientMessage(LicensesCall[id], COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Urzednik %s przyjal wezwanie %s.",sendername,giveplayer);
					SendFactionMessage(12, COLOR_LIGHTBLUE, string);
					UsedFind[playerid] = 1;
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(id, X,Y,Z);
					SetPlayerCheckpointEx(playerid, X,Y,Z, 3.5);
					targetfind[playerid] = id;
					LicensesCallTime[playerid] = 1;
					LicensesAccepted[playerid] = LicensesCall[id];
					Accepted[playerid] = id;
					LicensesCall[id] = -1;
					CP[playerid] = 43;
					return 1;
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	        }
	        else return SendClientMessage(playerid, COLOR_GREY, "Nie zglosil sie do instruktorów");
		}
		else if(strcmp(x_job,"medyk",true) == 0)
		{
			if(PlayerInfo[playerid][pMember] == 14)
			{
				if(MedicCallTime[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Juz zaakceptowales wezwanie lekarza");
				if(!ccar && IsAnAmbulance(tmpcar)) return SCM(playerid,COLOR_GREY, "Nie jeste w ambulansie");
                if(MedicCall[id] != id) return SCM(playerid,COLOR_GREY, "Ten gracz nie wezwal ambulansu");
			    if(MedicCall[id] == id)
		        {
					if(IsPlayerConnected(MedicCall[id]))
		            {
		                GetPlayerName(playerid, sendername, sizeof(sendername));
		                GetPlayerName(MedicCall[id], giveplayer, sizeof(giveplayer));
		                format(string, sizeof(string), "* Przyjales jego wezwanie.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	                    format(string, sizeof(string), "* Medyk %s zaakceptowal Twoje polaczenie",sendername);
						SendClientMessage(MedicCall[id], COLOR_LIGHTBLUE, string);
						UsedFind[playerid] = 1;
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(id, X,Y,Z);
						SetPlayerCheckpointEx(playerid, X,Y,Z, 3.5);
						targetfind[playerid] = id;
						MedicCall[id] = -1;
						Accepted[playerid] = id;
						CP[playerid] = 43;
						return 1;
					}
					else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		        }
		        else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie zglosil sie do lekarzy");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste medykiem!");
		}
		else if(strcmp(x_job,"tankowanie",true) == 0)
		{
			if(RefillOffer[playerid] < 999)
			{
				if(RefillOffer[playerid] != id) return SCM(playerid,COLOR_GREY, "Ten gracz nie zaoferowal ci tankowania!");
				if(IsPlayerConnected(RefillOffer[playerid]))
			    {
			        if(GetPlayerCash(playerid) > RefillPrice[playerid])
			        {
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));

			            new car = gLastCar[playerid];
			            new fuel;
			            PlayerInfo[RefillOffer[playerid]][pMechSkill] ++;
			            if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 20)
						{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Twoje umiejetnosci sie na poziomie  2, mozesz ofertowac teraz wiecej bezyny"); }
						else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 40)
						{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Twoje umiejetnosci sie na poziomie  3, mozesz ofertowac teraz wiecej bezyny"); }
						else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 60)
						{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Twoje umiejetnosci sie na poziomie  4, mozesz ofertowac teraz wiecej bezyny"); }
						else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 80)
						{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Twoje umiejetnosci sie na poziomie  5, mozesz ofertowac teraz wiecej bezyny"); }
						new level = PlayerInfo[RefillOffer[playerid]][pMechSkill];
						if(level >= 0 && level <= 20)
						{ fuel = 20; }
						else if(level >= 21 && level <= 40)
						{ fuel = 40; }
						else if(level >= 41 && level <= 60)
						{ fuel = 60; }
						else if(level >= 61 && level <= 80)
						{ fuel = 80; }
						else if(level >= 81)
						{ fuel = 100; }
      					format(string, sizeof(string), "* Twój pojazd zostal zatankowany o %d% za $%d przez mechanika %s.",fuel,RefillPrice[playerid],giveplayer);
						SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Zatankowales pojazd %s o %d% za $%d.",sendername,fuel,RefillPrice[playerid]);
						SendClientMessage(RefillOffer[playerid], COLOR_LIGHTBLUE, string);
						GivePlayerCash(RefillOffer[playerid],RefillPrice[playerid]);
						GivePlayerCash(playerid, -RefillPrice[playerid]);
						if(Gas[car] < 110) { Gas[car] += fuel; }
			 	 		new str[256];
						format(str,sizeof(str),"UPDATE users SET `Money`='%d',`MechSkill`='%d' WHERE `ID`='%d'",GetPlayerCash(RefillOffer[playerid]),PlayerInfo[RefillOffer[playerid]][pMechSkill],PlayerInfo[RefillOffer[playerid]][pSQLID]);
						mysql_query(SQL,str);
						Update(playerid, pCashx);
					    RefillOffer[playerid] = 999;
						RefillPrice[playerid] = 0;
						Refillx[RefillOffer[playerid]] = -1;
						return 1;
			        }
					else return SendClientMessage(playerid, COLOR_GREY, "Nie masz pieniedzy!");
			    }
			    else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nie dostales oferty! ");
		}
		else if(strcmp(x_job,"rodzina",true) == 0) {
		    new query[256];
			new clanid = InvitedClan[playerid];
			if(clanid == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz zaproszenia.");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Zaakceptowa³e zaproszenie do rodziny!");

			format(string, sizeof(string), "{00ccff} (ORG) %s do³¹czy³ do rodziny!", GetName(playerid));
			SendClanMessage(clanid, string);
            ClanInfo[clanid][clSlots]--;
            new szQuery[256];
			format(szQuery, sizeof(szQuery), "UPDATE `clans` SET `Slots`='%d' WHERE `ID`='%d'", ClanInfo[clanid][clSlots], clanid);
			mysql_query(SQL, szQuery);
			PlayerInfo[playerid][pClan] = clanid;
			PlayerInfo[playerid][pClanRank] = 1;
			InvitedClan[playerid] = -1;
			InvitedBy[playerid] = -1;

			new
				szDate[256],
				Year, Month, Day, Hour, Minute, Second;

			getdate(Year, Month, Day);
			gettime(Hour, Minute, Second);

			format(szDate, sizeof(szDate), "%02d/%02d/%d - %02d:%02d:%02d", Day, Month, Year, Hour, Minute, Second);

			format(query, sizeof(query), "UPDATE `users` SET `Clan`='%d', `ClanRank`='%d' WHERE `Name`='%s'", PlayerInfo[playerid][pClan], PlayerInfo[playerid][pClanRank], PlayerInfo[playerid][pUsername]);
	        mysql_query(SQL, query);

			new
				szName[256],
				clanid2 = PlayerInfo[playerid][pClan];

			format(query, sizeof(query), "UPDATE `users` SET `Clan`='%d', `ClanRank`='%d' WHERE `Name`='%s'", PlayerInfo[playerid][pClan], PlayerInfo[playerid][pClanRank], GetName(playerid));
			mysql_query(SQL, query);
			return 1;
		}
		else if(strcmp(x_job,"live",true) == 0)
		{
			if(LiveOffer[playerid] < 999)
			{
				if(LiveOffer[playerid] != id) return SCM(playerid,COLOR_GREY, "Ten gracz nie dal Ci wywiadu");
			    if(IsPlayerConnected(LiveOffer[playerid]))
			    {
				    if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
					{
						SendClientMessage(playerid, COLOR_WHITE, "* Uciszyles go do konca wywiadu");
						SendClientMessage(LiveOffer[playerid], COLOR_WHITE, "* Uciszyles go do konca wywiadu (wpisz /live ponownie aby zakonczyc).");
						TogglePlayerControllable(playerid, 0);
						TogglePlayerControllable(LiveOffer[playerid], 0);
						TalkingLive[playerid] = LiveOffer[playerid];
						TalkingLive[LiveOffer[playerid]] = playerid;
						LiveOffer[playerid] = 999;
						return 1;
					}
					else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste tym graczem");
				}
                else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nie otrzymales wywiadu");
		}
		else if(strcmp(x_job,"drugs",true) == 0)
		{
			if(DrugOffer[playerid] < 999)
			{
				if(DrugOffer[playerid] != id) return SCM(playerid,COLOR_GREY, "Ten gracz nie dal Ci narkotyków.");
				if(GetPlayerCash(playerid) > DrugPrice[playerid])
				{
				    if(PlayerInfo[playerid][pDrugs] <= 50)
				    {
					    if(IsPlayerConnected(DrugOffer[playerid]))
					    {
					        GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Kupiles %d gramów dla $%d od dystrybucji %s.",DrugGram[playerid],DrugPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s kupil %d gramów w zamian za $%d.",sendername,DrugGram[playerid],DrugPrice[playerid]);
							SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
							GivePlayerCash(DrugOffer[playerid],DrugPrice[playerid]);
							GivePlayerCash(playerid, -DrugPrice[playerid]);
							PlayerInfo[playerid][pDrugs] += DrugGram[playerid];
							PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGram[playerid];
							new wakaname[25],str[456];
							GetPlayerName(playerid,wakaname,sizeof(wakaname));
							format(str,sizeof(str),"UPDATE users SET `Money`='%d',`Drugs`='%d' WHERE `ID`='%d'",GetPlayerCash(playerid),PlayerInfo[playerid][pDrugs],PlayerInfo[playerid][pSQLID]);
							mysql_query(SQL,str);
							format(str,sizeof(str),"UPDATE users SET `Money`='%d',`Drugs`='%d',`DrugsSkill`='%d' WHERE `ID`='%d'",GetPlayerCash(DrugOffer[playerid]),PlayerInfo[DrugOffer[playerid]][pDrugs],PlayerInfo[DrugOffer[playerid]][pDrugsSkill],PlayerInfo[DrugOffer[playerid]][pSQLID]);
							mysql_query(SQL,str);
						    DrugOffer[playerid] = 999;
							DrugPrice[playerid] = 0;
							DrugGram[playerid] = 0;
							return 1;
						}
						else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
					}
					else return SendClientMessage(playerid, COLOR_GREY, "Masz za duzo narkotyków");
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Nie masz pieniedzy!");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nikt Ci nie dal narkotyków");
		}
		else if(strcmp(x_job,"repair",true) == 0)
		{
			if(RepairOffer[playerid] < 999)
			{
				if(RepairOffer[playerid] != id) return SCM(playerid,COLOR_GREY, "Ten gracz nie zaoferowal Ci naprawy");
			    if(GetPlayerCash(playerid) > RepairPrice[playerid])
				{
					if(IsPlayerInAnyVehicle(playerid))
					{
					    if(IsPlayerConnected(RepairOffer[playerid]))
					    {
						    GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
       						RepairCar[playerid] = GetPlayerVehicleID(playerid);
						    SetVehicleHealth(RepairCar[playerid], 1000.0);
						    RepairVehicle(RepairCar[playerid]);
							format(string, sizeof(string), "* Twój pojazd zosta3 naprawiony za $%d przez Mechanika %s.",RepairPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Naprawi3eo pojazd %s za $%d.",sendername,RepairPrice[playerid]);
							SendClientMessage(RepairOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[RepairOffer[playerid]][pMechSkill] ++;
       						if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 20)
							{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Twoje umiejetnosci sie na poziomie  2, mozesz oferowac teraz wiecej bezyny"); }
							else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 40)
							{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Twoje umiejetnosci sie na poziomie  3, mozesz oferowac teraz wiecej bezyny"); }
							else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 60)
							{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Twoje umiejetnosci sie na poziomie  4, mozesz oferowac teraz wiecej bezyny"); }
							else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 80)
							{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Twoje umiejetnosci sie na poziomie  5, mozesz oferowac teraz wiecej bezyny"); }
							GivePlayerCash(RepairOffer[playerid],RepairPrice[playerid]);
							GivePlayerCash(playerid, -RepairPrice[playerid]);
							new str[184];
							Update(playerid, pCashx);
							Update(RepairOffer[playerid],pCashx);
							format(str,sizeof(str),"UPDATE users SET `MechSkill`='%d' WHERE `ID`='%d'",PlayerInfo[RepairOffer[playerid]][pMechSkill],PlayerInfo[RepairOffer[playerid]][pSQLID]);
							mysql_query(SQL,str);
							RepairOffer[playerid] = 999;
							RepairPrice[playerid] = 0;
							return 1;
						}
						else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Nie masz pieniedzy!");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nikt nie dal ci naprawy.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Parametry Drugs, Repair, House");
			SendClientMessage(playerid, COLOR_WHITE, "Parametry Vehicle, Taxi, Medic, Live");
			SendClientMessage(playerid, COLOR_WHITE, "Parametry Mechanic, Paper, Ticket, Refill");
			return 1;
		}
	}
	return 1;
}

CMD:przyjmij(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pLeader] >= 1 || PlayerInfo[playerid][pRank] >= 6)
		{
			new id,string[100],giveplayer[30],sendername[30];
			if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/przyjmij <id/nazwa>");
			if(PlayerInfo[id][pFpunish] != 0) return SCM(playerid,COLOR_GREY, "Ten gracz ma FPunish");
			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
				
					if(PlayerInfo[id][pMember] == 0 && PlayerInfo[id][pLeader] == 0)
					{
						//if(PlayerInfo[id][pLevel] < 3) return SCM(playerid, -1, "Ten gracz ma zbyt niski! ");
						GetPlayerName(id, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[id][pMember] = PlayerInfo[playerid][pMember];
						PlayerInfo[id][pRank] = 1;
						printf("AdmCmd: %s zaprosil %s do frakcji %s.", sendername, giveplayer, GetFactionName(PlayerInfo[id][pMember]));
						format(string, sizeof(string), "Lider %s zaprosil Cie do %s.", sendername,GetFactionName(PlayerInfo[id][pMember]));
						SendClientMessage(id, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Zaprosiles %s do swojej frakcji!", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						
						ShowModelSelectionMenu (id, fskins[PlayerInfo[id][pMember]], "FSkin");		
						SCM(id, COLOR_RED, "UWAGA: Musisz wybrac swoje ubranie frakcyjne!");
						//SCM(id, COLOR_RED, "UWAGA: Jestes zoobowiazany ubierac je podczas uzywania /duty! (istnieja wyjatki, info u lidera)");
                		new str[128];
						format(str,sizeof(str),"UPDATE users SET `Team`='%d',`Member`='%d',`Rank`='1' WHERE `ID`='%d'",PlayerInfo[id][pTeam],PlayerInfo[id][pMember],PlayerInfo[id][pSQLID]);
						mysql_query(SQL,str);
						Factionlog(PlayerInfo[id][pMember],PlayerInfo[id][pSQLID],"Dolaczyl do frakcji!");
					}
					else
					{
	    				SendClientMessage(playerid, COLOR_GREY, "Ten gracz jest we frakcji/poszukiwany!");
						return 1;
					}
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Ta komenda jest tylko dla liderów.");
	}
	return 1;
}

function SlapPlayer(playerid) {
    TogglePlayerControllable(playerid, 0);
    new Float: Pos[3];
    GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
    SetPlayerPosEx(playerid, Pos[0], Pos[1], Pos[2]+2);
    SetTimerEx("UnFreezeStation", 2000, false, "i", playerid);
	PlayerPlaySound(playerid, 1190, 0, 0, 10.0);
	return 1;
}

CMD:dajrange(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pLeader] >= 1)
	 	{
			new para1,level,string[100],giveplayer[30],sendername[30],string2[100];
			if(sscanf(params, "ui", para1,level)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/giverank <id/nazwa> <Rank(1-6)>");
			if(level > 6 || level < 1) return SendClientMessage(playerid, COLOR_GREY, "Nieprawidlowa ranga.");
			if(PlayerInfo[para1][pMember] != PlayerInfo[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Nie ma go w twojej frakcji.");
			if(PlayerInfo[para1][pLeader] > 0) return SCM(playerid,COLOR_GREY, "Ten gracz jest liderem.");
			if(para1 != INVALID_PLAYER_ID)
			{
				GetPlayerName(para1, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				PlayerInfo[para1][pRank] = level;
				format(string, sizeof(string), "* Lider %s awansowa³ Cie do rangi %d.", sendername,level);
				SendClientMessage(para1, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Dales %s range %d.", giveplayer,level);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
        		new str[128];
				format(str,sizeof(str),"UPDATE users SET `Rank`='%d' WHERE `ID`='%d'",PlayerInfo[para1][pRank],PlayerInfo[para1][pSQLID]);
				mysql_query(SQL,str);
				format(string2,sizeof(string2),"Ranga %d.",level);
				Factionlog(PlayerInfo[para1][pMember],PlayerInfo[para1][pSQLID],string2);
			}
	     	else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ta komenda jest tylko dla liderów.");
	}
	return 1;
}
CMD:wyplac(playerid, params[]) {
    if(!IsAtBank(playerid) && !IsAtATM(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w banku lub przy bankomacie.");
	new money,string[100];
	if(sscanf(params, "i", money)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/wyplac <kwota>");
	if(money > PlayerInfo[playerid][pAccount] || money < 1) return SendClientMessage(playerid, COLOR_GREY, "Nie masz tej kwoty.");
	GivePlayerCash(playerid, money);
	PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-money;
	format(string, sizeof(string), "Wyci¹gna³e $%s z konta bankowego. Teraz masz: $%s.", FormatNumber(money),FormatNumber(PlayerInfo[playerid][pAccount]));
	SendClientMessage(playerid, 0xFAAC25FF, string);
	new query[180];
	format(query,sizeof(query),"UPDATE users SET `Money`='%d',`Bank`='%d' WHERE `ID`='%d'",GetPlayerCash(playerid),PlayerInfo[playerid][pAccount],PlayerInfo[playerid][pSQLID]);
	mysql_query(SQL,query);
	ConsumingMoney[playerid] = 1;
	return 1;
}

CMD:wplac(playerid, params[]) {
    if(!IsAtBank(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w banku.");
	new money,string[100];
	if(sscanf(params, "i", money)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/wplac <kwota>");
	if(money > GetPlayerCash(playerid) || money < 1) return SendClientMessage(playerid, COLOR_GREY, "Nie masz tej kwoty.");
	GivePlayerCash(playerid, -money);
	PlayerInfo[playerid][pAccount]=money+PlayerInfo[playerid][pAccount];
	format(string, sizeof(string), "Wplaciles $%s na swoje konto bankowe. Teraz masz: $%s.", FormatNumber(money),FormatNumber(PlayerInfo[playerid][pAccount]));
	SendClientMessage(playerid, 0xFAAC25FF, string);
	Update(playerid, pBank);
	Update(playerid, pCashx);
	return 1;
}

CMD:stankonta(playerid, params[]) {
	if(!IsAtBank(playerid) && !IsAtATM(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w banku lub przy bankomacie.");
	new string[100];
	format(string, sizeof(string), "Masz $%s na swoim koncie.", FormatNumber(PlayerInfo[playerid][pAccount]));
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:przelew(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Potrzebujesz minimum 2 poziomu.");
        if(IsAtBank(playerid))
	    {
	        
			new id,moneytransfer,string[100],giveplayer[30],sendername[30],playermoney;
			if(sscanf(params, "ui", id,moneytransfer)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/przelew <playerid/nazwa> <kwota>");
			if(playerid == id) return 1;
			if(IsPlayerConnected(id))
			{
                if(id != INVALID_PLAYER_ID)
			    {
			    	if(IsPlayerLogged[id] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Ten gracz nie jest zalogowany.");
					GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					playermoney = PlayerInfo[playerid][pAccount];
					if (moneytransfer > 0 && playermoney >= moneytransfer)
					{
						new cashbank = TransferMoney[playerid]/100;
					    format(string,sizeof(string),"Jeste pewien, ?e chcesz przelaa %s$ do %s ?\nza oplata $%s.",FormatNumber(moneytransfer),giveplayer,FormatNumber(cashbank));
						TransferOffer[playerid] = id;
						TransferMoney[playerid] = moneytransfer;
						ShowPlayerDialog(playerid, DIALOG_TRANSFER, DIALOG_STYLE_MSGBOX, "Przelew:", string, "Tak", "Nie");
					}
					else return SendClientMessage(playerid, COLOR_GREY, "Nieprawidlowa suma");
				}
	        }
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
    	}
		else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w banku.");
	}
	return 1;
}


stock FactionName(id) {
	new string[128];
	format(string, 128, "%s",  DynamicFactions[id][fName]);
	return string;
} 

CMD:gotojob(playerid, params[]) {
	new id;
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	if(sscanf(params, "i", id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/gotojob <jobid>");
	if(id < 1 || id > 13) return SendClientMessage(playerid, -1, "Z3e id! (1-13)");
	SetPlayerPosEx(playerid, JobInfo[id][jPosX], JobInfo[id][jPosY], JobInfo[id][jPosZ]);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	return 1;
}

stock GetFactionStatus(fid) {
	new szStatus[256];
	if(DynamicFactions[fid][fApp] == 0) format(szStatus, 256, "{FF3B3B}Nabor wstrzymany{FFFFFF}");
	else format(szStatus, 256, "{66FF73}Nabor trwa{FFFFFF}");
	return szStatus;
}

CMD:locations(playerid, params[]) return cmd_gps(playerid, params);
CMD:gps(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
	else ShowPlayerDialog(playerid, DIALOG_GPS, DIALOG_STYLE_LIST, "SERVER: GPS", "DMV\nBiznesy\nFrakcje", "Wybierz", "Anuluj");
	return 1;
}
	
CMD:healto(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		new id,price,sendername[30],giveplayer[30],string[200];
		if(PlayerInfo[playerid][pMember] != 14) return SCM(playerid,COLOR_GREY, "Nie jeste medykiem!");
		if(sscanf(params, "ui", id,price)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/healto <id/nazwa> <cena>");
	    if(price < 1 || price > 100) return SendClientMessage(playerid, COLOR_GREY, "Oplata wacha sie w granicach od $1 do $100.");
		if (id == playerid) return 1;
		if(IsInBlacklist(id, 14))
		return SCM(playerid, -1, "Ten gracz znajduje sie na czarnej liocie tej frakcji!");
    	if (IsPlayerConnected(id))
		{
			if(id != INVALID_PLAYER_ID)
			{
				if(GetPlayerCash(id) < price) return SCM(playerid,COLOR_GREY, "Ten gracz nie ma wystarczajaco duzo pieniedzy.");
			    GetPlayerName(id, giveplayer, sizeof(giveplayer));
			    GetPlayerName(playerid, sendername, sizeof(sendername));
				new giveambu = GetPlayerVehicleID(id);
				new playambu = GetPlayerVehicleID(playerid);
				if (IsAnAmbulance(playambu) && playambu == giveambu)
				{
					new Float:tempheal;
					GetPlayerHealthEx(id,tempheal);
					if(tempheal >= 100.0) return SendClientMessage(playerid, COLOR_GREY, "Nie potrzebuje punktów hp.");
					format(string, sizeof(string), "~w~Uleczyles~n~~w~%s~n~", giveplayer);
					GameTextForPlayer(playerid, string, 5000, 1);
					GivePlayerCash(playerid,price);
					GivePlayerCash(id,-price);
					SetPlayerHealthEx(id, 100);
					PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "Otrzymal zycie za %s$.",FormatNumber(price));
					SendClientMessage(id, COLOR_LIGHTBLUE,string);
					PlayerInfo[playerid][pCommands] ++;
					new rquery[256];
					format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
					mysql_query(SQL, rquery);
					Update(id, pCashx);
					Update(playerid, pCashx);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Nie jeste w ambulansie.");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			return 1;
		}
	}
	return 1;
}
CMD:heal(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		new string[100],sendername[25];
		if(IsACop(playerid))
		{
			if(InHouse[playerid] > 0)
			{
            	SetPlayerHealthEx(playerid,100.0);
            	if(HouseInfo[InHouse[playerid]][hArm] == 1 && OnDuty[playerid] == 1)
				{
					GetPlayerName(playerid,sendername,sizeof(sendername));
					format(string, sizeof(string), "* %s zaklada kamizelke.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerArmourEx(playerid,100.0);
				}
			}
			else
			{
				if(IsPlayerInRangeOfPoint(playerid, 50.0, 245.8297,112.4436,1003.2188) || IsPlayerInRangeOfPoint(playerid, 50.0, 236.3031,162.9478,1003.0300) && IsACop(playerid))
				{
                	if(GetPlayerInterior(playerid) == 0) return SCM(playerid,COLOR_GREY, "Nie ma cie w HQ.");
					SetPlayerHealthEx(playerid,100.0);
					if(OnDuty[playerid] == 1)
					{
						SetPlayerArmourEx(playerid,100.0);
					}
				}
				else if(IsPlayerInRangeOfPoint(playerid, 50.0, 769.9825,-39.2081,1000.6865) || IsPlayerInRangeOfPoint(playerid, 50.0, 1719.3446,-1662.2314,20.2285) || IsPlayerInRangeOfPoint(playerid, 50.0,2324.3416,-1143.3370,1050.4922) || IsPlayerInRangeOfPoint(playerid, 50.0,616.0771,-11.4624,1000.9219)
				|| IsPlayerInRangeOfPoint(playerid, 50.0,960.9341,-51.0495,1001.1172) || IsPlayerInRangeOfPoint(playerid, 50.0,957.6353,2109.3533,1011.0234) || IsPlayerInRangeOfPoint(playerid, 50.0,1496.2422,1306.8334,1093.2891))
				{
					SetPlayerHealthEx(playerid,100.0);
				}
			}
		}
		else
		{
			if(InHouse[playerid] > 0)
			{
				if(HouseInfo[InHouse[playerid]][hHel] == 1)
				{
					SetPlayerHealthEx(playerid,100.0);
				}
			}
			if(PlayerInfo[playerid][pMember] != 0)
			{
				if(IsPlayerInRangeOfPoint(playerid, 50.0, 769.9825,-39.2081,1000.6865) || IsPlayerInRangeOfPoint(playerid, 150.0, 1719.3446,-1662.2314,20.2285) || IsPlayerInRangeOfPoint(playerid, 50.0,2324.3416,-1143.3370,1050.4922) || IsPlayerInRangeOfPoint(playerid, 50.0,616.0771,-11.4624,1000.9219)
				|| IsPlayerInRangeOfPoint(playerid, 50.0,960.9341,-51.0495,1001.1172) || IsPlayerInRangeOfPoint(playerid, 150.0,957.6353,2109.3533,1011.0234) || IsPlayerInRangeOfPoint(playerid, 50.0,1496.2422,1306.8334,1093.2891) || IsPlayerInRangeOfPoint(playerid, 50.0,-2031.0696,-116.9199,1035.1719))
				{
	                if(GetPlayerInterior(playerid) == 0) return SCM(playerid,COLOR_GREY, "Nie mozesz sie tu uleczyc");
					SetPlayerHealthEx(playerid,100.0);
				}
			}
		}
	}
	return 1;
}

CMD:odbierz(playerid, params[])
{
    new string[128], name[MAX_PLAYER_NAME], tick;
    if(IsPlayerConnected(playerid))
	{
		tick = 0;
		Loop(i)
		{
			if(IsPlayerConnected(i))
			{
				if(Mobile[i] == playerid)
				{
				    WybranyNumer[playerid] = PlayerInfo[Mobile[i]][pPnumber];
				    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					SendClientMessage(playerid, COLOR_GREY, "  Odebrales polaczenie! Do rozmowy uzywaj chatu glównego!");
					Mobile[playerid] = i;
					SendClientMessage(i,  COLOR_GREY, " Twój rozmówca odebral telefon! Do rozmowy uzywaj chatu glównego !");
					GetPlayerName(playerid, name, sizeof(name));
					if(PlayerInfo[playerid][pMasked] == 1)
					{
						format(name, sizeof(name), "Nieznajomy");
					}
					format(string, sizeof(string), "* %s wyciaga swój telefon komórkowy i odbiera polaczenie.", name);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
     				StopMusic(playerid);
				    KillTimer(mojeconnection[Mobile[playerid]]);
				    tick++;
				}
			}
		}
	}
	return 1;
}

CMD:z(playerid, params[])
{
    new string[256], name[MAX_PLAYER_NAME];
	if(IsPlayerConnected(playerid))
	{
		new caller = Mobile[playerid];
		if(IsPlayerConnected(caller))
		{
		    if(caller != INVALID_PLAYER_ID)
		    {
				if(caller != 255)
				{
					if(caller < 255)
					{
					    KillTimer(mojeconnection[playerid]);
					    KillTimer(mojeconnection[Mobile[playerid]]);
					    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
					    SetPlayerSpecialAction(Mobile[playerid], SPECIAL_ACTION_STOPUSECELLPHONE);
						SendClientMessage(caller,  COLOR_GREY, "  Polaczenie zostalo zakonczone..");
						CellTime[caller] = 0;
						CellTime[playerid] = 0;
						SendClientMessage(playerid,  COLOR_GREY, "  Polaczenie zostalo zakonczone..");
						Mobile[caller] = 255;
						Mobile[playerid] = 255;
						CellTime[playerid] = 0;
						PlayerInfo[playerid][pSpeaker] = 0;
						PlayerInfo[caller][pSpeaker] = 0;
						GetPlayerName(playerid, name, sizeof(name));
						if(PlayerInfo[playerid][pMasked] == 1)
						{
							format(name, sizeof(name), "Nieznajomy");
						}
						format(string, sizeof(string), "* %s chowa swój telefon komórkowy.", name);
						SetPlayerChatBubble(playerid,string,COLOR_FADE1,10.0,8000);
						//ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						//format(string, sizeof(string), "* %s chowa swój telefon komórkowy.", GetName(caller));
						//ProxDetector(30.0, caller, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						Thing[SelectedItem0[playerid]][t_used] = 0;
						Thing[SelectedItem0[caller]][t_used] = 0;
						SelectedItem0[playerid] = 0;
						SelectedItem0[caller] = 0;
					}
					return 1;
				}
			}
		}
		SendClientMessage(playerid,  COLOR_GRAD2, "Schowales telefon do kieszeni!");
		if(SelectedItem0[playerid] != 0)
		{
	  		Thing[SelectedItem0[playerid]][t_used] = 0;
			SelectedItem0[playerid] = 0;
		}
	}
	return 1;
}

CMD:walkstyle(playerid, params[])
{
    if(IsPlayerConnected(playerid))
 	{
        {
        	ShowPlayerDialog(playerid, DIALOG_WALKSTYLE, DIALOG_STYLE_LIST, "Pobijanie stylu:", "Normal\nLow Walk\nGangsta\nGangsta2\nOld Walk\nOld Walk2\nNormal Walk2\nFemale Walk\nFemale Walk2\nWhore Walk\nFemale Walk3\nDrunk Walk\nBlind Walk\nNormal", "Wybierz", "Anuluj");
  			return 1;
		}
	}
	return 1;
}

CMD:locaterentcar(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
	    if(HireCar[playerid] == -1) return SCM(playerid,COLOR_GREY, "Nie masz wynajetego pojazdu.");
	    if(CP[playerid] == 0)
		{
	 		new Float:x,Float:y,Float:z;
			SendClientMessage(playerid,COLOR_WHITE,"Samochód znajduje sie w punkcie czerwonym.");
			GetVehiclePos(HireCar[playerid], x, y, z);
	  		SetPlayerCheckpointEx(playerid, x, y, z, 4);
			CP[playerid] = 53;
		}
		else return SCM(playerid,COLOR_WHITE,"Masz juz aktywny punkt kontrolny. Wpisz /cancel checkpoint");
    }
    return 1;
}
CMD:unrent(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
		if(HireCar[playerid] == -1) return SCM(playerid,COLOR_GREY, "Nie masz wynajetego pojazdu.");
		SetVehicleToRespawn(HireCar[playerid]);
		gCarLock[HireCar[playerid]] = 0;
		new engine,lights,alarm,doors,bonnet,boot,objective;
		GetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,doors,bonnet,boot,objective);
    	SetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,0,bonnet,boot,objective);
		Silnik[HireCar[playerid]] = 0;
	    GetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,doors,bonnet,boot,objective);
	    SetVehicleParamsEx(HireCar[playerid],VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
		HireCar[playerid] = -1;
		GameTextForPlayer(playerid, "~w~Nie masz ju¿ wynajetego pojazdu.", 5000, 3);
		TogglePlayerControllable(playerid, 1);
        SetPVarInt(playerid, "Silnik", 0);
		return 1;
	}
	return 1;
}

CMD:rentscooter(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
		if(GetPlayerVehicleID(playerid) == scooter[1] || GetPlayerVehicleID(playerid) == scooter[2] || GetPlayerVehicleID(playerid) == scooter[3] || GetPlayerVehicleID(playerid) == scooter[4] || GetPlayerVehicleID(playerid) == scooter[5])
		{
			new string[256];
			if(HireCar[playerid] != -1) return SCM(playerid,COLOR_GREY, "Masz ju¿ wynajety pojazd.");
			if (GetPlayerCash(playerid) <  BizzInfo[8][bFee]) return SendClientMessage(playerid, COLOR_GREY, "Nie masz tej kwoty gotówki.");
			foreach (Player, i)
			{
				if(HireCar[i] == GetPlayerVehicleID(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Ten pojazd jest ju¿ wynajety.");
			}
			GivePlayerCash(playerid,-BizzInfo[8][bFee]);
			BizzInfo[8][bBalance] += BizzInfo[8][bFee];
			HireCar[playerid] = GetPlayerVehicleID(playerid);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, string, 5000, 3);
			new engine,lights,alarm,doors,bonnet,boot,objective;
			new vehicleid = GetPlayerVehicleID(playerid);
			Silnik[vehicleid] = 1;
    		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
			Update(playerid, pCashx);
			new str2[184];
			TogglePlayerControllable(playerid, 1);
			format(str2,sizeof(str2),"UPDATE `bizz` SET `Till`='%d',`Products`='%d' WHERE `ID`='2'",BizzInfo[8][bBalance],BizzInfo[8][bProducts]);
			mysql_query(SQL,str2);
			SCM(playerid, -1, "Wybierz /unrent, jeoli nie chcesz ju¿ wypo?yczaa tego pojazdu!");
			SCM(playerid, -1, "Wpisz /lock lub nacionij N, aby go zamkn1a drzwi.");
			return 1;
		}
	}
	return 1;
}

CMD:drink(playerid, params[]) {
	if(IsAtBar(playerid) || PlayerToPoint(10.0,playerid,1768.3728,-1569.7539,1742.4792) || PlayerToPoint(15.0,playerid,835.1260,-2053.6489,12.8672) || PlayerToPoint(10.0,playerid,245.1689,-1828.3049,7.0547) || PlayerToPoint(10.0,playerid,209.9630,-1826.1757,7.0547)) {
		new Float:health;
		new x_nr[50],str[128];
		if(sscanf(params, "s[50]",x_nr)) {
			SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/drink <Drink name>");
			SendClientMessage(playerid, COLOR_WHITE, "Alkohol: Piwo (10$), Wino (15$), Wodka(30$), Whiskey(50$)");
			SendClientMessage(playerid, COLOR_WHITE, "Bufet: Woda (2$), Soda (5$), Sprunk(6$), Kawa (10$)");
			return 1;
		}
		if(strcmp(x_nr,"beer",true) == 0) {
			if(GetPlayerCash(playerid) < 10) return SendClientMessage(playerid,COLOR_WHITE,"Nie masz wystarczaj¹co du¿o pieniedzy.");
			GivePlayerCash(playerid, - 10);
			PlayerDrunk[playerid] += 1;
			GetPlayerHealthEx(playerid, health);
			if(health <= 85) SetPlayerHealthEx(playerid, health + 14.0);
			BizzInfo[InBussines[playerid]][bBalance] += 10;

			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
		}
		else if(strcmp(x_nr,"vodka",true) == 0) {
			if(GetPlayerCash(playerid) < 30) return SendClientMessage(playerid,COLOR_WHITE,"Nie masz wystarczaj¹co du¿o pieniedzy.");
			GivePlayerCash(playerid, - 30);
			PlayerDrunk[playerid] += 2;			
			GetPlayerHealthEx(playerid, health);
			if(health <= 85) SetPlayerHealthEx(playerid, health + 14.0);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
			BizzInfo[InBussines[playerid]][bBalance] += 30;
		}
		else if(strcmp(x_nr,"whiskey",true) == 0) {
			if(GetPlayerCash(playerid) < 50) return SendClientMessage(playerid,COLOR_WHITE,"Nie masz wystarczaj¹co du¿o pieniedzy.");
			GivePlayerCash(playerid, - 50);
			PlayerDrunk[playerid] += 3;					
			GetPlayerHealthEx(playerid, health);
			if(health <= 85) SetPlayerHealthEx(playerid, health + 14.0);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
			BizzInfo[InBussines[playerid]][bBalance] += 50;
		}
		else if(strcmp(x_nr,"wine",true) == 0) {
			if(GetPlayerCash(playerid) < 15) return SendClientMessage(playerid,COLOR_WHITE,"Nie masz wystarczaj¹co du¿o pieniedzy.");
			GivePlayerCash(playerid, - 15);
			PlayerDrunk[playerid] += 3;					
			GetPlayerHealthEx(playerid, health);
			if(health <= 85) SetPlayerHealthEx(playerid, health + 14.0);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
			BizzInfo[InBussines[playerid]][bBalance] += 15;
		}
		else if(strcmp(x_nr,"water",true) == 0) {
			if(GetPlayerCash(playerid) < 2) return SendClientMessage(playerid,COLOR_WHITE,"Nie masz wystarczaj¹co du¿o pieniedzy.");
			GivePlayerCash(playerid, - 2);
			GetPlayerHealthEx(playerid, health);
			if(health <= 85) SetPlayerHealthEx(playerid, health + 14.0);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
			BizzInfo[InBussines[playerid]][bBalance] += 2;
		}
		else if(strcmp(x_nr,"soda",true) == 0) {
			if(GetPlayerCash(playerid) < 5) return SendClientMessage(playerid,COLOR_WHITE,"Nie masz wystarczaj¹co du¿o pieniedzy.");
			GivePlayerCash(playerid, - 5);
			GetPlayerHealthEx(playerid, health);
			if(health <= 85) SetPlayerHealthEx(playerid, health + 14.0);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
			BizzInfo[InBussines[playerid]][bBalance] += 5;
		}
		else if(strcmp(x_nr,"sprunk",true) == 0) {
			if(GetPlayerCash(playerid) < 6) return SendClientMessage(playerid,COLOR_WHITE,"Nie masz wystarczaj¹co du¿o pieniedzy.");
			GivePlayerCash(playerid, - 6);
			GetPlayerHealthEx(playerid, health);
			if(health <= 85)  SetPlayerHealthEx(playerid, health + 14.0);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
			BizzInfo[InBussines[playerid]][bBalance] += 6;
		}
		else if(strcmp(x_nr,"coffee",true) == 0) {
			if(GetPlayerCash(playerid) < 10) return SendClientMessage(playerid,COLOR_WHITE,"Nie masz wystarczaj¹co du¿o pieniedzy.");
			GivePlayerCash(playerid, - 10);
			GetPlayerHealthEx(playerid, health);
			if(health <= 85) SetPlayerHealthEx(playerid, health + 14.0);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
			BizzInfo[InBussines[playerid]][bBalance] += 10;
		}
		else return  SendClientMessage(playerid, COLOR_WHITE, "Barman: Nie mamy tego napoju!");

		new string[70];
		format(string, sizeof(string), "* %s napój %s.", GetName(playerid) ,x_nr);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);	
		format(str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bBalance],InBussines[playerid]);
		mysql_query(SQL,str);				
    }
	else SendClientMessage(playerid, COLOR_GREY, "Nie jeste w barze.");
    return 1;
}

CMD:unjailo(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		new id[25],cont;
		if(sscanf(params, "s[25]", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/unjailo <name>");
		cont = MySQLCheckAccount(id);
		if(cont == 0) return SCM(playerid,COLOR_GREY, "Ta nazwa nie istnieje w bazie danych.");
		new str1[128];
		mysql_real_escape_string(id, hackmysql);
		format(str1,sizeof(str1),"UPDATE users SET `Jailed`='0',`JailTime`='0',`WantedLevel`='0' WHERE `name`='%s'",hackmysql);
		mysql_query(SQL,str1);
		KickEx(id);
	}
	return 1;
}
CMD:jailo(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		new id[25],reason[128],string[128],sendername[30],minutes,cont;
		GetPlayerName(playerid,sendername,sizeof(sendername));
		if(sscanf(params, "s[25]is[128]", id,minutes,reason)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/jailo <name> <minuty> <powód>");
		cont = MySQLCheckAccount(id);
		if(cont == 0) return SCM(playerid,COLOR_GREY, "Ta nazwa nie istnieje w bazie danych.");
		new timej = minutes*60;
		format(string, sizeof(string), "Offline: AdmCmd: %s umiescil gracza w wiezieniu %s na %d minut, Powód: %s", id, sendername,minutes,reason);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
        format(string,sizeof(string),"Log: %s zostal uwieziony przez %s w wiezieniu na %d minut, Powod: %s.",sendername,id,minutes,reason);
        AdminLog("/logs/admin.log", string);
		new str1[184];
		mysql_real_escape_string(id, hackmysql);
		format(str1,sizeof(str1),"UPDATE users SET `Jailed`='2',`JailTime`='%d',`WantedLevel`='0' WHERE `name`='%s'",timej,hackmysql);
		mysql_query(SQL,str1);
		Jaillog("Offline",cont,PlayerInfo[playerid][pSQLID],reason,minutes);
	}
	return 1;
}
CMD:jail(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		new id,reason[128],string[128],giveplayer[30],sendername[30],minutes;
		if(sscanf(params, "uis[128]", id,minutes,reason)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/jail <id/nazwa> <minuty> <powód>");
		{
			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
				if(PlayerInfo[id][pJailed] == 0) {
				    GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					ResetPlayerWeaponsEx(id);
					ResetPlayerWeapons(id);
					WantedPoints[id] = 0;
					PlayerInfo[id][pJailed] = 2;
					PlayerInfo[id][pJailTime] = minutes*60;
					PlayerInfo[id][pWantedLevel] = 0;
					SetPlayerInterior(id, 0);
					JailPrice[id] = 0;
					//SetPlayerSkinEx(id, 62);
					PutPlayerInFederalJail(id);
					InsereazaSanctiune(id, playerid, JAIL, reason);
					format(string, sizeof(string), "AdmCmd: %s zostal zamkniety w Wiezieniu Federalnym przez %s na %d minut, Powód: %s", giveplayer, sendername,minutes,reason);
					SendClientMessageToAll(COLOR_LIGHTRED, string);
					format(string, sizeof(string), "Jestes teraz w wiezieniu federalnym na %d minut. Powód: %s", minutes,reason);
					SendClientMessage(id, COLOR_WARNING, string);					
			        format(string,sizeof(string),"Log: %s wsadzil %s do wiezienia federalnego na %d minut, powod: %s",sendername,giveplayer,minutes,reason);
		            AdminLog("/logs/admin.log", string);
		            Update(playerid,pJailedx);
					Update(playerid,pJailTimex);
					Update(playerid,pWantedLevelx);	
					new ip[25];
			    	GetPlayerIp(id, ip, sizeof(ip));
					Jaillog(ip,PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],reason,minutes);
					return 1;
					} else return SCM(playerid, COLOR_GREY, "Ten gracz jest ju¿ czym usankcjonowany!");
				}
			}
			else
			{
				 SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
		}
	}
	return 1;
}

CMD:jail2(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		new id,reason[128],string[128],giveplayer[30],sendername[30],minutes;
		if(sscanf(params, "uis[128]", id,minutes,reason)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/jail2 <id/nazwa> <minuty> <powód>");
		{
			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
				if(PlayerInfo[id][pJailed] == 0) {
				    GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					ResetPlayerWeaponsEx(id);
					ResetPlayerWeapons(id);
					WantedPoints[id] = 0;
					PlayerInfo[id][pJailed] = 1;
					PlayerInfo[id][pJailTime] = minutes*60;
					PlayerInfo[id][pWantedLevel] = 0;
					SetPlayerInterior(id, 1);
					JailPrice[id] = 0;
					//SetPlayerSkinEx(id, 62);
					PutPlayerInJail(id);
					InsereazaSanctiune(id, playerid, JAIL, reason);
					format(string, sizeof(string), "AdmCmd: %s zostal zamkniety w Areszcie ledczym przez %s na %d minut, Powód: %s", giveplayer, sendername,minutes,reason);
					SendClientMessageToAll(COLOR_LIGHTRED, string);
					format(string, sizeof(string), "Jestes teraz w areszcie sledczym na %d minut. Powód: %s", minutes,reason);
					SendClientMessage(id, COLOR_WARNING, string);					
			        format(string,sizeof(string),"Log: %s wsadzil %s do aresztu na %d minut, powod: %s",sendername,giveplayer,minutes,reason);
		            AdminLog("/logs/admin.log", string);
		            Update(playerid,pJailedx);
					Update(playerid,pJailTimex);
					Update(playerid,pWantedLevelx);	
					new ip[25];
			    	GetPlayerIp(id, ip, sizeof(ip));
					Jaillog(ip,PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],reason,minutes);
					return 1;
					} else return SCM(playerid, COLOR_GREY, "Ten gracz jest ju¿ czym usankcjonowany!");
				}
			}
			else
			{
				 SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
		}
	}
	return 1;
}

CMD:unjail(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		new id,string[128],giveplayer[30],sendername[30];
		if(sscanf(params, "uis[128]", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/unjail <id/nazwa>");
		if(IsPlayerConnected(id))
		{
		    if(id != INVALID_PLAYER_ID)
		    {
			    GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				ResetPlayerWeaponsEx(id);
				ResetPlayerWeapons(id);
				WantedPoints[id] = 0;
				PlayerInfo[id][pJailed] = 0;
				PlayerInfo[id][pJailTime] = 0;
				PlayerInfo[id][pWantedLevel] = 0;
				SetPlayerInterior(id, 0);
				JailPrice[id] = 0;
				Update(id,pJailedx);
				Update(id,pJailTimex);
				Update(id,pWantedLevelx);
				SpawnPlayer(id);
				format(string,sizeof(string),"AdmCmd: Admin %s wypusil %s z wiezienia.",sendername,giveplayer);
				SendAdminMessage(COLOR_LOGS,string,3);
				if(PlayerInfo[id][pChar] > 0)
            	{
		    		SetPlayerSkinEx(id, PlayerInfo[id][pChar]);
            	}
            	else
             	{
			     	SetPlayerSkinEx(id, PlayerInfo[id][pModel]);
             	}
				ClearCrime(id);
				TextDrawHideForPlayer(id, Jailtime[id]);
				return 1;
			}
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	return 1;
}
CMD:clear(playerid, params[]) // oczysc z wl
{
	if(IsPlayerConnected(playerid))
	{
	 	if(IsACop(playerid))
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			if(ServerVehicles[tmpcar][vFaction] == PlayerInfo[playerid][pMember] || PlayerToPoint(10.0,playerid,1762.0028,-1584.4185,1742.5264) || PlayerToPoint(10.0,playerid,253.9323,69.7215,1003.6406) || PlayerToPoint(10.0,playerid,229.4171,167.4609,1003.0234)  || PlayerToPoint(10.0,playerid,187.8352,1931.4265,17.6874))
			{
				new id,string[128],giveplayer[30],sendername[30];
				if(sscanf(params, "u", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/clear <id/nazwa>");
				{
			    	if(IsPlayerConnected(id))
			    	{
			    		if(id != INVALID_PLAYER_ID)
			      		{
                        	if(id == playerid) return SendClientMessage(playerid, COLOR_WHITE, "Nie mo?esz sie oczyocia.");
					    	GetPlayerName(id, giveplayer, sizeof(giveplayer));
					    	GetPlayerName(playerid, sendername, sizeof(sendername));
				    		format(string, sizeof(string), "* Unulowales poziom poszukiwan %s.", giveplayer);
			     			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					    	format(string, sizeof(string), "* Oficer %s unulowal Twoj poziom poszukiwania", sendername);
					    	SendClientMessage(id, COLOR_LIGHTBLUE, string);
						    format(string, sizeof(string), "* %s unulowal poziom poszukiwan %s.", sendername, giveplayer);
					    	SendTeamMessage(3, COLOR_LIGHTBLUE, string);
			     			SendTeamMessage(2, COLOR_LIGHTBLUE, string);
	          				SendTeamMessage(1, COLOR_LIGHTBLUE, string);
					    	WantedPoints[id] = 0;
		       				PlayerInfo[id][pWantedLevel] = 0;
						    SetPlayerWantedLevel(id, 0);
					    	ClearCrime(id);
							Update(id,pWantedLevelx);
	                    }
					}
			    	else
				    {
				    	SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
				    }
		        }
     		}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Nie nale?ysz do frakcji aby u?ywaa pojazdu frakcji.");
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Nie mozesz tego uzyc.");
		}
	}
	return 1;
}
CMD:givelicense(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
        if(PlayerInfo[playerid][pMember] == 12)
        {
            new x_nr[30],id,sendername[30],giveplayer[30],string[128];
   			if(sscanf(params, "s[50]u",x_nr,id))
			{
			    SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/givelicense <License name> <id/nazwa>");
			    SendClientMessage(playerid, COLOR_WHITE, "License: Sailing, Fishing, Weapon, Flying.");
				return 1;
			}
			if(id == playerid) return SCM(playerid,COLOR_GREY, "Wybierz innego gracza.");
			if(IsInBlacklist(id, 12))
			return SCM(playerid, -1, "Ten gracz znajduje sie na czarnej liocie tej frakcji!");
			if(strcmp(x_nr,"flying",true) == 0)
			{
				if(IsPlayerConnected(id))
				{
				    if(id != INVALID_PLAYER_ID)
				    {
						PlayerInfo[playerid][pCommands] ++;
						new rquery[256];
						format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
						mysql_query(SQL, rquery);
					    GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(id, giveplayer, sizeof(giveplayer));
			            format(string, sizeof(string), "* Da³e licencje lotnicz1 na %s.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Urzednik %s dal Ci licencje lotnicz1.",sendername);
				        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Urzednik %s da³ %s licencje lotnicza.",sendername,giveplayer);
				        SendFactionMessage(12,COLOR_WHITE,string);
				        PlayerInfo[id][pFlyLic] = 1;
				        PlayerInfo[id][pFlyLicT] = 100;
						new str[256];
						format(str,sizeof(str),"UPDATE users SET `FlyLic`='1',`FlyLicT`='320' WHERE `ID`='%d'",PlayerInfo[id][pSQLID]);
						mysql_query(SQL,str);
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"sailing",true) == 0)
			{
				if(IsPlayerConnected(id))
				{
				    if(id != INVALID_PLAYER_ID)
				    {
						PlayerInfo[playerid][pCommands] ++;
						new rquery[256];
						format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
						mysql_query(SQL, rquery);
					    GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(id, giveplayer, sizeof(giveplayer));
			            format(string, sizeof(string), "* Da³e licencje ¿eglarska %s.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Urzednik %s dal Ci licencje ¿eglarska",sendername);
				        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Urzednik %s da³ %s licencja ¿eglarska",sendername,giveplayer);
				        SendFactionMessage(12,COLOR_WHITE,string);
				        PlayerInfo[id][pBoatLic] = 1;
				        PlayerInfo[id][pBoatLicT] = 100;
						new str[256];
						format(str,sizeof(str),"UPDATE users SET `BoatLic`='1',`BoatLicT`='320' WHERE `ID`='%d'",PlayerInfo[id][pSQLID]);
						mysql_query(SQL,str);
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"fishing",true) == 0)
			{
				if(IsPlayerConnected(id))
				{
				    if(id != INVALID_PLAYER_ID)
				    {
						PlayerInfo[playerid][pCommands] ++;
						new rquery[256];
						format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
						mysql_query(SQL, rquery);
					    GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(id, giveplayer, sizeof(giveplayer));
			            format(string, sizeof(string), "* Da³e karte wedkarsk¹ %s.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Urzednik %s da³ Ci karte wedkarsk¹.",sendername);
				        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Urzednik %s da³ %s karte wedkarsk¹.",sendername,giveplayer);
				        SendFactionMessage(12,COLOR_WHITE,string);
				        PlayerInfo[id][pFishLic] = 1;
				        PlayerInfo[id][pFishLicT] = 100;
						new str[256];
						format(str,sizeof(str),"UPDATE users SET `FishLic`='1',`FishLicT`='320' WHERE `ID`='%d'",PlayerInfo[id][pSQLID]);
						mysql_query(SQL,str);
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"weapon",true) == 0)
			{
				if(IsPlayerConnected(id))
				{
				    if(id != INVALID_PLAYER_ID)
				    {
						if(PlayerInfo[id][pLevel] < 2) return SCM(playerid,COLOR_GREY, "Ten gracz nie ma poziomu 2.");
						PlayerInfo[playerid][pCommands] ++;
						new rquery[256];
						format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
						mysql_query(SQL, rquery);
		
						GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(id, giveplayer, sizeof(giveplayer));
			            format(string, sizeof(string), "* Da³e jego prawo jazdy %s.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Urzednik %s da³ Ci licencje na bron.",sendername);
				        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Urzednik %s da³ %s licencje na bron.",sendername,giveplayer);
				        SendFactionMessage(12,COLOR_WHITE,string);
				        PlayerInfo[id][pGunLic] = 1;
				        PlayerInfo[id][pGunLicT] = 100;
						new str[256];
						format(str,sizeof(str),"UPDATE users SET `GunLic`='1',`GunLicT`='320' WHERE `ID`='%d'",PlayerInfo[id][pSQLID]);
						mysql_query(SQL,str);
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
				    return 1;
				}
			}
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Nie jeste cz³onkiem DMV");
            return 1;
        }
    }
    return 1;
}
CMD:startlesson(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
        if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
        {
            new id,sendername[30],giveplayer[30],string[128];
   			if(sscanf(params, "u",id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/startlesson <id/nazwa>");
   			{
				if(IsPlayerConnected(id))
				{
				    if(id != INVALID_PLAYER_ID)
				    {
						if(playerid == id) return SCM(playerid,COLOR_GREY, "Nie mo?esz sam rozpocz1a lekcji.");
					    GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(id, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* Zacz13eo lekcje %s.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Instruktor %s rozpocz13 lekcje.",sendername);
				        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Instruktor %s ma lekcje z %s.",sendername,giveplayer);
				        SendFactionMessage(12,COLOR_YELLOW,string);
				        TakingLesson[id] = 2;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
				    return 1;
				}
	        }
	    }
    	else
        {
            SendClientMessage(playerid, COLOR_GREY, "Nie jeste cz³onkiem szko3y jazdy.");
            return 1;
        }
    }
    return 1;
}
CMD:stoplesson(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
        if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
        {
            new id,sendername[30],giveplayer[30],string[128];
   			if(sscanf(params, "u",id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/stoplesson <id/nazwa>");
   			{
				if(IsPlayerConnected(id))
				{
				    if(id != INVALID_PLAYER_ID)
				    {
						if(TakingLesson[id] != 2) return SendClientMessage(playerid,COLOR_GREY, "Ten gracz nie bierze lekcji.");
						if(playerid == id) return SCM(playerid,COLOR_GREY, "Nie mo?esz sam przerwaa lekcji.");
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(id, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* Zatrzyma3eo lekcje %s.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Instruktor %s przerwa3 lekcje z Tob1.",sendername);
				        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				        TakingLesson[id] = 0;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
				    return 1;
				}
	        }
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_GREY, "Nie jeste cz³onkiem szko3y jazdy.");
	        return 1;
	    }
	}
	return 1;
}
CMD:requestlicense(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
	   	new x_nr[50],sendername[30],string[128];
	   	GetPlayerName(playerid,sendername,sizeof(sendername));
	   	if(licensesend[playerid] == 1) return SCM(playerid,COLOR_WHITE,"{f03337}Wys3a3eo ju¿ licencje na ?1danie.");
		if(licenseaccepted[playerid] == 1) return SCM(playerid,COLOR_WHITE,"{f03337}Masz ju¿ licencje na ?1danie.");
		if(PlayerInfo[playerid][pMember] == 12) return SCM(playerid,COLOR_GREY, "Jeste instruktorem.");
		if(sscanf(params, "s[50]",x_nr))
		{
			SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/requestlicense <License Name>");
			SCM(playerid,COLOR_WHITE,"License Nume: Weapon, Flying, Sailing, Fishing.");
			return 1;
		}
	    if(strcmp(x_nr,"weapon",true) == 0)
        {
            if(PlayerInfo[playerid][pGunLic] < 1)
            {
				format(string, sizeof(string), "{FFFF45}%s ?1da licencje na bron.", sendername);
				SendFactionMessage(12,COLOR_WHITE,string);
				format(string, sizeof(string), "{FFFF45}Zastosuj [/acceptlic %d] aby zaakceptowaa ?1danie licencji.", playerid);
				SendFactionMessage(12,COLOR_WHITE,string);
				licensesend[playerid] = 1;
				SendClientMessage(playerid, COLOR_WHITE,"{FFFF45}Twoja prooba zosta3a wys3ana do instruktorów.");
				SetPVarString(playerid, "License", x_nr);
				return 1;
        	}
    		else return SCM(playerid, COLOR_GREY, "Masz ju¿ te licencje.");
        }
        if(strcmp(x_nr,"flying",true) == 0)
        {
            if(PlayerInfo[playerid][pFlyLic] < 1)
            {
				format(string, sizeof(string), "{FFFF45}%s ?1da licencje lotnicz1.", sendername);
				SendFactionMessage(12,COLOR_WHITE,string);
				format(string, sizeof(string), "{FFFF45}Zastosuj [/acceptlic %d] aby zaakceptowac ?1danie licencji.", playerid);
				SendFactionMessage(12,COLOR_WHITE,string);
				licensesend[playerid] = 1;
				SendClientMessage(playerid, COLOR_WHITE,"{FFFF45}Twoja prooba zosta3a wys3ana do instruktorów.");
				SetPVarString(playerid, "License", x_nr);
				return 1;
        	}
    		else return SCM(playerid, COLOR_GREY, "Masz ju¿ te licencje.");
        }
        if(strcmp(x_nr,"Sailing",true) == 0)
        {
            if(PlayerInfo[playerid][pBoatLic] < 1)
            {
				format(string, sizeof(string), "{FFFF45}%s ?1da licencje ?eglarsk1.", sendername);
				SendFactionMessage(12,COLOR_WHITE,string);
				format(string, sizeof(string), "{FFFF45}Zastosuj [/acceptlic %d] aby zaakceptowac ?1danie licencji.", playerid);
				SendFactionMessage(12,COLOR_WHITE,string);
				licensesend[playerid] = 1;
				SendClientMessage(playerid, COLOR_WHITE,"{FFFF45}Twoja prooba zosta3a wys3ana do instruktorów.");
				SetPVarString(playerid, "License", x_nr);
				return 1;
        	}
    		else return SCM(playerid, COLOR_GREY, "Masz ju¿ te licencje.");
        }
        if(strcmp(x_nr,"fishing",true) == 0)
        {
            if(PlayerInfo[playerid][pFishLic] < 1)
            {
				format(string, sizeof(string), "{FFFF45}%s ?1da karty wedkarskiej.", sendername);
				SendFactionMessage(12,COLOR_WHITE,string);
				format(string, sizeof(string), "{FFFF45}Zastosuj [/acceptlic %d] aby zaakceptowac ?1danie licencji.", playerid);
				SendFactionMessage(12,COLOR_WHITE,string);
				licensesend[playerid] = 1;
				SendClientMessage(playerid, COLOR_WHITE,"{FFFF45}Twoja prooba zosta3a wys3ana do instruktorów.");
				SetPVarString(playerid, "License", x_nr);
				return 1;
        	}
    		else return SCM(playerid, COLOR_GREY, "Masz ju¿ te licencje.");
        }
	}
	return 1;
}
CMD:license(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		new string[128],count= 0,titlestring[50],name[30];
		if(PlayerInfo[playerid][pMember] != 12) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste instruktorem.");
		foreach(Player, i)
		{
	    	if(GetPVarString(i, "License", string, 128))
	    	{
	        	GetPVarString(i, "License", string, sizeof(string));
	        	count++;
	        	GetPlayerName(i, name,sizeof(name));
	        	format(string, sizeof(string), "%s(%d) - ID: %d",name,i,i);
	        	format(titlestring, sizeof(titlestring), "Czekam: %d", count);
   				ShowPlayerDialog(playerid, 211, DIALOG_STYLE_LIST, titlestring, string, "Anuluj", "");
   				SendClientMessage(playerid, 0xFFFFFFFF, "{FFFF00}U?yj komendy / clicense, aby dowiedziea sie wiecej.");
			}
		}
 	}
	return 1;
}
CMD:clicense(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		new id,string[128],name[30];
		if(PlayerInfo[playerid][pMember] != 12) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste instruktorem.");
		if(sscanf(params, "u", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/clicense <id/nazwa>");
	    if(GetPVarString(id, "License", string, 128))
	    {
	        GetPVarString(id, "License", string, sizeof(string));
	        GetPlayerName(id, name,sizeof(name));
	        format(string, sizeof(string), "{FFFF45}Gracz %s(%d): %s.",name,id, string);
	        SendClientMessage(playerid, COLOR_WHITE, string);
		}
 	}
	return 1;
}
CMD:acceptlic(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pMember] != 12) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste instruktorem.");
		new licid,string[200],giveplayer[30],sendername[30];
		if(sscanf(params, "d", licid)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/acceptlic <License ID>");
		if(licensesend[licid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Nieprawid³owe ID licencji.");
		if(PlayerInfo[licid][pMember] == 12) return SCM(playerid,COLOR_GREY, "Gracz ma instruktora.");
		licenseaccepted[licid] = 1;
		licensesend[licid] = -1;
		GetPlayerName(playerid, sendername,sizeof(sendername));
		format(string, sizeof(string),"{FFFF45}Instruktor %s zaakceptowa3 twoj1 proobe.",sendername);
 		SCM(licid,COLOR_WHITE,string);
 		GetPlayerName(licid,giveplayer,sizeof(giveplayer));
 		format(string, sizeof(string),"{FFFF45}Przyj13eo proobe %s.",giveplayer);
 		SCM(playerid,COLOR_WHITE,string);
 		format(string, sizeof(string),"{FFFF45}Instruktor %s zaakceptowa3 proobe %s.",sendername,giveplayer);
 		SendFactionMessage(12, COLOR_WHITE, string);
 		DeletePVar(licid, "License");
 	}
	return 1;
}
CMD:closelic(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pMember] != 12) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste instruktorem.");
		new licid,sendername[30],giveplayer[30],string[100];
		if(sscanf(params, "d", licid)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/closelic <License ID>");
		if(licenseaccepted[licid] != 1) return SendClientMessage(playerid, COLOR_GREY, "Nieprawidlowe ID licencji.");
		licenseaccepted[licid] = -1;
		licensesend[licid] = -1;
		GetPlayerName(playerid, sendername,sizeof(sendername));
		format(string, sizeof(string),"{FFFF45}Instruktor %s odrzuci3 Twoja prosbe.",sendername);
 		SCM(licid,COLOR_WHITE,string);
 		GetPlayerName(licid,giveplayer,sizeof(giveplayer));
 		format(string, sizeof(string),"{FFFF45}Odrzucono prosbe. %s.",giveplayer);
 		SCM(playerid,COLOR_WHITE,string);
  	}
	return 1;
}
CMD:showlicenses(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		new id;
        if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/showlicenses <id/nazwa>");
        if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
        if(!ProxDetectorS(8.0, playerid, id)) return SCM(playerid,COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
		if(Spectate[id] != 255) return SCM(playerid,COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
		new text1[20],text2[20],text4[20],text5[20],string[128];
		if(PlayerInfo[playerid][pCarLic] == 1) { text1 = "Valida"; } else { text1 = "Invalida"; }
		if(PlayerInfo[playerid][pFlyLic] == 1) { text4 = "Valida"; } else { text4 = "Invalida"; }
		if(PlayerInfo[playerid][pBoatLic] == 1) { text2 = "Valida"; } else { text2 = "Invalida"; }
        if(PlayerInfo[playerid][pGunLic] == 1) { text5 = "Valida"; } else { text5 = "Invalida"; }
	    SendClientMessage(playerid, COLOR_WHITE, "----- Licenses -----");
		if(PlayerInfo[playerid][pCarLicT] == 0)
	    {
        	format(string, sizeof(string), "Prawo jazdy: %s (Expirata).", text1);
        	SendClientMessage(id, COLOR_WHITE, string);
        }
	    else
	    {
        	format(string, sizeof(string), "Prawo jazdy: %s (Disponibila %d ore).", text1,PlayerInfo[playerid][pCarLicT]);
        	SendClientMessage(id, COLOR_WHITE, string);
        }
        if(PlayerInfo[playerid][pFlyLicT] == 0)
	    {
			format(string, sizeof(string), "Licencja lotnicza: %s (Expirata).", text4);
			SendClientMessage(id, COLOR_WHITE, string);
		}
		else
		{
			format(string, sizeof(string), "Licencja lotnicza: %s (Disponibila %d ore).", text4,PlayerInfo[playerid][pFlyLicT]);
			SendClientMessage(id, COLOR_WHITE, string);
		}
        if(PlayerInfo[playerid][pBoatLicT] == 0)
	    {
			format(string, sizeof(string), "Licencja ¿eglarska: %s (Expirata).", text2);
			SendClientMessage(id, COLOR_WHITE, string);
		}
		else
		{
			format(string, sizeof(string), "Licencja ¿eglarska %s (Disponibila %d ore).", text2,PlayerInfo[playerid][pBoatLicT]);
			SendClientMessage(id, COLOR_WHITE, string);
		}
		if(PlayerInfo[playerid][pGunLicT] == 0)
	    {
			format(string, sizeof(string), "Licencja na bron: %s (Expirata).", text5);
			SendClientMessage(id, COLOR_WHITE, string);
		}
		else
		{
			format(string, sizeof(string), "Licencja na bron: %s (Disponibila %d ore).", text5,PlayerInfo[playerid][pGunLicT]);
			SendClientMessage(id, COLOR_WHITE, string);
		}
		new sendername[25],giveplayer[25];
		GetPlayerName(playerid,sendername,sizeof(sendername));
		GetPlayerName(id,giveplayer,sizeof(giveplayer));
		format(string, sizeof(string), "* %s pokaza3 Ci swoje licencje.", sendername);
		SendClientMessage(id, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Pokaza3eo swoje licencje %s.", giveplayer);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
    return 1;
}
CMD:alicenses(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		new id;
        if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/alicenses <id/nazwa>");
        if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
        new text1[20],text2[20],text3[20],text4[20],text5[20],string[128];
		if(PlayerInfo[id][pCarLic] == 1) { text1 = "Valida"; } else { text1 = "Invalida"; }
		if(PlayerInfo[id][pFlyLic] == 1) { text4 = "Valida"; } else { text4 = "Invalida"; }
		if(PlayerInfo[id][pBoatLic] == 1) { text2 = "Valida"; } else { text2 = "Invalida"; }
        if(PlayerInfo[id][pFishLic] == 1) { text3 = "Valida"; } else { text3 = "Invalida"; }
        if(PlayerInfo[id][pGunLic] == 1) { text5 = "Valida"; } else { text5 = "Invalida"; }
	    SendClientMessage(playerid, COLOR_GREEN, "Licente:");
	    if(PlayerInfo[id][pCarLicT] == 0)
	    {
        	format(string, sizeof(string), "** Prawo jazdy: %s (Expirated).", text1);
        	SendClientMessage(playerid, COLOR_GRAD1, string);
        }
	    else
	    {
        	format(string, sizeof(string), "** Prawo jazdy: %s (%d).", text1,PlayerInfo[id][pCarLicT]);
        	SendClientMessage(playerid, COLOR_GRAD1, string);
        }
        if(PlayerInfo[id][pFlyLicT] == 0)
	    {
			format(string, sizeof(string), "** Licencja lotnicza: %s (Expirated).", text4);
			SendClientMessage(playerid, COLOR_GRAD2, string);
		}
		else
		{
			format(string, sizeof(string), "** Licencja lotnicza: %s (%d).", text4,PlayerInfo[id][pFlyLicT]);
			SendClientMessage(playerid, COLOR_GRAD2, string);
		}
        if(PlayerInfo[id][pBoatLicT] == 0)
	    {
			format(string, sizeof(string), "** Licencja ¿eglarska: %s (Expirated).", text2);
			SendClientMessage(playerid, COLOR_GRAD3, string);
		}
		else
		{
			format(string, sizeof(string), "** Licencja ¿eglarska: %s (%d).", text2,PlayerInfo[id][pBoatLicT]);
			SendClientMessage(playerid, COLOR_GRAD3, string);
		}
		if(PlayerInfo[id][pFishLicT] == 0)
	    {
			format(string, sizeof(string), "** Licencja wedkarska: %s (Expirated).", text3);
			SendClientMessage(playerid, COLOR_GRAD4, string);
		}
		else
		{
			format(string, sizeof(string), "** Licencja wedkarska: %s (%d).",text3,PlayerInfo[id][pFishLicT]);
			SendClientMessage(playerid, COLOR_GRAD4, string);
		}
		if(PlayerInfo[id][pGunLicT] == 0)
	    {
			format(string, sizeof(string), "** Licencja na bron: %s (Expirated).", text5);
			SendClientMessage(playerid, COLOR_GRAD5, string);
		}
		else
		{
			format(string, sizeof(string), "** Licencja na bron: %s (%d).", text5,PlayerInfo[id][pGunLicT]);
			SendClientMessage(playerid, COLOR_GRAD5, string);
		}
		SendClientMessage(playerid, COLOR_GREEN, "________________________________");
	}
    return 1;
}
CMD:licenses(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
        new text1[20],text2[20],text4[20],text5[20],string[128];
		if(PlayerInfo[playerid][pCarLic] == 1) { text1 = "Valida"; } else { text1 = "Invalida"; }
		if(PlayerInfo[playerid][pFlyLic] == 1) { text4 = "Valida"; } else { text4 = "Invalida"; }
		if(PlayerInfo[playerid][pBoatLic] == 1) { text2 = "Valida"; } else { text2 = "Invalida"; }
        if(PlayerInfo[playerid][pGunLic] == 1) { text5 = "Valida"; } else { text5 = "Invalida"; }
	    SendClientMessage(playerid, COLOR_WHITE, "----- Licenses -----");
	    if(PlayerInfo[playerid][pCarLicT] == 0)
	    {
        	format(string, sizeof(string), "Prawo jazdy: %s (Expirata).", text1);
        	SendClientMessage(playerid, COLOR_WHITE, string);
        }
	    else
	    {
        	format(string, sizeof(string), "Prawo jazdy: %s (Disponibila %d ore).", text1,PlayerInfo[playerid][pCarLicT]);
        	SendClientMessage(playerid, COLOR_WHITE, string);
        }
        if(PlayerInfo[playerid][pFlyLicT] == 0)
	    {
			format(string, sizeof(string), "Licencja lotnicza: %s (Expirata).", text4);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else
		{
			format(string, sizeof(string), "Licencja lotnicza: %s (Disponibila %d ore).", text4,PlayerInfo[playerid][pFlyLicT]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
        if(PlayerInfo[playerid][pBoatLicT] == 0)
	    {
			format(string, sizeof(string), "Licencja ¿eglarska: %s (Expirata).", text2);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else
		{
			format(string, sizeof(string), "¿eglarska %s (Disponibila %d ore).", text2,PlayerInfo[playerid][pBoatLicT]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		if(PlayerInfo[playerid][pGunLicT] == 0)
	    {
			format(string, sizeof(string), "Licencja na bron: %s (Expirata).", text5);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else
		{
			format(string, sizeof(string), "Licencja na bron: %s (Disponibila %d ore).", text5,PlayerInfo[playerid][pGunLicT]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
	}
    return 1;
}
CMD:setint(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		new id,intid,string[50];
		if(sscanf(params, "ud", id,intid)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/setint <id/nazwa> <Interior ID>");
	    if(IsPlayerConnected(id))
	    {
	        if(id != INVALID_PLAYER_ID)
	        {
				SetPlayerInterior(id,intid);
				PlayerInfo[id][pInt] = intid;
				format(string, sizeof(string), "Ustawi3eo spawn tego gracza %d.", intid);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
		else return SCM(playerid,COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	return 1;
}
CMD:setvw(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		new id,vwid,string[50];
		if(sscanf(params, "ud", id,vwid)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/setvw <id/nazwa> <Virtual World>");
	    if(IsPlayerConnected(id))
	    {
	        if(id != INVALID_PLAYER_ID)
	        {
				SetPlayerVirtualWorld(id,vwid);
				format(string, sizeof(string), "* Ustawi3eo graczowi virtual world %d.", vwid);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
		else return SCM(playerid,COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	return 1;
}
CMD:wthelp(playerid, params[])
{
	if(PlayerInfo[playerid][pWTalkie] == 0) return SCM(playerid, COLOR_GREY, "Nieodpowiednia czestotliwooa.");
	SCM(playerid,COLOR_WHITE,"Walkie Talkie: /togwt /setfreq /wt");
	return 1;
}
CMD:togwt(playerid, params[])
{
	if(PlayerInfo[playerid][pWTalkie] == 0) return SCM(playerid, COLOR_GREY, "Nieodpowiednia czestotliwooa.");
	if(WTToggle[playerid] == true)
	{
	    WTToggle[playerid] = false;
	    SCM(playerid, COLOR_WHITE,"Dezaktywacja.");
	}
	else
	{
	    WTToggle[playerid] = true;
	    SCM(playerid, COLOR_WHITE, "Aktywuj.");
	}
	return 1;
}
CMD:showfreq(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	new id,string[64];
    if(sscanf(params, "u",id)) return SCM(playerid, 0xFFFFFFFF, "Uzycie: /showfreq <id/nazwa>");
    if(PlayerInfo[id][pWTalkie] == 0) return SCM(playerid, COLOR_GREY, "Ten gracz nie ma radia");
   	format(string, sizeof(string), "{B8FFDB}Czestotliwooa %.1f.",WTChannel[id]);
    SCM(playerid, COLOR_WHITE, string);
    return 1;
}
CMD:setfreq(playerid, params[])
{
	new string[256];
	if(PlayerInfo[playerid][pWTalkie] == 0) return SCM(playerid, COLOR_GREY, "Nieodpowiednia czestotliwooa");
	new Float:freqss2;
    if(sscanf(params, "f",freqss2)) return SCM(playerid, 0xFFFFFFFF, "Uzycie: /setfreq <Frecventa(89.5 of 98.5)>");
    if(freqss2 < 89.5 || freqss2 > 98.5 ) return SCM(playerid, 0xFFFFFFFF, "Uzycie: /setfreq <Frecventa(89.5 of 98.5)>");
	if(WTToggle[playerid] == false) return SCM(playerid, COLOR_GREY, "Twoja stacja jest wy31czona.");
	if(freqss2 == WTChannel[playerid]) return SCM(playerid, COLOR_GREY, "Jeste ju¿ na tej czestotliwooci.");
    format(string, sizeof(string), "{B8FFDB}Czestotliwooa ustawiona %.2f.",freqss2);
    SCM(playerid, COLOR_WHITE, string);
	WTChannel[playerid] = freqss2;
	return 1;
}
CMD:wt(playerid, params[])
{
	if(PlayerInfo[playerid][pWTalkie] == 0) return SCM(playerid, COLOR_GREY, "Nieodpowiednia czestotliwooa.");
	new msg[128],sendername[25],string[256];
    if(PlayerInfo[playerid][pMuted] == 1)
    {
		format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		return 1;
	}
	if(sscanf(params, "s[128]", msg)) return SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/wt <wiadomosc>");
	if(WTToggle[playerid] == false) return SCM(playerid, COLOR_GREY, "Twoja stacja jest wy31czona.");
	if(WTChannel[playerid] == 0) return SCM(playerid,COLOR_GREY, "Wybierz czestotliwooa.");
	GetPlayerName(playerid,sendername,sizeof(sendername));
	foreach(Player, i)
	{
	    if(WTToggle[i] == true)
	    {
	        if(WTChannel[i] == WTChannel[playerid])
	        {
				format(string, sizeof(string), "{54BF9C}[Czestotliwooa: %.2f]: %s: %s",WTChannel[playerid],sendername, msg);
				SCM(i, COLOR_WHITE, string);
	        }
	    }
	}
	return 1;
}


CMD:aresztuj(playerid, params[])  {
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz tego uzyc.");
	if(OnDuty[playerid] == 0) return SCM(playerid, COLOR_LGREEN, "nie jeste na s³u¿bie");
	new id,string[186];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/aresztuj <id/nazwa>");
	if(!IsPlayerConnected(id) || id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	if(PlayerToPoint(15.0, playerid, 176.043701,-194.106842,342.916259)/* <- komi lspd areszt z celami */ || PlayerToPoint(10.0, playerid, 1564.6182,-1693.1272,5.8906) || PlayerToPoint(10.0, playerid, 2281.6555,2429.8877,3.2734)) {	
		if(GetDistanceBetweenPlayers(playerid,id) > 10) return SendClientMessage(playerid,-1, "Ten gracz nie jest blisko ciebie.");
		if(PlayerInfo[id][pWantedLevel] < 1) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie posiada listów gonczych!");
		if(PlayerInfo[id][pWantedLevel] >= 6) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz kwalifikuje sie tylko do pierdla!");
		PlayerInfo[playerid][pCommands] ++;
		new rquery[256];
		format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
		mysql_query(SQL, rquery);
		ClearCrime(id);
		format(string, sizeof(string), "* Aresztujesz %s i dostajesz za to $%s.", GetName(id), FormatNumber(PlayerInfo[id][pWantedLevel]*350));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		GivePlayerCash(id, -PlayerInfo[id][pWantedLevel]*350);
		GivePlayerCash(playerid, PlayerInfo[id][pWantedLevel]*350);
		ResetPlayerWeapons(id);
		JailPrice[id] = 1000;
		PlayerInfo[id][pJailTime] = PlayerInfo[id][pWantedLevel] * 250;
		SetPlayerWantedLevel(id, 0);					
		format(string, sizeof(string), "Trafiasz do aresztu na %d sekund.", PlayerInfo[id][pJailTime]);
		SendClientMessage(id, COLOR_LIGHTBLUE, string);
		PlayerInfo[id][pJailed] = 1;
		PlayerInfo[id][pArrested] += 1;
		Dragged[id] = 0;
		Dragging[playerid] = 0;
		KillTimer(draggedtimer[id]);		
		SetPlayerFree(id, playerid, "Aresztowany");
		WantedPoints[id] = 0;
		arrestcop[id] = playerid;
		Update(id,pJailedx);
		Update(id,pJailTimex);
		Update(playerid,pCashx);
		Update(id,pCashx);
		PlayerCuffed2[id] = 0;
		SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(id,1);
		
		PutPlayerInJail(id);
		if(PlayerCuffed2[id] == 1) {
			PlayerCuffed2[id] = 0;
			SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(id,1);
			TogglePlayerControllable(id, 1);
		}
		format(string, sizeof(string), "Policjant %s aresztowal %s, z grzywna w wysokosci $%d na %d sekund.", GetName(playerid), GetName(id), PlayerInfo[id][pWantedLevel]*350, PlayerInfo[id][pJailTime]);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		PlayerInfo[id][pWantedLevel] = 0;
		Update(id,pWantedLevelx);		
	}
	else SendClientMessage(playerid, COLOR_GREY, "Nie jeste w odpowiednim obszarze");
	return 1;
}

CMD:odsiadka(playerid, params[])  {
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz tego uzyc.");
	if(OnDuty[playerid] == 0) return SCM(playerid, COLOR_LGREEN, "nie jeste na s³u¿bie");
	new id,string[186];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/odsiadka <id/nazwa>");
	if(!IsPlayerConnected(id) || id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	if(PlayerToPoint(15.0, playerid, 4201.020996,-2067.834716,54.322837)/* <- wyspa pawla */) {	
		if(GetDistanceBetweenPlayers(playerid,id) > 10) return SendClientMessage(playerid,-1, "Ten gracz nie jest blisko ciebie.");
		if(PlayerInfo[id][pWantedLevel] < 6) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie posiada listów gonczych!");
		PlayerInfo[playerid][pCommands] ++;
		new rquery[256];
		format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
		mysql_query(SQL, rquery);
		ClearCrime(id);
		format(string, sizeof(string), "* Uwieziles %s w wiezieniu Federalnym i otrzymales $%s.", GetName(id), FormatNumber(PlayerInfo[id][pWantedLevel]*350));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		GivePlayerCash(id, -PlayerInfo[id][pWantedLevel]*350);
		GivePlayerCash(playerid, PlayerInfo[id][pWantedLevel]*350);
		ResetPlayerWeapons(id);
		JailPrice[id] = 1000;
		PlayerInfo[id][pJailTime] = PlayerInfo[id][pWantedLevel] * 250;
		SetPlayerWantedLevel(id, 0);					
		format(string, sizeof(string), "* %s uwiezil cie w wiezieniu Federalnym na %d sekund!", PlayerInfo[id][pJailTime]);
		SendClientMessage(id, COLOR_LIGHTBLUE, string);
		PlayerInfo[id][pJailed] = 2;
		PlayerInfo[id][pArrested] += 1;					
		SetPlayerFree(id, playerid, "Aresztowany");
		WantedPoints[id] = 0;
		arrestcop[id] = playerid;
		Update(id,pJailedx);
		Update(id,pJailTimex);
		Update(playerid,pCashx);
		Update(id,pCashx);
		PlayerCuffed2[id] = 0;
		SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(id,1);
		Dragged[id] = 0;
		Dragging[playerid] = 0;
		KillTimer(draggedtimer[id]);
		
		PutPlayerInFederalJail(id);
		if(PlayerCuffed2[id] == 1) {
			PlayerCuffed2[id] = 0;
			SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(id,1);
			TogglePlayerControllable(id, 1);
		}
		PlayerInfo[id][pWantedLevel] = 0;
		Update(id,pWantedLevelx);		
	}
	else SendClientMessage(playerid, COLOR_GREY, "Nie jeste w odpowiednim obszarze");
	return 1;
}

/*function PutPlayerInJail(playerid) {
	new rand = random(sizeof(JailPos));
	SetPlayerPosEx(playerid, JailPos[rand][0], JailPos[rand][1], JailPos[rand][2]);
	SetPlayerSkinEx(playerid, 62);
	TogglePlayerControllable(playerid, 0);
	SetPlayerInterior(playerid, 6);
	SetTimerEx("UnFreezeStation", 500, false, "i", playerid);	 stare
	return 1;
}*/ 

function PutPlayerInJail(playerid)
{
	new randn = random(sizeof(JailSpawns));
	SetPlayerPos(playerid, JailSpawns[randn][0], JailSpawns[randn][1], JailSpawns[randn][2]);
	SetPlayerFacingAngle(playerid, JailSpawns[randn][3]);
	SetPlayerVirtualWorld(playerid, 1);
	TogglePlayerControllable(playerid, 0);
	SetTimerEx("UnFreezeStation", 500, false, "i", playerid);
	return 1;
}

function PutPlayerInFederalJail(playerid)
{
	new randn = random(sizeof(FederalSpawns));
	SetPlayerPos(playerid, FederalSpawns[randn][0], FederalSpawns[randn][1], FederalSpawns[randn][2]);
	SetPlayerFacingAngle(playerid, FederalSpawns[randn][3]);
	SetPlayerVirtualWorld(playerid, 0);
	TogglePlayerControllable(playerid, 0);
	SetTimerEx("UnFreezeStation", 500, false, "i", playerid);
	return 1;
}

CMD:spawntcar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		new model,sendername[25],string[256];
		if(sscanf(params, "i", model)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/spawntcar <Model>");
		if(model < 400 || model > 611) return SCM(playerid,COLOR_GREY, "Nieprawid³owe ID pojazdu.");
    	new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
     	new carid = CreateVehicleEx(model, X,Y,Z, 0.0, -1, -1, 100);
		Carspawn[carid] = carid;
       	GetPlayerName(playerid, sendername, sizeof(sendername));
       	new vehicles = GetVehicleModel(carid) - 400;
    	format(string, sizeof(string), "AdmCmd: Admin %s zespawnowal pojazd tymczasowy %s [Model: %d - Car ID: %d].",sendername,aVehicleNames[vehicles],model,carid);
    	SendAdminMessage(COLOR_LOGS, string, 4);
		format(string,sizeof(string),"AdmCmd: %s zespawnowal pojazd tymczasowy o modelu %d.",sendername,model);
    	AdminLog("/logs/admin.log", string);
		LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}
CMD:despawntcar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
	    new id;
	    if(sscanf(params, "d", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/despawntcar <ID>");
		if(Carspawn[id] == 1)
		{ 
		    DestroyVehicle(id);
			Carspawn[id] = 0;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "To nie jest zespawnowany pojazd!");
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}

CMD:awaryjnydespawn(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
	    new id;
	    if(sscanf(params, "d", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/awaryjnydespawn <ID>");
		DestroyVehicle(id);
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}

CMD:despawncar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
	    new id, veh_id;
	    if(sscanf(params, "d", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/despawncar <ID>");
		veh_id = FindSpawnID(id);
		if(CarInfo[veh_id][Spawned] && veh_id != 0)
		{ 	
		DestroyPlayerCar(veh_id);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "To nie jest pojazd prywatny ktory mozna od tak odspawnowac!");
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}

/*CMD:respawnallcars(playerid)
{
    if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 3)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "You are not authorized!");
                return 1;
            }
            new bool:unwanted[MAX_VEHICLES];
            for(new player=0; player<MAX_PLAYERS; player++)
            {
                if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
            }
            for(new car = 1; car <= MAX_VEHICLES; car++)
            {
                if(!unwanted[car]) SetVehicleToRespawn(car);
            }
            GameTextForAll("~w~Every Unused Car Has Been ~n~~g~Respawned!",5000,1);
        }
    return 1;
}*/
stock IsVehicleEmpty(vehicleid)
{
        for(new i=0; i<MAX_PLAYERS; i++)
        {
                if(IsPlayerInVehicle(i, vehicleid)) return 0;
        }
        return 1;
}

CMD:respawncars(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		/*for(new i = 1; i < MAX_VEHICLES; i++)
		{
			if(Carspawn[i] != 0)
			{
				DestroyVehicle(Carspawn[i]);
				Carspawn[i] = 0;
			}
		}
		Destroycar = 0;*/
		SendClientMessage(playerid, COLOR_LGREEN, "Zrespawnowales wszystkie nieuzywane pojazdy!");
            for(new car = 1; car <= MAX_VEHICLES; car++)
            {
                if(IsVehicleEmpty(car)) SetVehicleToRespawn(car);
            }	
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}

CMD:respawncar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
	    new id;
	    if(sscanf(params, "d", id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/respawncar <ID>");
		SetVehicleToRespawn(id);
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}

CMD:checkspawncar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		new string[64];
		for(new i = 1; i < MAX_VEHICLES; i++)
		{
			if(Carspawn[i] != 0)
			{
			    format(string,sizeof(string),"Car ID: %d",Carspawn[i]);
				SCM(playerid,COLOR_WHITE,string);
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	return 1;
}


CMD:fly(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	if(IsPlayerInAnyVehicle(playerid)) {
		new Float: x, Float:y, Float:z;
		GetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z);		
		SetVehicleVelocity(GetPlayerVehicleID(playerid),x, y, z + 0.5);	
		return 1;
	}	
	if(UsedFly[playerid] == 0) {
		StartFly(playerid);
		UsedFly[playerid] = 1;
		SetPlayerHealthEx(playerid, 999999);
	}
	else if(UsedFly[playerid] == 1) {
		StopFly(playerid);
		UsedFly[playerid] = 0;
		SetPlayerHealthEx(playerid, 100);
	}
	return 1;
}

CMD:napad(playerid, params[])
{
	if(PlayerInfo[playerid][pRob] < 10 && PlayerInfo[playerid][pPremiumAccount] == 0) return SendClientMessage(playerid, -1, "Nie masz wystarczajaco pkt napadu! (10).");
	else if(PlayerInfo[playerid][pRob] < 8 && PlayerInfo[playerid][pPremiumAccount] > 0) return SendClientMessage(playerid, -1, "Nie masz wystarczajaco pkt napadu! (Minimum 8).");
	if(IsACop(playerid)) return SCM(playerid, COLOR_WHITE, "Nie mozesz uzyc tego polecenia, poniewaz  Jestes w sluzbie porzadkowej!");
	if(PlayerInfo[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_WHITE, "Musisz miec poziom 5, aby uzyc tego polecenia!");
	if(!PlayerToPoint(30, playerid,-297.0446, 1517.2533, 1070.4602)) return SendClientMessage(playerid, COLOR_WHITE, "Nie znajdujesz siê obok sejfów w banku!");
	if(Robbery[playerid] == 1) return SCM(playerid, COLOR_WHITE, "Zrabowales juz bank!");
	GetPlayerPos(playerid, RobPos[0], RobPos[1], RobPos[2]);
	
	if(PlayerInfo[playerid][pPremiumAccount] == 0) PlayerInfo[playerid][pRob] -= 10;
	else PlayerInfo[playerid][pRob] -= 8;
	
	PlayerInfo[playerid][pWantedLevel] = 6;
	WantedPoints[playerid] = 12;
	SetPlayerCriminal(playerid,255, "Napad rabunkowy");
    Update(playerid,pWantedLevelx);	
	
	Robbery[playerid] = 1;
	WantedTime[playerid] = 0;
	RobbedSafe[playerid] = 0;
	Update(playerid,pRobx);
	Robbery[playerid] = 1;
	BagMoney[playerid] = 0;
	SetPlayerPosEx(playerid, RobPos[0]+1, RobPos[1]+1, RobPos[2]);
	PlayerObject[playerid] = CreateObject(1550, RobPos[0], RobPos[1], RobPos[2], 0.00000, 0.00000, 0.00000);
	new string[256];
	format(string, sizeof(string), "{FFFFFF}Informacje o torbie\nWlasciciel: {25B336}%s{FFFFFF}\nPieniadze: {25B336}$%s", GetName(playerid), FormatNumber(BagMoney[playerid]));
	PlayerLabel[playerid] = CreateDynamic3DTextLabel(string,0xFFFFFFAA, RobPos[0], RobPos[1], RobPos[2], 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	SendClientMessage(playerid, COLOR_SERVER, "Napad: {FFFFFF}Teraz wystarczy uzyc polecenia /rsejf w poblizu sejfu.");
	SendClientMessage(playerid, COLOR_SERVER, "Napad: {FFFFFF}Maxymalna pojemnoæ Twojej torby  to 20 tysiêcy!");
	return 1;
}

CMD:rsejf(playerid, params[])
{
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_RED, "Nie jeste zalogowany!");
	if(RobbedSafe[playerid] == 1) return 1;
	if(!PlayerToPoint(10, playerid,-297.0446, 1517.2533, 1070.4602)) return SendClientMessage(playerid, COLOR_WHITE, "Nie znajdujesz siê obok sejfów w banku!");
	RobbedSafe[playerid] = 1;
	ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
	SetTimerEx("RobbedMoney", 8000, 0, "d", playerid);
	return 1;
}	

CMD:rhajs(playerid, params[])
{
	if(Robbery[playerid] == 0) return 1;
	if(PlayerObject[playerid] != 0) {
	    if(PlayerToPoint(5.0, playerid, RobPos[0], RobPos[1], RobPos[2])) {
	        if(RobbedSafe[playerid] == 0) return 1;
			new string[256];
			DisablePlayerCheckpoint(playerid);
			if(BagMoney[playerid] >= 20000) {
				DestroyObject(PlayerObject[playerid]);
				DestroyDynamic3DTextLabel(PlayerLabel[playerid]);
				PlayerObject[playerid] = 0;
				CP[playerid] = 1612;
				SetPlayerCheckpointEx(playerid, 154.3787, -1942.6757, 3.8059, 10.0);
				SetPlayerAttachedObject(playerid, 2, 1550, 1, -0.004022, -0.191353, -0.034982, 158.161407, 87.838058, 0.000000, 1.000000, 1.000000, 1.000000 );
				SendClientMessage(playerid, COLOR_YELLOW, "* Ucieknij w zaznaczone miejsce aby wypraæ pieni¹dze!");
			}
			else {
				SendClientMessage(playerid, COLOR_WHITE, "* Kontynuuj wkladanie pieniedzy do torby!");
			}
            RobbedSafe[playerid] = 0;
			format(string, sizeof(string), "{FFFFFF}Informacja o torbie\nWlasciciel: {25B336}%s{FFFFFF}\nPieniadze: {25B336}$%s", GetName(playerid), FormatNumber(BagMoney[playerid]));
			UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0xFFFFFFAA, string);
	    }
	}
	return 1;
}

public RobbedMoney(playerid) {
	if(IsPlayerConnected(playerid)) {
		new string[256];
		new money = 4500 + random(500);
		BagMoney[playerid] += money;
		format(string, sizeof(string), "Zajuma³e $%d hajsu! U¿yj /rhajs aby w³o¿yæ go do torby!", money);
		SendClientMessage(playerid, COLOR_MONEY, string);
		ClearAnimations(playerid);
	}
	return 1;
}


CMD:tod(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		new hour,string[60],sendername[25];
		if(sscanf(params, "i", hour)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/tod <timp>");
        SetWorldTime(hour);
        GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "AdmCmd: %s ustawi³ na serwerze godzinê %d.", sendername,hour);
		SendAdminMessage(COLOR_LOGS,string, 3);
		return 1;
	}
	return 1;
}
CMD:healcar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nu esti intr-un vehicul.");
		RepairVehicle(GetPlayerVehicleID(playerid));
		return 1;
	}
  	else
	{
		SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}
CMD:weather(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		new id,weather,sendername[25];
		if(sscanf(params, "ui",id,weather)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/weather <id/nazwa> <Weather ID>");
		if(weather < 0||weather > 45) return SendClientMessage(playerid, COLOR_GREY, "Zle id pogody (1-45).");
		if(IsPlayerConnected(id))
		{
			if(id != INVALID_PLAYER_ID)
			{
                GetPlayerName(playerid, sendername, sizeof(sendername));
				SetPlayerWeather(id, weather);
			}
		}
		else return SCM(playerid,COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	return 1;
}
CMD:weatherall(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		new weather,string[60],sendername[25];
		GetPlayerName(playerid,sendername,sizeof(sendername));
		if(sscanf(params, "i",weather)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/weatherall <Weather ID>");
		if(weather < 0||weather > 45) return SendClientMessage(playerid, COLOR_GREY, "Zle id pogody (1-45).");
		SetWeather(weather);
		format(string, sizeof(string), "AdmCmd: %s ustawil wszystkim pogode (ID: %d)", sendername,weather);
		SendAdminMessage(COLOR_LOGS,string, 4);
	}
	return 1;
}

CMD:slap(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new string[64],giveplayer[25],sendername[25],id;
			if(sscanf(params, "u",id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/slap <id/nazwa>");
	    	new Float:shealth;
	    	new Float:slx, Float:sly, Float:slz;
		    if(IsPlayerConnected(id))
		    {
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerHealthEx(id, shealth);
				SetPlayerHealthEx(id, shealth-5);
				GetPlayerPos(id, slx, sly, slz);
				SetPlayerPosEx(id, slx, sly, slz+5);
                format(string, 256, "AdmCmd: %s dal klapsa %s.", sendername,giveplayer);
				SendAdminMessage(COLOR_LOGS,string,1);
			}
	    	else
	    	{
		    	SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	    	}
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}
CMD:money(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		{
			new money,id,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "ui",id,money)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/money <id/nazwa> <kwota>");
		    if(IsPlayerConnected(id))
		    {
				ResetPlayerCash(id);
				GivePlayerCash(id, money);
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, 256, "AdmCmd: Admin %s ustawil graczowi %s kase na $%s.", sendername,giveplayer,FormatNumber(money));
				SendAdminMessage(COLOR_LOGS,string,5);
				format(string, 256, "AdmCmd: Admin %s ustawil kase gracza %s na $%s.", sendername,giveplayer,FormatNumber(money));
				AdminLog("/logs/pay.log", string);
				Update(id, pCashx);
			}
	    	else
	    	{
		    	SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	    	}
		}
	}
	return 1;
}
CMD:setbank(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		new money,id,string[256],sendername[25],giveplayer[25];
		if(sscanf(params, "ui",id,money)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/setbank <id/nazwa> <kwota>");
	    if(IsPlayerConnected(id))
	    {
			PlayerInfo[id][pAccount] = money;
			GetPlayerName(id, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, 256, "AdmCmd: Admin %s ustawil graczowi %s, $%s pieniedzy w banku.", sendername,giveplayer,FormatNumber(money));
			SendAdminMessage(COLOR_LOGS,string,5);
			format(string, 256, "AdmCmd: Admin %s ustawil graczowi %s, $%s pieniedzy w banku.", sendername,giveplayer,FormatNumber(money));
			AdminLog("/logs/pay.log", string);
			Update(id, pBank);
		}
    	else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	return 1;
}
CMD:givelevel(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		{
			new money,id,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "ui",id,money)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/givelevel <id/nazwa> <poziom>");
	    	new year, month,day;
	    	getdate(year, month, day);
		    if(IsPlayerConnected(id))
		    {
				PlayerInfo[id][pLevel] += money;
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "AdmCmd: Admin %s dal level %d graczowi %s.", sendername,money,giveplayer);
				SendAdminMessage(COLOR_LOGS,string,5);
				Update(id, pLevelx);
				SetPlayerScore(id, PlayerInfo[id][pLevel]);
			}
	    	else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
	}
	return 1;
}
CMD:setlevel(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		{
			new money,id,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "ui",id,money)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/setlevel <id/nazwa> <poziom>");
	    	new year, month,day;
	    	getdate(year, month, day);
		    if(IsPlayerConnected(id))
		    {
				PlayerInfo[id][pLevel] = money;
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "AdmCmd: Admin %s ustawil level %d graczowi %s.", sendername,money,giveplayer);
				SendAdminMessage(COLOR_LOGS,string,5);
				AdminLog("/logs/admin.log", string);
				Update(id, pLevelx);
				SetPlayerScore(id, PlayerInfo[id][pLevel]);
			}
	    	else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
	}
	return 1;
}
CMD:giverp(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		{
			new money,id,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "ui",id,money)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/giverp <id/nazwa> <Respect>");
	    	new year, month,day;
	    	getdate(year, month, day);
		    if(IsPlayerConnected(id))
		    {
				PlayerInfo[id][pExp] += money;
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "AdmCmd: Admin %s i-a trimis %d rp-uri lui %s.", sendername,money,giveplayer);
				SendAdminMessage(COLOR_LOGS,string,5);
				Update(id, pRP);
			}
	    	else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
	}
	return 1;
}
CMD:givemoney(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		{
			new money,id,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "ui",id,money)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/givemoney <id/nazwa> <kwota>");
		    if(IsPlayerConnected(id))
		    {
				GivePlayerCash(id, money);
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "AdmCmd: Admin %s dal $%s hasju graczowi %s.", sendername,FormatNumber(money),giveplayer);
				SendAdminMessage(COLOR_LOGS,string,5);
				format(string, 256, "AdmCmd: Admin %s dal $%s hasju graczowi %s.", sendername,FormatNumber(money),giveplayer);
				AdminLog("/logs/pay.log", string);
				Update(id, pCashx);
			}
	    	else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
	}
	return 1;
}
				
CMD:givepp(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		{
			new money,id,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "ui",id,money)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/givepp <id/nazwa> <kwota>");
		    if(IsPlayerConnected(id))
		    {
				PlayerInfo[id][pPremiumPoints] += money;
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "AdmCmd: Admin %s i-a trimis %s puncte premium lui %s.", sendername,FormatNumber(money),giveplayer);
				SendAdminMessage(COLOR_LOGS,string,5);
				format(string, 256, "AdmCmd: Admin %s has send %s premium points to %s.", sendername,FormatNumber(money),giveplayer);
				AdminLog("/logs/premium.log", string);
				
				PlayerInfo[id][pTotalGold] += money;
				format(string, sizeof(string), "* Ai primit %d puncte premium de la %s.", money, GetName(playerid));
				SCM(id, COLOR_YELLOW, string);
				if(PlayerInfo[id][pTotalGold] < 1000) format(string, sizeof(string), "Mai ai nevoie de %d puncte premium dla a primi cont VIP!", 1000-PlayerInfo[id][pTotalGold]);
				else {
					if(PlayerInfo[id][pVip] == 0) {
						SCM(id, COLOR_YELLOW, "* Ai primit cont vip deoarece ai primit peste 1000 puncte premium!");
						PlayerInfo[id][pVip] = 1;
						UpdateVar(id, "Vip", 1);
					}
					format(string, sizeof(string), "Ai primit pana acum %d puncte premium.", PlayerInfo[id][pTotalGold]);
				}
				SCM(id, COLOR_YELLOW, string);
				UpdateVar(id, "TotalGold", PlayerInfo[id][pTotalGold]);
				Update(id, pPremiumPointsx);
			}
	    	else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
	}
	return 1;
}

CMD:mute(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		{
			new time,id,string[256],sendername[25],giveplayer[25],reason[250],str[256];
			if(sscanf(params, "uis[250]",id,time,reason)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/mute <id/nazwa> <czas(minuty)> <powód>");
		    if(IsPlayerConnected(id))
		    {
				PlayerInfo[id][pMuted] = 1;
				PlayerInfo[id][pMuteTime] = time*60;
			    GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "AdmCmd: %s zostal zmutowany przez %s na %d minut, Powód: %s.", giveplayer, sendername,time, reason);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				AdminLog("/logs/mute.log", string);
				format(string, sizeof(string), "* Zostales zmutowany przez %s na %d minut, Powód: %s.", sendername,time,reason);
				SendClientMessage(id, COLOR_WARNING, string);				
				format(str,sizeof(str),"UPDATE users SET `Muted`='1',`MuteTime`='%d' WHERE `ID`='%d'",PlayerInfo[id][pMuteTime], PlayerInfo[id][pSQLID]);
				mysql_query(SQL,str);
				Mutelog(PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],reason,time);
			}
	    	else
	    	{
	    		SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	    	}
		}
	}
	return 1;
}
CMD:unmute(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		{
			new id,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "u",id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/unmute <id/nazwa>");
		    if(IsPlayerConnected(id))
		    {
		    	PlayerInfo[id][pMuted] = 0;
				PlayerInfo[id][pMuteTime] = 0;
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* Zostales odmutowany przez %s.", sendername);
				SendClientMessage(id, COLOR_LIGHTRED, string);
				format(string, sizeof(string), "AdmCmd: Admin %s odmutowal gracza %s.", sendername,giveplayer);
				SendAdminMessage(COLOR_LOGS,string,3);
				AdminLog("/logs/mute.log", string);
				new string2[184];
			    format(string2, sizeof(string2), "UPDATE users SET `Muted`='0',`MuteTime`='0' WHERE `ID`='%d'",PlayerInfo[id][pSQLID]);
				mysql_query(SQL,string2);
			}
	    	else
	    	{
	    		SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	    	}
		}
	}
	return 1;
}
CMD:mutedplayers(playerid, params[])
{
    if(IsPlayerConnected(playerid))
   	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
	        new count = 0,string[250],giveplayer[25];
			SendClientMessage(playerid, COLOR_WHITE, "{ADFF5C}|___Zmutowani gracze___|");
		    foreach(Player,i)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pMuted] == 1)
				    {
					    GetPlayerName(i, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "%s(%d) - Czas: %d.",giveplayer,i,PlayerInfo[i][pMuteTime]);
						SendClientMessage(playerid,COLOR_WHITE,string);
						count++;
					}
				}
			}
			if(count == 0)
			{
	    		SendClientMessage(playerid,COLOR_LIGHTRED,"* Nie ma zmutowanych graczy.");
			}
	    	else if(count == 1)
  	    	{
		    	SendClientMessage(playerid,COLOR_LIGHTRED,"* Jest tylko 1 zmutowany gracz.");
	    	}
	    	else if (count >= 2)
	    	{
		    	format(string, sizeof(string), "* Jest %d zmutowanych graczy.", count);
		        SCM(playerid, COLOR_LIGHTRED, string);
	    	}
		}
	    else
	    {
           SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	    }
	}
	return 1;
}

CMD:jaillist(playerid, params[])
{
    if(IsPlayerConnected(playerid))
   	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
	        new count = 0,string[250],giveplayer[25];
			SendClientMessage(playerid, COLOR_WHITE, "{ADFF5C}|___Gracze w pace___|");
		    foreach(Player,i)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pJailed] >= 1)
				    {
					    GetPlayerName(i, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "%s(%d) - Czas: [%d]",giveplayer,i,PlayerInfo[i][pJailTime]);
						SendClientMessage(playerid,COLOR_WHITE,string);
						count++;
					}
				}
			}
			if(count == 0)
			{
	    		SendClientMessage(playerid,COLOR_LIGHTRED,"* Nu este nimeni in Zamknietyoare.");
			}
	    	else if(count == 1)
  	    	{
		    	SendClientMessage(playerid,COLOR_LIGHTRED,"* Este un player in Zamknietyoare.");
	    	}
	    	else if (count >= 2)
	    	{
		    	format(string, sizeof(string), "* Acum, sunt %d playeri in Zamknietyoare.", count);
		        SCM(playerid, COLOR_LIGHTRED, string);
	    	}
		}
	    else
	    {
           SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	    }
	}
	return 1;
}
CMD:egzamin(playerid, params[])
{
    if(PlayerToPoint(5.0,playerid,-498.218017,293.717620, 2001.085937))
    {
	    if(GetPlayerCash(playerid) >= 1000)
	    {
	        if(PlayerInfo[playerid][pCarLic] == 0)
	        {
		        if(TakingLesson[playerid] == 0)
		        {
					GivePlayerCash(playerid, - 1000);
					Update(playerid, pCashx);
					DMVCar[playerid] = CreateVehicleEx(547, 1213.5978,-1829.8077,13.1334,180.7994, -1, -1, -1); //
					PutPlayerInVehicle(playerid, DMVCar[playerid], 0);
				    TakingLesson[playerid] = 1;
				    new sendername[25];
				    GetPlayerName(playerid, sendername, sizeof(sendername));
					Update(playerid, pCashx);
				    new str[256];
				    format(str, 256, "~y~Urzad Miasta~w~~h~~n~Punkty kontrolne: 0/19");
				    PlayerTextDrawSetString(playerid, InfosTD, str);
				    PlayerTextDrawShow(playerid, InfosTD);
				   	new engine,lights,alarm,bonnet,boot,objective;
					SetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,1,bonnet,boot,objective);
				}
		        else return SendClientMessage(playerid, COLOR_GREY, "Masz ju¿ test.");
   	        }
   	        else return SendClientMessage(playerid, COLOR_GREY, "Posiadasz ju¿ prawo jazdy");
   	    }
   	    else return SendClientMessage(playerid, COLOR_GREY, "Egzamin kosztuje 1,000$.");
    }
   	else return SendClientMessage(playerid, COLOR_GREY, "Nie mo¿esz tego tutaj u¿yæ, udaj siê do DMV - /gps -> DMV.");
	return 1;
}


stock ShowGunTextdraws(playerid) {
	PlayerTextDrawShow(playerid, BGunTD[0]);
	//PlayerTextDrawShow(playerid, BGunTD[1]);
	PlayerTextDrawShow(playerid, BGunTD[2]);
	PlayerTextDrawShow(playerid, BGunTD[3]);
	PlayerTextDrawShow(playerid, BGunTD[4]);
	PlayerTextDrawShow(playerid, BGunTD[5]);
	PlayerTextDrawShow(playerid, BGunTD[6]);
	PlayerTextDrawShow(playerid, BGunTD[7]);
	PlayerTextDrawShow(playerid, BGunTD[8]);
	SelectTextDraw(playerid, 0x0088FFFF);
	return 1;
}

stock HideGunTextdraws(playerid) {
	PlayerTextDrawHide(playerid, BGunTD[0]);
	PlayerTextDrawHide(playerid, BGunTD[1]);
	PlayerTextDrawHide(playerid, BGunTD[2]);
	PlayerTextDrawHide(playerid, BGunTD[3]);
	PlayerTextDrawHide(playerid, BGunTD[4]);
	PlayerTextDrawHide(playerid, BGunTD[5]);
	PlayerTextDrawHide(playerid, BGunTD[6]);
	PlayerTextDrawHide(playerid, BGunTD[7]);
	PlayerTextDrawHide(playerid, BGunTD[8]);
	CancelSelectTextDraw(playerid);
	SetCameraBehindPlayer(playerid);
	return 1;
}



CMD:buygun(playerid, params[])
{
	if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz licencji na bron.");
	if(GetPlayerCash(playerid) < 1) return SendClientMessage(playerid, COLOR_GREY, "Nie masz pieniêdzy!");
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 314.2594,-133.4281,999.6016))
	{
		ShowGunTextdraws(playerid);
		SetPlayerCameraPos(playerid, 312.1744, -131.7600, 1002.2218);
		SetPlayerCameraLookAt(playerid, 313.0621, -132.2170, 1001.4126);
		BuyGunS[playerid] = 0;
		new string[256];
		new wname[64];
		GetWeaponName(BuyGunD[BuyGunS[playerid]][0], wname, sizeof(wname));		
		format(string, sizeof(string), "%s~n~~g~$%d", wname, BuyGunD[BuyGunS[playerid]][2]);
		PlayerTextDrawSetString(playerid, BGunTD[0], string);
		PlayerTextDrawShow(playerid, BGunTD[0]);
		
		DestroyPlayerObject(playerid, GunObject[playerid]);
		GunObject[playerid] = CreatePlayerObject(playerid, BuyGunD[BuyGunS[playerid]][1], 315.09949, -133.58640, 999.68811,   90.00000, 0.00000, 90.90000);			
	}
	return 1;
}
CMD:kup(playerid, params[])
{
    if(IsAtClothShop(playerid))
    {
		ShowModelSelectionMenu (playerid, skinlist, "Odziez");
	}
	
    if(IsPlayerInRangeOfPoint(playerid,100.0,6.1884,-28.4153,1003.5494) || IsPlayerInRangeOfPoint(playerid,100.0,-30.6147,-89.6600,1003.5469) || IsPlayerInRangeOfPoint(playerid,100.0,-26.0890,-185.8300,1003.5469) || IsPlayerInRangeOfPoint(playerid,100.0,-27.3123,-29.2776,1003.5573) || IsPlayerInRangeOfPoint(playerid,100.0,-25.1326,-139.0670,1003.5469)) {
		if(GetPlayerInterior(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Nu esti in magazin.");
	 	ShowPlayerDialog(playerid,DIALOG_BUY,DIALOG_STYLE_LIST,"Kup:","Telefon ($500)\nDice ($2,000)\nRadio ($3,000)\nBricheta ($500)\nTigari ($1,500)\nCanistra ($1,000)\nGPS Vehicul ($1,000)", "Ok", "Anuluj"); 
	    return 1;
    }
    return 1;
}

CMD:fskin(playerid, params[])
{
    if(IsAtClothShop(playerid))
    {
		if(IsACop(playerid))  {
			ShowModelSelectionMenu (playerid, fskins[PlayerInfo[playerid][pMember]], "FSkin");	
		}
		else SCM(playerid, COLOR_LGREEN, "Nie mozesz uzyc tego polecenia!");
		}
		return 1;
}

CMD:oldcar(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		new string[64];
	    format(string, sizeof(string), "Ultima masina: %d",gLastCar[playerid]);
	    SendClientMessage(playerid, COLOR_GREY, string);
    }
    return 1;
}

CMD:checkgun(playerid, params[])
{
	if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new id,string[128],sendername[25];
			if(sscanf(params, "u",id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/checkgun <id/nazwa>");
            new Player_Weapons[13];
            new Player_Ammos[13];
            new i;
			if(IsPlayerConnected(id))
			{
                for(i = 1;i <= 12;i++)
                {
                    GetPlayerWeaponData(id,i,Player_Weapons[i],Player_Ammos[i]);
                    if(Player_Weapons[i] != 0)
                    {
                        new weaponName[256];
                        GetPlayerName(id, sendername, sizeof(sendername));
                        GetWeaponName(Player_Weapons[i],weaponName,255);
                        format(string,255,"{B8DBFF}* %s , Arma:{FFFFFF} %s {B8DBFF}, Gloante:{FFFFFF} %d",sendername,weaponName,Player_Ammos[i]);
                        SendClientMessage(playerid,0xFFFFFF99,string);
                    }
				}
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}

CMD:eject(playerid, params[])
{
    if(IsPlayerConnected(playerid))
   	{
        new State;
        if(IsPlayerInAnyVehicle(playerid))
        {
			new id,string[128],giveplayer[25];
		 	State=GetPlayerState(playerid);
	        if(State!=PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_GREY, "You can only eject people as the driver.");
			if(sscanf(params, "u",id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/eject <id/nazwa>");
			new test;
			test = GetPlayerVehicleID(playerid);
			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
					if(PlayerTied[id] > 0) return SendClientMessage(playerid, COLOR_GREY, "Player have tie.");
			        if(id == playerid) return SendClientMessage(playerid, COLOR_GREY, "You cannot eject yourself.");
			        if(IsPlayerInVehicle(id,test))
			        {
						new PName[MAX_PLAYER_NAME];
						GetPlayerName(playerid,PName,sizeof(PName));
						GetPlayerName(id, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* L-ai dat pe %s afara din vehicul!", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Ai fost dat afara din vehicul de %s !", PName);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);
						RemovePlayerFromVehicleEx(id);
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "Nu este in vehiculul tau.");
					    return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Musisz byc w pojezdzie, aby uzyc tego polecenia.");
		}
	}
	return 1;
}
CMD:zwiaz(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if(IsAMember(playerid))
		{
		    if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Musisz miec range 2 aby tego uzywac");
		    new id,string[128],sendername[25],giveplayer[25];
			if(sscanf(params, "u",id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/zwiaz <id/nazwa>");
		    if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
				    if(PlayerTied[id] > 0) return SendClientMessage(playerid, COLOR_GREY, "Gracz jest juz zwiazany");
					if (ProxDetectorS(8.0, playerid, id))
					{
					    new car = GetPlayerVehicleID(playerid);
					    if(id == playerid) return SendClientMessage(playerid, COLOR_GREY, "Zwiaz siebie, madre.");
					    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(id, car))
					    {
					        GetPlayerName(id, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
					        format(string, sizeof(string), "* Zostales zwiazany przez %s.", sendername);
							SendClientMessage(id, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Zwiazales %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s wyciaga line i zwiazuje %s aby nie uciekl.", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							TogglePlayerControllable(id, 0);
							PlayerTied[id] = 1;
					    }
					    else
					    {
					        SendClientMessage(playerid, COLOR_GREY, "Nie ma go w twoim pojezdzie lub Nie jeste kierowca.");
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_YELLOW2, "Nie ma w poblizu zadnego gracza.");
					    return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			    return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Nu Jestes czescia frakcji Family/Gang Member.");
		}
	}
	return 1;
}
CMD:rozwiaz(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if(IsAMember(playerid) || IsACop(playerid))
		{
		    if(PlayerInfo[playerid][pRank] < 2 && IsAMember(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Ai nevoie de rank 2 or higher to untie people.");
			new id,string[128],giveplayer[25],sendername[25];
			if(sscanf(params, "u",id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/untie <id/nazwa>");
			if(IsPlayerConnected(id))
			{
				if(id != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, id))
					{
					    if(id == playerid) return SendClientMessage(playerid, COLOR_GREY, "You cannot untie yourself!");
						if(PlayerTied[id])
						{
						    GetPlayerName(id, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
					        format(string, sizeof(string), "* Ai fost dezlegat de %s.", sendername);
							SendClientMessage(id, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* L-ai dezlegat pe %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s l-a dezlegat pe %s.", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							TogglePlayerControllable(id, 1);
							PlayerTied[id] = 0;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "Nu este legat.");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_YELLOW2, "Nu este vreun player langa tine.");
					    return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			    return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Nu esti mafiot.");
		}
	}
	return 1;
}
CMD:cc(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			for( new j = 0; j <= 500; j++)
			{
				SendClientMessageToAll(COLOR_WHITE, "");
			}
			new sendername[25],string[100];
			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string,sizeof(string),"Admin %s wyczyscil chat.",sendername);
			SendAdminMessage(COLOR_LOGS,string,1);
			return 1;
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}

CMD:szeptucho(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		new string[128],id,mess[250],giveplayer[25],sendername[25];
        if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Musisz miec 2 level aby uzywac szeptu na ucho.");
        if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		if(sscanf(params, "us[250]",id,mess)) return SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/szeptucho <id/nazwa> <wiadomosc>");
		if (IsPlayerConnected(id))
		{
		    if(id != INVALID_PLAYER_ID)
		    {
				if(GetDistanceBetweenPlayers(playerid,id) > 5) return SCM(playerid,COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
				if(Spectate[id] != 255) return SCM(playerid,COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
			    if(HidePM[id] > 0) return 1;
				if(id == playerid) return 1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "%s szepta Ci na ucho: %s", sendername, mess);
				SendClientMessage(id, COLOR_PURPLE, string);
				format(string, sizeof(string), "Szeptasz do %s: %s", giveplayer, mess);
				SendClientMessage(playerid,  COLOR_PURPLE, string);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
	}
	return 1;
}


CMD:l(playerid, params[])
{
	new string[256];
	new sendername[MAX_PLAYER_NAME];

    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(isnull(params))
		{
			SendClientMessage(playerid,COLOR_GREY, "Uzyj /(l)ocal [tekst]");
			return 1;
		}
        if(strlen(params) < 78)
        {
            format(string, sizeof(string), "%s mówi: %s", Nick(playerid), params);
            ProxDetector(10.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
            SetPlayerChatBubble(playerid,params,COLOR_FADE1,10.0,8000);
        }
        else
        {
            new pos = strfind(params, " ", true, strlen(params) / 2);
            if(pos != -1)
            {
                new text2[64];

                strmid(text2, params, pos + 1, strlen(params));
                strdel(params, pos, strlen(params));

                format(string, sizeof(string), "%s mówi: %s [.]", Nick(playerid), params);
                ProxDetector(13.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);

                format(string, sizeof(string), "[.] %s", text2);
                ProxDetector(13.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
            }
        }
		format(string, sizeof(string), "mówi: %s", params);
		SetPlayerChatBubble(playerid,string,COLOR_FADE1,20.0,8000);
	}
	return 1;
}


CMD:s(playerid, params[])
{
	return cmd_szept(playerid, params);
}

CMD:szept(playerid, params[])
{
	new string[256];
	new sendername[MAX_PLAYER_NAME];

    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(isnull(params))
		{
			SendClientMessage(playerid, COLOR_GREY, "Uzyj /(s)zept [tekst]");
			return 1;
		}
		/*format(string, sizeof(string), "%s Szepcze: %s", sendername, params);
		ProxDetector(5.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		printf("%s", string); */
        if(strlen(params) < 78)
        {
            format(string, sizeof(string), "%s szepcze: %s", GetName(playerid), params);
            ProxDetector(5.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        }
        else
        {
            new pos = strfind(params, " ", true, strlen(params) / 2);
            if(pos != -1)
            {
                new text[64];

                strmid(text, params, pos + 1, strlen(params));
                strdel(params, pos, strlen(params));

                format(string, sizeof(string), "%s szepcze: %s", GetName(playerid), params);
                ProxDetector(5.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
                
                format(string, sizeof(string), "[.] %s", text);
                ProxDetector(5.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            }
        }
		//Text 3 D
		format(string, sizeof(string), "Szepcze: %s", params);
        printf("%s", string);
		//SetPlayerChatBubble(playerid,string,COLOR_FADE1,5.0,8000);
	}
	return 1;
}

stock GetFactionName(fid) {
new string[100];
	if(fid == 0) {
	format(string, sizeof(string), "Cywil");
	return string;
	} else {
	format(string, sizeof(string), "%s", DynamicFactions[fid][fName]);
	return string;
	}
}

stock GetStatusFactionName(fid) {
	new string[256];
	switch(fid) {
	    case 1: string = "LSPD";
	    case 2: string = "FBI";
	    case 3: string = "LSCSD";
	    case 7: string = "GOV";
	    case 9: string = "San News";
	    case 14: string = "LSMC";
	}
	return string;
}

stock GetJobName(jid) {
new string[100];
	if(jid == 0) {
	format(string, sizeof(string), "Brak");
	return string;
	} else {
	format(string, sizeof(string), "%s", JobInfo[jid][jName]);
	return string;
	}
}

stock GetNeedPointsR(playerid) {
	new points;
	new x = PlayerInfo[playerid][pMember];
	switch(PlayerInfo[playerid][pRank]) {
	    case 1: points = FactionInfo[x][fRank1];
	    case 2: points = FactionInfo[x][fRank2];
	    case 3: points = FactionInfo[x][fRank3];
	    case 4: points = FactionInfo[x][fRank4];
	    case 5: points = FactionInfo[x][fRank5];
	    case 6: points = FactionInfo[x][fRank6];
	}
	return points;
}

stock GetNeedPointsR2(rank, faction) {
	new points;
	new x = faction;
	switch(rank) {
	    case 1: points = FactionInfo[x][fRank1];
	    case 2: points = FactionInfo[x][fRank2];
	    case 3: points = FactionInfo[x][fRank3];
	    case 4: points = FactionInfo[x][fRank4];
	    case 5: points = FactionInfo[x][fRank5];
	    case 6: points = FactionInfo[x][fRank6];
	}
	return points;
}

stock GetNeedPoints2(playerid) {
	new points;
	new x = PlayerInfo[playerid][pMember];
	switch(PlayerInfo[playerid][pRank]) {
	    case 1: points = FactionInfo[x][fRank1];
	    case 2: points = FactionInfo[x][fRank2];
	    case 3: points = FactionInfo[x][fRank3];
	    case 4: points = FactionInfo[x][fRank4];
	    case 5: points = FactionInfo[x][fRank5];
	    case 6: points = FactionInfo[x][fRank6];
	}
	return points-PlayerInfo[playerid][pCommands];
}

CMD:setleader(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			new para1,level,string[256],giveplayer[25],sendername[25];
	     	if(sscanf(params, "ui",para1,level))
	    	{
		     	SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/setleader <id/nazwa> <Number(1-12)>");
				SendClientMessage(playerid, COLOR_WHITE, "(1) Los Santos Police Departament (2) FBI (3) Natonial Guard (4) Grove Street");
				SendClientMessage(playerid, COLOR_WHITE, "(5) Ballas (6) The Russian Mafia (7) ID INVALID (8) Tow Truck Company");
				SendClientMessage(playerid, COLOR_WHITE, "(9) News Reporter (10) The Rifa (11) Hitman Agency (12) School Instruktors");
				SendClientMessage(playerid, COLOR_WHITE, "(13) Taxi (14) Paramedic");
				return 1;
			}
			if(level == 7) return SCM(playerid, COLOR_GREY, "Nie ma takiej frakcji");
			if(level > 14 || level < 0) return SendClientMessage(playerid, COLOR_GREY, "Numery od 1 do 14");
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
		            if(PlayerInfo[para1][pMember] > 0 && PlayerInfo[para1][pLeader] > 0) return SendClientMessage(playerid,COLOR_GREY, "Gracz jest juz we frakcji.");
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new ftext[50];
					if(level == 1) { ftext = "LSPD"; } //Police Force
					else if(level == 2) { ftext = "F.B.I"; } //FBI
					else if(level == 3) { ftext = "Natonial Guard"; } //Natonial Guard
					else if(level == 4) { ftext = "Grove Street"; } //Grove Street
					else if(level == 5) { ftext = "Ballas"; } //Ballas
					else if(level == 6) { ftext = "The Russian Mafia"; } //Los Santos Family
					else if(level == 7) { ftext = "Government"; } //Government
					else if(level == 8) { ftext = "Tow Truck Company"; } //Tow Car Company
					else if(level == 9) { ftext = "News Reporter"; } //News Reporter
					else if(level == 10) { ftext = "The Rifa"; } //News Reporter
                    else if(level == 11) { ftext = "Hitman Agency"; } //Hitman Agency
                    else if(level == 12) { ftext = "School Instruktors"; } //School Instruktors
                    else if(level == 13) { ftext = "Taxi"; } //Taxi
                    else if(level == 14) { ftext = "Paramedic"; } //Paramedic
					PlayerInfo[para1][pMember] = level;
					PlayerInfo[para1][pLeader] = level;
					format(string, sizeof(string), "Admin %s mianowal Cie liderem frakcji %s.", sendername,ftext);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "Dales %s lidera frakcji %s.", giveplayer,ftext);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "Admin %s mianowal liderem frakcji %s gracza %s", sendername, ftext, giveplayer);
					AdminLog("/logs/leader.log", string);
					/*if(level == 0) { PlayerInfo[para1][pChar] = 0; }
					else if(level == 1) { PlayerInfo[para1][pChar] = 265; } //Police Force
					else if(level == 2) { PlayerInfo[para1][pChar] = 295; } //FBI
					else if(level == 3) { PlayerInfo[para1][pChar] = 287; } //Natonial Guard
					else if(level == 4) { PlayerInfo[para1][pChar] = 270; } //Triad
					else if(level == 5) { PlayerInfo[para1][pChar] = 104; } //Ballas
					else if(level == 6) { PlayerInfo[para1][pChar] = 112; } //The Russian Mafia
					else if(level == 7) { PlayerInfo[para1][pChar] = 228; } //Government
					else if(level == 8) { PlayerInfo[para1][pChar] = 59; } //Tow Car Company
					else if(level == 9) { PlayerInfo[para1][pChar] = 147; } //News Reporter
					else if(level == 10) { PlayerInfo[para1][pChar] = 173; } //The Rifa
                    else if(level == 11) { PlayerInfo[para1][pChar] = 294; } //Hitman Agency
                    else if(level == 12) { PlayerInfo[para1][pChar] = 171; } //School Instruktors
                    else if(level == 13) { PlayerInfo[para1][pChar] = 61; } //Taxi
                    else if(level == 14) { PlayerInfo[para1][pChar] = 119; } //Paramedic*/
					if(level == 0)
					{
					    gTeam[para1] = 3;
				    	PlayerInfo[para1][pTeam] = 3;
					}
					else if(level == 1 || level == 2 || level == 3 || level == 7)
					{
					    gTeam[para1] = 2;
				    	PlayerInfo[para1][pTeam] = 2;
					}
					else if(level == 4 || level == 5 || level == 6 || level == 10)
					{
					    gTeam[para1] = 5;
				    	PlayerInfo[para1][pTeam] = 5;
					}
					else if(level == 9 || level == 8 || level == 12 || level == 13 || level == 14)
					{
					    gTeam[para1] = 4;
				    	PlayerInfo[para1][pTeam] = 4;
					}
					else if(level == 11)
					{
					    gTeam[para1] = 11;
				    	PlayerInfo[para1][pTeam] = 11;
					}
				    //SetPlayerSkinEx(para1, PlayerInfo[para1][pChar]);
                    PlayerInfo[para1][pRank] = 7;
					new str[356];
					format(str,356,"UPDATE users SET `Leader`='%d',`Member`='%d',`Rank`='7',`Team`='%d' WHERE `ID`='%d'",PlayerInfo[para1][pLeader],PlayerInfo[para1][pMember],PlayerInfo[para1][pTeam],PlayerInfo[para1][pSQLID]);
					mysql_query(SQL,str);
				}
			}
     		else
    		{
                SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
    		}
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}

CMD:towpoints(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pMember] != 8) return SendClientMessage(playerid,COLOR_GREY, "Nu esti membrul factiunii TTC.");
		new string[128];
		format(string,sizeof(string),"{FFFFCC}Ai %d puncte.",PlayerInfo[playerid][pTow]);
		SCM(playerid,COLOR_WHITE,string);
	}
	return 1;
}
CMD:tow(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
	    {
	        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	        {
	            new m = GetVehicleModel(GetPlayerVehicleID(playerid));
		    	if (m == 525)
	     	   	{
	     	   	    if(GetPlayerState(playerid)==2)
	     	   	    {
						if(PlayerInfo[playerid][pTow] == 0) return SCM(playerid,COLOR_GREY, "Nu ai puncte de tractare.");
						new Float:pX,Float:pY,Float:pZ;
						GetPlayerPos(playerid,pX,pY,pZ);
						new Float:vX,Float:vY,Float:vZ;
						new Found=0;
						new vid=0;
						while((vid<MAX_VEHICLES)&&(!Found))
						{
		   					vid++;
		   					GetVehiclePos(vid,vX,vY,vZ);
		   					if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
							{
								if(IsABike(vid) || GetVehicleModel(vid) == 448 || GetVehicleModel(vid) == 461 || GetVehicleModel(vid) == 462 || GetVehicleModel(vid) == 463 || GetVehicleModel(vid) == 468 || GetVehicleModel(vid) == 471 || GetVehicleModel(vid) == 521 || GetVehicleModel(vid) == 522 || GetVehicleModel(vid) == 523)
								{
		 							SCM(playerid,COLOR_GREY, "Alege alt vehicul.");
								    return 1;
								}
							    Found=1;
		   				    	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
		           				{
		   				        	DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
                     				DisablePlayerCheckpoint(playerid);
                                    gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
						       	}
					           	else
					           	{
		    						AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
	                				new rand;
									rand = random(sizeof(TowCarCk));
						 		    SetPlayerCheckpointEx(playerid, TowCarCk[rand][0],TowCarCk[rand][1],TowCarCk[rand][2], 6);
                         			CP[playerid] = 34;
								}
		 					}
		     			}
						if(!Found) return SendClientMessage(playerid,COLOR_GREY, "Nu sunt vehicule in jurul tau.");
					}
					else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste kierowca.");
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Nu esti in vehiculul factiunii.");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nu esti intr-un vehicul.");
		}
		else return SendClientMessage(playerid,COLOR_GREY, "Nu esti membrul factiunii TTC.");
	}
	return 1;
}

CMD:spawnchange(playerid, params[])
{
	return cmd_spawn(playerid, params);
}
CMD:spawn(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
	ShowPlayerDialog(playerid, 401, DIALOG_STYLE_LIST, "Ustaw spawn", "{FFFFFF}Normalny spawn\n{FFFFFF}Spawn w domu", "Wybierz", "Anuluj");
    }
    return 1;
}

CMD:unfreeze(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 2) return SendClientMessage(playerid, COLOR_WHITE,"Nie masz dostepu do tego polecenia.");
	new id;
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/unfreeze <id/nazwa>");
	if(!IsPlayerConnected(id) || id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	TogglePlayerControllable(id, 1);
	Freezed[id] = 0;
	new string[100];
	format(string, sizeof(string), "* Zostales odmrozony %s.", GetName(playerid));
	SCM(id, -1, string);
	format(string, sizeof(string), "* Odmroziles %s.", GetName(id));
	SCM(playerid, -1, string);	
	return 1;
}

CMD:freeze(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 2) return SendClientMessage(playerid, COLOR_WHITE,"Nie masz dostepu do tego polecenia.");
	new id;
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/freeze <id/nazwa>");
	if(!IsPlayerConnected(id) || id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	TogglePlayerControllable(id, 0);
	Freezed[id] = 1;
	new string[100];
	format(string, sizeof(string), "* Zostales zamrozony %s.", GetName(playerid));
	SCM(id, -1, string);
	format(string, sizeof(string), "* Zamroziles %s.", GetName(id));
	SCM(playerid, -1, string);		
	return 1;
}
CMD:entercar(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 2)
 		{
			new testcar,loc;
			if(sscanf(params, "ii",testcar,loc)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/entercar <carid> <id miejsca>");
			if(loc < 0 || loc > 4) return SendClientMessage(playerid, COLOR_GREY, "Invalid id miejsca(0-4).");
			PutPlayerInVehicleEx(playerid, testcar, loc);
			SendClientMessage(playerid, COLOR_GRAD1, "Zostales teleportowany.");
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}

CMD:getcar(playerid, params[])
{
    if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Musisz sie najpierw zalogowac.");
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
    		new plo;
			if(sscanf(params, "i",plo)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/getcar <carid>");
    		new Float:plocx,Float:plocy,Float:plocz;
			GetPlayerPos(playerid, plocx, plocy, plocz);
			SetVehiclePos(plo,plocx,plocy+4, plocz);
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}
CMD:outcar(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
    		new plo;
			if(sscanf(params, "u",plo)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/outcar <id/nazwa>");
		    if(IsPlayerConnected(plo))
		    {
				RemovePlayerFromVehicleEx(plo);
				return 1;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}

function GetGasStationID(playerid) {
	for(new i = 0; i < sizeof(BizzInfo); i++) {
		if(PlayerToPoint(10.0, playerid, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) && BizzInfo[i][bGas] == 1) {
		    return i;
		}
	}
	return -1;
}

CMD:tankuj(playerid, params[])
{
	new idcar = GetPlayerVehicleID(playerid);
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
	    if(Silnik[idcar] == 0)
        {
	    	if(GetGasStationID(playerid) != -1)
	    	{
                if(Gas[idcar] <= 99)
		        {
                 	TogglePlayerControllable(playerid, 0);
		        	GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Tankowanie...",2000,3);
			    	SetTimerEx("Fillup",RefuelWait,0,"i",playerid);
                    Refueling[playerid] = 1;
		    	}
		    	else
		    	{
			        GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~~n~~n~Zbiornik pelny",2000,3);
		      	}
	    	}
	    	else
		    {
		    	SendClientMessage(playerid,COLOR_GREY,"** Nie jeste na stacji benzynowej.");
	    	}
    	}
    	else
    	{
	    	SendClientMessage(playerid,COLOR_GREY,"** Silnik jest wlaczony, wylacz go.");
    	}
    }
    else
    {
		if(GetGasStationID(playerid) != -1)
		{
		    if(PlayerInfo[playerid][pGasCan] == 0) return SCM(playerid, -1, "Nie masz kanistra!");
			if(PlayerInfo[playerid][pFuel] == 20) return SCM(playerid,COLOR_WHITE,"Kanister jest pelny.");
			new price = 20 * 50;
			new string[64];
			format(string, sizeof(string), "* Napelniles swój kanister o 20% paliwa za $%s.",FormatNumber(price));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			PlayerInfo[playerid][pFuel] = 20;
			BizzInfo[GetGasStationID(playerid)][bBalance] += price;
			GivePlayerCash(playerid, - price);
            new str[178],sendername[25];
            GetPlayerName(playerid,sendername,sizeof(sendername));
	    	format(str,sizeof(str),"UPDATE users SET `Money`='%d',`Fuel`='20' WHERE `ID`='%d'",GetPlayerCash(playerid),PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL,str);
	    	format(str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='13'",BizzInfo[GetGasStationID(playerid)][bBalance]);
			mysql_query(SQL,str);
			return 1;
		}
		else
		{
			SendClientMessage(playerid,COLOR_GREY,"Nie jeste na stacji benzynowej.");
			return 1;
		}
    }
	return 1;
}
/*CMD:karnister(playerid, params[])
{
	new veh = GetPlayerVehicleID(playerid);
	//if(PlayerInfo[playerid][pGasCan] == 0) return SCM(playerid, -1, "Nie masz kanistra!");
    if(IsPlayerConnected(playerid))
    {
	    if(PlayerInfo[playerid][pFuel] > 0)
	    {
	        if(Gas[veh] >= 0)
	        {
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "** Napelniles pojazd z karnistra o 20%.");
		        Gas[veh] += 20;
		        PlayerInfo[playerid][pFuel] = 0;
				new str[128];
				format(str,sizeof(str),"UPDATE users SET `Fuel`='0' WHERE `ID`='%d'",PlayerInfo[playerid][pSQLID]);
				mysql_query(SQL,str);
				TogglePlayerControllable(playerid, 1);
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "Twój pojazd ma paliwo.");
	    }
	    else return SendClientMessage(playerid, COLOR_GREY, "Nie masz kanistra.");
	}
	return 1;
}*/

stock GetPlayerSpeedx(playerid, get3d) // Maurice Speed
{
	new Float:x, Float:y, Float:z;
	if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z);
	else GetPlayerVelocity(playerid, x, y, z);
	return SpeedCheck(x, y, z, 100.0, get3d);
}

CMD:kurs(playerid, params[]) return cmd_fare(playerid, params);
CMD:fare(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pMember] == 13)
		{
			new string[128],sendername[25];
			if(TransportDuty[playerid] > 0)
			{
			    if(TransportDuty[playerid] == 1)
			    {
			        TaxiDrivers -= 1;
			    }
			    TransportDuty[playerid] = 0;
				format(string, sizeof(string), "* Wylaczyles fare i zarobiles $%s.", FormatNumber(TransportMoney[playerid]));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerCash(playerid, TransportMoney[playerid]);
				ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
		    	foreach(Player, i)
				{
					if(TaxiDriver[i] == playerid)
					{
						TaxiDriver[i] = -1;
						TaxiDist[i] = 0.0; TransportMoney[i] = 0;
						for(new j = 0; j <= 2; j++) PlayerTextDrawHide(i, FareTD[j]);
					}
				}
				TaxiDist[playerid] = 0.0;
				for(new j = 0; j <= 2; j++) PlayerTextDrawHide(playerid, FareTD[j]);
				return 1;
			}
			new moneys;
			if(sscanf(params, "d",moneys)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/fare <cena>");
			new Veh = GetPlayerVehicleID(playerid);
			if(IsAnTaxi(Veh) && PlayerInfo[playerid][pMember] == 13)
			{
			if(GetPlayerState(playerid) == 2)
			{
			if(AntySpam[playerid] == 0)
			{
				AntySpam[playerid] = 1;
				SetTimerEx("AntySpamTimer",7000,0,"d",playerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Odczekaj 7 sekund !");
					return 1;
				}
					if(moneys < 1 || moneys > 50) return SendClientMessage(playerid, COLOR_GREY, "Cena od $1 do $50.");
				    TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = moneys;
				    GetPlayerName(playerid,sendername,sizeof(sendername));
    				format(string, sizeof(string), "{00D900}Taksówkarz %s kursuje teraz po Los Santos, cena: $%s.", sendername, FormatNumber(TransportValue[playerid]));
    				OOCNews2(TEAM_GROVE_COLOR,string);
    				TaxiDist[playerid] = 0.0;
					TransportMoney[playerid] = 0;
    				ShowFareForTaxi(playerid);
					AntySpam[playerid] = 1;
					SetTimerEx("AntySpamTimer",7000,0,"d",playerid);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Nie jeste kierowca.");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Nie jeste w taksówce.");
			}
		}
		else
		{
		    SendClientMessage(playerid,COLOR_GREY, "Nie pracujesz w taxi");
		    return 1;
		}
    }
    return 1;
}

function ShowFareForTaxi(playerid) {
	new str[256];
	if(TransportDuty[playerid] == 1) {
		format(str, 256, "Dystans: %.1f Km~n~Taryfa: ~g~%s$~w~~n~Cena: ~g~%s$", TaxiDist[playerid], FormatNumber(TransportValue[playerid]), FormatNumber(TransportMoney[playerid]));
		PlayerTextDrawSetString(playerid, FareTD[2], str);
	}
	else {
		format(str, 256, "Dystans: %.1f Km~n~Taryfa: ~g~%s$~w~~n~Cena: ~g~%s$", TaxiDist[playerid], FormatNumber(TransportValue[TaxiDriver[playerid]]), FormatNumber(TransportMoney[playerid]));
		PlayerTextDrawSetString(playerid, FareTD[2], str);
	}
	for(new j = 0; j <= 2; j++) PlayerTextDrawShow(playerid, FareTD[j]);
	return 1;
}

CMD:givemats(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
	    if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	    new id,mats,giveplayer[25],sendername[25],string[128];
		if(sscanf(params, "ud",id,mats)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/givemats <id/nazwa> <materialy>");
	    if(id != INVALID_PLAYER_ID)
	    {
            PlayerInfo[id][pMats] += mats;
         	GetPlayerName(id, giveplayer, sizeof(giveplayer));
         	GetPlayerName(playerid, sendername, sizeof(sendername));
         	format(string, sizeof(string), "AdmCmd: Admin %s dal %s %d materialów.",sendername, giveplayer,mats);
		 	SendAdminMessage(COLOR_LOGS,string,5);
			new str[128];
			format(str,sizeof(str),"UPDATE users SET `Materials`='%d',`MatSkill`='%d' WHERE `ID`='%d'",PlayerInfo[id][pMats],PlayerInfo[id][pMatSkill],PlayerInfo[id][pSQLID]);
			mysql_query(SQL,str);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	return 1;
}
CMD:agl(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
        if (PlayerInfo[playerid][pAdmin] >= 5)
        {
			new id,x_nr[10],sendername[25],giveplayer[25],string[128], ore;
			if(sscanf(params, "us[10]i",id,x_nr,ore))
			{
				SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/agl <id/nazwa> <License> <Ore>");
			    SendClientMessage(playerid, COLOR_WHITE, "Parametry: prawko, latanie, lodzie, ryby, bron.");
				return 1;
			}
			if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			if(ore < 0) return SCM(playerid, -1, "Zly format czasu");
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    GetPlayerName(id, giveplayer, sizeof(giveplayer));
		    if(strcmp(x_nr,"prawko",true) == 0)
			{
	            format(string, sizeof(string), "* Dales %s prawo jazdy wazne %d godzin.",giveplayer, ore);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "* Admin %s dalo ci prawo jazdy wazne %d godzin.",sendername,ore);
		        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				if(ore == 0) PlayerInfo[id][pCarLic] = 0;
		        else PlayerInfo[id][pCarLic] = 1;					
		        PlayerInfo[id][pCarLicT]  = ore;
				new str[128];
				format(str,128,"UPDATE users SET `CarLic`='%d',`CarLicT`='%d' WHERE `ID`='%d'",PlayerInfo[id][pCarLicT],ore,PlayerInfo[id][pSQLID]);
				mysql_query(SQL,str);
		        return 1;
			}
			else if(strcmp(x_nr,"latanie",true) == 0)
			{
	            format(string, sizeof(string), "* Dales %s licencje na lot wazna %d godzin.",giveplayer, ore);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "* Admin %s dal ci licencje na latanie wazna %d godzin.",sendername,ore);
		        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				if(ore == 0) PlayerInfo[id][pFlyLic] = 0;
		        else PlayerInfo[id][pFlyLic] = 1;					
		        PlayerInfo[id][pFlyLicT]  = ore;
				new str[128];
				format(str,128,"UPDATE users SET `FlyLic`='%d',`FlyLicT`='%d' WHERE `ID`='%d'",PlayerInfo[id][pFlyLicT],ore,PlayerInfo[id][pSQLID]);
				mysql_query(SQL,str);
		        return 1;
			}
			else if(strcmp(x_nr,"lodzie",true) == 0)
			{
	            format(string, sizeof(string), "* Dales %s licencje na lodzie wazna %d godzin.",giveplayer, ore);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "* Admin %s dal ci licencje na lodzie wazna %d godzin.",sendername,ore);
		        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				if(ore == 0) PlayerInfo[id][pBoatLic] = 0;
		        else PlayerInfo[id][pBoatLic] = 1;				
		        PlayerInfo[id][pBoatLicT]  = ore;				
				new str[128];
				format(str,128,"UPDATE users SET `BoatLic`='%d',`BoatLicT`='%d' WHERE `ID`='%d'",PlayerInfo[id][pBoatLicT],ore,PlayerInfo[id][pSQLID]);
				mysql_query(SQL,str);
		        return 1;
			}
			else if(strcmp(x_nr,"ryby",true) == 0)
			{
	            format(string, sizeof(string), "* Dales %s licencje na lowienie wazna %d godzin.",giveplayer, ore);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "* Admin %s dal ci licencje na lowienie wazna %d godzin.",sendername,ore);
		        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				if(ore == 0) PlayerInfo[id][pFishLic] = 0;
		        else PlayerInfo[id][pFishLic] = 1;
		        PlayerInfo[id][pFishLicT]  = ore;
				new str[128];
				format(str,128,"UPDATE users SET `FishLic`='%d',`FishLicT`='%d' WHERE `ID`='%d'",PlayerInfo[id][pFishLicT],ore,PlayerInfo[id][pSQLID]);
				mysql_query(SQL,str);
		        return 1;
			}
			else if(strcmp(x_nr,"bron",true) == 0)
			{
	            format(string, sizeof(string), "* Dales %s licencje na bron wazna %d godzin.",giveplayer, ore);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "* Admin %s dal ci licencje na bron wazna %d godzin.",sendername,ore);
		        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				if(ore == 0) PlayerInfo[id][pGunLic] = 0;
		        else PlayerInfo[id][pGunLic] = 1;				
		        PlayerInfo[id][pGunLicT]  = ore;
				new str[128];
				format(str,128,"UPDATE users SET `GunLic`='%d',`GunLicT`='%d' WHERE `ID`='%d'",PlayerInfo[id][pGunLicT],ore,PlayerInfo[id][pSQLID]);
				mysql_query(SQL,str);
		        return 1;
			}
        }
        else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
    }
    return 1;
}
CMD:carcolortemp(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	new color1,color2;
	if(sscanf(params, "ii",color1,color2)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/carcolortemp <Kolor 1> <Kolor 2>");
    if(color1 < 0 || color1 > 255) return SendClientMessage(playerid, COLOR_GREY, "Zle id koloru.");
    if(color2 < 0 || color2 > 255) return SendClientMessage(playerid, COLOR_GREY, "Zle id koloru.");
    new vehid = GetPlayerVehicleID(playerid);
    if(IsPlayerInVehicle(playerid, vehid))
    {
        ChangeVehicleColor(vehid, color1, color2);
		return 1;
    }
    else
    {
		SendClientMessage(playerid, COLOR_GREY, "Nie jeste w samochodzie.");
	}
    return 1;
}
CMD:o(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GREY, "Kanal OOC zostal wylaczony przez administratora.");
		new text[250],string[250],sendername[25];
		if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		if(sscanf(params, "s[250]",text)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/o <wiadomosc>");
		GetPlayerName(playerid,sendername,sizeof(sendername));
		format(string, sizeof(string), "(( %s napisal OOC: %s ))", sendername, text);
		OOCOff(COLOR_WHITE,string);
		printf("%s", string);
	}
	return 1;
}

CMD:kontrakt(playerid, params[]) {
	new userID, money, szMessage[180];
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_RED, "Nie jeste zalogowany!");
	if(sscanf(params, "ui", userID, money)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/kontrakt <id/nazwa> <money>");
	if(!IsPlayerConnected(userID) && userID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	if(money < 100 || money > 2000) return SendClientMessage(playerid, COLOR_GREY, "Mozesz zlozyc kontrakt za minimum 100 $ lub maksymalnie 2000 $.");
	if(GetPlayerCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "Nie masz takiej ilosci pieniedzy!");
	if(userID == playerid) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz podpisac kontraktu!");
	if(PlayerInfo[userID][pMember] == 11 || PlayerInfo[userID][pLeader] == 11) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz podpisac kontraktu na Hitmana!");
	if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzyc tego polecenia, poniewaz  Jestes Hitmanem.");	
	if(PlayerInfo[userID][pAdmin] != 0) return SCM(playerid, -1, "Ten gracz jest administratorem.");
	GivePlayerCash(playerid, -money);
	Contract[userID] = 1;
	if(Contract[userID] == 1) HeadValue[userID] += money;
	else HeadValue[userID] = money;
	UsedContract[userID] = 0;
	format(szMessage, sizeof(szMessage), "Podpisales kontrakt na %s na kwote $%s.", GetName(userID), FormatNumber(money));
	SendClientMessage(playerid, COLOR_WHITE, szMessage);
	format(szMessage, sizeof(szMessage), "* Nowy kontrakt jest teraz dostepny za $%s.", FormatNumber(money));
	SendFactionMessage(11, COLOR_LIGHTBLUE, szMessage);
	return 1;
}

CMD:fightstyle(playerid,params[])
{
    if(PlayerToPoint(5.0, playerid,757.6704,5.5662,1000.7017))//Gym Ls
    {
    	ShowPlayerDialog(playerid,Dialog_Gym,DIALOG_STYLE_LIST,"Wybierz","Boxing $1,000\nKungfu $1,500\nElbow $800\nGrabkick $500\nKneehead $600","Wybierz","Anuluj");
	    return 1;
    }
    else
    {
        SendClientMessage(playerid, COLOR_GREY, "Nie jeste w Gym.");
    }
    return 1;
}

CMD:pay(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		new giveplayerid,id,moneys,sendername[25],giveplayer[25],string[256];
		if(sscanf(params, "ui",id,moneys)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/pay <id/nazwa> <ilosc>");
		if(moneys > 1000 && PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Potrzebujesz poziomu 3 by dac wiecej niz $1000.");
		if(moneys < 1 || moneys > 1000) return SendClientMessage(playerid, COLOR_GREY, "Kwoty od 1$ do 1000$.");
		if(id == playerid) return SCM(playerid,COLOR_GREY, "Nie mozesz dac mu pieniedzy.");
	    if(id != INVALID_PLAYER_ID)
	    {
			if (ProxDetectorS(5.0, playerid, id))
			{
			    
				if(Spectate[id] != 255) return SCM(playerid,COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new playermoney;
				playermoney = GetPlayerCash(playerid);
				if (moneys > 0 && playermoney >= moneys)
				{
					GivePlayerCash(playerid, -moneys);
					GivePlayerCash(id, moneys);
					format(string, sizeof(string), "Dales $%d graczowi %s [ID: %d]", moneys,giveplayer,giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "Otrzymales $%d od %s [ID: %d]", moneys, sendername, playerid);
					SendClientMessage(id, COLOR_GRAD1, string);
					format(string, sizeof(string), "Gracz %s przekazal graczowi %s = %d$", playerid, sendername, moneys);
					AdminLog("/logs/pay.log", string);
					PlayerPlaySound(id, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "* %s wyciaga pieniadze i daje je %s.", sendername ,giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					Update(id, pCashx);
					Update(playerid, pCashx);
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Nieprawidlowa transakcja.");
			}
			else return SendClientMessage(playerid, COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	return 1;
}

CMD:numer(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		new id,string[128],sendername[25];
		if(sscanf(params, "u",id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/numer <id/nazwa>");
	    if(id != INVALID_PLAYER_ID)
	    {
			GetPlayerName(id, sendername, sizeof(sendername));
			format(string, 256, "Dane: %s, Numer telefonu: %d",sendername,PlayerInfo[id][pPnumber]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	return 1;
}

CMD:togooc(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (!gOoc[playerid])
		{
			gOoc[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD1, "Dezaktywacja.");
		}
		else if (gOoc[playerid])
		{
			gOoc[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD1, "Aktywacja.");
		}
	}
	return 1;
}
CMD:tognews(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (!gNews[playerid])
		{
			gNews[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD1, "Dezaktywacja.");
		}
		else if (gNews[playerid])
		{
			gNews[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD1, "Aktywacja.");
		}
	}
	return 1;
}
CMD:togfam(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (!gFam[playerid])
		{
			gFam[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD1, "Dezaktywacja.");
		}
		else if (gFam[playerid])
		{
			gFam[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD1, "Aktywacja.");
		}
	}
	return 1;
}
CMD:togwhisper(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pPremiumAccount] == 1 || PlayerInfo[playerid][pAdmin] >= 1)
        {
			if (!HidePM[playerid])
			{
				HidePM[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD1, "Dezaktywacja.");
			}
			else if (HidePM[playerid])
			{
				HidePM[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD1, "Aktywacja.");
			}
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Nu esti admin sau nu ai cont premium.");
	}
	return 1;
}

CMD:dice(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		new string[128];
		new dice = random(6)+1;
		if (gDice[playerid] == 1)
		{
			new sendername[25];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s a dat cu zarul %d.", sendername,dice);
			ProxDetector(5.0, playerid, string, TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Nu ai zaruri.");
	}
	return 1;
}

CMD:changepass(playerid,params[])
{
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Musisz sie najpierw zalogowac.");
		ShowPlayerDialog(playerid, DIALOG_NEWPASS,DIALOG_STYLE_INPUT, "SERVER: Change Password","Type your current password bellow!","Zmien","Anuluj");
		return 1;
	}
	return 1;
}

/*/CMD:changeemail(playerid,params[])
{
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Musisz sie najpierw zalogowac.");
		ShowPlayerDialog(playerid, DIALOG_NEWEMAIL,DIALOG_STYLE_INPUT, "SERVER: Change Email","Type your current email bellow!","Zmien","Anuluj"); wylaczone
		return 1;
	}
	return 1;
}*/
CMD:me(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
        if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste zalogowany.");
		new string[250],result[250];
        if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/me <wiadomosc>");
		format(string, sizeof(string), "* %s %s.", Nick(playerid), result);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		printf("%s", string);
	}
	return 1;
}

CMD:do(playerid, params[])
{
    if(isnull(params))
    {
        SendClientMessage(playerid, COLOR_GREY, "Uzyj /do [opis sytuacji]");
        return 1;
    }
    new string[256];
    
    if(strlen(params) < 78)
    {
        //format(string, sizeof(string), "* %s %s", GetNick(playerid, true), params);
        format(string, sizeof(string), "* %s (( %s ))", params, Nick(playerid));
        ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
    else
    {
        new pos = strfind(params, " ", true, strlen(params) / 2);
        if(pos != -1)
        {
            new text[64];

            strmid(text, params, pos + 1, strlen(params));
            strdel(params, pos, strlen(params));

            format(string, sizeof(string), "* %s [.]", params);
            ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

            format(string, sizeof(string), "[.] %s (( %s ))", text, Nick(playerid));
            ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
    }
    return 1;
}

CMD:ogloszenie(playerid, params[])
{
    return cmd_og(playerid, params);
}

CMD:og(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
        if(AdTimer[playerid] != 0) return 1;
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_GREY, "Nie mo¿esz przebywaæ w pojedzie!");
		new string[264],sendername[25],idx;
        if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
	    if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Nie posiadasz 3-go levela.");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(params);
		while ((idx < length) && (params[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[264];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = params[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		for(new s = 0; s < num_words; s++)
		{
			new pos;
			while((pos = strfind(result,Swears[s],true)) != -1) for(new i = pos, j = pos + strlen(Swears[s]); i < j; i++)
			{
				result[i] = '*';
			}
		}
		if(PlayerToPoint(10.0, playerid, 1169.8079,-1489.7686,22.7560)) {
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/og <treæ>");
			new payout = 100;
			if(GetPlayerCash(playerid) < payout) {
	            format(string, sizeof(string), "* U¿y³e %d znaków co kosztuje $%s, nie masz tyle pieniêdzy.", offset, FormatNumber(payout));
	            SendClientMessage(playerid, COLOR_WHITE, string);
	            return 1;
	        }
			GivePlayerCash(playerid, - payout);
			format(string, sizeof(string), "~r~Zaplaciles $%d~n~~w~za ogloszenie z %d znakami", payout, idx);
			GameTextForPlayer(playerid, string, 5000, 5);
			totalads ++;
			format(string, sizeof(string), "Podglad ogloszenia %s ({FFFFFF}%d{A1FF26}): %s", GetName(playerid), playerid, result);
			SendStaffMessage(0xA1FF26FF, string);			
			format(AdText[playerid], 256, result);
			AdTimer[playerid] = totalads*30;
			SetTimerEx("Advertisment", totalads*30000, 0, "d", playerid);
			format(string, 256, "Og³oszenie wywietli siê za %d minut i %d sekund.", AdTimer[playerid]/60, AdTimer[playerid]);
			SCM(playerid, COLOR_GREY, string);
			BizzInfo[7][bBalance] += payout;
			BizzInfo[7][bProducts]--;
			new str[128];
			format(str,128,"UPDATE bizz SET `Till`='%d',`Products`='%d' WHERE `ID`='7'",BizzInfo[7][bBalance],BizzInfo[7][bProducts]);
			mysql_query(SQL,str);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Nie znajdujesz sie przy CNN");
	}
	return 1;
}

function SendStaffMessage(color, text[]) {
	foreach(Player, i) {
		if(PlayerInfo[i][pHelper] >= 1 || PlayerInfo[i][pAdmin] >= 1) MesajLung(i, color, text);
	}
	return 1;
}


CMD:usunog(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	new id, reason[120], string[180];
	if(sscanf(params, "us[120]", id, reason)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/usunog <id/nazwa> <reason>");
	if(AdTimer[id] == 0) return SendClientMessage(playerid,COLOR_WHITE, "Ten gracz nie ma ogloszenia");
	format(string, sizeof(string), "SYSTEM: %s usunal ogloszenie gracza %s, Powód: %s", GetName(playerid), GetName(id), reason);
	SendStaffMessage(COLOR_LIGHTRED, string);
	format(string, sizeof(string), "Twoje ogloszenie zostalo usuniete przez admina %s, Powód: %s", GetName(playerid), reason);
	SCM(id, COLOR_YELLOW, string);
	AdTimer[id] = 0;
	AdText[id] = "";
	return 1;
}

CMD:anulujog(playerid, params[]) {
	if(AdTimer[playerid] == 0) return SendClientMessage(playerid,COLOR_GREY, "Nie masz ogloszenia. ");
	AdText[playerid] = "";
	AdTimer[playerid] = 0;	
	SendClientMessage(playerid, COLOR_GREY, "Anulowa³e swoje og³oszenie!");
	return 1;
}

function OdpalLogowanie(playerid) {
	if(IsPlayerLogged[playerid] == 1)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPosEx(playerid, -1976.5912,166.1818,36.9623);
		SetPlayerFacingAngle(playerid, 272.6393);
		SetPlayerCameraPos(playerid,-1976.5912 + 3, 166.1818,36.9623);
		SetPlayerCameraLookAt(playerid,-1976.5912,166.1818,36.9623);
		TogglePlayerControllable(playerid, 0);
		if(PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] == 0)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPosEx(playerid, -1976.5912,166.1818,36.9623);
			SetPlayerFacingAngle(playerid, 272.6393);
			SetPlayerCameraPos(playerid,-1976.5912 + 3, 166.1818,36.9623);
			SetPlayerCameraLookAt(playerid,-1976.5912,166.1818,36.9623);
			TogglePlayerControllable(playerid, 0);
		    //PlayerInfo[playerid][pModel] = Peds[classid][0];
			new rand = random(10);
		    SetPlayerVirtualWorld(playerid, rand);
		}
	}
	if (RegistrationStep[playerid] == 0 && IsPlayerLogged[playerid] != 1)
	{
		SetPlayerFacingAngle(playerid, 3.41);
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
		//SetTimerEx("Camera", 500, 0, "d", playerid);
		if (gPlayerAccount[playerid] != 0)
		{
			new loginstring[320];
			new loginname[64];
			GetPlayerName(playerid,loginname,sizeof(loginname));
			new laston[64];
			new field[128];
			GetPlayerName(playerid,loginname,sizeof(loginname));
			format(field,128,"SELECT `lastOn`  FROM users WHERE `name`='%s'",loginname);
			mysql_query(SQL,field);
			mysql_store_result();
			if(mysql_retrieve_row())
			{
				mysql_fetch_field_row(laston, "lastOn");
			}
			mysql_free_result();
			SCM(playerid, COLOR_CLIENT, "SERVER: {FFFFFF}Witaj na Foxy-RP.");
			SCM(playerid, COLOR_CLIENT, "SERVER: {FFFFFF}Jestes zarejestrowany, wpisz swoje haslo.");			
			format(loginstring,sizeof(loginstring),"Witamy ponownie, %s!\n Prosze wprowadzic haslo do konta. \n Ostatnie logowania: %s",loginname,laston);
			ShowPlayerDialog(playerid,DIALOG_LOGIN2,DIALOG_STYLE_PASSWORD,"SERVER: Logowanie",loginstring,"Ok","Anuluj");
		}
		else
		{
			gPlayerAccount[playerid] = 0;
 			new regstring[200];
			new regname[64];
			GetPlayerName(playerid,regname,sizeof(regname));
			SCM(playerid, COLOR_CLIENT, "SERVER: {FFFFFF}Witaj na Foxy-RP.");
			SCM(playerid, COLOR_CLIENT, "SERVER: {FFFFFF}Nie jeste zarejestrowany, wpisz swoje haslo!");
			format(regstring,sizeof(regstring),"Witamy ponownie, %s!\nNie masz konta.\nWprowadz haslo, aby móc sie zarejestrowac.",regname);
			ShowPlayerDialog(playerid,DIALOG_LOGIN1,DIALOG_STYLE_PASSWORD,"SERVER: Rejestracja",regstring,"Ok","Anuluj");
		}
		login[playerid] = SetTimerEx("Logink",30000,false,"d",playerid);
	}
	return 1;
}

stock MesajLung(playerid, color, text[]) {
	new string[300], szText1[180], szText2[180];
	if(strlen(text) > 100) {
		strmid(szText1, text, 100, 256);
		strmid(szText2, text, 0, 100);
		format(string, sizeof(string), "%s", szText2);
		SendClientMessage(playerid, color, string);
		format(string, sizeof(string), "... %s", szText1);
		SendClientMessage(playerid, color, string);
	}
	else SendClientMessage(playerid, color, text);
	return 1;
}

stock MesajLung2(color, text[]) {
	new string[300], szText1[180], szText2[180];
	if(strlen(text) > 100) {
		strmid(szText1, text, 100, 256);
		strmid(szText2, text, 0, 100);
		format(string, sizeof(string), "%s", szText2);
		SendClientMessageToAll(color, string);
		format(string, sizeof(string), "... %s", szText1);
		SendClientMessageToAll(color, string);
	}
	else SendClientMessageToAll(color, text);

	return 1;
}

function Advertisment(playerid) {
	if(IsPlayerConnected(playerid) && !isnull(AdText[playerid])) {
	    new string[256];
		format(string, 256, "Og³oszenie: %s (telefon: %d): %s",GetName(playerid),PlayerInfo[playerid][pPnumber],AdText[playerid]);
		MesajLung2(0x00FF00FF, string);
		totalads --;
		AdTimer[playerid] = 0;
	}
	return 1;
}

CMD:b(playerid, params[])
{
	new string[256];
	new sendername[MAX_PLAYER_NAME];

    if(IsPlayerConnected(playerid))
    {
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(isnull(params))
		{
			SendClientMessage(playerid, COLOR_GREY, "Uzyj /b [czat ooc]");
			return 1;
		}
		//format(string, sizeof(string), "%s [%d] Czat OOC: (( %s ))", sendername, playerid, params);
		//ProxDetector(25.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		
		//Text 3 D
        if(strlen(params) < 78)
        {
			if(PlayerInfo[playerid][pAdminDuty] == 1)
        	{
        		format(string, sizeof(string), "%s [%d] Czat OOC: (( %s ))", PlayerInfo[playerid][pOOCName], playerid, params);
           	 	ProxDetector(25.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        	} else {
            format(string, sizeof(string), "%s [%d] Czat OOC: (( %s ))", GetName(playerid), playerid, params);
            ProxDetector(25.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			}
        }
        else
        {
            new pos = strfind(params, " ", true, strlen(params) / 2);
            if(pos != -1)
            {
                new text[64];

                strmid(text, params, pos + 1, strlen(params));
                strdel(params, pos, strlen(params));

                //format(string, sizeof(string), "%s szepcze: %s", GetNick(playerid, true), params);
                //ProxDetector(5.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
                format(string, sizeof(string), "%s [%d] Czat OOC: (( %s [.]", GetName(playerid), playerid, params);
                ProxDetector(25.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
                //format(string, sizeof(string), "[.] %s", text);
                //ProxDetector(5.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
                format(string, sizeof(string), "[.] %s ))", text);
                ProxDetector(25.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            }
        }
	    format(string, sizeof(string), "(( %s Napisal: %s ))", GetName(playerid), params);
        printf("%s", string);
		SetPlayerChatBubble(playerid,string,COLOR_FADE1,25.0,8000);
	}
	return 1;
}

CMD:krzyk(playerid, params[])
{
    return cmd_k(playerid, params);
}
CMD:k(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
        if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste zalogowany.");
		new string[250],result[250],sendername[25];
	    if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/k(rzyk) <wiadomosc>");
		format(string, sizeof(string), "%s krzyczy: %s", sendername, result);
		ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		printf("%s", string);
	}
	return 1;
}

CMD:sethirecar(playerid,params[])
{
    if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			new car,string[64];
			if(sscanf(params, "d",car)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/hirecar <carid>");
			HireCar[playerid] = car;
			format(string, sizeof(string), "Vehicul setat %d.",car);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			SendClientMessage(playerid, COLOR_WHITE, "HINT: Scrie /lock.");
			return 1;
		}
	}
	return 1;
}

CMD:unrentroom(playerid,params[])
{
    if(IsPlayerConnected(playerid))
	{
		new playername[25];
		GetPlayerName(playerid, playername, sizeof(playername));
		if(PlayerInfo[playerid][pHouse] != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0) return SendClientMessage(playerid, COLOR_WHITE, "Detii o casa.");
		if(PlayerInfo[playerid][pRented] == -1) return SCM(playerid, COLOR_GREY, "Nu ai chirie.");
		PlayerInfo[playerid][pHouse] = 999;
		PlayerInfo[playerid][pRented] = -1;
		SendClientMessage(playerid, COLOR_WHITE, "{B8FFDB}Nu mai ai chirie.");
		Update(playerid,pCashx);
		Update(playerid,pHousex);
		Update(playerid,pRentedx);
	}
	return 1;
}

CMD:czas(playerid, params[]) {
	new mtext[20],string[256],sendername[25];
	new year, month,day;
	getdate(year, month, day);
	if(month == 1) { mtext = "Styczen"; }
	else if(month == 2) { mtext = "Luty"; }
	else if(month == 3) { mtext = "Marzec"; }
	else if(month == 4) { mtext = "Kwiecien"; }
	else if(month == 5) { mtext = "Maj"; }
	else if(month == 6) { mtext = "Czerwiec"; }
	else if(month == 7) { mtext = "Lipiec"; }
	else if(month == 8) { mtext = "Sierpien"; }
	else if(month == 9) { mtext = "Wrzesien"; }
	else if(month == 10) { mtext = "Pazdziernik"; }
	else if(month == 11) { mtext = "Listopad"; }
	else if(month == 12) { mtext = "Grudzien"; }
	new hour,minuite,second;
	gettime(hour,minuite,second);
	//format(string, sizeof(string), "Jestes polaczony przez %.0f sekund.", PlayerInfo[playerid][pSeconds]);
 	//SendClientMessage(playerid,COLOR_WHITE, string);
	//format(string, sizeof(string), "* %s podniósl reke i spojrzal na zegarek.", GetNameEx(playerid));
	//ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	//ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
	format(string, sizeof(string), "~y~%02d %s~n~~g~|~w~%02d:%02d:%02d~g~|", day, mtext, hour, minuite, second, PlayerInfo[playerid][pJailTime]-10);
	if(PlayerInfo[playerid][pJailTime] > 0 && PlayerInfo[playerid][pJailed] >= 1)
	{
		format(string, sizeof(string), "~y~%02d %s~n~~g~|~w~%02d:%02d:%02d~g~|~n~~w~Pozostaly czas paki: %02d sec", day, mtext, hour, minuite, second, PlayerInfo[playerid][pJailTime]-10);
	}
	GameTextForPlayer(playerid, string, 5000, 1);
	return 1;
}
CMD:zamek(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		new playername[25];
		GetPlayerName(playerid,playername,sizeof(playername));
        for(new i = 1; i < sizeof(HouseInfo); i++)
		{
			if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) || PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
			{
				if(PlayerInfo[playerid][pHouse] == i && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
				{
					if(HouseInfo[i][hLock] == 1)
					{
						HouseInfo[i][hLock] = 0;
						GameTextForPlayer(playerid, "~w~DOM ~g~OTWARTY", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						new str2[128];
						format(str2,sizeof(str2),"UPDATE `houses` SET `Lockk`='0' WHERE `ID`='%d'",i);
						mysql_query(SQL,str2);
						return 1;
					}
					if(HouseInfo[i][hLock] == 0)
					{
						HouseInfo[i][hLock] = 1;
						GameTextForPlayer(playerid, "~w~DOM ~r~ZAMKNIETY", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						new str2[128];
						format(str2,sizeof(str2),"UPDATE `houses` SET `Lockk`='1' WHERE `ID`='%d'",i);
						mysql_query(SQL,str2);
						return 1;
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem domu.");
			}
		}
		for(new i = 1; i < sizeof(BizzInfo); i++)
		{
			if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
			{
				if(PlayerInfo[playerid][pBizz] == i)
				{
					if(BizzInfo[i][bLocked] == 1)
					{
						BizzInfo[i][bLocked] = 0;
						GameTextForPlayer(playerid, "~w~BIZNES ~g~OTWARTY", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						new str2[128];
						format(str2,sizeof(str2),"UPDATE `bizz` SET `Locked`='0' WHERE `ID`='%d'",i);
						mysql_query(SQL,str2);
						return 1;
					}
					if(BizzInfo[i][bLocked] == 0)
					{
						BizzInfo[i][bLocked] = 1;
						GameTextForPlayer(playerid, "~w~BIZNES ~r~~h~ZAMKNIETY", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						new str2[128];
						format(str2,sizeof(str2),"UPDATE `bizz` SET `Locked`='0' WHERE `ID`='%d'",i);
						mysql_query(SQL,str2);
						return 1;
					}
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "You don't own a bussines.");
			}
		}
    }
    return 1;
}

CMD:usedrugs(playerid,params[])
{
    if(IsPlayerConnected(playerid))
   	{
        if(UsingDrugs[playerid] == 0)
        {
			if(PlayerInfo[playerid][pDrugs] >= 2)
    	    {
    	        PlayerStoned[playerid] += 2;
    		    if(PlayerStoned[playerid] >= 2) { GameTextForPlayer(playerid, "~w~Esti drogat", 4000, 1); }
                new Float:health;
                GetPlayerHealthEx(playerid, health);
                if(health >= 90.0)
                {
                	SetPlayerHealthEx(playerid, 100);
				}
				else
				{
    				SetPlayerHealthEx(playerid, health + 10.0);
				}
				new sendername[25];
                GetPlayerName(playerid, sendername, sizeof(sendername));
                SendClientMessage(playerid, COLOR_WHITE, "Ai folosit 2 grame de narkotyki.");
				new string[128];
		        format(string, sizeof(string), "%s tocmai s-a drogat.", sendername);
                ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                PlayerInfo[playerid][pDrugs] -= 2;
		        UsingDrugs[playerid] = 1;
                drug[playerid] = SetTimerEx("DrugEffectGone",30000,false,"d",playerid);
				new str2[128];
				format(str2,sizeof(str2),"UPDATE users SET `Money`='%d',`Drugs`='%d' WHERE `ID`='%d'",GetPlayerCash(playerid),PlayerInfo[playerid][pDrugs],PlayerInfo[playerid][pSQLID]);
				mysql_query(SQL,str2);
            }
        	else
          	{
      	    	SendClientMessage(playerid, COLOR_GREY, "Nu ai drugs anymore.");
            }
	    }
        else
		{
            SendClientMessage(playerid, COLOR_WHITE, "Te rugam sa astepti.");
        }
	}//not connected
	return 1;
}

CMD:bizstatus(playerid,params[])
{
    if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pBizz];
		if(bouse == 255) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem tego biznesu.");
		if (bouse >= 100)
		{
			PrintSBizInfo(playerid,bouse-100);
		}
		else
		{
			PrintBizInfo(playerid,bouse);
		}
	}
	return 1;
}

CMD:gotohouse(playerid,params[])
{
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1)
	    {
			new housenum;
			if(sscanf(params, "d",housenum)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/gotohouse <House ID>");
			housenum = HouseInfo[housenum][hID];
			if(housenum == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie ma takiego domu!");
			SetPlayerInterior(playerid,HouseInfo[housenum][hInterior]);
			SetPlayerPosEx(playerid,HouseInfo[housenum][hExitx],HouseInfo[housenum][hExity],HouseInfo[housenum][hExitz]);
			PlayerInfo[playerid][pInt] = HouseInfo[housenum][hInterior];
			PlayerInfo[playerid][pLocal] = housenum;
			InHouse[playerid] = housenum;
			SetPlayerVirtualWorld(playerid,HouseInfo[housenum][hVirtual]);
			new string[180];
			format(string, sizeof(string), "AdmCmd: %s teleportowal sie do domu (UUID: %d)", GetName(playerid), housenum);
			SendAdminMessage(COLOR_LOGS, string, 1);				
		}
		else return SCM(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}

CMD:biz(playerid, params[]) return cmd_gotobiz(playerid, params);
CMD:gotobiz(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	new housenum;
	if(sscanf(params, "d",housenum)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/biz <Biz ID>");
	if(housenum > sizeof(BizzInfo)) return SCM(playerid, COLOR_GREY, "ID Invalid!");
	if(BizzInfo[housenum][bStatic] == 0) {
		SetPlayerInterior(playerid,BizzInfo[housenum][bInterior]);
		SetPlayerPosEx(playerid,BizzInfo[housenum][bExitX],BizzInfo[housenum][bExitY],BizzInfo[housenum][bExitZ]);
		PlayerInfo[playerid][pInt] = BizzInfo[housenum][bInterior];
		PlayerInfo[playerid][pLocal] = housenum+99;		
		SetPlayerVirtualWorld(playerid,BizzInfo[housenum][bVirtual]);
		InBussines[playerid] = housenum;
	}
	else {
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPosEx(playerid,BizzInfo[housenum][bEntranceX],BizzInfo[housenum][bEntranceY],BizzInfo[housenum][bEntranceZ]);
	}
	new string[180];
	format(string, sizeof(string), "AdmCmd: %s teleportowal sie do biznesu %d.", GetName(playerid), housenum);
	SendAdminMessage(COLOR_LOGS, string, 1);			
	return 1;
}

CMD:buylevel(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
        new nxtlevel = PlayerInfo[playerid][pLevel];
		new costlevel;
		new expamount,string[128];

		expamount = nxtlevel*levelexp;
		costlevel = nxtlevel*levelcost;

		if (IsPlayerLogged[playerid] != 0)
		{
			if(GetPlayerCash(playerid) < costlevel) return SCM(playerid,COLOR_GRAD1,"Nie masz wystarczajaco duzo pieniedzy.");
			if(PlayerInfo[playerid][pExp] < expamount) return SCM(playerid,COLOR_GRAD1,"Nu ai destule RP-uri.");
			GivePlayerCash(playerid, -costlevel);
			PlayerInfo[playerid][pLevel]++;
		    if(PlayerInfo[playerid][pPremiumAccount] != 0) PlayerInfo[playerid][pExp] -= expamount;
		    else PlayerInfo[playerid][pExp] = 0;
		    
		    format(string,sizeof(string),"Felicitari, acum ai nivel %d!",PlayerInfo[playerid][pLevel]);
			SCM(playerid,COLOR_SERVER,string);

		    Update(playerid,pCashx);
		    Update(playerid,pRP);
			Update(playerid,pLevelx);
			SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste zalogowany.");
	}
	return 1;
}

CMD:bigears(playerid,params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		if (!BigEar[playerid])
		{
			BigEar[playerid] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "Slyszysz wszystko!");
		}
		else if (BigEar[playerid])
		{
			(BigEar[playerid] = 0);
			SendClientMessage(playerid, COLOR_GREY, "Juz nie slyhszysz wszystkiego!");
		}
	}
	return 1;
}
CMD:ha(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pHelper] > 0 || PlayerInfo[playerid][pAdmin] > 0)
		{
			new sendername[30],texthl[250],string[250];
	       	GetPlayerName(playerid, sendername, sizeof(sendername));
	    	if(sscanf(params, "s[250]",texthl)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/ha <wiadomosc>");
	    	if(PlayerInfo[playerid][pHelper] > 0)
	    	{
	     		format(string, sizeof(string), "{FFFFCC}Helper %s: %s",sendername, texthl);
			}
			else if(PlayerInfo[playerid][pAdmin] > 0)
			{
	     		format(string, sizeof(string), "{FFFFCC}Admin %s: %s",sendername, texthl);
			}
	     	HLChat(COLOR_WHITE, string);
			SendAdminMessage(COLOR_LOGS, string,1);
        }
		else return SendClientMessage(playerid, COLOR_GREY, "Nie nalezysz do administracji!");
	}
	return 1;
}

CMD:editclan(playerid, params[])
{
	new
	    szName[256],
		message[256],
		string[256],
		szQuery[256],
		clanid, code;

	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GREY, "Nu Jestes czescia frakcjiuthorized to use this command.");
	if(sscanf(params, "iis[128]", clanid, code, message)) {
		SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/editclan <clanid> <code> <result>");
		SendClientMessage(playerid, COLOR_GREY, "Parametry: Name(0), Owner(1), Tag(2), Tag Type(3), Rank 1(4), Rank 2(5), Rank 3(6), [...]");
		SendClientMessage(playerid, COLOR_GREY, "Rank 4(7), Rank 5(8), Rank 6(9), Slots(11), Register Date(12).");
		return 1;
	}
	switch(code)
	{
	    case 0: {
			format(string, sizeof(string), "Ai editat cu succes numele la clanul cu ID-ul %d in %s.", clanid, message);
	        format(ClanInfo[clanid][clName], 256, message);
			format(szQuery, sizeof(szQuery), "UPDATE `clans` SET `Name`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clName], clanid);
			mysql_query(SQL, szQuery);
	    }
	    case 1: {
			format(string, sizeof(string), "Ai editat cu succes detinatorul la clanul cu ID-ul %d in %s.", clanid, message);
	        format(ClanInfo[clanid][clOwner], 256, message);
			format(szQuery, sizeof(szQuery), "UPDATE `clans` SET `Owner`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clOwner], clanid);
			mysql_query(SQL, szQuery);
	    }
	    case 2: {
			format(string, sizeof(string), "Ai editat cu succes tagul la clanul cu ID-ul %d in %s.", clanid, message);
	        format(ClanInfo[clanid][clTag], 32, message);
			format(szQuery, sizeof(szQuery), "UPDATE `clans` SET `Tag`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clTag], clanid);
			mysql_query(SQL, szQuery);
	    }
	    case 3: {
			format(string, sizeof(string), "Ai editat cu succes tipul tagului la clanul cu ID-ul %d in %d.", clanid, strval(message));
	        ClanInfo[clanid][clType] = strval(message);
			format(szQuery, sizeof(szQuery), "UPDATE `clans` SET `Type`='%d' WHERE `ID`='%d'", ClanInfo[clanid][clType], clanid);
			mysql_query(SQL, szQuery);
	    }
	    case 4: {
			format(string, sizeof(string), "Ai editat cu succes numele la rank-ul 1 la clanul cu ID-ul %d in %s.", clanid, message);
	        format(ClanInfo[clanid][clRankName1], 256, message);
			format(szQuery, sizeof(szQuery), "UPDATE `clans` SET `RankName1`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clRankName1], clanid);
			mysql_query(SQL, szQuery);
	    }
	    case 5: {
			format(string, sizeof(string), "Ai editat cu succes numele la rank-ul 2 la clanul cu ID-ul %d in %s.", clanid, message);
	        format(ClanInfo[clanid][clRankName2], 256, message);
			format(szQuery, sizeof(szQuery), "UPDATE `clans` SET `RankName2`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clRankName2], clanid);
			mysql_query(SQL, szQuery);
	    }
	    case 6: {
			format(string, sizeof(string), "Ai editat cu succes numele la rank-ul 3 la clanul cu ID-ul %d in %s.", clanid, message);
	        format(ClanInfo[clanid][clRankName3], 256, message);
			format(szQuery, sizeof(szQuery), "UPDATE `clans` SET `RankName3`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clRankName3], clanid);
			mysql_query(SQL, szQuery);
	    }
	    case 7: {
			format(string, sizeof(string), "Ai editat cu succes numele la rank-ul 4 la clanul cu ID-ul %d in %s.", clanid, message);
	        format(ClanInfo[clanid][clRankName4], 256, message);
			format(szQuery, sizeof(szQuery), "UPDATE `clans` SET `RankName4`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clRankName4], clanid);
			mysql_query(SQL, szQuery);
	    }
	    case 8: {
			format(string, sizeof(string), "Ai editat cu succes numele la rank-ul 5 la clanul cu ID-ul %d in %s.", clanid, message);
	        format(ClanInfo[clanid][clRankName5], 256, message);
			format(szQuery, sizeof(szQuery), "UPDATE `clans` SET `RankName5`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clRankName5], clanid);
			mysql_query(SQL, szQuery);
	    }
	    case 9: {
			format(string, sizeof(string), "Ai editat cu succes numele la rank-ul 6 la clanul cu ID-ul %d in %s.", clanid, message);
	        format(ClanInfo[clanid][clRankName6], 256, message);
			format(szQuery, sizeof(szQuery), "UPDATE `clans` SET `RankName6`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clRankName6], clanid);
			mysql_query(SQL, szQuery);
	    }
	    case 10: {
	        if(strval(message) < 5) return SendClientMessage(playerid, COLOR_GREY, "Clan slots invalid.");
			format(string, sizeof(string), "Ai editat cu succes sloturile la clanul cu ID-ul %d in %d.", clanid, strval(message));
	        ClanInfo[clanid][clSlots] = strval(message);
			format(szQuery, sizeof(szQuery), "UPDATE `clans` SET `Slots`='%d' WHERE `ID`='%d'", ClanInfo[clanid][clSlots], clanid);
			mysql_query(SQL, szQuery);
	    }
	    case 11: {
			format(string, sizeof(string), "Ai editat cu succes data inregistrarii la clanul cu ID-ul %d in %s.", clanid, message);
	        format(ClanInfo[clanid][clRegisterDate], 256, message);
			format(szQuery, sizeof(szQuery), "UPDATE `clans` SET `Slots`='%d' WHERE `ID`='%d'", ClanInfo[clanid][clRegisterDate], clanid);
			mysql_query(SQL, szQuery);
	    }
	    default: SendClientMessage(playerid, COLOR_GREY, "Code id invalid.");
	}
	SendClientMessage(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:editjob(playerid, params[])
{
	new szTitle[256], szDialog[1024], job;
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	if(sscanf(params, "i", job)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/editjob <job id>");
	if(strlen(JobInfo[job][jName]) == 0) return SendClientMessage(playerid, COLOR_GREY, "Job invalid!");
	format(szDialog, sizeof(szDialog),
		"Nazwa pracy\t\t%s\nWymagany level\t\t%d\nPozycjat\t%f, %f, %f\nLegal\t\t%d\n\
		Skill 1 Veh\t\t%d\nSkill 2 Veh\t\t%d\nSkill 3 Veh\t\t%d\nSkill 4 Veh\t\t%d\nSkill 5 Veh\t\t%d",
	JobInfo[job][jName], JobInfo[job][jLevel], JobInfo[job][jPosX], JobInfo[job][jPosY],
	JobInfo[job][jPosZ], JobInfo[job][jLegal], JobInfo[job][jSkill1Veh], JobInfo[job][jSkill2Veh], JobInfo[job][jSkill3Veh], JobInfo[job][jSkill4Veh],
	JobInfo[job][jSkill5Veh]);
	format(szTitle, sizeof(szTitle), "Edycja pracy %d", job);
	ShowPlayerDialog(playerid, DIALOG_EDITJOB, DIALOG_STYLE_TABLIST, szTitle, szDialog, "Wybierz", "Anuluj");
	EditJobID[playerid] = job;
	return 1;
}

CMD:edytujfrakcje(playerid, params[])
{
	new szTitle[256], szDialog[1024], fac;
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	if(sscanf(params, "i", fac)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/edytujfrakcje <id>");
	if(DynamicFactions[fac][fID] == 0) return SendClientMessage(playerid, COLOR_GREY, "Z³e id frakcji!");
	format(szDialog, sizeof(szDialog),
		"Nazwa frakcji\t\t%s\nRespawn\t\t%f, %f, %f\nVW\t\t%d\n\
		Interior\t\t%d\nSejf\t\t%d",
	DynamicFactions[fac][fName], DynamicFactions[fac][fcX], DynamicFactions[fac][fcY],
	DynamicFactions[fac][fcZ], DynamicFactions[fac][fVW], DynamicFactions[fac][fInterior], DynamicFactions[fac][fBank]);
	format(szTitle, sizeof(szTitle), "Edytujesz frakcje %s", DynamicFactions[fac][fName]);
	ShowPlayerDialog(playerid, DIALOG_EDYTUJFRAKCJE, DIALOG_STYLE_TABLIST, szTitle, szDialog, "Wybierz", "Anuluj");
	EditJobID[playerid] = fac;
	return 1;
}

/*
CMD:picklock(playerid, params[]) {
    if(JobWorking[playerid] == 0 || PlayerInfo[playerid][pJob] != 11) return 1;
    if(GetPlayerSkill(playerid) != 4) return SCM(playerid, -1, "Nu ai skill 4!");
	if(IsPlayerInAnyVehicle(playerid)) return 1;
	new idd, car;
	car = GetClosestVehicle(playerid);
	idd = FindSpawnID(car);
	if(CarInfo[idd][Spawned] == 0) return SCM(playerid, -1, "Vehicul invalid!");
	if(CarInfo[idd][cLock] == 0) return SCM(playerid, -1, "Acest vehicul nu este Zamkniety!");
    PutPlayerInVehicleEx(playerid, car, 0);
	new id = playerid;
	SetPlayerWantedLevel(id,PlayerInfo[id][pWantedLevel]);
	SetPlayerCriminal(id,255, "Jaf");
	new string[256];
	format(string, sizeof(string), "Ai comis o noua crima (Jaf).");
	SendClientMessage(id, COLOR_LIGHTRED, string);
	format(string, sizeof(string), "Wanted-ul actual: %d", PlayerInfo[id][pWantedLevel]);
	SendClientMessage(id, COLOR_YELLOW, string);
	wantedlost[id] = 1800;
	Update(id,pWantedLevelx);
	return 1;
}*/

CMD:jobhelp(playerid, params[]) {
	if(PlayerInfo[playerid][pJob] == 0) return SCM(playerid, COLOR_GREY, "Nie masz pracy!");
    new szDialog[1024];
	switch(PlayerInfo[playerid][pJob]) {
	    case 1: strcat(szDialog, "/pracuj /stopwork");
	    case 2: strcat(szDialog, "/pracuj /stopwork");
	    case 3: strcat(szDialog, "/pracuj /stopwork");
	    case 4: strcat(szDialog, "/pracuj /stopwork");
	    case 5: strcat(szDialog, "/pracuj /stopwork /sellgun /sellmaterials /materials");
	    case 6: strcat(szDialog, "/pracuj /stopwork /selldrugs /getdrugs");
	    case 7: strcat(szDialog, "/tankowanie /repair");
	    case 8: strcat(szDialog, "/find");
	    case 9: strcat(szDialog, "/pracuj /stopwork");
	    case 10: strcat(szDialog, "/pracuj /stopwork /fish");
	    case 11: strcat(szDialog, "/pracuj /stopwork /picklock");
	}
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Komendy pracy:", szDialog, "Anuluj", "");
	return 1;
}

CMD:pracuj(playerid, params[]) {
	new Float: Pos[3], string[500];
	if(PlayerInfo[playerid][pJob] == 0) return SCM(playerid, COLOR_GREY, "Nie masz pracy!");
	if(JobWorking[playerid] == 1) return SCM(playerid, COLOR_GREY, "juz pracujesz.");
	if(CP[playerid] != 0 || targetfind[playerid] != -1) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
	if(PlayerTime2[playerid] != 0) {
		format(string, sizeof(string), "Mozesz uzyc tego polecenia za %d minut.", PlayerTime2[playerid]);
		SCM(playerid, COLOR_GOLD, string);
		return 1;
	}
	switch (PlayerInfo[playerid][pJob]) {
	    case 1: {
	        if(PlayerToPoint(7.0, playerid, 80.3614, -251.1722, 1.5355)) {
				if(!IsATir(GetPlayerVehicleID(playerid))) return SCM(playerid, COLOR_GREY, "Musisz siedziec w tirze!");
                Trailer[playerid] = 0;
                TruckerStep[playerid] = 0;
	            MoneyEarned[playerid] = 0;
				CurseFacute[playerid] = 0;
				TruckerRoute[playerid] = 15;
				if(IsAMember(playerid)) {
				format(string, sizeof(string), "Creek (LV) \nPilson Intersection (LV)\nBattery Point (SF)\nOcean Docks (LS)\n\
				Whetstone (SF)\nFlint County (SF)\nDoherty (SF)\nPalisades (SF)\nBayside (SF)\nCommerce (LS)\n\
				Las Payasadas (LV)\nLas Venturas Airport (LV)\nEast Los Santos (LS) - {FF0000}nielegalne{FFFFFF}\nLinden Side (LV) - {FF0000}nielegalne{FFFFFF}\nAngel Pine (SF) - {FF0000}nielegalne");
				} else {
				format(string, sizeof(string), "Creek (LV)\nPilson Intersection (LV)\nBattery Point (SF)\nOcean Docks (LS)\n\
				Whetstone (SF)\nFlint County (SF)\nDoherty (SF)\nPalisades (SF)\nBayside (SF)\nCommerce (LS)\n\
				Las Payasadas (LV)\nLas Venturas Airport (LV)");
				}
				ShowPlayerDialog(playerid, DIALOG_TRUCKER, DIALOG_STYLE_LIST, "Wybór misji", string, "Wybierz", "");
				PlayerTextDrawSetString(playerid, InfosTD, "~y~Ladowanie ...");
				PlayerTextDrawShow(playerid, InfosTD);
			}
	        else {
 				if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
	          	CP[playerid] = 53;
				SendClientMessage(playerid, COLOR_GREY, "Nie jeste tam, gdzie zaczynaja sie misje. Podazaj za Czerwonym punktem na mapie");
				SetPlayerCheckpointEx(playerid, 80.3614, -251.1722, 1.5355, 7.0);
				return 1;
		    }
	    }
	    case 2: {
	        if(PlayerToPoint(7.0, playerid, 2103.4229, -2057.1436, 13.4735)) {
				new x = random(sizeof(GarbagePos));
				SetPlayerCheckpointEx(playerid, GarbagePos[x][0], GarbagePos[x][1], GarbagePos[x][2], 2.0);
				CP[playerid] = 54;
				new szZone[256];
				GetPlayer3DZone2(GarbagePos[x][0], GarbagePos[x][1], GarbagePos[x][2], szZone, sizeof(szZone));
				format(string, sizeof(string), "Idz do czerwonej kropki na mapie, aby wziac torbe na smieci~n~(~y~%s~w~~h~)", szZone);
				PlayerTextDrawSetString(playerid, InfosTD, string);
				SetTimerEx("HideTextdraw", 5000, 0, "%d", playerid);
				PlayerTextDrawShow(playerid, InfosTD);
				GunoiKG[playerid] = 0;
				InHand[playerid] = 0;
			}
	        else {
 				if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
	          	CP[playerid] = 53;
				SendClientMessage(playerid, COLOR_GREY, "Nie jeste tam, gdzie zaczynaja sie misje. Podazaj za Czerwonym punktem na mapie");
				SetPlayerCheckpointEx(playerid, 2103.4229, -2057.1436, 13.4735, 7.0);
				return 1;
		    }
	    }
	    case 3: {
	        if(PlayerToPoint(7.0, playerid, -83.3521, 53.2890, 3.1561)) {
				PlayerTextDrawSetString(playerid, InfosTD, "Jedz kombajnem na pole i zbierz 70~n~klosow.");
				SetTimerEx("HideTextdraw", 5000, 0, "%d", playerid);
				PlayerTextDrawShow(playerid, InfosTD);
				ShowFarmerObjects(playerid);
				Farming[playerid] = 0;
			}
	        else {
 				if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
	          	CP[playerid] = 53;
				SendClientMessage(playerid, COLOR_GREY, "Nie jeste tam, gdzie zaczynaja sie misje. Podazaj za Czerwonym punktem na mapie");
				SetPlayerCheckpointEx(playerid, -83.3521, 53.2890, 3.1561, 7.0);
				return 1;
		    }
	    }
	    case 4: {
	        if(PlayerToPoint(7.0, playerid, 1902.8950,-1156.7183,24.2918)) {
				PlayerTextDrawSetString(playerid, InfosTD, "Zatrzymuj sie w krzakach i je obcinaj.");
				SetTimerEx("HideTextdraw", 5000, 0, "%d", playerid);
				PlayerTextDrawShow(playerid, InfosTD);
				mowerobj[playerid][0] = CreatePlayerObject(playerid, 874, 1883.06177, -1223.37842, 16.08001,   0.00000, 0.00000, 0.00000);
				mowerobj[playerid][1] = CreatePlayerObject(playerid, 874, 1914.00818, -1218.90784, 18.35972,   0.00000, 0.00000, 0.00000);
				mowerobj[playerid][2] = CreatePlayerObject(playerid, 873, 1911.94409, -1183.88184, 21.98326,   0.00000, 0.00000, 0.00000);
				mowerobj[playerid][3] = CreatePlayerObject(playerid, 873, 2008.16614, -1178.17786, 20.76065,   0.00000, 0.00000, 0.00000);
				mowerobj[playerid][4] = CreatePlayerObject(playerid, 873, 2028.86462, -1198.19934, 21.64756,   0.00000, 0.00000, 0.00000);
				mowerobj[playerid][5] = CreatePlayerObject(playerid, 874, 1998.89648, -1228.98193, 21.64760,   0.00000, 0.00000, 0.00000);
				mowerobj[playerid][6] = CreatePlayerObject(playerid, 874, 2017.35034, -1224.96179, 21.64760,   0.00000, 0.00000, 0.00000);
				mowerobj[playerid][7] = CreatePlayerObject(playerid, 874, 1950.52783, -1167.03748, 21.01772,   0.00000, 0.00000, 20.94000);
				mowerobj[playerid][8] = CreatePlayerObject(playerid, 874, 1890.25928, -1204.95520, 18.35972,   0.00000, 0.00000, 0.00000);
				mowerobj[playerid][9] = CreatePlayerObject(playerid, 873, 1947.45398, -1230.54224, 20.22499,   0.00000, 0.00000, 0.00000);
				mowerobj[playerid][10] = CreatePlayerObject(playerid, 873, 2018.86780, -1158.33374, 20.76065,   0.00000, 0.00000, 0.00000);
				mowerobj[playerid][11] = CreatePlayerObject(playerid, 873, 1918.88928, -1162.46411, 23.26862,   0.00000, 0.00000, 0.00000);
                objstats[playerid][0] = 1, objstats[playerid][1] = 1, objstats[playerid][2] = 1, objstats[playerid][3] = 1, objstats[playerid][4] = 1,
                objstats[playerid][5] = 1, objstats[playerid][6] = 1, objstats[playerid][7] = 1, objstats[playerid][8] = 1, objstats[playerid][9] = 1,
                objstats[playerid][10] = 1, objstats[playerid][11] = 1;
				CurseFacute[playerid] = 0;
				MoneyEarned[playerid] = 0;
			}
	        else {
 				if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
	          	CP[playerid] = 53;
				SendClientMessage(playerid, COLOR_GREY, "Nie jeste tam, gdzie zaczynaja sie misje. Podazaj za Czerwonym punktem na mapie");
				SetPlayerCheckpointEx(playerid, 1902.8950,-1156.7183,24.2918, 7.0);
				return 1;
		    }
	    }
	    case 5: {
			if(!PlayerToPoint(6.0, playerid, 2774.2517, -1611.1010, 10.9971)) {
				SendClientMessage(playerid, COLOR_GREY, "Nie jeste tam, gdzie zaczynaja sie misje. Podazaj za Czerwonym punktem na mapie");
				SetPlayerCheckpointEx(playerid, 2774.2517, -1611.1010, 10.9971, 6.0);
				CP[playerid] = 53;
				return 1;
			}
			new rand = random(2);
			if(rand == 0) SetPlayerCheckpointEx(playerid, 2791.6089, -2536.2156, 13.5584, 5.0);
			else if(rand == 1) SetPlayerCheckpointEx(playerid, 368.9210, -1885.8951, 2.2070, 5.0);
			else if(rand == 2) SetPlayerCheckpointEx(playerid, 763.1854, -1031.3533, 24.1334, 5.0);
			CP[playerid] = 63;
	    }
	    case 6: {
			if(!PlayerToPoint(6.0, playerid, 2178.9907, -1668.4652, 14.7951)) {
				SendClientMessage(playerid, COLOR_GREY, "Nie jeste tam, gdzie zaczynaja sie misje. Podazaj za Czerwonym punktem na mapie");
				SetPlayerCheckpointEx(playerid, 2178.9907, -1668.4652, 14.7951, 6.0);
				CP[playerid] = 53;
				return 1;
			}
			new rand = random(2);
			if(rand == 0) SetPlayerCheckpointEx(playerid, 701.2177, -447.7025, 16.5011, 5.0);
			else if(rand == 1) SetPlayerCheckpointEx(playerid, 999.8225, -1353.4115, 13.3673, 5.0);
			else if(rand == 2) SetPlayerCheckpointEx(playerid, 651.1619, -1768.0632, 13.5898, 5.0);
			CP[playerid] = 64;
	    }
		case 7 .. 8: {
			return 1;
		}
		case 9: {
			if(!PlayerToPoint(6.0, playerid, 876.0475,857.5836,13.3516)) {
				SendClientMessage(playerid, COLOR_GREY, "Nie jeste tam, gdzie zaczynaja sie misje. Podazaj za Czerwonym punktem na mapie");
				SetPlayerCheckpointEx(playerid, 876.0475,857.5836,13.3516, 6.0);
				CP[playerid] = 53;
				return 1;
			}
			new rand = random(2);
			if(rand == 0) SetPlayerCheckpointEx(playerid, 541.8474,850.2049,-41.9586, 5.0);
			else if(rand == 1) SetPlayerCheckpointEx(playerid, 580.2501,915.7686,-42.8712, 5.0);
			else if(rand == 2) SetPlayerCheckpointEx(playerid, 677.5947,838.3197,-42.7415, 5.0);
			CP[playerid] = 57;
			StartingWork[playerid] = 0;
			CurseFacute[playerid] = 0;
			MoneyEarned[playerid] = 0;
		}
		case 10: {
			if(!PlayerToPoint(6.0, playerid, 1628.2916, 578.0037, 1.8570)) {
				SendClientMessage(playerid, COLOR_GREY, "Nie jeste tam, gdzie zaczynaja sie misje. Podazaj za Czerwonym punktem na mapie");
				SetPlayerCheckpointEx(playerid, 1628.2916, 578.0037, 1.8570, 6.0);
				CP[playerid] = 53;
				return 1;
			}
			if(PlayerInfo[playerid][pBoatLic] == 0) return SCM(playerid, -1, "Nu ai licenta dla a putea merge cu barcile!");
			StartingWork[playerid] = 0;
			CurseFacute[playerid] = 0;
			MoneyEarned[playerid] = 0;
			Fishing[playerid] = 0;
			SCM(playerid, -1, "Uzyj /fish do lowienia!");
		}
		/*case 11: {
			if(GetPlayerSkill(playerid) == 1) PlayerTextDrawSetString(playerid, InfosTD, "Fura o masina de civili.");
			else if(GetPlayerSkill(playerid) == 2) PlayerTextDrawSetString(playerid, InfosTD, "Fura o masina personala descuiata");
			else if(GetPlayerSkill(playerid) == 3) PlayerTextDrawSetString(playerid, InfosTD, "Fura o masina a unui gang");
			else if(GetPlayerSkill(playerid) == 4) PlayerTextDrawSetString(playerid, InfosTD, "Fura o masina personala incuiata");
			else if(GetPlayerSkill(playerid) == 5) PlayerTextDrawSetString(playerid, InfosTD, "Fura o masina a unui departament");
			PlayerTextDrawShow(playerid, InfosTD);
			SetTimerEx("HideTextdraw", 5000, 0, "%d", playerid);
			JobWorking[playerid] = 1;
            PlayerTime2[playerid] = 3;
			return 1;
		}*/
		case 11: {
			if(!PlayerToPoint(6.0, playerid, -1990.1993,137.8591,27.5391)) {
				SendClientMessage(playerid, COLOR_GREY, "Nie jeste tam, gdzie zaczynaja sie misje. Podazaj za Czerwonym punktem na mapie");
				SetPlayerCheckpointEx(playerid, -1990.1993,137.8591,27.5391, 6.0);
				CP[playerid] = 53;
				return 1;
			}
			PlayerTextDrawSetString(playerid, InfosTD, "Podazaj za czerwonymi punktami!");
			PlayerTextDrawShow(playerid, InfosTD);
			SetTimerEx("HideTextdraw", 5000, 0, "%d", playerid);
			SetPlayerCheckpointEx(playerid, -1995.5071,185.1269,27.6362, 5.0);
			CP[playerid] = 61;
			Step[playerid] = 0;
		}
		case 12: {
			if(!PlayerToPoint(6.0, playerid, 2116.5586,-1775.1874,13.3918)) {
				SendClientMessage(playerid, COLOR_GREY, "Nie jeste tam, gdzie zaczynaja sie misje. Podazaj za Czerwonym punktem na mapie");
				SetPlayerCheckpointEx(playerid, 2116.5586,-1775.1874,13.3918, 6.0);
				CP[playerid] = 53;
				return 1;
			}
			PlayerTextDrawSetString(playerid, InfosTD, "Dostarcz pizze do punktu na mapie!");
			PlayerTextDrawShow(playerid, InfosTD);
			SetTimerEx("HideTextdraw", 5000, 0, "%d", playerid);
	        CP[playerid] = 79;
	        SetPlayerAttachedObject(playerid, 1, 18645, 2, 0.07, 0, 0, 88, 75, 0);
	        new rand = random(housess) +2;
			if(LastCP[playerid] == rand) rand = 1;
			LastCP[playerid] = rand;
	        SetPlayerCheckpointEx(playerid, HouseInfo[rand][hEntrancex], HouseInfo[rand][hEntrancey], HouseInfo[rand][hEntrancez], 5.0);
		}
	}
	
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	new skill = GetPlayerSkill(playerid);
	/*if(PlayerInfo[playerid][pJob] == 10) {
	 	if(skill == 1) JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill1Veh], 1587.0422, 541.3312, -0.0117, 142.9800, 1, 1, -1);
	 	else if(skill == 2) JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill2Veh], 1587.0422, 541.3312, -0.0117, 142.9800, 1, 1, -1);
	 	else if(skill == 3) JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill3Veh], 1587.0422, 541.3312, -0.0117, 142.9800, 1, 1, -1);
	 	else if(skill == 4) JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill4Veh], 1587.0422, 541.3312, -0.0117, 142.9800, 1, 1, -1);
	 	else if(skill == 5) JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill5Veh], 1587.0422, 541.3312, -0.0117, 142.9800, 1, 1, -1);
	}
	else if(PlayerInfo[playerid][pJob] == 11) {
	 	if(skill == 1) JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill1Veh], -1990.8286, 145.9347, 27.6002, 0.0000, 1, 1, -1);
	 	else if(skill == 2) JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill2Veh], -1990.8286, 145.9347, 27.6002, 0.0000, 1, 1, -1);
	 	else if(skill == 3) JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill3Veh], -1990.8286, 145.9347, 27.6002, 0.0000, 1, 1, -1);
	 	else if(skill == 4) JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill4Veh], -1990.8286, 145.9347, 27.6002, 0.0000, 1, 1, -1);
	 	else if(skill == 5) JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill5Veh], -1990.8286, 145.9347, 27.6002, 0.0000, 1, 1, -1);
	}
	else {
	 	if(skill == 1) JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill1Veh], Pos[0], Pos[1], Pos[2], 90.0000, 1, 1, -1);
	 	else if(skill == 2) JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill2Veh], Pos[0], Pos[1], Pos[2], 90.0000, 1, 1, -1);
	 	else if(skill == 3) JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill3Veh], Pos[0], Pos[1], Pos[2], 90.0000, 1, 1, -1);
	 	else if(skill == 4) JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill4Veh], Pos[0], Pos[1], Pos[2], 90.0000, 1, 1, -1);
	 	else if(skill == 5) JobVehicle[playerid] = CreateVehicleEx(JobInfo[PlayerInfo[playerid][pJob]][jSkill5Veh], Pos[0], Pos[1], Pos[2], 90.0000, 1, 1, -1);
	}*/
	JobTime[playerid] = GetTickCount();
   // PutPlayerInVehicle(playerid, JobVehicle[playerid], 0);
    JobWorking[playerid] = 1;
    //Gas[JobVehicle[playerid]] = 100;
    PlayerTime2[playerid] = 3;
    if(IsPlayerInAnyVehicle(playerid)) DisableRemoteVehicleCollisions(playerid, JobVehicle[playerid]);
   	new engine,lights,alarm,bonnet,boot,objective;
	if(PlayerInfo[playerid][pJob] != 2) SetVehicleParamsEx(JobVehicle[playerid],engine,lights,alarm,1,bonnet,boot,objective);
	return 1;
}

function CheckSeconds(playerid) {
	if(GetTickCount() - JobTime[playerid] < 1000) {
	    new string[256];
		format(string, sizeof(string), "AdmCmd: %s wyrzucony przez SYSTEM, Powód: mozliwy TP Hack", GetNameEx(playerid));
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		KickEx(playerid);
	}
	return 1;
}

CMD:fish(playerid, params[])
{
	if(JobWorking[playerid] == 0 || PlayerInfo[playerid][pJob] != 10) return 1;
	if(PlayerTime3[playerid] != 0) {
	    new string[256];
		format(string, sizeof(string), "Mozesz uzyc tego polecenia za %d minut.", PlayerTime2[playerid]);
		SCM(playerid, COLOR_GOLD, string);
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "Nie mozesz uzyc polecenia /fish, gdy jeste w pojezdzie.");
	if(!IsPlayerNearVehicle(playerid, JobVehicle[playerid], 7.0)) return SCM(playerid, -1, "Nie jeste w poblizu lodzi!");
	if(Fishing[playerid] == 1) return 1;
	PlayerTime3[playerid] = 1;
	Fishing[playerid] = 1;
	SetPlayerAttachedObject(playerid, 0,18632,6,0.079376,0.037070,0.007706,181.482910,0.000000,0.000000,1.000000,1.000000,1.000000);
	SCM(playerid, COLOR_WHITE, "Teraz ryby, poczekaj 10 sekund, aby zlapac rybe.");
	ApplyAnimation(playerid,"SWORD","sword_block",50.0,0,1,0,1,1);
	SetTimerEx("StopFishing", 10000, false, "i", playerid);
	return 1;
}

public StopFishing(playerid)
{
	if(Fishing[playerid] == 1)
	{
		Fishing[playerid] = 0;
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0);
		RemovePlayerAttachedObject(playerid, 0);
		if(JobWorking[playerid] == 0) return 1;
		if(!IsPlayerNearVehicle(playerid, JobVehicle[playerid], 7.0)) return SCM(playerid, -1, "Nie jeste w poblizu lodzi!");
		new salar;
		switch(GetPlayerSkill(playerid)) {
			case 1: salar = 200;
			case 2: salar = 1000;
			case 3: salar = 2000;
			case 4: salar = 3500;
			case 5: salar = 4000;
		}
		if(PlayerInfo[playerid][pPremiumAccount] >= 1) salar += salar/4;
		PlayerInfo[playerid][pFishSkill] ++;
		Update(playerid, pFishSkillx);
		if(PlayerInfo[playerid][pFishSkill] == 50)
		{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Fishera sa teraz na poziomie 2. Dostaniesz wiecej pieniedzy."); }
		else if(PlayerInfo[playerid][pFishSkill] == 100)
		{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Fishera sa teraz na poziomie 3. Dostaniesz wiecej pieniedzy."); }
		else if(PlayerInfo[playerid][pFishSkill] == 200)
		{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Fishera sa teraz na poziomie 4. Dostaniesz wiecej pieniedzy."); }
		else if(PlayerInfo[playerid][pFishSkill] == 400)
		{ SendClientMessage(playerid, COLOR_YELLOW, "* Twoje umiejetnosci w pracy Fishera sa teraz na poziomie 5. Dostaniesz wiecej pieniedzy."); }
		CurseFacute[playerid] ++;
		MoneyEarned[playerid] += salar;
		new string[256];
		format(string, sizeof(string), "Zlapales rybe warta tego $%s.", FormatNumber(salar));
	   	SCM(playerid, COLOR_MONEY, string);
	   	GivePlayerCash(playerid, salar);
	}
	return 1;
}

CMD:tankowanie(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
	    if(PlayerInfo[playerid][pJob] != 7) return SendClientMessage(playerid, COLOR_GREY, "Nie masz pracy mechanika");
		new playa,money,string[256],giveplayer[25],sendername[25];
	 	if(sscanf(params, "ui",playa,money)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/tankowanie <nazwa/id> <cena>");
		new engine,lights,alarm,doors,bonnet,boot,objective;
		new idcar = GetPlayerVehicleID(playa);
		GetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,boot,objective);
		if(engine == VEHICLE_PARAMS_ON)
			return SCM(playerid, -1, "Pojazd tego gracza jest w³¹czony!");
		if(money < 1 || money > 100) return SendClientMessage(playerid, COLOR_GREY, "Cena wacha sie od $1 do $100!");
		if(IsPlayerConnected(playa))
		{
		    if(playa != INVALID_PLAYER_ID)
		    {
		        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
				{
				    if(playa == playerid) return 1;
				    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
				    format(string, sizeof(string), "* Oferujesz  %s dotankowanie wozu za $%d .",giveplayer,money);
					SendClientMessage(playerid, COLOR_MONEY, string);
					format(string, sizeof(string), "* Mechanik %s oferuje ci dotankowanie wozu za $%d, wpisz /akceptuj tankowanie %d aby akceptowac.",sendername,money,playerid);
					SendClientMessage(playa, COLOR_MONEY, string);
					RefillOffer[playa] = playerid;
					RefillPrice[playa] = money;
					Refillx[playerid] = playa;
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest w twoim zasiegu sau nu se afla intr-un vehicul.");
			}
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	return 1;
}

CMD:flip(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
    new Float:angle;
    GetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
    SetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
    SendClientMessage(playerid, COLOR_YELLOW, "Postawilem cie na kolach!");
	return 1;
}


CMD:gsearch(playerid, params[]) {
	new result[180], x, string[180];
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/gsearch <name/id>");
	SCM(playerid, COLOR_SERVER, "--------------------------------------------------------------------");
	for(new v = 1; v < 48; v++) {
		if(strfind(GunNames[v], result, true) != -1 || v == strval(result)) {
			format(string, sizeof(string), "%s (%d)", GunNames[v], v);
			SCM(playerid, -1, string);
			x++;
		}
	}
	if(x == 0) return SCM(playerid, COLOR_GREY, "* Nie znaleziono wyników!"), SCM(playerid, COLOR_SERVER, "--------------------------------------------------------------------");	
	SCM(playerid, COLOR_SERVER, "--------------------------------------------------------------------");	
	return 1;
}

CMD:vsearch(playerid, params[]) {
	new result[180], x, string[180];
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/vsearch <name/model>");
	SCM(playerid, COLOR_SERVER, "--------------------------------------------------------------------");
	for(new v = 0; v < 212; v++) {
		if(strfind(aVehicleNames[v], result, true) != -1 || v == strval(result)-400) {
			format(string, sizeof(string), "%s (%d)", aVehicleNames[v], v+400);
			SCM(playerid, -1, string);
			x++;
		}
	}
	if(x == 0) return SCM(playerid, COLOR_GREY, "* Nie znaleziono wyników!"), SCM(playerid, COLOR_SERVER, "--------------------------------------------------------------------");	
	SCM(playerid, COLOR_SERVER, "--------------------------------------------------------------------");	
	return 1;
}

CMD:slapcar(playerid, params[]) {
	new carid;
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	if(sscanf(params, "i",carid)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/slapcar <carid>");
	if(!IsValidVehicle(carid)) return SCM(playerid, COLOR_GREY, "Zle id pojazdu!");
	new Float: Pos[3];
	GetVehiclePos(carid, Pos[0], Pos[1], Pos[2]);
	SetVehiclePos(carid, Pos[0], Pos[1], Pos[2]+5);
	new string[180];
	format(string, sizeof(string), "AdmCmd: %s dal slapa autu %d.", GetName(playerid), carid);
	SendAdminMessage(COLOR_LOGS, string, 1);
	return 1;
}

CMD:napraw(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
	    if(PlayerInfo[playerid][pJob] != 7) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste mechanikiem!");
		new playa,money,string[256],giveplayer[25],sendername[25];
 		if(sscanf(params, "ui",playa,money)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/napraw <Nazwa/Playerid> <cena>");
		new engine,lights,alarm,doors,bonnet,boot,objective;
		new idcar = GetPlayerVehicleID(playa);
		GetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,boot,objective);
		if(engine == VEHICLE_PARAMS_ON)
			return SCM(playerid, -1, "Ten pojazd posiada wlaczony silnik!");
		if(money < 1 || money > 100) return SendClientMessage(playerid, COLOR_GREY, "Cena wacha sie od $1 do $100!");
		if(IsPlayerConnected(playa))
		{
		    if(playa != INVALID_PLAYER_ID)
		    {
		        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
				{
				    if(playa == playerid) return 1;
			    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
				    format(string, sizeof(string), "* Oferujesz %s naprawe samochodu za $%s .",giveplayer,FormatNumber(money));
					SendClientMessage(playerid, COLOR_MONEY, string);
					format(string, sizeof(string), "* Mechanik %s oferuje ci naprawe samochodu za $%s, (wpisz /akceptuj repair %d) aby akceptowac naprawe.",sendername,FormatNumber(money),playerid);
					SendClientMessage(playa, COLOR_MONEY, string);
					RepairOffer[playa] = playerid;
					RepairPrice[playa] = money;
					Rapairx[playerid] = playa;
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest w twoim zasiegu/nie jest w pojezdzie!.");
			}
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	return 1;
}

CMD:getdrugs(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pJob] != 6) return SCM(playerid,COLOR_GREY, "Nie jeste dilerem narkotyków.");
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, 322.9745,1119.4409,1083.8828)) {
			if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
          	CP[playerid] = 53;
			SendClientMessage(playerid, COLOR_GREY, "Nie jeste tam, gdzie zaczynaja sie misje. Podazaj za Czerwonym punktem na mapie");
			SetPlayerCheckpointEx(playerid, 322.9745,1119.4409,1083.8828, 7.0);
			return 1;
		}
		new level = PlayerInfo[playerid][pDrugsSkill];
	    new points,money;
		if(level >= 0 && level <= 50)
		{
			points = 20;
			money = 1000;
		}
		else if(level >= 51 && level <= 100)
		{
			points = 40;
			money = 1500;
		}
		else if(level >= 101 && level <= 200)
		{
			points = 60;
			money = 2000;
		}
		else if(level >= 201 && level <= 400)
		{
			points = 800;
			money = 2500;
		}
		else if(level >= 401)
		{
			points = 100;
			money = 3000;
		}
		if(GetPlayerCash(playerid) < money) return SCM(playerid,COLOR_GREY, "Nie masz takiej ilosci pieniedzy!");
		PlayerInfo[playerid][pDrugs] += points;
		GivePlayerCash(playerid,-money);
		new string[64];
		format(string,sizeof(string),"Ai luat %d grame de narkotyki in schimbul a $%s.",points,FormatNumber(money));
		SCM(playerid,COLOR_LIGHTBLUE,string);
		new str2[128];
		format(str2,sizeof(str2),"UPDATE users SET `Money`='%d',`Drugs`='%d' WHERE `ID`='%d'",GetPlayerCash(playerid),PlayerInfo[playerid][pDrugs],PlayerInfo[playerid][pSQLID]);
		mysql_query(SQL,str2);
		return 1;
	}
	return 1;
}
CMD:selldrugs(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pJob] != 6) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste dilerem narkotyków.");
		new playa,needed,string[128],giveplayer[25],sendername[25],money;
		if(sscanf(params, "uii",playa,needed,money)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/selldrugs <nazwa/id> <Drugs> <Price>");
		if(needed < 1 || needed > 50) return SendClientMessage(playerid, COLOR_GREY, "Gramele de narkotyki trebuie sa fie cuprinse intre 1 si 50 grame!");
		if(money < 1 || money > 50000) return SendClientMessage(playerid, COLOR_GREY, "Pretul trebuie sa fie cuprins intre $1 si $150.000!");
    	if(needed > PlayerInfo[playerid][pDrugs]) return SendClientMessage(playerid, COLOR_WHITE,"Nu ai aceasta suma Drugs with you.");
		
		if(PlayerInfo[playerid][pJailTime] != 0) return SCM(playerid, -1, "Nu poti vinde lucruri atata timp cat esti in jail!");	
		if(IsPlayerConnected(playa))
    	{
    	    if(playa != INVALID_PLAYER_ID)
		    {
 	     		if (ProxDetectorS(8.0, playerid, playa))
        		{
            	    if(playa == playerid) return 1;
	        	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
	        		GetPlayerName(playerid, sendername, sizeof(sendername));
	        	    format(string, sizeof(string), "{B8FFDB}* I-ai oferit lui %s, %d grame de narkotyki dla %s$.", giveplayer, needed, FormatNumber(money));
	        		SendClientMessage(playerid, COLOR_WHITE, string);
	         		format(string, sizeof(string), "{B8FFDB}* %s ti-a oferit %d grame de narkotyki dla %s$, (scrie /akceptuj drugs %d) aby akceptowac zlecenie.", sendername, needed, FormatNumber(money),playerid);
		        	SendClientMessage(playa, COLOR_WHITE, string);
		         	DrugOffer[playa] = playerid;
		        	DrugPrice[playa] = money;
		        	DrugGram[playa] = needed;
	    		}
		    	else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest blisko ciebie.");
        	}
    	}
	}
	return 1;
}

CMD:sellmaterials(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pJob] != 5) return SendClientMessage(playerid,COLOR_GREY, "Nu ai jobul 'Distribuitor de arme'.");
		new id,mats,string[128],sendername[25],giveplayer[25],price;
	    if(sscanf(params, "uii",id,mats,price)) return SendClientMessage(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/sellmaterials <id/nazwa> <Materials> <cena>");
		if(price < 1 || price > 150000) return SendClientMessage(playerid, COLOR_GREY, "Pretul trebuie sa fie cuprins intre $1 si $150.000!");
		if(playerid == id) return 1;
 	    if(id != INVALID_PLAYER_ID)
        {
			if(ProxDetectorS(5.0, playerid, id))
			{
			    
			    if(mats < 1 || mats > 50000) return SendClientMessage(playerid, COLOR_GREY, "Poti vinde intre 1 si 50.000 de materiale.");
			    if(mats > PlayerInfo[playerid][pMats]) return SendClientMessage(playerid, COLOR_GREY, "Nu ai atatea materiale.");
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "{B8FFDB}* I-ai oferit lui %s, %d materiale dla %s$.",giveplayer,mats,FormatNumber(price));
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "{B8FFDB}* %s ti-a oferit %d materiale dla %s$, (scrie /akceptuj materials %d) aby akceptowac zlecenie.",sendername,mats,FormatNumber(price),playerid);
				SendClientMessage(id, COLOR_WHITE, string);
				MatsOffer[id] = playerid;
				MatsPrice[id] = price;
				MatsAmmo[id] = mats;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest blisko ciebie.");
        }
    }
    return 1;
}
CMD:stworzbron(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
	    if (!IsAMember(playerid)) return SendClientMessage(playerid,COLOR_YELLOW2,"Nie jeste w organizacji przestepczej");
		if (PlayerInfo[playerid][pJob] != 5) return SendClientMessage(playerid,COLOR_YELLOW2,"Nie jeste dilerem broni");
		new x_weapon[10],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS],price2,id,giveplayer[25],sendername[25],string[128];
		if(sscanf(params, "us[10]d",id,x_weapon,price2))
		{
			SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/stworzbron <id/nazwa> <nazwa> <cena>");
			SendClientMessage(playerid, COLOR_WHITE, "Bronie:{FFFFFF} SDPistol(100) Deagle(150)");
			SendClientMessage(playerid, COLOR_WHITE, "Bronie:{FFFFFF} MP5(200) Shotgun(300)");
			SendClientMessage(playerid, COLOR_WHITE, "Bronie:{FFFFFF} AK47(350) M4(400) Rifle(600)");
			return 1;
		}
		if(playerid == id) return SCM(playerid,COLOR_WHITE,"{FFB870}Nie mozesz sam sobie sprzedawac broni.");
		if(PlayerInfo[playerid][pJailTime] != 0) return SCM(playerid, -1, "Nie mozesz sprzedawac gdy jeste w wiezieniu!");
		if(IsPlayerInAnyVehicle(id)) return SCM(playerid, -1, "Nie mozesz uzyc tego polecenia, dopóki ten gracz jest w pojezdzie.");
		if(id != INVALID_PLAYER_ID)
        {
		new itemid;
		itemid = 0;
		for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
			{
			if(Thing[i][t_owner] == PlayerInfo[playerid][pSQLID])
			 {
			if(Thing[i][t_type] == 107)
			 {
			itemid = i;
				}
			   }
			 }
			if(PlayerInfo[id][pGunLic] == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}Ten obywatel nie ma licencji na bron.");
			if(strcmp(x_weapon,"sdpistol",true) == 0)
			{
			    if(Thing[itemid][t_number] < 100) return SendClientMessage(playerid,COLOR_GRAD2, "Nie masz tylu materialów! (100) Pamietaj ze aby stworzyc bron musisz miec materialy w 1 przedmiocie (Zlacz je)");
				weapon[playerid] = 23;
				price[playerid] = 100;
				ammo[playerid] = 100;
			}
			else if(strcmp(x_weapon,"deagle",true) == 0)
			{
			    if(Thing[itemid][t_number] < 150) return SendClientMessage(playerid,COLOR_GRAD2, "Nie masz tylu materialów! (150) Pamietaj ze aby stworzyc bron musisz miec materialy w 1 przedmiocie (Zlacz je)");
			    weapon[playerid] = 24;
				price[playerid] = 150;
				ammo[playerid] = 100;
			}
			else if(strcmp(x_weapon,"mp5",true) == 0)
			{
			    if(Thing[itemid][t_number] < 200) return SendClientMessage(playerid,COLOR_GRAD2, "Nie masz tylu materialów! (200) Pamietaj ze aby stworzyc bron musisz miec materialy w 1 przedmiocie (Zlacz je)");
			    weapon[playerid] = 29;
				price[playerid] = 200;
				ammo[playerid] = 150;
			}
			else if(strcmp(x_weapon,"shotgun",true) == 0)
			{
			    if(Thing[itemid][t_number] < 300) return SendClientMessage(playerid,COLOR_GRAD2, "Nie masz tylu materialów! (300) Pamietaj ze aby stworzyc bron musisz miec materialy w 1 przedmiocie (Zlacz je)");
			    weapon[playerid] = 25;
				price[playerid] = 300;
				ammo[playerid] = 50;
			}
			else if(strcmp(x_weapon,"ak47",true) == 0)
			{
			    if(Thing[itemid][t_number] < 350) return SendClientMessage(playerid,COLOR_GRAD2, "Nie masz tylu materialów! (350) Pamietaj ze aby stworzyc bron musisz miec materialy w 1 przedmiocie (Zlacz je)");
			    weapon[playerid] = 30;
				price[playerid] = 350;
				ammo[playerid] = 150;
			}
			else if(strcmp(x_weapon,"m4",true) == 0)
			{
			    if(Thing[itemid][t_number] < 400) return SendClientMessage(playerid,COLOR_GRAD2, "Nie masz tylu materialów! (400) Pamietaj ze aby stworzyc bron musisz miec materialy w 1 przedmiocie (Zlacz je)");
				weapon[playerid] = 31;
				price[playerid] = 400;
				ammo[playerid] = 150;
			}
			else if(strcmp(x_weapon,"rifle",true) == 0)
			{
			    if(Thing[itemid][t_number] < 600) return SendClientMessage(playerid,COLOR_GRAD2, "Nie masz tylu materialów! (600) Pamietaj ze aby stworzyc bron musisz miec materialy w 1 przedmiocie (Zlacz je)");
			    weapon[playerid] = 33;
				price[playerid] = 600;
				ammo[playerid] = 25;
			}
			else return SendClientMessage(playerid,COLOR_WHITE,"Podana nazwa broni jest niepoprawna.");
			if(price2 < 1 || price2 > 100000) return SendClientMessage(playerid,COLOR_WHITE,"Minimalna cena to $1 a maksymalna $100000.");
			if (ProxDetectorS(5.0, playerid, id))
			{
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				SellgunOffer[id] = playerid;
				SellgunPrice[id] = price2;
				SellgunMats[id] = price[playerid];
				SellgunAmmo[id] = ammo[playerid];
				SellgunID[id] = weapon[playerid];
				new gunname[50];
				GetWeaponNameEx(weapon[playerid],gunname,sizeof(gunname));
				format(string, sizeof(string), "{B8FFDB}* Zaoferowales %s %s za %s$.",giveplayer,gunname,FormatNumber(price2));
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "{B8FFDB}* %s zaoferowal Ci %s za %s$, (wpisz /akceptuj bron %d) aby akceptowac oferte.",sendername,gunname,FormatNumber(price2),playerid);
				SendClientMessage(id, COLOR_WHITE, string);
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest blisko ciebie.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	return 1;
}

function HideMowerObjects(playerid) {
	for(new i=0; i<12; i++) {
		if(mowerobj[playerid][i] != 0) {
			DestroyPlayerObject(playerid, mowerobj[playerid][i]);
			mowerobj[playerid][i] = 0;
		}
	}
	return 1;
}

function HideFarmerObjects(playerid) {
	for(new i=0; i<70; i++) {
		if(farmobj[playerid][i] != 0) {
			DestroyPlayerObject(playerid, farmobj[playerid][i]);
			farmobj[playerid][i] = 0;
		}
	}
	return 1;
}

function ShowFarmerObjects(playerid) {
	farmobj[playerid][0] = CreatePlayerObject(playerid, 872, -126.31320, 57.79793, 2.64140,   0.00000, 0.00000, 0.00000);
	farmobj[playerid][1] = CreatePlayerObject(playerid, 872, -131.92044, 41.85484, 2.64140,   0.00000, 0.00000, 0.00000);
	farmobj[playerid][2] = CreatePlayerObject(playerid, 872, -146.25810, 47.04414, 2.64140,   0.00000, 0.00000, 0.00000);
	farmobj[playerid][3] = CreatePlayerObject(playerid, 872, -140.72925, 63.10469, 2.64140,   0.00000, 0.00000, -0.24000);
	farmobj[playerid][4] = CreatePlayerObject(playerid, 872, -155.86375, 69.74763, 2.64140,   0.00000, 0.00000, 0.00000);
	farmobj[playerid][5] = CreatePlayerObject(playerid, 872, -161.45853, 52.54005, 2.64140,   0.00000, 0.00000, 0.60000);
	farmobj[playerid][6] = CreatePlayerObject(playerid, 872, -138.23868, 24.99846, 2.64140,   0.00000, 0.00000, 0.00000);
	farmobj[playerid][7] = CreatePlayerObject(playerid, 872, -151.94897, 28.53493, 2.64140,   0.00000, 0.00000, 0.12000);
	farmobj[playerid][8] = CreatePlayerObject(playerid, 872, -167.69366, 34.34010, 2.64140,   0.00000, 0.00000, -0.12000);
	farmobj[playerid][9] = CreatePlayerObject(playerid, 872, -145.27104, 6.27454, 2.64140,   0.00000, 0.00000, 0.00000);
	farmobj[playerid][10] = CreatePlayerObject(playerid, 872, -157.63394, 12.24600, 2.64140,   0.00000, 0.00000, 0.96000);
	farmobj[playerid][11] = CreatePlayerObject(playerid, 872, -172.63692, 18.15729, 2.64140,   0.00000, 0.00000, -0.06000);
	farmobj[playerid][12] = CreatePlayerObject(playerid, 872, -152.55196, -10.67732, 2.64140,   0.00000, 0.00000, 0.54000);
	farmobj[playerid][13] = CreatePlayerObject(playerid, 872, -165.73528, -5.08819, 2.64140,   0.00000, 0.00000, 0.42000);
	farmobj[playerid][14] = CreatePlayerObject(playerid, 872, -179.11043, -0.49343, 2.64140,   0.00000, 0.00000, 0.00000);
	farmobj[playerid][15] = CreatePlayerObject(playerid, 872, -159.31020, -28.32910, 2.64140,   0.00000, 0.00000, 0.54000);
	farmobj[playerid][16] = CreatePlayerObject(playerid, 872, -171.80571, -22.02221, 2.64140,   0.00000, 0.00000, 1.92000);
	farmobj[playerid][17] = CreatePlayerObject(playerid, 872, -185.01457, -16.70184, 2.64140,   0.00000, 0.00000, 0.54000);
	farmobj[playerid][18] = CreatePlayerObject(playerid, 872, -166.29504, -45.95559, 2.64140,   0.00000, 0.00000, 0.54000);
	farmobj[playerid][19] = CreatePlayerObject(playerid, 872, -179.65427, -41.28563, 2.64140,   0.00000, 0.00000, 0.54000);
	farmobj[playerid][20] = CreatePlayerObject(playerid, 872, -192.00938, -35.87339, 2.64140,   0.00000, 0.00000, 0.54000);
	farmobj[playerid][21] = CreatePlayerObject(playerid, 872, -172.25316, -61.69171, 2.64140,   0.00000, 0.00000, 0.54000);
	farmobj[playerid][22] = CreatePlayerObject(playerid, 872, -185.40735, -57.76556, 2.64140,   0.00000, 0.00000, 0.72000);
	farmobj[playerid][23] = CreatePlayerObject(playerid, 872, -199.09566, -52.92851, 2.64140,   0.00000, 0.00000, 0.24000);
	farmobj[playerid][24] = CreatePlayerObject(playerid, 872, -207.14375, -31.92470, 2.64140,   0.00000, 0.00000, 0.54000);
	farmobj[playerid][25] = CreatePlayerObject(playerid, 872, -213.08908, -46.72758, 2.64140,   0.00000, 0.00000, 0.54000);
	farmobj[playerid][26] = CreatePlayerObject(playerid, 872, -200.98978, -11.52742, 2.64140,   0.00000, 0.00000, 0.54000);
	farmobj[playerid][27] = CreatePlayerObject(playerid, 872, -195.57019, 4.12127, 2.64140,   0.00000, 0.00000, 38.10000);
	farmobj[playerid][28] = CreatePlayerObject(playerid, 872, -189.49782, 22.31618, 2.64140,   0.00000, 0.00000, 38.10000);
	farmobj[playerid][29] = CreatePlayerObject(playerid, 872, -183.96407, 38.64014, 2.64140,   0.00000, 0.00000, 38.10000);
	farmobj[playerid][30] = CreatePlayerObject(playerid, 872, -178.32964, 57.06733, 2.64140,   0.00000, 0.00000, 38.10000);
	farmobj[playerid][31] = CreatePlayerObject(playerid, 872, -171.93912, 74.18954, 2.64140,   0.00000, 0.00000, 39.30000);
	farmobj[playerid][32] = CreatePlayerObject(playerid, 872, -229.35033, 95.51638, 1.40449,   0.00000, 0.00000, 39.24000);
	farmobj[playerid][33] = CreatePlayerObject(playerid, 872, -210.54608, 88.74751, 1.97997,   0.00000, 0.00000, 39.24000);
	farmobj[playerid][34] = CreatePlayerObject(playerid, 872, -191.66759, 81.80237, 2.64140,   0.00000, 0.00000, 48.48000);
	farmobj[playerid][35] = CreatePlayerObject(playerid, 872, -241.43912, 72.89980, 1.40449,   0.00000, 0.00000, 39.24000);
	farmobj[playerid][36] = CreatePlayerObject(playerid, 872, -219.50311, 63.75337, 2.24240,   0.00000, 0.00000, 39.24000);
	farmobj[playerid][37] = CreatePlayerObject(playerid, 872, -247.48291, 56.80265, 1.40449,   0.00000, 0.00000, 39.24000);
	farmobj[playerid][38] = CreatePlayerObject(playerid, 872, -253.34338, 35.83281, 1.40449,   0.00000, 0.00000, 15.84000);
	farmobj[playerid][39] = CreatePlayerObject(playerid, 872, -260.22452, 15.99219, 1.40449,   0.00000, 0.00000, 0.90000);
	farmobj[playerid][40] = CreatePlayerObject(playerid, 872, -253.34338, 35.83281, 1.40449,   0.00000, 0.00000, 15.84000);
	farmobj[playerid][41] = CreatePlayerObject(playerid, 872, -265.93948, -4.69743, 1.40449,   0.00000, 0.00000, -3.66000);
	farmobj[playerid][42] = CreatePlayerObject(playerid, 872, -271.50836, -23.59697, 1.40449,   0.00000, 0.00000, -3.66000);
	farmobj[playerid][43] = CreatePlayerObject(playerid, 872, -275.45279, -38.26259, 1.40449,   0.00000, 0.00000, -10.86000);
	farmobj[playerid][44] = CreatePlayerObject(playerid, 872, -198.74203, 58.13530, 2.64140,   0.00000, 0.00000, 48.48000);
	farmobj[playerid][45] = CreatePlayerObject(playerid, 872, -223.69292, 47.17229, 2.64140,   0.00000, 0.00000, 48.72001);
	farmobj[playerid][46] = CreatePlayerObject(playerid, 872, -204.86844, 40.59549, 2.64140,   0.00000, 0.00000, 52.62000);
	farmobj[playerid][47] = CreatePlayerObject(playerid, 872, -210.91193, 19.96154, 2.64140,   0.00000, 0.00000, 52.62000);
	farmobj[playerid][48] = CreatePlayerObject(playerid, 872, -229.64909, 27.16617, 2.64140,   0.00000, 0.00000, 52.38000);
	farmobj[playerid][49] = CreatePlayerObject(playerid, 872, -218.13661, 0.81248, 2.64140,   0.00000, 0.00000, 76.26000);
	farmobj[playerid][50] = CreatePlayerObject(playerid, 872, -236.04741, 9.43892, 2.64140,   0.00000, 0.00000, 54.12000);
	farmobj[playerid][51] = CreatePlayerObject(playerid, 872, -223.25839, -16.10955, 2.64140,   0.00000, 0.00000, 76.50000);
	farmobj[playerid][52] = CreatePlayerObject(playerid, 872, -242.98398, -10.17081, 2.64140,   0.00000, 0.00000, 76.56000);
	farmobj[playerid][53] = CreatePlayerObject(playerid, 872, -249.69847, -26.89772, 2.64140,   0.00000, 0.00000, 95.16000);
	farmobj[playerid][54] = CreatePlayerObject(playerid, 872, -228.40097, -31.67301, 2.64140,   0.00000, 0.00000, 76.56000);
	farmobj[playerid][55] = CreatePlayerObject(playerid, 872, -234.79672, -51.26039, 2.64140,   0.00000, 0.00000, 76.56000);
	farmobj[playerid][56] = CreatePlayerObject(playerid, 872, -253.74765, -44.55552, 2.64140,   0.00000, 0.00000, 76.56000);
	farmobj[playerid][57] = CreatePlayerObject(playerid, 872, -217.17714, -57.39472, 2.64140,   0.00000, 0.00000, 76.56000);
	farmobj[playerid][58] = CreatePlayerObject(playerid, 872, -202.90996, -62.93708, 2.64140,   0.00000, 0.00000, 76.56000);
	farmobj[playerid][59] = CreatePlayerObject(playerid, 872, -190.04466, -67.96265, 2.64140,   0.00000, 0.00000, 76.56000);
	farmobj[playerid][60] = CreatePlayerObject(playerid, 872, -176.92703, -71.51519, 2.64140,   0.00000, 0.00000, 74.03999);
	farmobj[playerid][61] = CreatePlayerObject(playerid, 872, -183.88304, -82.61775, 2.64140,   0.00000, 0.00000, 74.03999);
	farmobj[playerid][62] = CreatePlayerObject(playerid, 872, -193.71664, -80.04971, 2.64140,   0.00000, 0.00000, 74.03999);
	farmobj[playerid][63] = CreatePlayerObject(playerid, 872, -206.22394, -76.42412, 2.64140,   0.00000, 0.00000, 74.03999);
	farmobj[playerid][64] = CreatePlayerObject(playerid, 872, -221.37863, -71.28752, 2.64140,   0.00000, 0.00000, 83.28000);
	farmobj[playerid][65] = CreatePlayerObject(playerid, 872, -239.98096, -65.28379, 2.64140,   0.00000, 0.00000, 83.28000);
	farmobj[playerid][66] = CreatePlayerObject(playerid, 872, -258.43713, -57.45726, 2.64140,   0.00000, 0.00000, 90.23999);
	farmobj[playerid][67] = CreatePlayerObject(playerid, 872, -275.36755, -51.52993, 2.64140,   0.00000, 0.00000, 120.23999);
	farmobj[playerid][68] = CreatePlayerObject(playerid, 872, -263.21744, -67.78632, 2.64140,   0.00000, 0.00000, 120.23999);
	farmobj[playerid][69] = CreatePlayerObject(playerid, 872, -243.75461, -76.76117, 2.64140,   0.00000, 0.00000, 83.64000);
	return 1;
}

function HideTextdraw(playerid) {
	if(!IsPlayerConnected(playerid)) return 1;
	PlayerTextDrawHide(playerid, InfosTD);
	return 1;
}

CMD:stopwork(playerid, params[]) {
	if(JobWorking[playerid] == 0) return SCM(playerid, -1, "Nie jeste podczas pracy!");
	JobWorking[playerid] = 0;
	PlayerTextDrawHide(playerid, JobTD);
	if(JobVehicle[playerid] != 0) { DestroyVehicle(JobVehicle[playerid]); JobVehicle[playerid] = 0; }
	if(Trailer[playerid] != 0) { DestroyVehicle(Trailer[playerid]); Trailer[playerid] = 0; TruckerRoute[playerid] = 15; }
	PlayerTextDrawHide(playerid, InfosTD);
	DisablePlayerCheckpoint(playerid);
	CP[playerid] = 0;
	NaczepaStart[playerid] = 0;
	JobVehicle[playerid] = 0;
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Zakonczyles prace!.");
	HideFarmerObjects(playerid);
	PlayerTime2[playerid] = 3;
	RemovePlayerAttachedObject(playerid, 2);
    for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
    {
        if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
    }
	return 1;
}

CMD:getjob(playerid, params[])
{
	new string[256], str[256], job;
	if(PlayerInfo[playerid][pJob] != 0) return SendClientMessage(playerid, COLOR_GREY, "Masz juz prace. Aby wyjsc, mozesz uzyc komendy /quitjob.");
	for(new j = 1; j < MAX_JOBS; j++)
	{
		if(PlayerToPoint(3.0, playerid, JobInfo[j][jPosX], JobInfo[j][jPosY], JobInfo[j][jPosZ]))
		{
			if(PlayerInfo[playerid][pLevel] < JobInfo[j][jLevel]) {
				format(string, sizeof(string), "Aby podjac prace %s, potrzebujesz poziomu %d.",  JobInfo[j][jName], JobInfo[j][jLevel]);
				SendClientMessage(playerid, COLOR_GREY, string);
				return 1;
			}
			if(JobInfo[j][jLegal] == 0 && !IsAMember(playerid)) {
				format(string, sizeof(string), "Musisz miec organizacje przestepcza!");
				SendClientMessage(playerid, COLOR_GREY, string);
				return 1;
			}
			format(string, sizeof(string), "* Gratulacje! Twoja nowa praca to teraz %s.", JobInfo[j][jName]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Aby zobaczyc nowe komendy dla tej pracy, skorzystaj z menu /pomoc > Praca.");
			PlayerInfo[playerid][pJob] = j;
			job = 1;
		}
	}
	if(job == 0) return SendClientMessage(playerid, COLOR_YELLOW2, "Nie jeste w poblizu miejsca pracy.");
	mysql_format(SQL, str,128,"UPDATE `users` SET `Job`='%d' WHERE `ID`='%d' LIMIT 1",PlayerInfo[playerid][pJob],PlayerInfo[playerid][pSQLID]);
	mysql_tquery(SQL, str, "", "");
	return 1;
}

CMD:quitjob(playerid, params[])
{
	new str[256];
	if(PlayerInfo[playerid][pJob] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz pracy.");
	if(JobWorking[playerid] == 1) return SCM(playerid, -1, "Jestes podczas pracy, wpisz /stopwork.");
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Odszedles z pracy.");
	PlayerInfo[playerid][pJob] = 0;
	if(JobWorking[playerid]) {
	    CP[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
	}
	JobWorking[playerid] = 0;
	PlayerTextDrawHide(playerid, JobTD);
    HideFarmerObjects(playerid);
    HideMowerObjects(playerid);
	if(JobVehicle[playerid] != 0) DestroyVehicle(JobVehicle[playerid]), JobVehicle[playerid] = 0;
	mysql_format(SQL, str,128,"UPDATE `users` SET `Job`='%d' WHERE `ID`='%d' LIMIT 1",PlayerInfo[playerid][pJob],PlayerInfo[playerid][pSQLID]);
	mysql_tquery(SQL, str, "", "");
	return 1;
}

CMD:prace(playerid, params[]) {
	new szType[256], szDialog[1024], szDialog2[1024], szTitle[50], xx;
	for(new j = 0; j < MAX_JOBS; j++)
	{
		if(strlen(JobInfo[j][jName]) >= 1)
		{
			if(JobInfo[j][jLegal] == 0) szType = "Nielegalna";
			else if(JobInfo[j][jLegal] == 1) szType = "Legalna";
			if(xx == 0) format(szDialog, sizeof(szDialog), "Nazwa\tLokalizacja\n%s\t%s\tKilknij!\n", JobInfo[j][jName]);
			else format(szDialog, sizeof(szDialog), "%s\tKilknij\n", JobInfo[j][jName]);
			strcat(szDialog2, szDialog);
			xx++;
		}
	}
	format(szTitle, sizeof(szTitle), "Dostepne prace: 11");
	ShowPlayerDialog(playerid, DIALOG_JOBS, DIALOG_STYLE_TABLIST_HEADERS, szTitle, szDialog2, "Wybierz", "Anuluj");
	return 1;
}

stock GetJobType(jid) {
	new szType[256];
	if(JobInfo[jid][jLegal] == 0) szType = "Nielegalna";
	else if(JobInfo[jid][jLegal] == 1) szType = "Legalna";
	return szType;
}

function GetJobWorkers(jid) {
	new x;
	foreach(Player, i) {
	    if(PlayerInfo[i][pJob] == jid && JobWorking[i] == 1) {
	        x++;
	    }
	}
	return x;
}

CMD:shop(playerid,params[])
{
    ShowShop(playerid);
	return 1;
}

CMD:removeclan(playerid, params[]) {
	new membrii, szQuery[256], string[180];
	if(PlayerInfo[playerid][pClan] == 0 || PlayerInfo[playerid][pClanRank] != 6) return SendClientMessage(playerid,-1,"Nu ai un clan!");
	new clanid = PlayerInfo[playerid][pClan];
	foreach(Player, i) {
	    if(IsPlayerLogged[i] == 1 && PlayerInfo[i][pClan] == clanid && i != playerid) {
	        SendClientMessage(i, COLOR_YELLOW, "Ai fost demis din acest clan! Powód: Liderul a renuntat la clan.");
	        SendClientMessage(i, COLOR_YELLOW, "Server: Tag-ul a fost scos. Numele tau nu a fost afectat.");
	        PlayerInfo[i][pClan] = 0;
	        PlayerInfo[i][pClanRank] = 0;
	        //SetPlayerName(i, PlayerInfo[i][pUsername]);
			format(szQuery, sizeof(szQuery), "UPDATE `users` SET `Clan`='0', `ClanRank`='0', `ClanDays`='0', `ClanWarns`='0' WHERE `Name`='%s'", GetName(i));
			mysql_query(SQL, szQuery);
	        membrii++;
	    }
	}
    format(szQuery, sizeof(szQuery), "SELECT * FROM `users` WHERE `Clan` = '%d'", clanid);
    new Cache: result = mysql_query(SQL, szQuery);
    new idwtf[180];
    for(new i, j = cache_get_row_count (); i < j; i++)
    {
        cache_get_field_content(i, "id", idwtf);
 		membrii++;
 		new szQuery2[256];
		mysql_format(SQL, szQuery2, sizeof(szQuery2), "UPDATE `users` SET `Clan`='0', `ClanRank`='0', `ClanDays`='0', `ClanWarns`='0' WHERE `ID`='%d'", strval(idwtf));
	    mysql_tquery(SQL,szQuery2, "", "");
    }
    cache_delete(result);

	format(string, sizeof(string), "Ai sters clanul cu succes! Nu-l mai poti recupera. [%d Membrii au fost scosi]", membrii);
	SendClientMessage(playerid, COLOR_YELLOW, string);
	//SetPlayerName(playerid, PlayerInfo[playerid][pUsername]);

	mysql_format(SQL, string,128,"DELETE FROM `clans` WHERE `ID`='%d'",clanid);
	mysql_query(SQL, string);

	PlayerInfo[playerid][pClan] = 0;
	PlayerInfo[playerid][pClanRank] = 0;
	return 1;
}
CMD:addsafezone(playerid, params[])
{
	new range, string[256], Float: Pos[3];
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_GREY, "Nie masz dostepu!");
	if(sscanf(params, "i", range)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/addsafezone <raza>");
	if(range < 15) return SCM(playerid, COLOR_GREY, "Raza prea mica. (minim 15m)");
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
    mysql_format(SQL, string, sizeof(string), "INSERT INTO `safezones` (`X`, `Y`, `Z`, `Range`) VALUES ('%f', '%f', '%f', '%d')", Pos[0], Pos[1], Pos[2], range);
	new Cache: result = mysql_query(SQL, string);
	new i = cache_insert_id();
	SafeZone[i][szX] = Pos[0];
	SafeZone[i][szY] = Pos[1];
	SafeZone[i][szZ] = Pos[2];
	SafeZone[i][szRange] = range;
	cache_delete(result);
	SCM(playerid, COLOR_GOLD, "Acest loc a fost adaugat cu succes in baza de date.");
	format(string, sizeof(string), "Informatii: ID %d, Coordonate (%f, %f, %f), raza %d.", i, Pos[0], Pos[1], Pos[2], range);
	SCM(playerid, COLOR_GOLD, string);
	return 1;
}

CMD:editsafezone(playerid, params[])
{
	new szDialog[1024], szDialog2[1024];
	new szZone[128];
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_GREY, "Nie masz dostepu!");
	for(new i = 0; i < MAX_SAFEZONES; i++)
	{
	    if(SafeZone[i][szRange] >= 15) {
	        GetPlayer3DZone2(SafeZone[i][szX], SafeZone[i][szY], SafeZone[i][szZ], szZone, sizeof(szZone));
	        format(szDialog, sizeof(szDialog), "%d. %s\n", i, szZone);
	        strcat(szDialog2, szDialog);
	    }
	}
	ShowPlayerDialog(playerid, DIALOG_EDITSF, DIALOG_STYLE_TABLIST, "Safezones:", szDialog2, "Ok", "Iesire");
	return 1;
}

CMD:createhouse(playerid, params[])
{
	new pret, nivel;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_GREY, "Nie masz dostepu!");
	if(CreateHouse[playerid] == 1) return SCM(playerid, COLOR_GREY, "Deja creezi o casa!");
	if(sscanf(params, "ii", pret, nivel)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/createhouse <cena> <poziom>");
    PlayerTextDrawSetString(playerid, ShopTDs[1], "Wybor interiora");
	CreateHouse[playerid] = 1;
	SInterior[playerid] = 1;
	pPret[playerid] = pret;
	pNivel[playerid] = nivel;
	GetPlayerPos(playerid, pPos[playerid][0], pPos[playerid][1], pPos[playerid][2]);
    pInteriorID[playerid] = GetPlayerInterior(playerid), pVirtual[playerid] = GetPlayerVirtualWorld(playerid);
	SetInteriorCamera(playerid);
	ShowShopTDs(playerid);
	SetPlayerVirtualWorld(playerid, playerid+900);
	return 1;
}

CMD:deleteclan(playerid, params[])
{
	new membrii, szQuery[128], string[128], clanid;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_WHITE, "Nie masz dostepu!");
	if(sscanf(params, "i", clanid)) return SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/deleteclan <id>");
	foreach(Player, i) {
	    if(PlayerInfo[playerid][pClan] == clanid && clanid != 0) {
	        SCM(i, COLOR_GOLD, "Zostales zwolniony z tego klanu! Powód: Klan zostal usuniety przez administratora.");
	        SCM(i, COLOR_GOLD, "Server: Tag zostal usuniety. Twoje imie nie zostalo zmienione.");
	        PlayerInfo[i][pClan] = 0;
	        PlayerInfo[i][pClanRank] = 0;
	        //SetPlayerName(i, PlayerInfo[i][pUsername]); name klan
			format(szQuery, sizeof(szQuery), "UPDATE `users` SET `Clan`='0', `ClanRank`='0' WHERE `Name`='%s'", GetName(i));
			mysql_query(SQL, szQuery);
	        membrii++;
	    }
	}

    format(szQuery, sizeof(szQuery), "SELECT * FROM `users` WHERE `Clan` = '%d'", clanid);
    new Cache: result = mysql_query(SQL, szQuery);
    new idwtf[128];
    for(new i, j = cache_get_row_count (); i < j; i++)
    {
        cache_get_field_content(i, "id", idwtf);
 		membrii++;
 		new szQuery2[128];
		mysql_format(SQL, szQuery2, sizeof(szQuery2), "UPDATE `users` SET `Clan`='0', `ClanRank`='0' WHERE `ID`='%d'", strval(idwtf));
	    mysql_tquery(SQL,szQuery2, "", "");
    }
    cache_delete(result);
	format(string, sizeof(string), "Klan zostal pomyslnie usuniety! [%d czlonków usunietych]", membrii);
	SCM(playerid, COLOR_GOLD, string);
	mysql_format(SQL,string,128,"DELETE FROM `clans` WHERE `ID`='%d'",clanid);
	mysql_query(SQL, string);
	return 1;
}


function GetFactionMembers(fid) {
	new membrii;
	new szQuery[256];
    format(szQuery, sizeof(szQuery), "SELECT * FROM `users` WHERE `Member` = '%d'", fid);
    new Cache: result = mysql_query(SQL, szQuery);
    for(new i, j = cache_get_row_count (); i < j; i++)
    {
 		membrii++;
    }
    cache_delete(result);
	return membrii;
}


public AntySpamTimer(playerid){
AntySpam[playerid] = 0;
return 1;
}

CMD:rodzina(playerid,params[])
{
	if(PlayerInfo[playerid][pClan] == 0) return  SendClientMessage(playerid, COLOR_GREY, "Nie masz rodziny!");
	ShowPlayerDialog(playerid, DIALOG_CLAN_COMMAND, DIALOG_STYLE_LIST, "Rodzina:", "Komendy rodzinne\nCz³onkowie rodziny\nUstawienia", "Wybierz", "Anuluj");
	return 1;
}

CMD:rduty(playerid, params[])
{
	new clanid = PlayerInfo[playerid][pClan];
    if(clanid == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz rodziny!");
	switch(ClanDuty[playerid]) {
	    case 0: SendClientMessage(playerid, -1, "Teraz jeste na duty rodziny!"), ClanDuty[playerid] = 1;
	    case 1: {
			if(ClanDuty[playerid] == 1) {
				SendClientMessage(playerid, -1, "Teraz ju¿ nie jeste na duty rodziny!");
				ClanProces[playerid] = 0;
				ClanDuty[playerid] = 0;
			}
		}
	}
	return 1;
}

CMD:rradio(playerid, params[]) return cmd_rr(playerid, params);
CMD:rr(playerid, params[])
{
	new
		message[256],
		szMessage[256],
		clanid = PlayerInfo[playerid][pClan];

	if(IsPlayerLogged[playerid] == 0) return 1;
	if(clanid == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz rodziny!");
	if(sscanf(params, "s[160]", message)) return SendClientMessage(playerid, COLOR_GREY, "U?ycie: {FFFFFF}/rr <wiadomooa>");
	switch(PlayerInfo[playerid][pClanRank])
	{
	    case 1: format(szMessage, sizeof(szMessage), "{00ccff}(!) %s %s: %s",  ClanInfo[clanid][clRankName1], GetName(playerid), message);
	    case 2: format(szMessage, sizeof(szMessage), "{00ccff}(!) %s %s: %s",  ClanInfo[clanid][clRankName2], GetName(playerid), message);
	    case 3: format(szMessage, sizeof(szMessage), "{00ccff}(!) %s %s: %s",  ClanInfo[clanid][clRankName3], GetName(playerid), message);
	    case 4: format(szMessage, sizeof(szMessage), "{00ccff}(!) %s %s: %s",  ClanInfo[clanid][clRankName4], GetName(playerid), message);
	    case 5: format(szMessage, sizeof(szMessage), "{00ccff}(!) %s %s: %s",  ClanInfo[clanid][clRankName5], GetName(playerid), message);
	    case 6: format(szMessage, sizeof(szMessage), "{00ccff}(!) %s %s: %s",  ClanInfo[clanid][clRankName6], GetName(playerid), message);
	}
	SendClanMessage(clanid, szMessage);
	return 1;
}

stock SendClanMessage(clanid, text[])
{
	for(new i = 0; i < MAX_PLAYERS; i++) {
        if(IsPlayerLogged[i] == 1 && clanid != 0) {
    		if(PlayerInfo[i][pClan] == clanid) {
				SendClientMessage(i, COLOR_WHITE, text);
    		}
        }
	}
	return 1;
}

CMD:rprzyjmij(playerid, params[])
{
	new
		userID,
		string[256],
		clanid = PlayerInfo[playerid][pClan];

	if(IsPlayerLogged[playerid] == 0) return 1;
	if(sscanf(params, "u", userID)) return SendClientMessage(playerid, COLOR_GREY, "U¿ycie: {FFFFFF}/rprzyjmij <playerid>");
	if(!ProxDetectorS(5.0, playerid, userID)) return SendClientMessage(playerid, COLOR_GREY, "Nie znajdujesz sie obok tego gracza!");
	if(userID == playerid) return 1;
	
	if(!IsPlayerLogged[userID] && !IsPlayerConnected(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest po³¹czony.");
	if(PlayerInfo[playerid][pClan] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie posiadasz rodziny!");
    if(PlayerInfo[playerid][pClanRank] < 6) return SendClientMessage(playerid, COLOR_GREY, "W tej kategorii tylko w³aciciel rodziny ma dostep.");
	if(PlayerInfo[userID][pClan] != 0) return SendClientMessage(playerid, COLOR_GREY, "Gracz ma ju¿ rodzinê!");
	if(ClanInfo[clanid][clSlots] == 0) return SCM(playerid, COLOR_GREY, "Rodzina jest pe³na!");
	format(string, sizeof(string), "Wys³a³e zaproszenie graczowi %s do rodziny.", Nick(userID));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "Zosta³e zaproszony do rodziny %s przez %s.", ClanInfo[clanid][clName], GetName(playerid));
	SendClientMessage(userID, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "Wpisz /akceptuj rodzina %d aby do³¹czyæ!", playerid);
	SendClientMessage(userID, COLOR_LIGHTBLUE, string);

	InvitedClan[userID] = clanid;
	InvitedBy[userID] = playerid;
	return 1;
}

CMD:fjob(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pLeader] >= 1)
		{
		    new id,giveplayer[30],string[100];
			if(sscanf(params, "u", id)) return SCM(playerid,COLOR_GREY,"Uzycie: {FFFFFF}/fjob <id/nazwa>");
			GetPlayerName(id, giveplayer, sizeof(giveplayer));
			if(PlayerInfo[id][pLeader] >= 1) return SCM(playerid,COLOR_YELLOW2,"Ten gracz jest liderem.");
			if(PlayerInfo[id][pMember] == PlayerInfo[playerid][pLeader])
			{
	        	if(id != INVALID_PLAYER_ID)
	        	{
    				new jtext[20];
					if(PlayerInfo[id][pJob] >= 1) format(jtext, 20, "%s", JobInfo[PlayerInfo[id][pJob]][jName]);
					else jtext = "Brak";
					format(string, sizeof(string), "Twój podopieczny, %s ma pracê %s.", giveplayer,jtext);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				}
				else return SendClientMessage(playerid, COLOR_YELLOW2,"Ten gracz nie jest polaczony.");
			}
			else return SendClientMessage(playerid, COLOR_YELLOW2,"Nie ma go w twojej frakcji.");
		}
		else return SendClientMessage(playerid,COLOR_YELLOW2,"Nie jeste liderem!");
	}
	return 1;
}

CMD:bl(playerid, params[])
{
	return cmd_blacklist(playerid, params);
}

CMD:blacklist(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] == 0) return 1;
	new szQuery[256], szString[256], szDialog[1024], szDialog2[1024], onf, x, szTitle[256];
	format(szQuery, sizeof(szQuery), "SELECT * FROM `blacklist` WHERE `Faction`='%d'", PlayerInfo[playerid][pLeader]);
	new Cache: result = mysql_query(SQL, szQuery);

	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
		cache_get_field_content(i, "Name", szString);
		format(Selected[playerid][x], MAX_PLAYER_NAME, szString);
		new userID = GetPlayerID( szString );
		if(userID != INVALID_PLAYER_ID)
		{
			onf++;
			if(x == 0) format(szDialog, sizeof(szDialog), "Dodaj gracza...\n{13E300}%s (%d){FFFFFF}\n", szString, userID);
			else format(szDialog, sizeof(szDialog), "{13E300}%s (%d){FFFFFF}\n", szString, userID);
			strcat(szDialog2, szDialog);
		}
		else
		{
			if(x == 0) format(szDialog, sizeof(szDialog), "Dodaj gracza...\n{FF0000}%s{FFFFFF}\n", szString);
			else format(szDialog, sizeof(szDialog), "{FF0000}%s{FFFFFF}\n", szString);
			strcat(szDialog2, szDialog);
		}
		x++;
	}
	if(x == 0) {
		format(szDialog, sizeof(szDialog), "Dodaj gracza...");
		strcat(szDialog2, szDialog);
	}
	cache_delete(result);
	format(szTitle, sizeof(szTitle), "Graczy online: %d", onf);
	ShowPlayerDialog(playerid, DIALOG_BLACKLIST, DIALOG_STYLE_LIST, szTitle, szDialog2, "Wybierz", "Wróc");
	return 1;
}

CMD:mybl(playerid, params[])
{
	return cmd_myblacklist(playerid, params);
}

CMD:myblacklist(playerid, params[])
{
	new szQuery[256], szString[256], szDialog[1024], szDialog2[1024], x;
	format(szQuery, sizeof(szQuery), "SELECT * FROM `blacklist` WHERE `Userid` = '%d'", PlayerInfo[playerid][pSQLID]);
	new Cache: result = mysql_query(SQL, szQuery);

	new faction, addby[256];
	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
		cache_get_field_content(i, "Faction", szString);
		faction = strval(szString);
		cache_get_field_content(i, "Added", szString);
		format(addby, 256, szString);
		format(szDialog, 1024, "{FFFFFF}%d. Frakcja: {D10A0A}%s{FFFFFF} | Dodany przez: {D10A0A}%s\n", x+1, FactionName(faction), addby);
		strcat(szDialog2, szDialog);
		x++;
	}
	cache_delete(result);
	if(x == 0) return SCM(playerid, -1, "Nie znajdujesz sie na ¿adnej blackliscie!");
	ShowPlayerDialog(playerid, DIALOG_BLACKLIST, DIALOG_STYLE_MSGBOX, "Moje blacklisty:", szDialog2, "Ok", "Anuluj");
	return 1;
}

function IsInBlacklist(playerid, fid) {
	new szQuery[256], adev;
	format(szQuery, sizeof(szQuery), "SELECT * FROM `blacklist` WHERE `Userid`='%d'", PlayerInfo[playerid][pSQLID]);
	new Cache: result = mysql_query(SQL, szQuery);
	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
        adev ++;
    }
    cache_delete(result);
    if(adev != 0) return 1;
	return 0;
}


CMD:staff(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	new szQuery[1024], szResult[1024], szDialog[1024], szDialog2[4000], Cache: result, text[100];
	format(szQuery, sizeof(szQuery), "SELECT * FROM `users` WHERE `Admin`>'0' ORDER BY `users`.`Admin` DESC LIMIT 50");
	result = mysql_query(SQL, szQuery);
	
	new szPlayers;
	new szName[256], szAdmin, szLastOn[256], x, y, szTitle[256], status[256], userID;
	strcat(szDialog2, "{FFEE00}Admini:{FFFFFF}\n");
    for(new i, j = cache_get_row_count (); i < j; i++)
    {
		cache_get_field_content(i, "name", szResult); format(szName, 256, szResult);
		cache_get_field_content(i, "Admin", szResult); szAdmin = strval(szResult);
		cache_get_field_content(i, "lastOn", szResult); format(szLastOn, 256, szResult);	
		cache_get_field_content(i, "HelpedPlayers", szResult); szPlayers = strval(szResult);
		userID = GetPlayerID( szName );
		status = "{FF0000}(nieaktywny)"; 
		x++;
		if(userID != INVALID_PLAYER_ID){
		status = "{1AFF00}(aktywny)";
		format(szDialog, sizeof(szDialog), "%d.  A%d %s - %s{FFFFFF}\n", x, szAdmin, szName, status);
		} else {
		format(szDialog, sizeof(szDialog), "%d.  A%d %s - {8CC2FF}%s{FFFFFF}\n", x, szAdmin, szName, szLastOn);
		}
		
		strcat(szDialog2, szDialog);		
	}
	strcat(szDialog2, "\n");
	cache_delete(result);
	
	format(szQuery, sizeof(szQuery), "SELECT * FROM `users` WHERE `Helper`>'0' ORDER BY `users`.`Helper` DESC LIMIT 50");
	result = mysql_query(SQL, szQuery);	
	
	
	strcat(szDialog2, "{FFEE00}Supporterzy:{FFFFFF}\n");
    for(new i, j = cache_get_row_count (); i < j; i++)
    {
		cache_get_field_content(i, "name", szResult); format(szName, 256, szResult);
		cache_get_field_content(i, "Helper", szResult); szAdmin = strval(szResult);
		cache_get_field_content(i, "lastOn", szResult); format(szLastOn, 256, szResult);
		cache_get_field_content(i, "HelpedPlayers", szResult); szPlayers = strval(szResult);
        
		userID = GetPlayerID( szName );
		status = "{FF0000}(nieaktywny)"; 
		y++;
		if(userID != INVALID_PLAYER_ID){
		status = "{1AFF00}(aktywny)";
		format(szDialog, sizeof(szDialog), "%d.  S%d %s - %s{FFFFFF}\n", y, szAdmin, szName, status);
		} else {
		format(szDialog, sizeof(szDialog), "%d.  S%d %s - {8CC2FF}%s{FFFFFF}\n", y, szAdmin, szName, szLastOn);
		}
		
		strcat(szDialog2, szDialog);		
	}
	cache_delete(result);
	format(szTitle, sizeof(szTitle), "\n\nADMIN: %d online || %d offline.\n", GetStaffOnline(0), x);
	strcat(szDialog2, szTitle);	
	format(szTitle, sizeof(szTitle), "SUPPORT: %d online || %d offline.", GetStaffOnline(1), y);
	strcat(szDialog2, szTitle);	
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Administracja", szDialog2, "Ok", "");
	return 1;	
	
}

function GetStaffOnline(type) {
	new x;
	switch(type) {
		case 0: {
			foreach(Player, i) {
				if(IsPlayerConnected(i) && PlayerInfo[i][pAdmin] != 0) x++;
			}
		}
		case 1: {
			foreach(Player, i) {
				if(IsPlayerConnected(i) && PlayerInfo[i][pHelper] != 0) x++;
			}
		}		
	}
	return x;
}


stock ShowPlayerFriends(playerid) {
	new
		szDialog[1024],
		szDialog2[1024],
		szQuery[256],
		szString[256],
		x;

	format(szQuery, sizeof(szQuery), "SELECT * FROM `friends` WHERE `AddBy` = '%d'", PlayerInfo[playerid][pSQLID]);
	new Cache: result = mysql_query(SQL, szQuery);
	
	strcat(szDialog2, "{FFAE45}[+] Dodaj znajomego{FFFFFF}\n");
	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
		cache_get_field_content(i, "friendName", szString); 
		format(Selected[playerid][x], MAX_PLAYER_NAME, szString);
		new userID = GetPlayerID( szString );
		format(szDialog, sizeof(szDialog), "%s %s\n", (userID != INVALID_PLAYER_ID) ? ("{228b22}[online]{FFFFFF}") : ("{d6133a}[offline]{FFFFFF}"), szString);
		strcat(szDialog2, szDialog);	
		x++;
	}
	cache_delete(result);
	ShowPlayerDialog(playerid, DIALOG_FRIENDS, DIALOG_STYLE_LIST, "Znajomi", szDialog2, "Ok", "Wyjdz");
	return 1;
}


function ShowPlayerRaport(playerid, targetid) {
	new szDialog[1024], szDialog2[1024];
	new ffID = PlayerInfo[playerid][pMember];
	strcat(szDialog2, "Ranga\tPolecenia\tWarunek\n");
	switch(PlayerInfo[targetid][pRank]) {
		case 1: format(szDialog, 1024, "Rank 1\t%d/%d\t%s\n", PlayerInfo[targetid][pCommands], FactionInfo[ffID][fRank1], (FactionInfo[ffID][fRank1]-PlayerInfo[targetid][pCommands] <= 0) ? ("{0DFF00}Zakonczony{FFFFFF}") : ("{FF0000}Nieskonczony{FFFFFF}"));
		case 2: format(szDialog, 1024, "Rank 2\t%d/%d\t%s\n", PlayerInfo[targetid][pCommands], FactionInfo[ffID][fRank2], (FactionInfo[ffID][fRank2]-PlayerInfo[targetid][pCommands] <= 0) ? ("{0DFF00}Zakonczony{FFFFFF}") : ("{FF0000}Nieskonczony{FFFFFF}"));
		case 3: format(szDialog, 1024, "Rank 3\t%d/%d\t%s\n", PlayerInfo[targetid][pCommands], FactionInfo[ffID][fRank3], (FactionInfo[ffID][fRank3]-PlayerInfo[targetid][pCommands] <= 0) ? ("{0DFF00}Zakonczony{FFFFFF}") : ("{FF0000}Nieskonczony{FFFFFF}"));
		case 4: format(szDialog, 1024, "Rank 4\t%d/%d\t%s\n", PlayerInfo[targetid][pCommands], FactionInfo[ffID][fRank4], (FactionInfo[ffID][fRank4]-PlayerInfo[targetid][pCommands] <= 0) ? ("{0DFF00}Zakonczony{FFFFFF}") : ("{FF0000}Nieskonczony{FFFFFF}"));
		case 5: format(szDialog, 1024, "Rank 5\t%d/%d\t%s\n", PlayerInfo[targetid][pCommands], FactionInfo[ffID][fRank5], (FactionInfo[ffID][fRank5]-PlayerInfo[targetid][pCommands] <= 0) ? ("{0DFF00}Zakonczony{FFFFFF}") : ("{FF0000}Nieskonczony{FFFFFF}"));
	}
	strcat(szDialog2, szDialog);
	new titleh[256];
	format(titleh, sizeof(titleh), "%s (%s)", GetName(targetid), GetFactionName(PlayerInfo[targetid][pMember]));
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, titleh, szDialog2, "Blisko", "");
	return 1;
}

CMD:myraport(playerid, params[])
{
    new ffID = PlayerInfo[playerid][pMember];
	if(ffID == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste czlonkiem zadnej frakcji!");
	if(PlayerInfo[playerid][pRank] == 7) return 1;
    ShowPlayerRaport(playerid, playerid);
	return 1;
}

CMD:checkraport(playerid, params[])
{
    new userID;
	if(PlayerInfo[playerid][pLeader] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste liderem!");
	if(sscanf(params, "u", userID)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/checkraport <playerid>");
	if(!IsPlayerConnected(userID)) return 1;
	if(userID == playerid) return 1;
	new ffID = PlayerInfo[userID][pMember];
	if(PlayerInfo[playerid][pLeader] != ffID) return 1;
	ShowPlayerRaport(playerid, userID);
	return 1;
}

CMD:furniture(playerid, params[])
{
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_RED, "Nie jeste zalogowany!");
	new house = PlayerInfo[playerid][pHouse];
	new bouse = PlayerInfo[playerid][pHouse];
	if(GetHouseObjects(house) == 50) return SCM(playerid,-1,"Masz maksymalna ilsoc mebli (50/50).");
	if(bouse != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
	{
        if(!PlayerToPoint(50.0, playerid, HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz]) && GetPlayerVirtualWorld(playerid) != HouseInfo[bouse][hVirtual]) return SCM(playerid, COLOR_GREY, "Nu esti in interiorul casei tale!");
		ShowModelSelectionMenu(playerid, furnitures, "Meble");
	}
	return 1;
}

CMD:editfurniture(playerid, params[])
{
	new furnituress;
	new house = PlayerInfo[playerid][pHouse];
	new bouse = PlayerInfo[playerid][pHouse];
	new szDialog[1024], string[256];
	if(bouse != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
	{
        if(!PlayerToPoint(50.0, playerid, HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz]) && GetPlayerVirtualWorld(playerid) != HouseInfo[bouse][hVirtual]) return SCM(playerid, COLOR_GREY, "Nu esti in interiorul casei tale!");
		if(GetHouseObjects(PlayerInfo[playerid][pHouse]) == 0) return SCM(playerid, -1, "Nu ai mobilier in casa!");
	    for(new i = 0; i != sizeof(FurnitureInfo); i++ )
	    {
	        if(FurnitureInfo[i][fiHouse] == house) {
				SelMobila[playerid][furnituress] = i;
				furnituress++;
				format(string, sizeof(string), "Slot %d\n", furnituress);
				strcat(szDialog, string);
	        }
	    }
	    ShowPlayerDialog(playerid, DIALOG_EDITMOBILA, DIALOG_STYLE_LIST, "Edycja:", szDialog, "Ok", "Wyjdz");
	}
	return 1;
}

stock GetHouseObjects(houseid) {
	new x;
    for(new i = 0; i != sizeof(FurnitureInfo); i++)
    {
        if(FurnitureInfo[i][fiHouse] == houseid) x++;
    }
	return x;
}

CMD:aaa3(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	SetPlayerPosEx(playerid, 1477.3879, 1746.0175, 10.9133);
	SetPlayerVirtualWorld(playerid, 1336);
	SCM(playerid, -1, "Welcome to LV airport (in virtual world).");
	return 1;
}

function UnfreezePlayer(playerid) {
	if(!IsPlayerConnected(playerid)) return 1;
	TogglePlayerControllable(playerid, 1);
	return 1;
}

CMD:listaobiektow(playerid, params[])
{
        new string[64];
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
		SendClientMessage(playerid, COLOR_GREY,"Lista obiektów serwerowych:");
        for(new i = 1; i < MAX_SOBJECTS; i++){
            if(Object[i][ouuid] == i) {
                format(string, sizeof(string), "ID: %d UUID: %d MODEL %d", Object[i][onumer],  Object[i][ouuid], Object[i][omodel]);
                SendClientMessage(playerid, COLOR_GREY,string);
				string = "";
            }
        }
        return 1;
}
CMD:listabram(playerid, params[])
{
        new string[64];
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
		SendClientMessage(playerid, COLOR_PURPLE,"Lista bram:");
        for(new i = 1; i < MAX_BRAMY; i++){
            if(Bramy[i][buuid] == i) {
                format(string, sizeof(string), "ID: %d UUID: %d MODEL %d", Bramy[i][bnumer],  Bramy[i][buuid], Bramy[i][bmodel]);
                SendClientMessage(playerid, COLOR_PURPLE,string);
				string = "";
            }
        }
        return 1;
}


CMD:vehinfo(playerid, params[], help)
{
	new string[128], colors[26];
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Musisz byc w pojezdzie.");
	new tmpcar = GetPlayerVehicleID(playerid);
	if(ServerVehicles[tmpcar][vModel] > 0) {
	format(string,sizeof(string),"Vehicle ID: {A9C4E4}%d",tmpcar);
	SendClientMessage(playerid, COLOR_WHITE,string);
	format(string,sizeof(string),"Model: {A9C4E4}%d",ServerVehicles[tmpcar][vModel]);
	SendClientMessage(playerid, COLOR_WHITE,string);		
	format(string,sizeof(string),"Pozycja: {A9C4E4}%f %f %f",ServerVehicles[tmpcar][vLocation][0],ServerVehicles[tmpcar][vLocation][1],ServerVehicles[tmpcar][vLocation][2]);
	SendClientMessage(playerid, COLOR_WHITE,string);
	format(string,sizeof(string),"Angle: {A9C4E4}%f",ServerVehicles[tmpcar][vAngle]);
	SendClientMessage(playerid, COLOR_WHITE,string);		
	format(string,sizeof(string),"Kolor 1: {A9C4E4}%d {FFFFFF}| 2: {A9C4E4}%d",ServerVehicles[tmpcar][vColor][0],ServerVehicles[tmpcar][vColor][1]);
	SendClientMessage(playerid, COLOR_WHITE,string);
	format(string,sizeof(string),"Frakcja: {A9C4E4}%d {FFFFFF}| Praca: {A9C4E4}%d {FFFFFF}| Rank: {A9C4E4}%d",ServerVehicles[tmpcar][vFaction],ServerVehicles[tmpcar][vJob],ServerVehicles[tmpcar][vRank]);
	SendClientMessage(playerid, COLOR_WHITE,string);
	format(string,sizeof(string),"Rejestracja: {A9C4E4}%s",ServerVehicles[tmpcar][vNumberPlate]);
	SendClientMessage(playerid, COLOR_WHITE,string);
	} else if(FindSpawnID(tmpcar) > 0){
	format(colors, sizeof(colors), "%d, %d", CarInfo[FindSpawnID(tmpcar)][cColorOne], CarInfo[FindSpawnID(tmpcar)][cColorTwo]);		
	format(string, sizeof(string), "(%s) UUID: %d | ID: %d | Kolory: %s", aVehicleNames[GetVehicleModel(tmpcar)-400], FindSpawnID(tmpcar), CarInfo[FindSpawnID(tmpcar)][Spawned], colors);
	SCM(playerid, COLOR_LIGHTRED, string);
			}
			return 1;
	}

/*

SYSTEM BRAM BY REST

*/

CMD:dodajbrame(playerid, params[])
{
		new oid,brama, faction, faction2, faction3;
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "iiii",oid, faction, faction2, faction3 )) {
            new string[320];
            new Float:x, Float:y, Float:z;
			new dbid = GetLastBrama();
			GetPlayerPos(playerid, x, y, z);
            brama = CreateDynamicObject(oid, x+2, y+2, z+2, 0.0, 0.0, 90.0, GetPlayerVirtualWorld(playerid), -1, -1, 300.00, 300.00);
			Bramy[dbid][buuid] = dbid;
			Bramy[dbid][bnumer] = brama;
			Bramy[dbid][bfaction] = faction;
			Bramy[dbid][bfaction2] = faction2;
			Bramy[dbid][bfaction3] = faction3;
			Bramy[dbid][bowner] = strval(GetName(playerid));
			Bramy[dbid][bmodel] = oid;
			Bramy[dbid][bLoc][0] = x+2;
			Bramy[dbid][bLoc][1] = y+2;
			Bramy[dbid][bLoc][2] = z+2;
			Bramy[dbid][bLoc2][0] = 0;
			Bramy[dbid][bLoc2][1] = 0;
			Bramy[dbid][bLoc2][2] = 0;
			Bramy[dbid][brange] = 5;
			Bramy[dbid][bvw] = GetPlayerVirtualWorld(playerid);
			mysql_format(SQL, string,512,"INSERT INTO `bramy` (`ID`, `Model`, `Stworzyl`, `Faction`,`Faction2`,`Faction3`, `X`, `Y`, `Z`, `RotX`, `RotY`, `RotZ`, `Virtual`) VALUES ('%d', '%d', '%s', '%d','%d','%d', '%f', '%f', '%f', '0.0', '0.0', '90.0', '%d')", dbid, Bramy[dbid][bmodel], GetName(playerid), faction,faction2,faction3, Bramy[dbid][bLoc][0], Bramy[dbid][bLoc][1], Bramy[dbid][bLoc][2], Bramy[dbid][bvw]);
			mysql_query(SQL, string);
			format(string, sizeof(string), "AdmCmd: %s dodal brame (UUID: %d, ID: %d Frakcja1: %d Frakcja2: %d Frakcja3: %d)", GetName(playerid), Bramy[dbid][buuid], Bramy[dbid][bnumer], Bramy[dbid][bfaction], Bramy[dbid][bfaction2], Bramy[dbid][bfaction3]);
			SendAdminMessage(COLOR_LOGS, string, 2);
			AdminLog("/logs/admin.log", string);
            format(string, sizeof(string), "STWORZONO BRAME: %d (%d,%f,%f,%f,0.0,0.0,90.0)",brama,oid,Bramy[dbid][bLoc][0],Bramy[dbid][bLoc][1],Bramy[dbid][bLoc][2]);
            SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
			return 1;
			}
        else
        {
            SendClientMessage(playerid,COLOR_GREY,"Uzyj : /dodajbrame [objectid] [frakcja1] [frakcja2] [frakcja3]");
			SendClientMessage(playerid,COLOR_LIGHTRED,"Przyklady: /dodajbrame idbramy 1 2 1 Izolatka");
			SendClientMessage(playerid,COLOR_LIGHTRED,"W tym przypadku wejsc bedzie mogl czlonek frakcji 1 oraz 2");
			SendClientMessage(playerid,COLOR_LIGHTGREEN,"Przyklady: /dodajbrame idbramy 0 0 0 Pomieszczenie sluzbowe");
			SendClientMessage(playerid,COLOR_LIGHTRED,"W tym przypadku wejsc beda mogli wszyscy");
            return 1;
      }
}

CMD:bramaodleglosc(playerid, params[])
{
		new bid, odleglosc;
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "ii", bid, odleglosc )) {
            new string[320];
            new Float:x, Float:y, Float:z;
			new dbid = bid;
			GetPlayerPos(playerid, x, y, z);
			Bramy[dbid][buuid] = dbid;
			Bramy[dbid][brange] = odleglosc;
			mysql_format(SQL, string, sizeof(string),
			"UPDATE `bramy` SET `bRange`='%d' WHERE `ID`='%d'", Bramy[dbid][brange], dbid);
			mysql_query(SQL, string);
			format(string, sizeof(string), "AdmCmd: %s edytowal odleglosc otwierania sie bramy o UUID: %d na %d", GetName(playerid), Bramy[dbid][buuid], Bramy[dbid][brange]);
			SendAdminMessage(COLOR_LOGS, string, 2);
			AdminLog("/logs/admin.log", string);
			return 1;
			}
        else
        {
            SendClientMessage(playerid,COLOR_GREY,"Uzyj : /bramaodleglosc [ID BRAMY] [ODLEGLOSC JAK BLISKO TRZEBA STAC np. 5.0]");
            return 1;
      }
}

CMD:3dbramy(playerid, params[])
{
        new string[256];
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
		if(BT3D == 0) {
		SendClientMessage(playerid, COLOR_GREEN,"Pomyslnie stworzylem dla wszystkich bram 3dText!");
        for(new i = 1; i < MAX_BRAMY; i++){
            if(Bramy[i][buuid] == i) {
			format(string, sizeof(string), "UUID: %d FRAKCJA1: %d FRAKCJA2: %d FRAKCJA3: %d", Bramy[i][buuid], Bramy[i][bfaction], Bramy[i][bfaction2], Bramy[i][bfaction3]);
			//					CreateDynamic3DTextLabel(string,COLOR_YELLOW2, Object[i][oLoc][0],Object[i][oLoc][1],Object[i][oLoc][2],100.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, Object[i][ovw], 0, -1, 100.0);
			Bramy[i][lbram] = CreateDynamic3DTextLabel(string,COLOR_NEWS, Bramy[i][bLoc][0],Bramy[i][bLoc][1],Bramy[i][bLoc][2],100.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, Bramy[i][bvw], 0, -1, 100.0);
            }
        }
		BT3D = 1;
		} else {
		if (BT3D == 1) {
		SendClientMessage(playerid, COLOR_LGREEN,"Pomyslnie usunalem dla wszystkich bram 3dText!");
        for(new i = 1; i < MAX_BRAMY; i++){
            if(Bramy[i][buuid] == i) {
			DestroyDynamic3DTextLabel(Bramy[i][lbram]);
            }
        }
		BT3D = 0;
			}
		}
		return 1;
}

CMD:edytujbrame2(playerid, params[])
{
		new string[126], modelid, oid, Float:bX, Float:bY, Float:bZ, Float:brX, Float:brY, Float:brZ;
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "i",oid ))
        {
			format(string, sizeof(string), "OID: %d NUMER: %d MODEL: %d", oid, Bramy[oid][bnumer], Bramy[oid][bmodel]);
			SCM(playerid, COLOR_GREEN, string);
			if(oid != Bramy[oid][bnumer]) {
			for(new i = 1; i < MAX_BRAMY; i++){
			if(Bramy[i][buuid] == oid) {
			modelid = Bramy[i][bmodel];		
			bX = Bramy[i][bLoc][0];
			bY = Bramy[i][bLoc][1];
			bZ = Bramy[i][bLoc][2];
			brX = Bramy[i][bRot][0];
			brY = Bramy[i][bRot][1];
			brZ = Bramy[i][bRot][2];
			
				}
			}
			EditOModel[playerid] = modelid;
			EdytowaneOB[playerid] = oid;
			BramaX[playerid] = bX;
			BramaY[playerid] = bY;
			BramaZ[playerid] = bZ;
			RotX[playerid] = brX;
			RotY[playerid] = brY;
			RotZ[playerid] = brZ;
			oid = Bramy[oid][bnumer];
			EditNModel[playerid] = oid;
            EditDynamicObject(playerid, oid);
			EditO[playerid] = 2;
            return 1;
			} else {
			SendClientMessage(playerid,COLOR_GREY,"Wpisz UUID obiektu, nie ID");
			return 1;
			}
        }else{
		SendClientMessage(playerid,COLOR_GREY,"Uzyj : /edytujbrame2 [objectid]");
		SendClientMessage(playerid,COLOR_LIGHTRED,"UWAGA: Komenda ta edytuje pozycje otwierania sie drzwi!");
		return 1;
	}
}

CMD:edytujbrame1(playerid, params[])
{
		new string[126], modelid, oid, Float:bX, Float:bY, Float:bZ, Float:brX, Float:brY, Float:brZ;
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "i",oid ))
        {
			format(string, sizeof(string), "OID: %d NUMER: %d MODEL: %d", oid, Bramy[oid][bnumer], Bramy[oid][bmodel]);
			SCM(playerid, COLOR_GREEN, string);
			if(oid != Bramy[oid][bnumer]) {
			for(new i = 1; i < MAX_BRAMY; i++){
			if(Bramy[i][buuid] == oid) {
			modelid = Bramy[i][bmodel];		
			bX = Bramy[i][bLoc][0];
			bY = Bramy[i][bLoc][1];
			bZ = Bramy[i][bLoc][2];
			brX = Bramy[i][bRot][0];
			brY = Bramy[i][bRot][1];
			brZ = Bramy[i][bRot][2];
			
				}
			}
			EditOModel[playerid] = modelid;
			EdytowaneOB[playerid] = oid;
			BramaX[playerid] = bX;
			BramaY[playerid] = bY;
			BramaZ[playerid] = bZ;
			RotX[playerid] = brX;
			RotY[playerid] = brY;
			RotZ[playerid] = brZ;
			oid = Bramy[oid][bnumer];
			EditNModel[playerid] = oid;
            EditDynamicObject(playerid, oid);
			EditO[playerid] = 3;
            return 1;
			} else {
			SendClientMessage(playerid,COLOR_GREY,"Wpisz UUID obiektu, nie ID");
			return 1;
			}
        }else{
		SendClientMessage(playerid,COLOR_GREY,"Uzyj : /edytujbrame1 [objectid]");
		SendClientMessage(playerid,COLOR_LIGHTRED,"UWAGA: Komenda ta edytuje wyjsciowa pozycje drzwi!");
		return 1;
	}
}

CMD:gotobrama(playerid, params[])
{
    new oid;
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "i",oid ))
        {
		if(Bramy[oid][buuid] == 0) {
			SendClientMessage(playerid,COLOR_GREY,"Nie ma takiej bramy w MYSQL");
			return 1;
			} else {
			 for(new i = 1; i < MAX_BRAMY; i++){
				if(Bramy[i][buuid] == oid) {
			    SetPlayerVirtualWorld(playerid, Bramy[oid][bvw]);	
                SetPlayerPos(playerid,Bramy[oid][bLoc][0]+1,Bramy[oid][bLoc][1]+1,Bramy[oid][bLoc][2]+1);
                return 1;
					}
				}
				return 1;
			}
        }
		else
		{
		SendClientMessage(playerid,COLOR_GREY,"Uzyj :/gotobrama [id bramy]"); return 1;
	}
}//bramy system

CMD:usunbrame(playerid, params[])
{
		new oid;
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "i",oid ))
        {	
			if(Bramy[oid][buuid] == 0) {
			SendClientMessage(playerid,COLOR_GREY,"Nie ma takiej bramy w MYSQL");
			return 1;
			} else {
			new string[128];
			mysql_format(SQL, string,128,"DELETE FROM `bramy` WHERE `ID`='%d'",oid);
			mysql_query(SQL, string);
			format(string, sizeof(string), "AdmCmd: %s usunal brame (ID: %d UUID: %d).", GetName(playerid),Bramy[oid][bnumer], oid);
			SendAdminMessage(COLOR_LOGS, string, 2);
			AdminLog("/logs/admin.log", string);
			DestroyDynamicObject(Bramy[oid][bnumer]);
			Bramy[oid][buuid] = 0;
			Bramy[oid][bnumer] = 0;
			Bramy[oid][bowner] = 0;
			Bramy[oid][bmodel] = 0;
			Bramy[oid][bLoc][0] = 0;
			Bramy[oid][bLoc][1] = 0;
			Bramy[oid][bLoc][2] = 0;
			Bramy[oid][bRot][0] = 0;
			Bramy[oid][bRot][1] = 0;
			Bramy[oid][bRot][2] = 0;
			Bramy[oid][bLoc2][0] = 0;
			Bramy[oid][bLoc2][1] = 0;
			Bramy[oid][bLoc2][2] = 0;
			Bramy[oid][bRot2][0] = 0;
			Bramy[oid][bRot2][1] = 0;
			Bramy[oid][bRot2][2] = 0;
			Bramy[oid][bvw] = 0;
			DestroyDynamic3DTextLabel(Bramy[oid][lbram]);
			return 1;
			}
		}
        else
        {
            SendClientMessage(playerid,COLOR_GREY,"Uzyj : /usunbrame [objectid]");
            return 1;
        }
}

/*

SYSTEM BRAM BY REST

*/

CMD:dob(playerid, params[])
{
		new oid,myobject;
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "i",oid )) {
            new string[320];
            new Float:x, Float:y, Float:z;
			new dbid = GetLastObject();
			GetPlayerPos(playerid, x, y, z);
            myobject = CreateDynamicObject(oid, x+2, y+2, z+2, 0.0, 0.0, 90.0, GetPlayerVirtualWorld(playerid), -1, -1, 300.00, 300.00);
			Object[dbid][ouuid] = dbid;
			Object[dbid][onumer] = myobject;
			Object[dbid][oowner] = strval(GetName(playerid));
			Object[dbid][omodel] = oid;
			Object[dbid][oLoc][0] = x+2;
			Object[dbid][oLoc][1] = y+2;
			Object[dbid][oLoc][2] = z+2;
			Object[dbid][ovw] = GetPlayerVirtualWorld(playerid);
			mysql_format(SQL, string,512,"INSERT INTO `obiekty` (`ID`, `Model`, `Stworzyl`, `X`, `Y`, `Z`, `RotX`, `RotY`, `RotZ`, `Virtual`) VALUES ('%d', '%d', '%s', '%f', '%f', '%f', '0.0', '0.0', '90.0', '%d')", dbid, Object[dbid][omodel], GetName(playerid), Object[dbid][oLoc][0], Object[dbid][oLoc][1], Object[dbid][oLoc][2], Object[dbid][ovw]);
			mysql_query(SQL, string);
			format(string, sizeof(string), "AdmCmd: %s dodal obiekt o (UUID: %d, ID: %d). %d", GetName(playerid), Object[dbid][ouuid], Object[dbid][onumer]);
			SendAdminMessage(COLOR_LOGS, string, 2);
			AdminLog("/logs/admin.log", string);
            format(string, sizeof(string), "STWORZONO:%d||CreateObject(%d,%f,%f,%f,0.0,0.0,90.0)",myobject,oid,Object[dbid][oLoc][0],Object[dbid][oLoc][1],Object[dbid][oLoc][2]);
            SendClientMessage(playerid,COLOR_GREEN,string);
			return 1;
			}
        else
        {
            SendClientMessage(playerid,COLOR_GREY,"Uzyj : /dob [objectid]");
            return 1;
      }
}

CMD:uob(playerid, params[])
{
		new oid;
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "i",oid ))
        {	
			if(Object[oid][ouuid] == 0) {
			SendClientMessage(playerid,COLOR_GREY,"Nie ma takiego obiektu w MYSQL");
			return 1;
			} else {
			new string[128];
			mysql_format(SQL, string,128,"DELETE FROM `obiekty` WHERE `ID`='%d'",oid);
			mysql_query(SQL, string);
			format(string, sizeof(string), "AdmCmd: %s usunal obiekt (ID: %d UUID: %d).", GetName(playerid),Object[oid][onumer], oid);
			SendAdminMessage(COLOR_LOGS, string, 2);
			AdminLog("/logs/admin.log", string);
			DestroyDynamicObject(Object[oid][onumer]);
			Object[oid][ouuid] = 0;
			Object[oid][onumer] = 0;
			Object[oid][oowner] = 0;
			Object[oid][omodel] = 0;
			Object[oid][oLoc][0] = 0;
			Object[oid][oLoc][1] = 0;
			Object[oid][oLoc][2] = 0;
			Object[oid][oLoc][1] = 0;
			Object[oid][ovw] = 0;
			DestroyDynamic3DTextLabel(Object[oid][lista]);
			return 1;
			}
		}
        else
        {
            SendClientMessage(playerid,COLOR_GREY,"Uzyj : /uob [objectid]");
            return 1;
        }
}

CMD:3dobl(playerid, params[])
{
        new string[258];
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
		if(T3D == 0) {
		SendClientMessage(playerid, COLOR_GREEN,"Pomyslnie stworzylem dla wszystkich obiektów 3dText!");
        for(new i = 1; i < MAX_SOBJECTS; i++){
            if(Object[i][ouuid] == i) {
			format(string, sizeof(string), "UUID: %d ID: %d", Object[i][ouuid], Object[i][omodel],Object[i][oowner]);
								//CreateDynamic3DTextLabel(text2, COLOR_GREY, Wejscie[x][wLoc2][0], Wejscie[x][wLoc2][1], Wejscie[x][wLoc2][2], 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, Wejscie[x][wvw2], Wejscie[x][winterior2], -1, 100.00);
			Object[i][lista] = CreateDynamic3DTextLabel(string,COLOR_YELLOW2, Object[i][oLoc][0],Object[i][oLoc][1],Object[i][oLoc][2],100.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, Object[i][ovw], 0, -1, 100.0);
            }
        }
		T3D = 1;
		} else {
		if (T3D == 1) {
		SendClientMessage(playerid, COLOR_LGREEN,"Pomyslnie usunalem dla wszystkich obiektów 3dText!");
        for(new i = 1; i < MAX_SOBJECTS; i++){
            if(Object[i][ouuid] == i) {
			DestroyDynamic3DTextLabel(Object[i][lista]);
            }
        }
		T3D = 0;
			}
		}
		return 1;
}

CMD:gotoob(playerid, params[])
{
    new oid, string[56];
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "i",oid ))
        {
		if(Object[oid][ouuid] == 0) {
			SendClientMessage(playerid,COLOR_GREY,"Nie ma takiego obiektu w MYSQL");
			return 1;
			} else {
			 for(new i = 1; i < MAX_SOBJECTS; i++){
				if(Object[i][ouuid] == oid) {
				format(string, sizeof(string), "OID: %d POZ X: %f Y: %f", oid, Object[oid][oLoc][0], Object[i][oLoc][1]);
				SCM(playerid, COLOR_GREEN, string);
			    SetPlayerVirtualWorld(playerid, Object[oid][ovw]);	
                SetPlayerPos(playerid,Object[oid][oLoc][0]+1,Object[oid][oLoc][1]+1,Object[oid][oLoc][2]+1);
                return 1;
					}
				}
				return 1;
			}
        }
		else
		{
		SendClientMessage(playerid,COLOR_GREY,"Uzyj :/gotoob [objectid]"); return 1;
	}
}

CMD:eob(playerid, params[])
{
		new string[126], modelid, oid;
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "i",oid ))
        {
			//if(Object[oid][ouuid] == 0) return SendClientMessage(playerid,COLOR_GREY,"Nie ma takiego obiektu w MYSQL");
			format(string, sizeof(string), "OID: %d NUMER: %d MODEL: %d", oid, Object[oid][onumer], Object[oid][omodel]);
			SCM(playerid, COLOR_GREEN, string);
			if(oid != Object[oid][onumer]) {
			for(new i = 1; i < MAX_SOBJECTS; i++){
			if(Object[i][ouuid] == oid) {
			modelid = Object[i][omodel];		
				}
			}
			EditOModel[playerid] = modelid;
			EdytowaneOB[playerid] = oid;
			oid = Object[oid][onumer];
			EditNModel[playerid] = oid;
            EditDynamicObject(playerid, oid);
			EditO[playerid] = 1;
            return 1;
			} else {
			SendClientMessage(playerid,COLOR_GREY,"Wpisz UUID obiektu, nie ID");
			return 1;
			}
        }else{
		SendClientMessage(playerid,COLOR_GREY,"Uzyj: /eob [objectid]");
		return 1;
	}
}
	
	
CMD:rx(playerid, params[]) {
		new string[126], Float: wartosc, oid, szQuery[256];
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "if",oid, wartosc ))
        {
		if(Object[oid][ouuid] == 0) return SCM(playerid, COLOR_GREY, "Nie ma takiego obiektu w MySQL!");
		Object[oid][oRot][0] = wartosc;
		SetDynamicObjectRot(Object[oid][onumer],wartosc,Object[oid][oRot][1],Object[oid][oRot][2]);
		mysql_format(SQL, szQuery, sizeof(szQuery),
		"UPDATE `obiekty` SET `RotX`='%f' WHERE `ID`='%d'", wartosc, Object[oid][ouuid] );
		mysql_query(SQL, szQuery);
		format(string, sizeof(string), "UUID: %d | NOWE ROTX: %f", Object[oid][ouuid], wartosc);
		SCM(playerid, COLOR_GREEN, string);
		}
		else return SCM(playerid, COLOR_GREY, "Uzyj: /rx <uuid obiektu> <wartosc np. 90.0>");
	return 1;
}

CMD:ry(playerid, params[]) {
		new string[126], Float: wartosc, oid, szQuery[256];
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "if",oid, wartosc ))
        {
		if(Object[oid][ouuid] == 0) return SCM(playerid, COLOR_GREY, "Nie ma takiego obiektu w MySQL!");
		Object[oid][oRot][1] = wartosc;
		SetDynamicObjectRot(Object[oid][onumer],Object[oid][oRot][0],wartosc,Object[oid][oRot][2]);
		mysql_format(SQL, szQuery, sizeof(szQuery),
		"UPDATE `obiekty` SET `RotY`='%f' WHERE `ID`='%d'", wartosc, Object[oid][ouuid] );
		mysql_query(SQL, szQuery);
		format(string, sizeof(string), "UUID: %d | NOWE ROTY: %f", Object[oid][ouuid], wartosc);
		SCM(playerid, COLOR_GREEN, string);
		}
		else return SCM(playerid, COLOR_GREY, "Uzyj: /ry <uuid obiektu> <wartosc np. 90.0>");
	return 1;
}

CMD:rz(playerid, params[]) {
		new string[126], Float: wartosc, oid, szQuery[256];
		if(PlayerInfo[playerid][pAdmin] < 1) return 1;
        if (!sscanf(params, "if",oid, wartosc ))
        {
		if(Object[oid][ouuid] == 0) return SCM(playerid, COLOR_GREY, "Nie ma takiego obiektu w MySQL!");
		Object[oid][oRot][2] = wartosc;
		SetDynamicObjectRot(Object[oid][onumer],Object[oid][oRot][0],Object[oid][oRot][1],wartosc);
		mysql_format(SQL, szQuery, sizeof(szQuery),
		"UPDATE `obiekty` SET `RotZ`='%f' WHERE `ID`='%d'", wartosc, Object[oid][ouuid] );
		mysql_query(SQL, szQuery);
		format(string, sizeof(string), "UUID: %d | NOWE ROTZ: %f", Object[oid][ouuid], wartosc);
		SCM(playerid, COLOR_GREEN, string);
		}
		else return SCM(playerid, COLOR_GREY, "Uzyj: /rz <uuid obiektu> <wartosc np. 90.0>");
	return 1;
}

CMD:pauta(playerid)
{
	new carid = GetPlayerVehicleID(playerid);
    if(PlayerInfo[playerid][pAdmin] < 6) return 1;
	if(ServerVehicles[carid][vuuid] == 0) {
		SCM(playerid, COLOR_GREY, "Ten pojazd nie jest w bazie danych.");
		return 1;
	}
    ShowPlayerDialogEx(playerid, D_EDIT, DIALOG_STYLE_LIST, "Panel aut", "Wybierz co chcesz edytowac:\n1.\tMiejsce parkowania\n2.\tTablice rejestracyjna\n3.\tOpis pojazdu\n4.\tKolor 1\n5.\tKolor 2\n6.\tFrakcja\n7.\tModel\n8.\tUsun auto", "Wybierz", "Wyjdz");
    return 1;
}

/*CMD:editvehicle(playerid, params[])
{
	new carid = GetPlayerVehicleID(playerid), string[256], szQuery[256], option[25], result, vehicleid;
	ServerVehicles[carid][vuuid] = vehicleid;
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
	if(sscanf(params, "s[25]i", option, result)) {
		SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/editvehicle <opcja> <wartosc>");
		SCM(playerid, COLOR_WHITE, "Mozliwosci: Model, Color1, Color2, Faction, Rank, Job, Skill.");
		return 1;
	}
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	if(ServerVehicles[carid][vuuid] == 0) {
		SCM(playerid, COLOR_GREY, "Ten pojazd nie jest w bazie danych.");
		return 1;
	}
	if(strcmp(option, "model" , true) == 0) {
	    if(result < 400 || result > 611) {
			SCM(playerid, COLOR_GREY, "Model pojazdu jest nieprawidlowy.");
			return 1;
		}
		DestroyVehicle(vehicleid);
		CreateVehicleEx(result, ServerVehicles[vehicleid][vLocation][0], ServerVehicles[vehicleid][vLocation][1], ServerVehicles[vehicleid][vLocation][2], ServerVehicles[vehicleid][vAngle], ServerVehicles[vehicleid][vColor][0], ServerVehicles[vehicleid][vColor][1], -1);
		SetVehicleNumberPlate(vehicleid, ServerVehicles[vehicleid][vNumberPlate]);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		ServerVehicles[vehicleid][vModel] = result;
		format(string, sizeof(string), "Pomyslnie zmieniles model pojazdu (UUID: %d) in: %d.", vehicleid, result);
		SCM(playerid, COLOR_YELLOW, string);

		format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET `vModel` = '%d' WHERE `id` = '%d'", result, vehicleid);
		mysql_query(SQL, szQuery);
	}
	if(strcmp(option, "color1" , true) == 0) {
	    if(result < 0 || result > 256) {
			SCM(playerid, COLOR_GREY, "ID-ul culorii este invalid.");
			return 1;
		}
		ChangeVehicleColor(vehicleid, result, ServerVehicles[vehicleid][vColor][1]);
		ServerVehicles[vehicleid][vColor][0] = result;
		format(string, sizeof(string), "Pomyslnie zmieniles color1 pojazdu (UUID: %d) in: %d.", vehicleid, result);
		SCM(playerid, COLOR_YELLOW, string);

		format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET `Color1` = '%d' WHERE `id` = '%d'", result, vehicleid);
		mysql_query(SQL, szQuery);
	}
	if(strcmp(option, "color2" , true) == 0) {
	    if(result < 0 || result > 256) {
			SCM(playerid, COLOR_GREY, "ID-ul culorii este invalid.");
			return 1;
		}
		ChangeVehicleColor(vehicleid, ServerVehicles[vehicleid][vColor][0], result);
		ServerVehicles[vehicleid][vColor][1] = result;
		format(string, sizeof(string), "Pomyslnie zmieniles color2 pojazdu (UUID: %d) in: %d.", vehicleid, result);
		SCM(playerid, COLOR_YELLOW, string);

		format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET `Color2` = '%d' WHERE `id` = '%d'", result, vehicleid);
		mysql_query(SQL, szQuery);
	}
	if(strcmp(option, "faction" , true) == 0) {
		ServerVehicles[vehicleid][vFaction] = result;
		format(string, sizeof(string), "Pomyslnie zmieniles frakcje pojazdu (UUID: %d) in: %d.", vehicleid, result);
		SCM(playerid, COLOR_YELLOW, string);

		format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET `Faction` = '%d' WHERE `id` = '%d'", result, vehicleid);
		mysql_query(SQL, szQuery);
	}
	if(strcmp(option, "rank" , true) == 0) {
		ServerVehicles[vehicleid][vRank] = result;
		format(string, sizeof(string), "Pomyslnie zmieniles range pojazdu (UUID: %d) in: %d.", vehicleid, result);
		SCM(playerid, COLOR_YELLOW, string);

		format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET `Rank` = '%d' WHERE `id` = '%d'", result, vehicleid);
		mysql_query(SQL, szQuery);
	}
	if(strcmp(option, "job" , true) == 0) {
		ServerVehicles[vehicleid][vRank] = result;
		format(string, sizeof(string), "Pomyslnie zmieniles prace pojazdu (UUID: %d) in: %d.", vehicleid, result);
		SCM(playerid, COLOR_YELLOW, string);

		format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET `Job` = '%d' WHERE `id` = '%d'", result, vehicleid);
		mysql_query(SQL, szQuery);
	}
	if(strcmp(option, "skill" , true) == 0) {
		ServerVehicles[vehicleid][vRank] = result;
		format(string, sizeof(string), "Pomyslnie zmieniles skill pracy pojazdu(UUID: %d) in: %d.", vehicleid, result);
		SCM(playerid, COLOR_YELLOW, string);

		format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET `Skill` = '%d' WHERE `id` = '%d'", result, vehicleid);
		mysql_query(SQL, szQuery);
	}
	return 1;
}*/

CMD:stworzveh(playerid, params[])
{
	new Float: Pos[3], Float: Angle, string[256], szQuery[500], modelid, color[2], text[128];
	new faction, rank, job, skill;
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
	if(sscanf(params, "iiiiiii", modelid, color[0], color[1], faction, rank, job, skill)) return SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/stworzveh <model> <color1> <color2> <frakcja> <ranga> <praca> <skill>");
	if(400 <= modelid >= 611) return SCM(playerid, COLOR_GREY, "Zle id pojazdu. (400 - 611)");
	if(!(0 <= color[0] <= 255 && 0 <= color[1] <= 255)) return SCM(playerid, COLOR_GREY, "Zle id koloru. (0 - 255)");
	if(IsPlayerInAnyVehicle(playerid)) return 1;
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	GetPlayerFacingAngle(playerid, Angle);
	new carid = CreateVehicle(modelid, Pos[0], Pos[1], Pos[2], Angle, color[0], color[1], -1);
	new carlisting = GetServerLastVeh();
	ServerVehicles[carid][vSpawned] = carid;
	SetVehicleNumberPlate(ServerVehicles[carid][vSpawned], "nowy");
	PutPlayerInVehicleEx(playerid, ServerVehicles[carid][vSpawned], 0);
	ServerVehicles[carid][vID] = carid;
	ServerVehicles[carid][vuuid] = carlisting;
	ServerVehicles[carid][vModel] = modelid;
	ServerVehicles[carid][vLocation][0] = Pos[0];
	ServerVehicles[carid][vLocation][1] = Pos[1];
	ServerVehicles[carid][vLocation][2] = Pos[2];
	ServerVehicles[carid][vAngle] = Angle;
	ServerVehicles[carid][vColor][0] = color[0];
	ServerVehicles[carid][vColor][1] = color[1];
	ServerVehicles[carid][vFaction] = faction;
	ServerVehicles[carid][vRank] = rank;
	ServerVehicles[carid][vJob] = job;
	ServerVehicles[carid][vSkill] = skill;

	mysql_format(SQL, szQuery, sizeof(szQuery),
	"INSERT INTO `svehicles` (id, vModel, LocationX, LocationY, LocationZ, Angle, Color1, Color2, Faction, Rank, Job, Skill, NumberPlate) VALUES ('%d', '%d', '%f', '%f', '%f', '%f', '%d', '%d', '%d', '%d', '%d', '%d', 'NOWY')", carlisting, modelid, Pos[0], Pos[1], Pos[2], ServerVehicles[carid][vAngle], color[0], color[1], faction, rank, job, skill);
	mysql_query(SQL, szQuery);
	format(string, sizeof(string), "Pomyslnie stworzyles pojazd %s (ID: %d, UUID: %d)", aVehicleNames[modelid - 400], carid, carlisting);
	SCM(playerid, COLOR_LGREEN, string);
	format(string, sizeof(string), "FRAKCJA %s RANGA: %d", GetFactionName(ServerVehicles[carid][vFaction]), rank);
	SCM(playerid, COLOR_LGREEN, string);
	format(string, sizeof(string), "PRACA %d WYMAGANY SKILL %d", job, skill);
	SCM(playerid, COLOR_LGREEN, string);
	format(string, sizeof(string), "Aktualnie jest %d pojazdow serwerowych", GetServerVehicles());
	SCM(playerid, COLOR_LGREEN, string);
	SCM(playerid, COLOR_LGREEN, "Aby edytowac pojazd wpisz /editvehicle lub /pauta");
	SetVehicleToRespawn(carid);
	format(text, sizeof(text), "AdmCmd: %s stworzyl pojazd %s (ID: %d, UUID: %d) FRAKCJA: %d PRACA: %d!",GetName(playerid), aVehicleNames[modelid - 400], carid, carlisting, GetFactionName(ServerVehicles[carid][vFaction]), job);
	AdminLog("/logs/admin.log", text);
	return 1;
}

function GetServerVehicles() {
	new szQuery[256], vehicles;
    format(szQuery, sizeof(szQuery), "SELECT * FROM `svehicles`");
    new Cache: result = mysql_query(SQL, szQuery);
    vehicles = cache_get_row_count();
    cache_delete(result);
	return vehicles;
}


function GetServerLastVeh() {
	new szQuery[256];
	format(szQuery, sizeof(szQuery), "SELECT MAX(id) FROM `svehicles`");
    new Cache: result = mysql_query(SQL, szQuery);
	new x = cache_get_field_content_int(0, "MAX(id)");
    cache_delete(result);
	return x+1;
}

function GetLastPCar() {
	new szQuery[256];
	format(szQuery, sizeof(szQuery), "SELECT MAX(id) FROM `cars`");
    new Cache: result = mysql_query(SQL, szQuery);
	new x = cache_get_field_content_int(0, "MAX(id)");
    cache_delete(result);
	return x+1;
}

function GetLastHouse() {
	new szQuery[256];
	format(szQuery, sizeof(szQuery), "SELECT MAX(id) FROM `houses`");
    new Cache: result = mysql_query(SQL, szQuery);
	new x = cache_get_field_content_int(0, "MAX(id)");
    cache_delete(result);
	return x+1;
}

function GetLastPrzedmiot() {
	new szQuery[256];
	format(szQuery, sizeof(szQuery), "SELECT MAX(id) FROM `przedmioty`");
    new Cache: result = mysql_query(SQL, szQuery);
	new x = cache_get_field_content_int(0, "MAX(id)");
    cache_delete(result);
	return x;
}

function GetLastActor() {
	new szQuery[256];
	format(szQuery, sizeof(szQuery), "SELECT MAX(id) FROM `aktorzy`");
    new Cache: result = mysql_query(SQL, szQuery);
	new x = cache_get_field_content_int(0, "MAX(id)");
    cache_delete(result);
	return x+1;
}

function GetObjectList() {
	new szQuery[256], obiekty2;
    format(szQuery, sizeof(szQuery), "SELECT * FROM `obiekty`");
    new Cache: result = mysql_query(SQL, szQuery);
    obiekty2 = cache_get_row_count();
    cache_delete(result);
	return obiekty2;
}

function GetLastObject() {
	new szQuery[256];
	format(szQuery, sizeof(szQuery), "SELECT MAX(id) FROM `obiekty`");
    new Cache: result = mysql_query(SQL, szQuery);
	new x = cache_get_field_content_int(0, "MAX(id)");
    cache_delete(result);
	return x+1;
}

function GetLastBrama() {
	new szQuery[256];
	format(szQuery, sizeof(szQuery), "SELECT MAX(id) FROM `bramy`");
    new Cache: result = mysql_query(SQL, szQuery);
	new x = cache_get_field_content_int(0, "MAX(id)");
    cache_delete(result);
	return x+1;
}

function GetLastWejscie() {
	new szQuery[256];
	format(szQuery, sizeof(szQuery), "SELECT MAX(id) FROM `wejscia`");
    new Cache: result = mysql_query(SQL, szQuery);
	new x = cache_get_field_content_int(0, "MAX(id)");
    cache_delete(result);
	return x+1;
}

CMD:vehiclepark(playerid, params[])
{
    new carid = GetPlayerVehicleID(playerid), Float: Pos[3], Float: Angle, string[500], szQuery[256];
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	if(ServerVehicles[carid][vuuid] == 0) {
		SCM(playerid, COLOR_GREY, "Ten pojazd nie jest w bazie danych.");
		return 1;
	}
	GetVehiclePos(carid, Pos[0], Pos[1], Pos[2]);
	GetVehicleZAngle(carid, Angle);
	ServerVehicles[carid][vLocation][0] = Pos[0];
	ServerVehicles[carid][vLocation][1] = Pos[1];
	ServerVehicles[carid][vLocation][2] = Pos[2];
	ServerVehicles[carid][vAngle] = Angle;
	DestroyVehicle(carid);
	CreateVehicleEx(ServerVehicles[carid][vModel], ServerVehicles[carid][vLocation][0], ServerVehicles[carid][vLocation][1], ServerVehicles[carid][vLocation][2], ServerVehicles[carid][vAngle], ServerVehicles[carid][vColor][0], ServerVehicles[carid][vColor][1], -1);
	SetVehicleNumberPlate(carid, ServerVehicles[carid][vNumberPlate]);
	ChangeVehicleColor(carid, ServerVehicles[carid][vColor][0], ServerVehicles[carid][vColor][1]);
	PutPlayerInVehicle(playerid, carid, 0);
	format(string, sizeof(string), "Pojazd zostal pomyslnie przeparkowany (UUID: %d).", carid);
	SCM(playerid, COLOR_YELLOW, string);
	format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET `LocationX` = '%f', `LocationY` = '%f', `LocationZ` = '%f', `Angle` = '%f' WHERE `vID` = '%d'", Pos[0], Pos[1], Pos[2], Angle, carid);
	mysql_query(SQL, szQuery);
	return 1;
}

CMD:vehicleplate(playerid, params[])
{
    new carid = GetPlayerVehicleID(playerid), Float: Pos[3], szQuery[256], result[32];
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	if(ServerVehicles[carid][vuuid] == 0) {
		SCM(playerid, COLOR_GREY, "Ten pojazd nie jest w bazie danych.");
		return 1;
	}
	if(sscanf(params, "s[32]", result)) return SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/vehicleplate <result>");
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	SetVehicleNumberPlate(carid, result);
	SetVehicleToRespawn(carid);
	SetVehiclePos(carid, Pos[0], Pos[1], Pos[2]);
	PutPlayerInVehicle(playerid, carid, 0);
	format(ServerVehicles[carid][vNumberPlate], 32, result);
	format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET `NumberPlate` = '%s' WHERE `vID` = '%d'", result, carid);
	mysql_query(SQL, szQuery);
	return 1;
}

CMD:unbw(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		{
			new id,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "i",id)) return SCM(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/unbw <id/nazwa>");
	    	new year, month,day;
	    	getdate(year, month, day);
		    if(IsPlayerConnected(id))
		    {
				PlayerInfo[id][pBWTime] = 2;
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "AdmCmd: Admin %s zdjal BW %s.", sendername,giveplayer);
				SendAdminMessage(COLOR_LOGS,string,5);
				ClearAnimations(playerid);
				Update(id, pBWTimex);
			}
	    	else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
	}
	return 1;
}


CMD:setrankname(playerid, params[])
{
	new string[180], name[180], fid, rank;
	if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid, COLOR_GREY, "* Nie masz dostepu do tego polecenia!");
	if(sscanf(params, "iis[180]", fid, rank, name)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/setrankname <faction> <rank (1-7)> <nazwa>");
	if(rank < 1 || rank > 7) return SCM(playerid, -1, "Zla ranga (1-7)");
	if(fid < 1 || fid > 14) return SCM(playerid, COLOR_GREY, "Zla frakcja! (1-14)");
	format(fRankNames[fid][rank-1], 256, name); 
	format(string, sizeof(string), "* Ustawiles nazwe rangi %d dla frakcji %s na %s.", rank, FactionName(fid), name);
	SCM(playerid, COLOR_YELLOW, string);
	SaveRankNames(fid);
	return 1;
}	

function SaveRankNames(fid) {
	new query[2048];
	format(query, sizeof(query), "UPDATE `factions` SET `Name1`='%s', `Name2`='%s', `Name3`='%s', `Name4`='%s', `Name5`='%s', `Name6`='%s', `Name7`='%s' WHERE `ID`='%d'", 
	fRankNames[fid][0], fRankNames[fid][1], fRankNames[fid][2], fRankNames[fid][3], fRankNames[fid][4], fRankNames[fid][5],
	fRankNames[fid][6], fid);
	mysql_query(SQL, query);
	return 1;
}	
	
stock GetRankName(playerid) {
	new name[180];
	format(name, 256, fRankNames[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]-1]);
	return name;
}

	
function valid_vip_vehicle(vehid) {
	switch(vehid) {
		case 560: return 1;
		case 541: return 1;
		case 429: return 1;
		case 495: return 1;
		case 579: return 1;
		case 562: return 1;
		case 451: return 1;
		case 480: return 1;
		case 411: return 1;
	}
	return 0;
}
	
CMD:vips(playerid, params[]) {
	new string[128], count=0;
	format(string, sizeof(string), "---------------------- Vip List ----------------------");
	SendClientMessage(playerid, COLOR_SERVER, string);
	foreach(Player,i) {
		if(PlayerInfo[i][pVip] == 1) {
			format(string, sizeof(string), "%s (%d)", GetName(i),i);
			SendClientMessage(playerid, COLOR_WHITE, string);
			count++;
		}
	}
	format(string, sizeof(string), "* Sunt %d jucatori conectati ce au cont VIP.", count);
	SendClientMessage(playerid, COLOR_WHITE, string);
	SendClientMessage(playerid, COLOR_SERVER, "--------------------------------------------------------");		
	return 1;
}

function saveTuning(playerid, vehicleid) {
	new idd = FindSpawnID(vehicleid);
	if(idd != 0) {
		new component;
		new query[180];
		component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 0);
		mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod0='%d' WHERE ID=%d",component,idd);
		mysql_tquery(SQL, query, "", "");
		CarInfo[idd][mod0] = component;
		component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 1);
		mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod1='%d' WHERE ID=%d",component,idd);
		mysql_tquery(SQL, query, "", "");
		CarInfo[idd][mod1] = component;
		component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 2);
		mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod2='%d' WHERE ID=%d",component,idd);
		mysql_tquery(SQL, query, "", "");
		CarInfo[idd][mod2] = component;
		component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 3);
		mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod3='%d' WHERE ID=%d",component,idd);
		mysql_tquery(SQL, query, "", "");
		CarInfo[idd][mod3] = component;
		component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 4);
		mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod4='%d' WHERE ID=%d",component,idd);
		mysql_tquery(SQL, query, "", "");
		CarInfo[idd][mod4] = component;
		component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 5);
		mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod5='%d' WHERE ID=%d",component,idd);
		mysql_tquery(SQL, query, "", "");
		CarInfo[idd][mod5] = component;
		component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 6);
		mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod6='%d' WHERE ID=%d",component,idd);
		mysql_tquery(SQL, query, "", "");
		CarInfo[idd][mod6] = component;
		component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 7);
		mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod7='%d' WHERE ID=%d",component,idd);
		mysql_tquery(SQL, query, "", "");
		CarInfo[idd][mod7] = component;
		component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 8);
		mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod8='%d' WHERE ID=%d",component,idd);
		mysql_tquery(SQL, query, "", "");
		CarInfo[idd][mod8] = component;
		component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 9);
		mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod9='%d' WHERE ID=%d",component,idd);
		mysql_tquery(SQL, query, "", "");
		CarInfo[idd][mod9] = component;
		component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 10);
		mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod10='%d' WHERE ID=%d",component,idd);
		mysql_tquery(SQL, query, "", "");
		CarInfo[idd][mod10] = component;
		component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 11);
		mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod11='%d' WHERE ID=%d",component,idd);
		mysql_tquery(SQL, query, "", "");
		CarInfo[idd][mod11] = component;
		component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 12);
		mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod12='%d' WHERE ID=%d",component,idd);
		mysql_tquery(SQL, query, "", "");
		CarInfo[idd][mod12] = component;
		component = GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), 13);
		mysql_format(SQL, query, sizeof(query), "UPDATE cars SET mod13='%d' WHERE ID=%d",component,idd);
		mysql_tquery(SQL, query, "", "");
		CarInfo[idd][mod13] = component;
		
	}	
	return 1;
}
	
function RentCar() {
	new carid, string[180], query[256], result[MAX_PLAYERS];
	foreach(Player, i) {
		if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i)) {
			carid = GetPlayerVehicleID(i);
			result[i] = 0;
			if(carid == scooter[1] || carid == scooter[2] || carid == scooter[3] || carid == scooter[4] || carid == scooter[5]) {
				RentPrice[i] += BizzInfo[8][bFee];
				BizzInfo[8][bBalance] += BizzInfo[8][bFee];
				format(query, sizeof(query),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='8'",BizzInfo[8][bBalance]);
				mysql_query(SQL,query);				
				if(GetPlayerCash(i) < BizzInfo[8][bFee]) {
					RemovePlayerFromVehicleEx(i);
					PlayerTextDrawHide(i, RentTD);
					RentPrice[i] = 0;
					HireCar[i] = 0;
					SCM(i, COLOR_GREY, "Ai fost dat afara din vehicul deoarece Nie masz pieniedzy!");
					result[i] = 1;
				}				
				GivePlayerCash(i, -BizzInfo[8][bFee]);				
			}
			else if(carid == rentls[1] || carid == rentls[2] || carid == rentls[3] || carid == rentls[4] || carid == rentls[5] || carid == rentls[6]  || carid == rentls[7] || carid == rentls[8] || carid == rentls[9]
			|| carid == rentls[10] || carid == rentls[11] || carid == rentls[12] || carid == rentls[13] || carid == rentls[14] || carid == rentls[15])
			{
				RentPrice[i] += BizzInfo[10][bFee];
				BizzInfo[10][bBalance] += BizzInfo[10][bFee];
				format(query, sizeof(query),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='10'",BizzInfo[10][bBalance]);
				mysql_query(SQL,query);				
				if(GetPlayerCash(i) < BizzInfo[10][bFee]) {
					RemovePlayerFromVehicleEx(i);
					PlayerTextDrawHide(i, RentTD);
					RentPrice[i] = 0;
					HireCar[i] = 0;
					SCM(i, COLOR_GREY, "Ai fost dat afara din vehicul deoarece Nie masz pieniedzy!");
					result[i] = 1;
				}				
				GivePlayerCash(i, -BizzInfo[10][bFee]);			
			}
			else result[i] = 1;
			if(result[i] == 0) {
				format(string, sizeof(string), "  Wynajmij auto: ~g~$%s", FormatNumber(RentPrice[i]));
				PlayerTextDrawSetString(i, RentTD, string);
				PlayerTextDrawShow(i, RentTD);
			}	
		}
	}
	return 1;
}
	
function HelperQuestions() {
	new string[180], helpers;
	foreach(Player, i) {
	    if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {
	        if(PlayerInfo[i][pHelper] != 0 && HelperDuty[i] == 1 && HaveHelp[i] == -1) {
	            HaveHelper[helpers] = i;
				helpers ++;
	        }
	    }
	}

	foreach(Player, i) {
		if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {
			if(Helped[i] == 1 && OnHelper[i] == 0) {
				if(helpers >= 1) {
					new userID = HaveHelper[random(helpers)], playerid = i;
					if(HaveHelp[userID] == -1) {
						PlayerPlaySound(userID, 1056, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "Intrebarea ta a fost preluata de helperul %s (%d). Asteapta sa-ti raspunda.", GetName(userID), userID);
						SendClientMessage(i, COLOR_YELLOW, string);
						format(string, 512, "{FFA200}**{FFFF00} Pytanie od %s(%d, level %d) {FFA200}**", GetName(playerid), playerid, PlayerInfo[playerid][pLevel]);
						SendClientMessage(userID, COLOR_DBLUE, string);						
						format(string, 512, "%s", HelpText[i]);
						SendClientMessage(userID, COLOR_YELLOW, string);
						HaveHelp[userID] = playerid;
						OnHelper[i] = 1;
					}	
				}	
			}
		}
	}
	return 1;
}


/*function PutHat(playerid) {
	if(GetPVarInt(playerid, "Santa") == 1) return SetPlayerAttachedObject(playerid, 0, 19065, 2, 0.120000, 0.040000, -0.003500, 0, 100, 100, 1.4, 1.4, 1.4);	
	new skin = GetPlayerSkin(playerid);
	if(skin == 2 || skin == 6 || skin == 8 || skin == 13 || skin == 19 || skin == 22 || skin == 23 || skin == 24 || skin == 27 || skin == 29 || skin == 33 || skin == 34 || skin == 35 ||
	skin == 36 || skin == 37 || skin == 52 || skin == 61 || skin == 65 || skin == 71 || skin == 77 || skin == 78 || skin == 79 || skin == 99 || skin == 107 || skin == 115 || skin == 137 || skin == 143 ||
	skin == 149 || skin == 153 || skin == 155 || skin == 158 || skin == 161 || skin == 167 || skin == 173 || skin == 198 || skin == 205 || skin == 209 || skin == 249 || skin == 253 ||
	skin == 255 || skin == 260 || skin == 261 || skin == 264 || skin == 269 || skin == 270 || skin == 271 || skin == 277 || skin == 278 || skin == 279 || skin == 283 || skin == 284 ||
	skin == 285 || skin == 287 || skin == 288 || skin == 289 || skin == 293)
		return RemovePlayerAttachedObject(playerid, 0);
	new model = PlayerInfo[playerid][pHat];
	switch(skin) {
		case 1: SetPlayerAttachedObject( playerid, 0, model, 2, 0.138505, 0.001595, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 1
		case 2: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158120, 0.001595, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 3
		case 3: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158120, 0.001595, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 3
		case 4: SetPlayerAttachedObject( playerid, 0, model, 2, 0.217011, 0.001595, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 4
		case 5: SetPlayerAttachedObject( playerid, 0, model, 2, 0.197443, 0.001595, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 5
		case 6: SetPlayerAttachedObject( playerid, 0, model, 2, 0.197443, 0.001595, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 6
		case 7: SetPlayerAttachedObject( playerid, 0, model, 2, 0.166039, 0.001595, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 7
		case 8: SetPlayerAttachedObject( playerid, 0, model, 2, 0.166039, 0.001595, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 8
		case 9: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137042, 0.003905, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 9
		case 10: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137042, 0.003905, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 10
		case 11: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137042, 0.003905, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 11
		case 12: SetPlayerAttachedObject( playerid, 0, model, 2, 0.169248, 0.003905, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 12
		case 13: SetPlayerAttachedObject( playerid, 0, model, 2, 0.169248, 0.003905, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 13
		case 14: SetPlayerAttachedObject( playerid, 0, model, 2, 0.176461, 0.003905, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 14
		case 15: SetPlayerAttachedObject( playerid, 0, model, 2, 0.135116, -0.028391, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 15
		case 16: SetPlayerAttachedObject( playerid, 0, model, 2, 0.135116, -0.028391, -0.003624, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 16
		case 17: SetPlayerAttachedObject( playerid, 0, model, 2, 0.176750, -0.005152, 0.003589, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 17
		case 18: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137032, -0.005152, 0.003589, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 18
		case 19: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137032, -0.005152, 0.003589, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 19
		case 20: SetPlayerAttachedObject( playerid, 0, model, 2, 0.169844, -0.005152, 0.003589, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // HatBoater2 - 
		case 21: SetPlayerAttachedObject( playerid, 0, model, 2, 0.169844, -0.005152, 0.003589, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 21
		case 22: SetPlayerAttachedObject( playerid, 0, model, 2, 0.169844, -0.005152, 0.003589, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 22
		case 23: SetPlayerAttachedObject( playerid, 0, model, 2, 0.169844, -0.005152, 0.003589, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 23
		case 24: SetPlayerAttachedObject( playerid, 0, model, 2, 0.169844, -0.005152, 0.003589, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 24
		case 25: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153401, 0.006404, 0.003589, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 25
		case 26: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153401, 0.006404, 0.003589, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 26
		case 27: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153401, 0.006404, 0.003589, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 27
		case 28: SetPlayerAttachedObject( playerid, 0, model, 2, 0.178765, 0.006345, -0.014876, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 28
		case 29: SetPlayerAttachedObject( playerid, 0, model, 2, 0.178765, 0.006345, -0.014876, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 29
		case 30: SetPlayerAttachedObject( playerid, 0, model, 2, 0.178310, 0.009442, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 30
		case 31: SetPlayerAttachedObject( playerid, 0, model, 2, 0.178310, 0.009442, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 31
		case 32: SetPlayerAttachedObject( playerid, 0, model, 2, 0.178310, 0.009442, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 32
		case 33: SetPlayerAttachedObject( playerid, 0, model, 2, 0.178310, 0.009442, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 33
		case 34: SetPlayerAttachedObject( playerid, 0, model, 2, 0.178310, 0.009442, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 34
		case 35: SetPlayerAttachedObject( playerid, 0, model, 2, 0.178310, 0.009442, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 35
		case 36: SetPlayerAttachedObject( playerid, 0, model, 2, 0.178310, 0.009442, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 36
		case 37: SetPlayerAttachedObject( playerid, 0, model, 2, 0.178310, 0.009442, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 37
		case 38: SetPlayerAttachedObject( playerid, 0, model, 2, 0.178310, 0.009442, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 38
		case 39: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137954, -0.002958, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 39
		case 40: SetPlayerAttachedObject( playerid, 0, model, 2, 0.148416, -0.002958, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 40
		case 41: SetPlayerAttachedObject( playerid, 0, model, 2, 0.148416, -0.002958, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 41
		case 42: SetPlayerAttachedObject( playerid, 0, model, 2, 0.148416, -0.002958, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 42
		case 43: SetPlayerAttachedObject( playerid, 0, model, 2, 0.092380, -0.002958, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 43
		case 44: SetPlayerAttachedObject( playerid, 0, model, 2, 0.118452, 0.014299, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 44
		case 45: SetPlayerAttachedObject( playerid, 0, model, 2, 0.133399, -0.000648, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 45
		case 46: SetPlayerAttachedObject( playerid, 0, model, 2, 0.161029, 0.014299, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 46
		case 47: SetPlayerAttachedObject( playerid, 0, model, 2, 0.174838, 0.005146, 0.000530, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 47
		case 48: SetPlayerAttachedObject( playerid, 0, model, 2, 0.185725, -0.002868, -0.008738, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 48
		case 49: SetPlayerAttachedObject( playerid, 0, model, 2, 0.140534, 0.011140, -0.008738, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 49
		case 50: SetPlayerAttachedObject( playerid, 0, model, 2, 0.179763, -0.020149, -0.008738, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 50
		case 51: SetPlayerAttachedObject( playerid, 0, model, 2, 0.179763, -0.020149, -0.008738, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 51
		case 52: SetPlayerAttachedObject( playerid, 0, model, 2, 0.179763, -0.020149, -0.008738, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 52
		case 53: SetPlayerAttachedObject( playerid, 0, model, 2, 0.179763, -0.020149, -0.008738, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 53
		case 54: SetPlayerAttachedObject( playerid, 0, model, 2, 0.174966, 0.024967, 0.009581, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 54
		case 55: SetPlayerAttachedObject( playerid, 0, model, 2, 0.163809, -0.018255, 0.009581, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 55
		case 56: SetPlayerAttachedObject( playerid, 0, model, 2, 0.163809, -0.018255, 0.009581, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 56
		case 57: SetPlayerAttachedObject( playerid, 0, model, 2, 0.197187, -0.000997, 0.009581, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 57
		case 58: SetPlayerAttachedObject( playerid, 0, model, 2, 0.136419, 0.006264, -0.002492, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 58
		case 59: SetPlayerAttachedObject( playerid, 0, model, 2, 0.180506, 0.006264, -0.002492, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 59
		case 60: SetPlayerAttachedObject( playerid, 0, model, 2, 0.180506, 0.006264, -0.002492, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 60
		case 61: SetPlayerAttachedObject( playerid, 0, model, 2, 0.180506, 0.006264, -0.002492, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 61
		case 62: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, 0.023522, -0.002492, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 62
		case 63: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, -0.004900, -0.002492, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 63
		case 64: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, -0.004900, -0.002492, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 64
		case 65: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, -0.004900, -0.002492, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 65
		case 66: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, 0.011196, -0.002492, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 66
		case 67: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, 0.011196, -0.002492, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 67
		case 68: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, 0.011196, -0.002492, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 68
		case 69: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, 0.011196, -0.002492, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 69
		case 70: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, 0.009975, 0.011316, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 70
		case 71: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, 0.009975, 0.011316, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 71
		case 72: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, 0.020482, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 72
		case 73: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, 0.020482, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 73
		case 74: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, 0.002100, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 74
		case 75: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, 0.002100, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 75
		case 76: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, -0.009375, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 76
		case 77: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, -0.009375, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 77
		case 78: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, -0.009375, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 78
		case 79: SetPlayerAttachedObject( playerid, 0, model, 2, 0.153101, -0.009375, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 79
		case 80: SetPlayerAttachedObject( playerid, 0, model, 2, 0.138384, -0.015113, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 80
		case 81: SetPlayerAttachedObject( playerid, 0, model, 2, 0.138384, -0.015113, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 81
		case 82: SetPlayerAttachedObject( playerid, 0, model, 2, 0.188178, 0.017015, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 82
		case 83: SetPlayerAttachedObject( playerid, 0, model, 2, 0.188178, 0.017015, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 83
		case 84: SetPlayerAttachedObject( playerid, 0, model, 2, 0.188178, -0.004219, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 84
		case 85: SetPlayerAttachedObject( playerid, 0, model, 2, 0.188178, -0.004219, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 85
		case 86: SetPlayerAttachedObject( playerid, 0, model, 2, 0.136243, -0.004046, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 86
		case 87: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158262, 0.028254, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 87
		case 88: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158262, 0.028254, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 88
		case 89: SetPlayerAttachedObject( playerid, 0, model, 2, 0.151486, -0.012409, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 89
		case 90: SetPlayerAttachedObject( playerid, 0, model, 2, 0.164169, -0.012409, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 90
		case 91: SetPlayerAttachedObject( playerid, 0, model, 2, 0.164169, -0.012409, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 91
		case 92: SetPlayerAttachedObject( playerid, 0, model, 2, 0.164169, -0.012409, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 92
		case 93: SetPlayerAttachedObject( playerid, 0, model, 2, 0.164169, -0.012409, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 93
		case 94: SetPlayerAttachedObject( playerid, 0, model, 2, 0.110970, -0.012409, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 94
		case 95: SetPlayerAttachedObject( playerid, 0, model, 2, 0.127067, -0.012409, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 95
		case 96: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158763, -0.012409, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 96
		case 97: SetPlayerAttachedObject( playerid, 0, model, 2, 0.139774, -0.012409, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 97
		case 98: SetPlayerAttachedObject( playerid, 0, model, 2, 0.164045, 0.003758, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 98
		case 99: SetPlayerAttachedObject( playerid, 0, model, 2, 0.164045, 0.003758, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 99
		case 100: SetPlayerAttachedObject( playerid, 0, model, 2, 0.181303, 0.003758, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 100
		case 101: SetPlayerAttachedObject( playerid, 0, model, 2, 0.167212, 0.003758, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 101
		case 102: SetPlayerAttachedObject( playerid, 0, model, 2, 0.167212, 0.003758, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 102
		case 103: SetPlayerAttachedObject( playerid, 0, model, 2, 0.167212, 0.003758, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 103
		case 104: SetPlayerAttachedObject( playerid, 0, model, 2, 0.167212, 0.003758, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 104
		case 105: SetPlayerAttachedObject( playerid, 0, model, 2, 0.167212, 0.003758, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 105
		case 106: SetPlayerAttachedObject( playerid, 0, model, 2, 0.185643, -0.006704, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 106
		case 107: SetPlayerAttachedObject( playerid, 0, model, 2, 0.185643, -0.006704, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 107
		case 108: SetPlayerAttachedObject( playerid, 0, model, 2, 0.176239, -0.006704, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 108
		case 109: SetPlayerAttachedObject( playerid, 0, model, 2, 0.176239, 0.008243, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 109
		case 110: SetPlayerAttachedObject( playerid, 0, model, 2, 0.176239, 0.008243, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 110
		case 111: SetPlayerAttachedObject( playerid, 0, model, 2, 0.176239, -0.003313, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 111
		case 112: SetPlayerAttachedObject( playerid, 0, model, 2, 0.140058, -0.003313, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 112
		case 113: SetPlayerAttachedObject( playerid, 0, model, 2, 0.172263, 0.006964, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 113
		case 114: SetPlayerAttachedObject( playerid, 0, model, 2, 0.172263, 0.005701, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 114
		case 115: SetPlayerAttachedObject( playerid, 0, model, 2, 0.172263, 0.005701, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 115
		case 116: SetPlayerAttachedObject( playerid, 0, model, 2, 0.172263, 0.005701, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 116
		case 117: SetPlayerAttachedObject( playerid, 0, model, 2, 0.123344, 0.005701, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 117
		case 118: SetPlayerAttachedObject( playerid, 0, model, 2, 0.123344, 0.005701, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 118
		case 119: SetPlayerAttachedObject( playerid, 0, model, 2, 0.159842, 0.005701, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 119
		case 120: SetPlayerAttachedObject( playerid, 0, model, 2, 0.159842, -0.009245, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 120
		case 121: SetPlayerAttachedObject( playerid, 0, model, 2, 0.159842, -0.009245, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 121
		case 122: SetPlayerAttachedObject( playerid, 0, model, 2, 0.159842, -0.009245, 0.004102, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 122
		case 123: SetPlayerAttachedObject( playerid, 0, model, 2, 0.194358, -0.009245, -0.008579, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 123
		case 124: SetPlayerAttachedObject( playerid, 0, model, 2, 0.168926, -0.009245, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 124
		case 125: SetPlayerAttachedObject( playerid, 0, model, 2, 0.168926, 0.006851, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 125
		case 126: SetPlayerAttachedObject( playerid, 0, model, 2, 0.168926, -0.009382, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 126
		case 127: SetPlayerAttachedObject( playerid, 0, model, 2, 0.168926, 0.000999, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 127
		case 128: SetPlayerAttachedObject( playerid, 0, model, 2, 0.168926, 0.024238, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 128
		case 129: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144890, 0.004670, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 129
		case 130: SetPlayerAttachedObject( playerid, 0, model, 2, 0.109372, 0.004670, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 130
		case 131: SetPlayerAttachedObject( playerid, 0, model, 2, 0.141611, 0.004670, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 131
		case 132: SetPlayerAttachedObject( playerid, 0, model, 2, 0.057620, 0.007382, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 132
		case 133: SetPlayerAttachedObject( playerid, 0, model, 2, 0.057620, 0.007382, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 133
		case 134: SetPlayerAttachedObject( playerid, 0, model, 2, 0.057620, 0.007382, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 134
		case 135: SetPlayerAttachedObject( playerid, 0, model, 2, 0.057620, 0.007382, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 135
		case 136: SetPlayerAttachedObject( playerid, 0, model, 2, 0.131672, -0.001954, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 136
		case 137: SetPlayerAttachedObject( playerid, 0, model, 2, 0.131672, -0.001954, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 137
		case 138: SetPlayerAttachedObject( playerid, 0, model, 2, 0.145482, -0.001954, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 138
		case 139: SetPlayerAttachedObject( playerid, 0, model, 2, 0.145482, -0.001954, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 139
		case 140: SetPlayerAttachedObject( playerid, 0, model, 2, 0.186944, -0.001954, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 140
		case 141: SetPlayerAttachedObject( playerid, 0, model, 2, 0.177850, -0.020384, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 141
		case 142: SetPlayerAttachedObject( playerid, 0, model, 2, 0.162902, -0.001954, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 142
		case 143: SetPlayerAttachedObject( playerid, 0, model, 2, 0.162902, -0.001954, 0.003209, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 143
		case 144: SetPlayerAttachedObject( playerid, 0, model, 2, 0.205876, -0.027250, -0.004153, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 144
		case 145: SetPlayerAttachedObject( playerid, 0, model, 2, 0.160719, -0.005472, -0.004153, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 145
		case 146: SetPlayerAttachedObject( playerid, 0, model, 2, 0.160719, -0.005472, -0.004153, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 146
		case 147: SetPlayerAttachedObject( playerid, 0, model, 2, 0.160719, -0.016239, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 147
		case 148: SetPlayerAttachedObject( playerid, 0, model, 2, 0.160719, -0.016239, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 148
		case 149: SetPlayerAttachedObject( playerid, 0, model, 2, 0.160719, -0.016239, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 149
		case 150: SetPlayerAttachedObject( playerid, 0, model, 2, 0.160719, -0.016239, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 150
		case 151: SetPlayerAttachedObject( playerid, 0, model, 2, 0.173401, -0.016239, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 151
		case 152: SetPlayerAttachedObject( playerid, 0, model, 2, 0.167766, -0.016239, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 152
		case 153: SetPlayerAttachedObject( playerid, 0, model, 2, 0.167766, -0.016239, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 153
		case 154: SetPlayerAttachedObject( playerid, 0, model, 2, 0.131260, -0.016239, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 154
		case 155: SetPlayerAttachedObject( playerid, 0, model, 2, 0.131260, -0.016239, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 155
		case 156: SetPlayerAttachedObject( playerid, 0, model, 2, 0.192687, -0.016239, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 156
		case 157: SetPlayerAttachedObject( playerid, 0, model, 2, 0.149395, 0.014873, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 157
		case 158: SetPlayerAttachedObject( playerid, 0, model, 2, 0.149395, 0.014873, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 158
		case 159: SetPlayerAttachedObject( playerid, 0, model, 2, 0.149395, 0.014873, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 159
		case 160: SetPlayerAttachedObject( playerid, 0, model, 2, 0.149395, -0.003556, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 160
		case 161: SetPlayerAttachedObject( playerid, 0, model, 2, 0.149395, -0.003556, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 161
		case 162: SetPlayerAttachedObject( playerid, 0, model, 2, 0.149395, 0.003181, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 162
		case 163: SetPlayerAttachedObject( playerid, 0, model, 2, 0.149395, 0.003181, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 163
		case 164: SetPlayerAttachedObject( playerid, 0, model, 2, 0.149395, 0.003181, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 164
		case 165: SetPlayerAttachedObject( playerid, 0, model, 2, 0.149395, 0.003181, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 165
		case 166: SetPlayerAttachedObject( playerid, 0, model, 2, 0.149395, 0.003181, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 166
		case 167: SetPlayerAttachedObject( playerid, 0, model, 2, 0.149395, 0.003181, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 167
		case 168: SetPlayerAttachedObject( playerid, 0, model, 2, 0.149395, 0.003181, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 168
		case 169: SetPlayerAttachedObject( playerid, 0, model, 2, 0.162078, -0.017747, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 169
		case 170: SetPlayerAttachedObject( playerid, 0, model, 2, 0.162078, 0.004271, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 170
		case 171: SetPlayerAttachedObject( playerid, 0, model, 2, 0.162078, 0.004271, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 171
		case 172: SetPlayerAttachedObject( playerid, 0, model, 2, 0.162078, 0.004271, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 172
		case 173: SetPlayerAttachedObject( playerid, 0, model, 2, 0.162078, 0.004271, 0.004263, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 173
		case 174: SetPlayerAttachedObject( playerid, 0, model, 2, 0.191174, 0.019861, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 174
		case 175: SetPlayerAttachedObject( playerid, 0, model, 2, 0.191174, 0.019861, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 175
		case 176: SetPlayerAttachedObject( playerid, 0, model, 2, 0.179688, -0.004609, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 176
		case 177: SetPlayerAttachedObject( playerid, 0, model, 2, 0.207318, -0.004609, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 177
		case 178: SetPlayerAttachedObject( playerid, 0, model, 2, 0.178637, -0.004609, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 178
		case 179: SetPlayerAttachedObject( playerid, 0, model, 2, 0.155398, 0.003675, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 179
		case 180: SetPlayerAttachedObject( playerid, 0, model, 2, 0.187603, -0.005275, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 180
		case 181: SetPlayerAttachedObject( playerid, 0, model, 2, 0.185789, -0.005275, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 181
		case 182: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137889, -0.005275, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 182
		case 183: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137889, -0.005275, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 183
		case 184: SetPlayerAttachedObject( playerid, 0, model, 2, 0.167829, -0.005275, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 184
		case 185: SetPlayerAttachedObject( playerid, 0, model, 2, 0.167829, -0.005275, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 185
		case 186: SetPlayerAttachedObject( playerid, 0, model, 2, 0.167829, -0.005275, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 186
		case 187: SetPlayerAttachedObject( playerid, 0, model, 2, 0.157367, -0.017958, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 187
		case 188: SetPlayerAttachedObject( playerid, 0, model, 2, 0.157367, -0.003010, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 188
		case 189: SetPlayerAttachedObject( playerid, 0, model, 2, 0.157367, -0.005583, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 189
		case 190: SetPlayerAttachedObject( playerid, 0, model, 2, 0.175797, -0.005583, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 190
		case 191: SetPlayerAttachedObject( playerid, 0, model, 2, 0.175797, -0.005583, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 191
		case 192: SetPlayerAttachedObject( playerid, 0, model, 2, 0.175797, -0.005583, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 192
		case 193: SetPlayerAttachedObject( playerid, 0, model, 2, 0.175797, -0.005583, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 193
		case 194: SetPlayerAttachedObject( playerid, 0, model, 2, 0.175797, -0.005583, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 194
		case 195: SetPlayerAttachedObject( playerid, 0, model, 2, 0.175797, -0.005583, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 195
		case 196: SetPlayerAttachedObject( playerid, 0, model, 2, 0.138831, -0.005583, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 196
		case 197: SetPlayerAttachedObject( playerid, 0, model, 2, 0.138831, -0.005583, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 197
		case 198: SetPlayerAttachedObject( playerid, 0, model, 2, 0.138831, -0.005583, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 198
		case 199: SetPlayerAttachedObject( playerid, 0, model, 2, 0.138831, 0.009363, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 199
		case 200: SetPlayerAttachedObject( playerid, 0, model, 2, 0.138831, -0.003318, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 200
		case 201: SetPlayerAttachedObject( playerid, 0, model, 2, 0.138831, -0.003318, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 201
		case 202: SetPlayerAttachedObject( playerid, 0, model, 2, 0.138831, 0.031243, 0.002032, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 202
		case 203: SetPlayerAttachedObject( playerid, 0, model, 2, 0.161976, 0.007214, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 203
		case 204: SetPlayerAttachedObject( playerid, 0, model, 2, 0.161976, 0.007214, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 204
		case 205: SetPlayerAttachedObject( playerid, 0, model, 2, 0.161976, 0.007214, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 205
		case 206: SetPlayerAttachedObject( playerid, 0, model, 2, 0.161976, 0.007214, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 206
		case 207: SetPlayerAttachedObject( playerid, 0, model, 2, 0.116949, 0.007214, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 207
		case 208: SetPlayerAttachedObject( playerid, 0, model, 2, 0.125234, 0.007214, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 208
		case 209: SetPlayerAttachedObject( playerid, 0, model, 2, 0.146650, -0.013561, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 209
		case 210: SetPlayerAttachedObject( playerid, 0, model, 2, 0.125317, -0.000878, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 210
		case 211: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144065, -0.000878, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 211
		case 212: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144065, -0.000878, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 212
		case 213: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144065, -0.000878, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 213
		case 214: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144065, -0.000878, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 214
		case 215: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144065, -0.000878, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 215
		case 216: SetPlayerAttachedObject( playerid, 0, model, 2, 0.161322, -0.000878, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 216
		case 217: SetPlayerAttachedObject( playerid, 0, model, 2, 0.161322, -0.000878, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 217
		case 218: SetPlayerAttachedObject( playerid, 0, model, 2, 0.161322, -0.000878, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 218
		case 219: SetPlayerAttachedObject( playerid, 0, model, 2, 0.161322, -0.000878, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 219
		case 220: SetPlayerAttachedObject( playerid, 0, model, 2, 0.122851, 0.018736, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 220
		case 221: SetPlayerAttachedObject( playerid, 0, model, 2, 0.187490, -0.009962, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 221
		case 222: SetPlayerAttachedObject( playerid, 0, model, 2, 0.187490, -0.009962, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 222
		case 223: SetPlayerAttachedObject( playerid, 0, model, 2, 0.187490, 0.007295, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 223
		case 224: SetPlayerAttachedObject( playerid, 0, model, 2, 0.148834, -0.016988, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 224
		case 225: SetPlayerAttachedObject( playerid, 0, model, 2, 0.148834, -0.016988, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 225
		case 226: SetPlayerAttachedObject( playerid, 0, model, 2, 0.148834, -0.016988, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 226
		case 227: SetPlayerAttachedObject( playerid, 0, model, 2, 0.175808, 0.000124, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 227
		case 228: SetPlayerAttachedObject( playerid, 0, model, 2, 0.175808, 0.000124, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 228
		case 229: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137351, -0.009810, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 229
		case 230: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137351, -0.009810, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 230
		case 231: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137351, 0.017909, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 231
		case 232: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137351, -0.002900, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 232
		case 233: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137351, -0.002900, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 233
		case 234: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137351, -0.022515, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 234
		case 235: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137351, -0.022515, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 235
		case 236: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137351, -0.005257, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 236
		case 237: SetPlayerAttachedObject( playerid, 0, model, 2, 0.137351, -0.005257, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 237
		case 238: SetPlayerAttachedObject( playerid, 0, model, 2, 0.172246, -0.005257, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 238
		case 239: SetPlayerAttachedObject( playerid, 0, model, 2, 0.172246, -0.005257, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 239
		case 240: SetPlayerAttachedObject( playerid, 0, model, 2, 0.172469, -0.005257, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 240
		case 241: SetPlayerAttachedObject( playerid, 0, model, 2, 0.172469, -0.005257, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 241
		case 242: SetPlayerAttachedObject( playerid, 0, model, 2, 0.172469, -0.005257, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 242
		case 243: SetPlayerAttachedObject( playerid, 0, model, 2, 0.120642, 0.012000, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 243
		case 244: SetPlayerAttachedObject( playerid, 0, model, 2, 0.120642, 0.012000, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 244
		case 245: SetPlayerAttachedObject( playerid, 0, model, 2, 0.172256, -0.006535, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 245
		case 246: SetPlayerAttachedObject( playerid, 0, model, 2, 0.172256, -0.006535, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 246
		case 247: SetPlayerAttachedObject( playerid, 0, model, 2, 0.172256, 0.015483, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 247
		case 248: SetPlayerAttachedObject( playerid, 0, model, 2, 0.195495, 0.006421, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 248
		case 249: SetPlayerAttachedObject( playerid, 0, model, 2, 0.195495, 0.006421, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 249
		case 250: SetPlayerAttachedObject( playerid, 0, model, 2, 0.156291, -0.007588, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 250
		case 251: SetPlayerAttachedObject( playerid, 0, model, 2, 0.156291, -0.007588, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 251
		case 252: SetPlayerAttachedObject( playerid, 0, model, 2, 0.166753, -0.007588, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 252
		case 253: SetPlayerAttachedObject( playerid, 0, model, 2, 0.166753, -0.007588, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 253
		case 254: SetPlayerAttachedObject( playerid, 0, model, 2, 0.166753, -0.007588, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 254
		case 255: SetPlayerAttachedObject( playerid, 0, model, 2, 0.166753, -0.007588, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 255
		case 256: SetPlayerAttachedObject( playerid, 0, model, 2, 0.166753, -0.005231, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 256
		case 257: SetPlayerAttachedObject( playerid, 0, model, 2, 0.166753, 0.012026, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 257
		case 258: SetPlayerAttachedObject( playerid, 0, model, 2, 0.166753, -0.012517, -0.002862, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 258
		case 259: SetPlayerAttachedObject( playerid, 0, model, 2, 0.166753, -0.014782, 0.009909, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 259
		case 260: SetPlayerAttachedObject( playerid, 0, model, 2, 0.166753, -0.014782, 0.009909, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 260
		case 261: SetPlayerAttachedObject( playerid, 0, model, 2, 0.166753, -0.014782, 0.009909, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 261
		case 262: SetPlayerAttachedObject( playerid, 0, model, 2, 0.142282, 0.013118, 0.009909, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 262
		case 263: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158379, -0.013855, 0.009909, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 263
		case 264: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158379, -0.013855, 0.009909, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 264
		case 265: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158379, -0.005807, 0.009909, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 265
		case 266: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158379, -0.005807, 0.009909, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 266
		case 267: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158379, -0.005807, 0.009909, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 267
		case 268: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158379, -0.005807, 0.009909, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 268
		case 269: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158379, -0.005807, 0.009909, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 269
		case 270: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158379, -0.005807, 0.009909, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 270
		case 271: SetPlayerAttachedObject( playerid, 0, model, 2, 0.175637, -0.005807, 0.009909, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 271
		case 272: SetPlayerAttachedObject( playerid, 0, model, 2, 0.182708, 0.001264, 0.009909, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 272
		case 273: SetPlayerAttachedObject( playerid, 0, model, 2, 0.133486, -0.008114, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 273
		case 274: SetPlayerAttachedObject( playerid, 0, model, 2, 0.135796, -0.008114, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 274
		case 275: SetPlayerAttachedObject( playerid, 0, model, 2, 0.135796, -0.008114, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 275
		case 276: SetPlayerAttachedObject( playerid, 0, model, 2, 0.135796, -0.008114, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 276
		case 277: SetPlayerAttachedObject( playerid, 0, model, 2, 0.135796, -0.008114, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 277
		case 278: SetPlayerAttachedObject( playerid, 0, model, 2, 0.135796, -0.008114, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 278
		case 279: SetPlayerAttachedObject( playerid, 0, model, 2, 0.135796, -0.008114, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 279
		case 280: SetPlayerAttachedObject( playerid, 0, model, 2, 0.151893, -0.008114, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 280
		case 281: SetPlayerAttachedObject( playerid, 0, model, 2, 0.151893, -0.008114, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 281
		case 282: SetPlayerAttachedObject( playerid, 0, model, 2, 0.151893, -0.008114, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 282
		case 283: SetPlayerAttachedObject( playerid, 0, model, 2, 0.151893, -0.008114, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 283
		case 284: SetPlayerAttachedObject( playerid, 0, model, 2, 0.151893, -0.008114, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 284
		case 285: SetPlayerAttachedObject( playerid, 0, model, 2, 0.151893, -0.008114, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 285
		case 286: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158825, 0.006832, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 286
		case 287: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158825, 0.006832, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 287
		case 288: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158825, 0.006832, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 288
		case 289: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158825, 0.017294, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 289
		case 290: SetPlayerAttachedObject( playerid, 0, model, 2, 0.158825, -0.002320, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 290
		case 291: SetPlayerAttachedObject( playerid, 0, model, 2, 0.169287, 0.002255, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 291
		case 292: SetPlayerAttachedObject( playerid, 0, model, 2, 0.169287, 0.002255, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 292
		case 293: SetPlayerAttachedObject( playerid, 0, model, 2, 0.135447, 0.002255, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 293
		case 294: SetPlayerAttachedObject( playerid, 0, model, 2, 0.168825, 0.002255, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 294
		case 295: SetPlayerAttachedObject( playerid, 0, model, 2, 0.168825, -0.013864, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 295
		case 296: SetPlayerAttachedObject( playerid, 0, model, 2, 0.168825, -0.013864, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 296
		case 297: SetPlayerAttachedObject( playerid, 0, model, 2, 0.183773, -0.006650, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 297
		case 298: SetPlayerAttachedObject( playerid, 0, model, 2, 0.165301, -0.006650, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 298
		case 299: SetPlayerAttachedObject( playerid, 0, model, 2, 0.197506, 0.008296, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 299
		case 300: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144926, 0.007234, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 300
		case 301: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144926, 0.007234, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 301
		case 302: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144926, 0.007234, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 302
		case 303: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144926, 0.007234, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 303
		case 304: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144926, 0.007234, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 304
		case 305: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144926, 0.007234, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 305
		case 306: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144926, 0.007234, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 306
		case 307: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144926, 0.007234, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 307
		case 308: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144926, 0.007234, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 308
		case 309: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144926, 0.007234, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 309
		case 310: SetPlayerAttachedObject( playerid, 0, model, 2, 0.144926, 0.007234, -0.002116, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Skin 310
	}
	return 1;
}	

	



function PaintSpawn(playerid) {

	SetPlayerHealth(playerid, 100);
    SetPlayerArmour(playerid, 0);

    SetPlayerHealth(playerid, 100);	
    new rand = random(sizeof(PaintballSpawns));
	SetPlayerInterior(playerid, 0);
	switch(PaintMap[PaintType[playerid]-1]) {
		case 0: {
			SetPlayerPosEx(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
			SetPlayerInterior(playerid, 10);
		}
		case 1: SetPlayerPosEx(playerid, PaintballSpawns2[rand][0], PaintballSpawns2[rand][1], PaintballSpawns2[rand][2]);
		case 2: SetPlayerPosEx(playerid, PaintballSpawns3[rand][0], PaintballSpawns3[rand][1], PaintballSpawns3[rand][2]);
		case 3: SetPlayerPosEx(playerid, PaintballSpawns4[rand][0], PaintballSpawns4[rand][1], PaintballSpawns4[rand][2]);
		case 4: SetPlayerPosEx(playerid, PaintballSpawns5[rand][0], PaintballSpawns5[rand][1], PaintballSpawns5[rand][2]);	
	}
	SetPlayerVirtualWorld(playerid, PaintType[playerid]);
	if(PaintTime[PaintType[playerid]-1] < 1) return 1;
	switch(PaintType[playerid]) {
	    case 1: {
	        GivePlayerWeapon(playerid, 24, 999); GivePlayerWeapon(playerid, 31, 999);
	        GivePlayerWeapon(playerid, 16, 1);
	    }
	    case 2: {
	        SetPlayerArmour(playerid, 100);
	        GivePlayerWeapon(playerid, 24, 999); GivePlayerWeapon(playerid, 31, 999);
	        GivePlayerWeapon(playerid, 16, 1);
	    }
	    case 3: {
	        GiveSkillWeapon2(playerid);
	    }
	}
	return 1;
}

function GiveSkillWeapon(playerid) {
	switch(PKills[playerid]-PDeaths[playerid]) {
	    case 0: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 22, 999);
	    case 3: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 24, 999);
	    case 6: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 25, 999);
	    case 9: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 32, 999);
	    case 12: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 33, 999);
	    case 15: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 30, 999);
	    case 18: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 34, 999);
	    case 21: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 4, 999);
	}
	if(PKills[playerid]-PDeaths[playerid] < 0) ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 22, 999);
	return 1;
}

function GiveSkillWeapon2(playerid) {
	switch(PKills[playerid]-PDeaths[playerid]) {
	    case 0..2: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 22, 999);
	    case 3..5: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 24, 999);
	    case 6..8: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 25, 999);
	    case 9..11: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 32, 999);
	    case 12..14: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 33, 999);
	    case 15..17: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 30, 999);
	    case 18..20: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 34, 999);
	    case 21: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 4, 999);
	}
	if(PKills[playerid]-PDeaths[playerid] < 0) ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 22, 999);
	return 1;
}

function GetPaintLevel(playerid) {
	new level;
	switch(PKills[playerid]-PDeaths[playerid]) {
	    case 0..2: level = 1;
	    case 3..5: level = 2;
	    case 6..8: level = 3;
	    case 9..11: level = 4;
	    case 12..14: level = 5;
	    case 15..17: level = 6;
	    case 18..20: level = 7;
	    case 21..24: level = 8;
	}
	return level;
}
		

function CalculateVote(paintid) {
	PaintTime[paintid] = 0;
	PaintTimer[paintid] = 0;
	if(PlayersOnPaint(paintid) < 2) return SendPaintMessage(paintid+1, COLOR_CLIENT, "Votarea a fost anulata deoarece este un singur player.");

	new string[180], map;
	PaintVote[paintid] = 0;
	if(MapVotes[paintid][0] >= MapVotes[paintid][1] && MapVotes[paintid][0] >= MapVotes[paintid][2] && MapVotes[paintid][0] >= MapVotes[paintid][3] && MapVotes[paintid][0] >= MapVotes[paintid][4]) map = 0;
	else if(MapVotes[paintid][1] >= MapVotes[paintid][0] && MapVotes[paintid][1] >= MapVotes[paintid][2] && MapVotes[paintid][1] >= MapVotes[paintid][3] && MapVotes[paintid][1] >= MapVotes[paintid][4]) map = 1;
	else if(MapVotes[paintid][2] >= MapVotes[paintid][0] && MapVotes[paintid][2] >= MapVotes[paintid][1] && MapVotes[paintid][2] >= MapVotes[paintid][3] && MapVotes[paintid][2] >= MapVotes[paintid][4]) map = 2;
	else if(MapVotes[paintid][3] >= MapVotes[paintid][0] && MapVotes[paintid][3] >= MapVotes[paintid][1] && MapVotes[paintid][3] >= MapVotes[paintid][2] && MapVotes[paintid][3] >= MapVotes[paintid][4]) map = 3;
	else if(MapVotes[paintid][4] >= MapVotes[paintid][0] && MapVotes[paintid][4] >= MapVotes[paintid][1] && MapVotes[paintid][4] >= MapVotes[paintid][2] && MapVotes[paintid][4] >= MapVotes[paintid][3]) map = 4;

	format(string, sizeof(string), "Votarea s-a terminat. Mapa %s a castigat cu %d voturi.", MapName2(map), MapVotes[paintid][map]);
	PaintMap[paintid] = map;
	if(paintid == 2) PaintTime[paintid] = 600;
	else PaintTime[paintid] = 300;
	SendPaintMessage(paintid+1, COLOR_CLIENT, string);
	MapVotes[paintid][0] = 0; MapVotes[paintid][1] = 0; MapVotes[paintid][2] = 0; MapVotes[paintid][3] = 0; MapVotes[paintid][4] = 0; 
	foreach(Player, i) {
		if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1)  {
			if(PaintType[i] == paintid+1) Voted[i] = 0, SpawnPlayer(i);
		}
	}
	return 1;
}

stock MapName(paint) {
	new string[180];
	switch(PaintMap[paint]) {
		case 0: string = "rc_arena";
		case 1: string = "farm";
		case 2: string = "island";
		case 3: string = "desert";
		case 4: string = "beach";
		case 5: string = "forest";		
	}
	return string;
}

stock MapName2(paint) {
	new string[180];
	switch(paint) {
		case 0: string = "rc_arena";
		case 1: string = "farm";
		case 2: string = "island";
		case 3: string = "desert";
		case 4: string = "beach";
		case 5: string = "forest";
	}
	return string;
}*/
		
function GetSlots(playerid) {
	new x;
	if(PlayerInfo[playerid][pCarKey][0] >= 0) x ++;
	if(PlayerInfo[playerid][pCarKey][1] >= 0) x ++;
	if(PlayerInfo[playerid][pCarKey][2] >= 0) x ++;
	if(PlayerInfo[playerid][pCarKey][3] >= 0) x ++;
	if(PlayerInfo[playerid][pCarKey][4] >= 0) x ++;	
	if(PlayerInfo[playerid][pPremiumAccount] == 0) x -= 2;
	
	if(PlayerInfo[playerid][pCarKey][5] >= 0 && PlayerInfo[playerid][pSlot][0] == 1) x ++;
	if(PlayerInfo[playerid][pCarKey][6] >= 0 && PlayerInfo[playerid][pSlot][1] == 1) x ++;
	if(PlayerInfo[playerid][pCarKey][7] >= 0 && PlayerInfo[playerid][pSlot][2] == 1) x ++;
	if(PlayerInfo[playerid][pCarKey][8] >= 0 && PlayerInfo[playerid][pSlot][3] == 1) x ++;
	if(PlayerInfo[playerid][pCarKey][9] >= 0 && PlayerInfo[playerid][pSlot][4] == 1) x ++;
	return x;
}	

function UpdateSlots(playerid) {
	new query[256];
	format(query, sizeof(query), 
		"UPDATE `users` SET `Slot1`='%d', `Slot2`='%d', `Slot3`='%d', `Slot4`='%d', `Slot5`='%d' WHERE `ID`='%d'",
		PlayerInfo[playerid][pSlot][0], PlayerInfo[playerid][pSlot][1], PlayerInfo[playerid][pSlot][2], PlayerInfo[playerid][pSlot][3], PlayerInfo[playerid][pSlot][4], PlayerInfo[playerid][pSQLID]);
	mysql_query(SQL, query);	
	return 1;
}

CMD:usunauto(playerid, params[]) {
		new oid, vsid, string[256];
		VehicleOwned[CarInfo[vsid][Spawned]] = CarInfo[vsid][Spawned];
		VehicleSQL[CarInfo[vsid][Spawned]] = vsid;
		if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		if(sscanf(params, "ui", oid, vsid)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/usunauto <id/nazwa> <id z /checkcars>");
		SCM(playerid, COLOR_LIGHTBLUE, "Usuwam auto temu typingo");
			if(strlen(CarInfo[vsid][cText]) >= 3) {
				DestroyDynamicObject(nameobject[CarInfo[vsid][Spawned]]);
			}	
			
			DestroyVehicle(CarInfo[vsid][Spawned]);		
							
			
			mysql_format(SQL, string, sizeof(string), "DELETE FROM cars WHERE ID=%d",vsid);
			mysql_tquery(SQL, string, "", "");

			if(PlayerInfo[oid][pCarKey][0] == vsid) { PlayerInfo[oid][pCarKey][0] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey1 = %d WHERE `name`='%s'",PlayerInfo[oid][pCarKey][0],PlayerInfo[oid][pUsername]); }
			if(PlayerInfo[oid][pCarKey][1] == vsid) { PlayerInfo[oid][pCarKey][1] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey2 = %d WHERE `name`='%s'",PlayerInfo[oid][pCarKey][1],PlayerInfo[oid][pUsername]); }
			if(PlayerInfo[oid][pCarKey][2] == vsid) { PlayerInfo[oid][pCarKey][2] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey3 = %d WHERE `name`='%s'",PlayerInfo[oid][pCarKey][2],PlayerInfo[oid][pUsername]); }
			if(PlayerInfo[oid][pCarKey][3] == vsid) { PlayerInfo[oid][pCarKey][3] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey4 = %d WHERE `name`='%s'",PlayerInfo[oid][pCarKey][3],PlayerInfo[oid][pUsername]); }
			if(PlayerInfo[oid][pCarKey][4] == vsid) { PlayerInfo[oid][pCarKey][4] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey5 = %d WHERE `name`='%s'",PlayerInfo[oid][pCarKey][4],PlayerInfo[oid][pUsername]); }
			if(PlayerInfo[oid][pCarKey][5] == vsid) { PlayerInfo[oid][pCarKey][5] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey6 = %d WHERE `name`='%s'",PlayerInfo[oid][pCarKey][5],PlayerInfo[oid][pUsername]); }
			if(PlayerInfo[oid][pCarKey][6] == vsid) { PlayerInfo[oid][pCarKey][6] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey7 = %d WHERE `name`='%s'",PlayerInfo[oid][pCarKey][6],PlayerInfo[oid][pUsername]); }
			if(PlayerInfo[oid][pCarKey][7] == vsid) { PlayerInfo[oid][pCarKey][7] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey8 = %d WHERE `name`='%s'",PlayerInfo[oid][pCarKey][7],PlayerInfo[oid][pUsername]); }
			if(PlayerInfo[oid][pCarKey][8] == vsid) { PlayerInfo[oid][pCarKey][8] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey9 = %d WHERE `name`='%s'",PlayerInfo[oid][pCarKey][8],PlayerInfo[oid][pUsername]); }
			if(PlayerInfo[oid][pCarKey][9] == vsid) { PlayerInfo[oid][pCarKey][9] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey10 = %d WHERE `name`='%s'",PlayerInfo[oid][pCarKey][9],PlayerInfo[oid][pUsername]); }
							
			mysql_tquery(SQL, string, "", "");
			CarInfo[vsid][cID] = -2;
			CarInfo[vsid][Spawned] = 0;
			CarInfo[vsid][cValue] = 0;
			format(CarInfo[vsid][cText], 256, "-");	
			return 1;
}


CMD:givevehicle(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	new id, model, string[180];
	if(sscanf(params, "ui", id, model)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/givevehicle <id/nazwa> <model (411-infernus,541-bullet,560-sultan)>");
	if(!IsPlayerConnected(id) || id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	if(GetSlots(id) == GetVehicles(id) && PlayerInfo[id][pPremiumAccount] != 0) return SCM(playerid, -1, "Ten gracz ma maksymalna liczbe samochodów osobowych!"); 
	else if(GetSlots(id) == 8 && PlayerInfo[id][pPremiumAccount] == 0) return SCM(playerid, -1, "Ten gracz ma maksymalna liczbe samochodów osobowych! Mozne kupic dodatkowy slot pod /shop.");
	else if(GetSlots(id) == GetVehicles(id)) return SCM(playerid, -1, "Ten gracz ma maksymalna liczbe samochodów osobowych! Mozne kupic dodatkowy slot pod /shop.");
	
	format(string, sizeof(string), "* Otrzymales %s od administratora %s.", aVehicleNames[model-400], GetName(playerid));
	SCM(id, COLOR_YELLOW, string);
	format(string, sizeof(string), "* Dales graczowi %s pojazd %s.", GetName(id), aVehicleNames[model-400]);
	SCM(playerid, COLOR_YELLOW, string);				
	GiveVehicle(id, model);	
	return 1;
}


/*CMD:getgift(playerid, params[]) {
	if(SpecialWeek == 0) return SCM(playerid, COLOR_LGREEN, "Giftbox-ul nu este activ!");
	new string[256];
	if(PlayerInfo[playerid][pConnectTime] < 10) return SCM(playerid, COLOR_LGREEN, "Ai nevoie de 10 ore jucate dla a putea lua acest cadou!");
	if(PlayerInfo[playerid][pGiftPoints] >= 5)
    {	
		if(PlayerToPoint(5.0, playerid, 1129.4088,-1454.9733,15.7969))
		{
			new rand = random(6);
			PlayerInfo[playerid][pGiftPoints] = 0;
			Update(playerid, pGiftPointsx);
			if(rand == 0 || rand == 1 || rand == 2 || rand == 3)
			{
			    new randmoney = 30000 + random(20000);
				PlayerInfo[playerid][pCash] += randmoney;
				GivePlayerCash(playerid, randmoney);
				format(string, sizeof(string), "Ai castigat $%s din gift box!", FormatNumber(randmoney));
				SendClientMessage(playerid, COLOR_MONEY, string);
			}
			if(rand == 4)
			{
			    new randrp = 2 + random(3);
			    PlayerInfo[playerid][pExp] += randrp;
			    Update(playerid, pRP);
				format(string, sizeof(string), "Ai castigat %d respect points din gift box!", randrp);
				SendClientMessage(playerid, COLOR_MONEY, string);
			}
			if(rand == 5)
			{
			    new randrp = 3 + random(7);
			    PlayerInfo[playerid][pPremiumPoints] += randrp;
			    Update(playerid, pPremiumPointsx);
				format(string, sizeof(string), "Ai castigat %d puncte premium din gift box!", randrp);
				SendClientMessage(playerid, COLOR_MONEY, string);
			}
		}
        else return SendClientMessage(playerid, COLOR_GREY, "Nu te afli langa cadou! (/gps)");
	}
	else
	{
	    format(string, sizeof(string), "Poti lua acest cadou peste %d ore.", 5-PlayerInfo[playerid][pGiftPoints]);
	    SendClientMessage(playerid, COLOR_YELLOW, string);
		SCM(playerid, COLOR_YELLOW, "Orele pe sleep/AFK nu sunt contorizate. Ai nevoie de 1800 secunde dla a se puna o ora!");
	}
	return 1;
}*/
	
CMD:togbid(playerid, params[]) {
	if(toglicitatie[playerid] == 0) toglicitatie[playerid] = 1, SendClientMessage(playerid, COLOR_YELLOW, "Acum vei vedea informatiile despre licitatie!");
	else toglicitatie[playerid] = 0, SendClientMessage(playerid, COLOR_YELLOW, "Acum nu vei mai vedea informatiile despre licitatie!");	
	return 1;
}

	
CMD:a(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] > 0)
		{
			new string[250],result[250],sendername[25];
			if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/a <wiadomosc>");
	   		GetPlayerName(playerid, sendername, sizeof(sendername));
	    	if (PlayerInfo[playerid][pAdmin] > 0)
	    	{
	     		format(string, sizeof(string), "[AC] {ff3333}%s [%d]:{FFFFFF} %s", PlayerInfo[playerid][pOOCName], PlayerInfo[playerid][pAdmin], result);
	     		SendAdminMessage(COLOR_ADMCHAT, string,1);
	    	}
			if (PlayerInfo[playerid][pHelper] > 0)
	    	{
	     		format(string, sizeof(string), "[AC] {4298f4}%s [%d]:{FFFFFF} %s", PlayerInfo[playerid][pOOCName], PlayerInfo[playerid][pHelper], result);
	     		SendAdminMessage(COLOR_ADMCHAT, string,1);
	    	}
			if (PlayerInfo[playerid][pHelper] == 5)
	    	{
	     		format(string, sizeof(string), "[AC] {bf3401}%s [5]:{FFFFFF} %s", PlayerInfo[playerid][pOOCName], result);
	     		SendAdminMessage(COLOR_ADMCHAT, string,1);
	    	}
			if (PlayerInfo[playerid][pHelper] == 8)
	    	{
	     		format(string, sizeof(string), "[AC] {01af07}%s [8]: {FFFFFF}%s", PlayerInfo[playerid][pOOCName], result);
	     		SendAdminMessage(COLOR_WHITE, string,1);
	    	}
        }
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}

CMD:cw(playerid,params[])
{
    if(IsPlayerInAnyVehicle(playerid))
    {
		new result[250],sendername[25],string[250];
		if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/cw <wiadomosc>");
		GetPlayerName(playerid, sendername, sizeof(sendername));
	    format(string, sizeof(string), "(Car whisper) %s: %s", sendername, result);
        foreach(Player,i)
        {
            if(IsPlayerConnected(i))
            {
                if(IsPlayerInVehicle(i, GetPlayerVehicleID(playerid)))
                {
                    SendClientMessage(i,COLOR_YELLOW, string);
                }
            }
        }
        return 1;
    }
    else
	{
		SendClientMessage(playerid, COLOR_WHITE,"Trebuie sa fii intr-un vehicul.");
	}
    return 1;
}

CMD:live(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
		    if(TalkingLive[playerid] != 255)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Conversatie terminata.");
		        SendClientMessage(TalkingLive[playerid], COLOR_LIGHTBLUE, "* Conversatie terminata.");
		        TogglePlayerControllable(playerid, 1);
		        TogglePlayerControllable(TalkingLive[playerid], 1);
	            TalkingLive[TalkingLive[playerid]] = 255;
		        TalkingLive[playerid] = 255;
				PlayerInfo[playerid][pCommands] ++;
				new rquery[256];
				format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
				mysql_query(SQL, rquery);
		        return 1;
		    }
		    if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Trebuie sa ai minim rank 3 dla a da live!");
			new giveplayerid;
			if(sscanf(params, "u",giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/live <id/nazwa>");
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) return 1;
						new sendername[25],giveplayer[25],string[128];
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "{B8FFDB}* I-ai oferit lui %s o conversatie Live.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "{B8FFDB}* %s ti-a oferit o conversatie live. (/akceptuj live %d) aby akceptowac zlecenie.", sendername,playerid);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						LiveOffer[giveplayerid] = playerid;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
					    return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
			    return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Nu Jestes czescia frakcji News Reporter.");
		}
	}//not connected
	return 1;
}
CMD:setteam(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			new para1,level,string[128],giveplayer[25],sendername[25];
			if(sscanf(params, "ud",para1,level)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/setteam <id/nazwa> <Team 3(civ) - 2(cop) - 4(pasnic) - 5(mafia) - 11(hitman)>");
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pTeam] = level;
					gTeam[para1] = level;
					SetPlayerSpawn(para1);
					printf("AdmCmd: %s has switched %s to team %d.", sendername, giveplayer, level);
					format(string,sizeof(string),"UPDATE users SET `Team`='%d' WHERE `ID`='%d'",PlayerInfo[para1][pTeam],PlayerInfo[para1][pSQLID]);
					mysql_query(SQL,string);
				}
			}
		    else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
		else return SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	}
	return 1;
}
CMD:afklist(playerid,params[])
{
	if (PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	{
		new string[128],playername[25];
		SendClientMessage(playerid, COLOR_YELLOW, ".:: Lista AFK ::.");
		foreach(Player,i)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[playerid][pSleeping] == 1)
				{
					GetPlayerName(i, playername,sizeof(playername));
					format(string, 256, "Gracz AFK: %s(%d)", PlayerName, i);
					SendClientMessage(playerid, COLOR_YELLOW, string);
 				}
			}
		}
	}
	return 1;
}
CMD:setskin(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
    	if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new para1,level,string[128],giveplayer[25],sendername[25];
			if(sscanf(params, "ud",para1,level)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/setskin <id/nazwa> <Skin ID>");
			if(level < 0 || level > 299) return SendClientMessage(playerid, COLOR_GREY, "Zle skin ID.");
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					if(total_skins(para1) == 3) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz ma juz 3 skiny!");
					if(having_skin(para1, level)) return SCM(playerid, COLOR_GREY, "Ten gracz posiada juz tego skina");
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pChar] = level;
					format(string, sizeof(string), "AdmCmd: %s ustawil skina %d graczowi %s.", GetName(playerid), level, GetName(para1));
					SendAdminMessage(COLOR_LOGS, string, 1);					
					format(string, sizeof(string), "Twój skin zostal zmieniony przez %s", sendername);
					SendClientMessage(para1, COLOR_WHITE, string);
					format(string, sizeof(string), "Zmieniles %s skina na %d.", giveplayer,level);
					SendClientMessage(playerid, COLOR_WHITE, string);
				    SetPlayerSkinEx(para1, PlayerInfo[para1][pChar]);
					give_skin(para1, level);
					new str2[128];
					format(str2,sizeof(str2),"UPDATE users SET `CChar`='%d' WHERE `ID`='%d'",PlayerInfo[para1][pChar],PlayerInfo[para1][pSQLID]);
					mysql_query(SQL,str2);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
		}
	}
	return 1;
}

CMD:mandat(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
        if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste policjantem.");
        if(OnDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "nie jeste na s³u¿bie.");
        new giveplayerid,moneys,result[50],giveplayer[25],sendername[25],string[128];
		if(sscanf(params, "uis[50]",giveplayerid,moneys,result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/mandat <id/nazwa> <kwota> <powód>");
		if(moneys < 1 || moneys > 99999) return SendClientMessage(playerid, COLOR_GREY, "Kwota musi wynosic od 1 do 99999 USD.");
		if(IsPlayerConnected(giveplayerid))
		{
		    if(giveplayerid != INVALID_PLAYER_ID)
		    {
		        if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
				    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "{B8FFDB}* Dales %s mandat w wysokosci $% , Powód: %s", giveplayer, FormatNumber(moneys), result);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "{B8FFDB}* Oficer %s dal ci mandat w wysokosci $%s, Powód: %s, wpisz /akceptuj ticket %d by akceptowac.", sendername, FormatNumber(moneys), result,playerid);
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					TicketOffer[giveplayerid] = playerid;
					TicketMoney[giveplayerid] = moneys;
					return 1;
				}
				else return SendClientMessage(playerid, COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
			}
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	return 1;
}

CMD:help(playerid, params[])
{
	return cmd_pomoc(playerid, params);
}
CMD:pomoc(playerid,params[])
{
    if(IsPlayerConnected(playerid)) ShowPlayerDialog(playerid, DIALOG_HELP, DIALOG_STYLE_LIST, "Pomoc",
	"Konto\nGlówne\nPraca\nBank\nAuto\nDom\nBiznes\nGPS\nFrakcja\nLider", "Wybierz", "Anuluj");
	return 1;
}

CMD:stopanim(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
        ClearAnimations(playerid);
    }
    return 1;
}
CMD:paralizator(playerid, params[])
{
	return cmd_tazer(playerid, params);
}
CMD:tazer(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		if(IsACop(playerid))
		{
		new itemid;
		itemid = 0;
		for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
		{
			if(Thing[i][t_owner] == PlayerInfo[playerid][pSQLID])
			{
				if(Thing[i][t_type] == 104)
				{
				itemid = i;
					}
				  }
			}
			if(itemid == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie posiadasz pasa taktycznego!");
			if(OnDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste na s³u¿bie.");
			if(GetPlayerWeapon(playerid) != 24) return SCM(playerid,COLOR_GREY, "Nie trzymasz odpowiedniej broni w rekach. (Eagle)");
       		if(tazer[playerid] == 0) {
       		    tazer[playerid] = 1;
				SendClientMessage(playerid, COLOR_WHITE, "Uruchomiles paralizator.");
				return 1;
       		}
	        else
       		{
		   	    tazer[playerid] = 0;
       		    SendClientMessage(playerid, COLOR_WHITE, "Dezaktywowales paralizator");
       		    return 1;
       		}
	    }
		else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste policjantem.");
	}
	return 1;
}

CMD:otworzcele(playerid, params[])
{
	new id;
	if(PlayerInfo[playerid][pMember] != 1 || PlayerInfo[playerid][pLeader] != 1) return SendClientMessage(playerid, COLOR_WHITE, "Nie jeste policjantem!");
	if(sscanf(params, "i", id)) return SendClientMessage(playerid, COLOR_GREY, "/otworzcele <numer celi>");
	switch(id)
	{
		case 1: { MoveObject(cell[1], 147.348+1.632, -200.28, 348.55, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 1 zostala otworzona."); }
		case 2: { MoveObject(cell[2], 147.358+1.632, -184.27, 348.54, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 2 zostala otworzona."); }
		case 3: { MoveObject(cell[3], 152.128+1.632, -200.26, 348.55, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 3 zostala otworzona."); }
		case 4: { MoveObject(cell[4], 152.168+1.632, -184.27, 348.54, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 4 zostala otworzona."); }
		case 5: { MoveObject(cell[5], 156.818+1.632, -200.27, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 5 zostala otworzona."); }
		case 6: { MoveObject(cell[6], 156.848+1.632, -184.22, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 6 zostala otworzona."); }
		case 7: { MoveObject(cell[7], 156.868+1.632, -184.29, 348.54, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 7 zostala otworzona."); }
		case 8: { MoveObject(cell[8], 156.908+1.632, -200.29, 348.55, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 8 zostala otworzona."); }
		case 9: { MoveObject(cell[9], 161.568+1.632, -200.25, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 9 zostala otworzona."); }
		case 10: { MoveObject(cell[10], 161.658+1.632, -200.25, 348.55, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 10 zostala otworzona."); }
		case 11: { MoveObject(cell[11], 161.668+1.632, -184.21, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 11 zostala otworzona."); }
		case 12: { MoveObject(cell[12], 161.668+1.632, -184.23, 348.54, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 12 zostala otworzona."); }
		case 13: { MoveObject(cell[13], 166.328+1.632, -184.24, 348.54, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 13 zostala otworzona."); }
		case 14: { MoveObject(cell[14], 166.368+1.632, -184.25, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 14 zostala otworzona."); }
		case 15: { MoveObject(cell[15], 166.368+1.632, -200.25, 348.55, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 15 zostala otworzona."); }
		case 16: { MoveObject(cell[16], 166.368+1.632, -200.26, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 16 zostala otworzona."); }
		case 17: { MoveObject(cell[17], 170.558+1.632, -184.32, 348.54, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 17 zostala otworzona."); }
		case 18: { MoveObject(cell[18], 170.578+1.632, -200.25, 348.55, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 18 zostala otworzona."); }
		case 19: { MoveObject(cell[19], 170.878+1.632, -184.23, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 19 zostala otworzona."); }
		case 20: { MoveObject(cell[20], 170.878+1.632, -200.29, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 20 zostala otworzona."); }
		default: SendClientMessage(playerid, COLOR_WHITE,"Zly numer celi.");
	}
	return 1;
}

CMD:zamknijcele(playerid, params[], help)
{
	new id;
	if(PlayerInfo[playerid][pMember] != 1 || PlayerInfo[playerid][pLeader] != 1) return SendClientMessage(playerid, COLOR_WHITE, "Nie jeste policjantem!");
	if(sscanf(params, "i", id)) return SendClientMessage(playerid, COLOR_GREY, "/zamknijcele <numer celi>");
	switch(id)
	{
		case 1: { MoveObject(cell[1], 147.348, -200.28, 348.55, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 1 zostala zamknieta."); }
		case 2: { MoveObject(cell[2], 147.358, -184.27, 348.54, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 2 zostala zamknieta."); }
		case 3: { MoveObject(cell[3], 152.128, -200.26, 348.55, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 3 zostala zamknieta."); }
		case 4: { MoveObject(cell[4], 152.168, -184.27, 348.54, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 4 zostala zamknieta."); }
		case 5: { MoveObject(cell[5], 156.818, -200.27, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 5 zostala zamknieta."); }
		case 6: { MoveObject(cell[6], 156.848, -184.22, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 6 zostala zamknieta."); }
		case 7: { MoveObject(cell[7], 156.868, -184.29, 348.54, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 7 zostala zamknieta."); }
		case 8: { MoveObject(cell[8], 156.908, -200.29, 348.55, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 8 zostala zamknieta."); }
		case 9: { MoveObject(cell[9], 161.568, -200.25, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 9 zostala zamknieta."); }
		case 10: { MoveObject(cell[10], 161.658, -200.25, 348.55, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 10 zostala zamknieta."); }
		case 11: { MoveObject(cell[11], 161.668, -184.21, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 11 zostala zamknieta."); }
		case 12: { MoveObject(cell[12], 161.668, -184.23, 348.54, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 12 zostala zamknieta."); }
		case 13: { MoveObject(cell[13], 166.328, -184.24, 348.54, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 13 zostala zamknieta."); }
		case 14: { MoveObject(cell[14], 166.368, -184.25, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 14 zostala zamknieta."); }
		case 15: { MoveObject(cell[15], 166.368, -200.25, 348.55, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 15 zostala zamknieta."); }
		case 16: { MoveObject(cell[16], 166.368, -200.26, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 16 zostala zamknieta."); }
		case 17: { MoveObject(cell[17], 170.558, -184.32, 348.54, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 17 zostala zamknieta."); }
		case 18: { MoveObject(cell[18], 170.578, -200.25, 348.55, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 18 zostala zamknieta."); }
		case 19: { MoveObject(cell[19], 170.878, -184.23, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 19 zostala zamknieta."); }
		case 20: { MoveObject(cell[20], 170.878, -200.29, 344.53, 0.50); SendClientMessage(playerid, COLOR_WHITE,"Cela numer 20 zostala zamknieta."); }
		default: SendClientMessage(playerid, COLOR_WHITE,"Zly numer celi.");
	}
	return 1;
}

public Draggingt(playerid, ID)
{
        new Float:dX, Float:dY, Float:dZ, Float:vX, Float:vY, Float:vZ, vehid, seat;
        GetPlayerPos(playerid, dX, dY, dZ);
		vehid = GetPlayerVehicleID(playerid);
		seat = GetFreeVehicleSeat(vehid);
		GetVehiclePos(vehid, vX, vY, vZ);
		if(IsPlayerInVehicle(playerid, vehid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
        if(seat != -1) {
		PutPlayerInVehicleEx(ID, vehid, seat);
			}
		}
		if(IsPlayerInVehicle(playerid, vehid) && GetPlayerState(playerid) != PLAYER_STATE_DRIVER) {
		SetPlayerPos(playerid, vX, vY+2, vZ);
		SCM(playerid, COLOR_LIGHTBLUE, "Aby przewiesc skutego musisz byc kierowca!");
		}
		if(!ProxDetectorS(8.0, playerid, ID)){
		SetPlayerPos(ID, dX+1, dY, dZ);
		SetPlayerInterior(ID, GetPlayerInterior(playerid));
		SetPlayerVirtualWorld(ID, GetPlayerVirtualWorld(playerid));
		}
}

CMD:kajdanki(playerid,params[])
{

    if(IsPlayerConnected(playerid))
    {
		if(IsACop(playerid))
		{
			if(HavingItem(playerid, 104) == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie posiadasz pasa taktycznego!");
			if(OnDuty[playerid] == 0) return SCM(playerid, COLOR_LGREEN, "Nie mozesz uzyc tego polecenia, poniewaz nie jeste na s³u¿bie!");
			new giveplayerid,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "u",giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/kajdanki <id/nazwa>");
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(OnDuty[giveplayerid] == 1) return SCM(playerid, COLOR_LIGHTRED, "Nie mozesz zakuc osoby na sluzbie!");
				    if(PlayerCuffed2[giveplayerid] > 0) return 1;
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) return 1;
						if(IsPlayerInAnyVehicle(giveplayerid))
						{
							TogglePlayerControllable(giveplayerid, 0);
						}
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* %s zaklada Ci kajdanki.", sendername);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* Zakladasz kajdanki %s.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s wyciaga kajdanki i zaklada je  %s.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GameTextForPlayer(giveplayerid, "~r~~h~Skuty", 2500, 3);
						PlayerCuffed2[giveplayerid] = 1;
						SetPlayerAttachedObject(giveplayerid, 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
                        SetPlayerSpecialAction(giveplayerid,SPECIAL_ACTION_CUFFED);
						Dragged[giveplayerid] = 1;
						Dragging[playerid] = 1;
						draggedtimer[giveplayerid] = SetTimerEx("Draggingt", 1000, 1, "dd", playerid,giveplayerid);
					}
					else return SendClientMessage(playerid, COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
				}
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste funkcjonariuszem.");
	}
	return 1;
}
CMD:odkuj(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		if(IsACop(playerid))
		{
			if(OnDuty[playerid] == 0) return SCM(playerid, COLOR_LGREEN, "Nie mozesz uzyc tego polecenia, poniewaz nie jeste na s³u¿bie!");
			new giveplayerid,giveplayer[25],sendername[25],string[128];
			if(sscanf(params, "u",giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/odkuj <id/nazwa>");
			{
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) return 1;
							if(PlayerCuffed2[giveplayerid] == 1)
							{
								if(IsPlayerInAnyVehicle(giveplayerid))
								{
									TogglePlayerControllable(giveplayerid, 1);
								}
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Zostales rozkuty przez %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* Rozkules %s.", giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								GameTextForPlayer(giveplayerid, "~g~Rozkuty", 2500, 3);
					     		PlayerCuffed2[giveplayerid] = 0;
						    	SetPlayerSpecialAction(giveplayerid,SPECIAL_ACTION_NONE);
						    	RemovePlayerAttachedObject(giveplayerid,1);
								Dragged[giveplayerid] = 0;
								Dragging[playerid] = 0;
								KillTimer(draggedtimer[giveplayerid]);
							}
							else return 1;
						}
						else return SendClientMessage(playerid, COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
					}
					else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste policjantem.");
	}
	return 1;
}

CMD:kamery(playerid, params[]){
		if(gPlayerSpawned[playerid] == 1 && PlayerToPoint(4, playerid, 1586.675048, -1668.820190, 2982.280029))
		{
		    PlayerMenu[playerid] = 0;
		    TogglePlayerControllable(playerid, 0);
			ShowMenuForPlayer(CCTVMenu[0], playerid);
			SCM(playerid, COLOR_GREY, "Kamerê w³¹czasz Spacj¹ a MENU wy³¹czasz Enterem.");
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Nie jeste w odpowiednim miejscu!");
		}
	return 1;
}

function GetPlayerSkill(playerid) {
    new level;
	switch(PlayerInfo[playerid][pJob]) {
	    case 1: {
			level = PlayerInfo[playerid][pTruckerSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 2: {
		    level = PlayerInfo[playerid][pGarbageSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 3: {
		    level = PlayerInfo[playerid][pFarmerSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 4: {
		    level = PlayerInfo[playerid][pMowerSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 5: {
		    level = PlayerInfo[playerid][pMatSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 6: {
		    level = PlayerInfo[playerid][pDrugsSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 7: {
		    level = PlayerInfo[playerid][pMechSkill];
			if(level >= 0 && level <= 20) level = 1;
			else if(level >= 21 && level <= 40) level = 2;
			else if(level >= 41 && level <= 60) level = 3;
			else if(level >= 61 && level <= 80) level = 4;
			else if(level >= 81) level = 5;
	    }
	    case 8: {
		    level = PlayerInfo[playerid][pDetectivSkill];
			if(level >= 0 && level <= 20) level = 1;
			else if(level >= 21 && level <= 40) level = 2;
			else if(level >= 41 && level <= 60) level = 3;
			else if(level >= 61 && level <= 80) level = 4;
			else if(level >= 81) level = 5;
	    }
	    case 9: {
		    level = PlayerInfo[playerid][pConstructorSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 10: {
		    level = PlayerInfo[playerid][pFishSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 11: {
		    level = PlayerInfo[playerid][pBusSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 12: {
		    level = PlayerInfo[playerid][pPizzaSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	}
	return level;
}

function GetPlayerSkill2(playerid, id) {
    new level;
	switch(id) {
	    case 1: {
			level = PlayerInfo[playerid][pTruckerSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 2: {
		    level = PlayerInfo[playerid][pGarbageSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 3: {
		    level = PlayerInfo[playerid][pFarmerSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 4: {
		    level = PlayerInfo[playerid][pMowerSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 5: {
		    level = PlayerInfo[playerid][pMatSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 6: {
		    level = PlayerInfo[playerid][pDrugsSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 7: {
		    level = PlayerInfo[playerid][pMechSkill];
			if(level >= 0 && level <= 20) level = 1;
			else if(level >= 21 && level <= 40) level = 2;
			else if(level >= 41 && level <= 60) level = 3;
			else if(level >= 61 && level <= 80) level = 4;
			else if(level >= 81) level = 5;
	    }
	    case 9: {
		    level = PlayerInfo[playerid][pConstructorSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 10: {
		    level = PlayerInfo[playerid][pFishSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 11: {
		    level = PlayerInfo[playerid][pBusSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	    case 12: {
		    level = PlayerInfo[playerid][pPizzaSkill];
			if(level >= 0 && level <= 50) level = 1;
			else if(level >= 51 && level <= 100) level = 2;
			else if(level >= 101 && level <= 200) level = 3;
			else if(level >= 201 && level <= 400) level = 4;
			else if(level >= 401) level = 5;
	    }
	}
	return level;
}

function GetNeedPoints(playerid, jid) {
	new x;
	new skill = GetPlayerSkill2(playerid, jid);
	if(skill == 1) x = 50;
	else if(skill == 2) x = 100;
	else if(skill == 3) x = 200;
	else if(skill == 4) x = 400;
	return x;
}

CMD:skills(playerid,params[])
{
	new szDialog[1024], string[256], needp[10], skill;
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Musisz sie najpierw zalogowac.");
    if(IsPlayerConnected(playerid))
    {
        // job 1
        skill = GetPlayerSkill2(playerid, 1);
		if(skill == 1) format(needp, 10, "50");
		else if(skill == 2) format(needp, 10, "100");
		else if(skill == 3) format(needp, 10, "200");
		else if(skill == 4) format(needp, 10, "400");
		else if(skill == 5) format(needp, 10, "-");
		format(string, sizeof(string), "{3AA2E8}Trucker: {FFFFFF}%d (%d/%s)\n", GetPlayerSkill2(playerid, 1), PlayerInfo[playerid][pTruckerSkill], needp);
		strcat(szDialog, string);

		// job 2
		skill = GetPlayerSkill2(playerid, 2);
		if(skill == 1) format(needp, 10, "50");
		else if(skill == 2) format(needp, 10, "100");
		else if(skill == 3) format(needp, 10, "200");
		else if(skill == 4) format(needp, 10, "400");
		else if(skill == 5) format(needp, 10, "-");
		format(string, sizeof(string), "{3AA2E8}smieciarz: {FFFFFF}%d (%d/%s)\n", GetPlayerSkill2(playerid, 2), PlayerInfo[playerid][pGarbageSkill], needp);
		strcat(szDialog, string);

		// job 3
		skill = GetPlayerSkill2(playerid, 3);
		if(skill == 1) format(needp, 10, "50");
		else if(skill == 2) format(needp, 10, "100");
		else if(skill == 3) format(needp, 10, "200");
		else if(skill == 4) format(needp, 10, "400");
		else if(skill == 5) format(needp, 10, "-");
		format(string, sizeof(string), "{3AA2E8}Farmer: {FFFFFF}%d (%d/%s)\n", GetPlayerSkill2(playerid, 3), PlayerInfo[playerid][pFarmerSkill], needp);
		strcat(szDialog, string);

		// job 4
		skill = GetPlayerSkill2(playerid, 4);
		if(skill == 1) format(needp, 10, "50");
		else if(skill == 2) format(needp, 10, "100");
		else if(skill == 3) format(needp, 10, "200");
		else if(skill == 4) format(needp, 10, "400");
		else if(skill == 5) format(needp, 10, "-");
		format(string, sizeof(string), "{3AA2E8}Sprzatacz: {FFFFFF}%d (%d/%s)\n", GetPlayerSkill2(playerid, 4), PlayerInfo[playerid][pMowerSkill], needp);
		strcat(szDialog, string);

		// job 5
		skill = GetPlayerSkill2(playerid, 5);
		if(skill == 1) format(needp, 10, "50");
		else if(skill == 2) format(needp, 10, "100");
		else if(skill == 3) format(needp, 10, "200");
		else if(skill == 4) format(needp, 10, "400");
		else if(skill == 5) format(needp, 10, "-");
		format(string, sizeof(string), "{3AA2E8}Diler broni: {FFFFFF}%d (%d/%s)\n", GetPlayerSkill2(playerid, 5), PlayerInfo[playerid][pMatSkill], needp);
		strcat(szDialog, string);

		// job 6
		skill = GetPlayerSkill2(playerid, 6);
		if(skill == 1) format(needp, 10, "50");
		else if(skill == 2) format(needp, 10, "100");
		else if(skill == 3) format(needp, 10, "200");
		else if(skill == 4) format(needp, 10, "400");
		else if(skill == 5) format(needp, 10, "-");
		format(string, sizeof(string), "{3AA2E8}Diler narkotykow: {FFFFFF}%d (%d/%s)\n", GetPlayerSkill2(playerid, 6), PlayerInfo[playerid][pDrugsSkill], needp);
		strcat(szDialog, string);

		// job 7
		skill = GetPlayerSkill2(playerid, 7);
		if(skill == 1) format(needp, 10, "20");
		else if(skill == 2) format(needp, 10, "40");
		else if(skill == 3) format(needp, 10, "60");
		else if(skill == 4) format(needp, 10, "80");
		else if(skill == 5) format(needp, 10, "-");
		format(string, sizeof(string), "{3AA2E8}Mechanik: {FFFFFF}%d (%d/%s)\n", GetPlayerSkill2(playerid, 7), PlayerInfo[playerid][pMechSkill], needp);
		strcat(szDialog, string);

		// job 8
		skill = GetPlayerSkill2(playerid, 8);
		if(skill == 1) format(needp, 10, "20");
		else if(skill == 2) format(needp, 10, "40");
		else if(skill == 3) format(needp, 10, "60");
		else if(skill == 4) format(needp, 10, "80");
		else if(skill == 5) format(needp, 10, "-");
		format(string, sizeof(string), "{3AA2E8}Detektyw: {FFFFFF}%d (%d/%s)\n", GetPlayerSkill2(playerid, 8), PlayerInfo[playerid][pDetectivSkill], needp);
		strcat(szDialog, string);

		// job 9
		skill = GetPlayerSkill2(playerid, 9);
		if(skill == 1) format(needp, 10, "50");
		else if(skill == 2) format(needp, 10, "100");
		else if(skill == 3) format(needp, 10, "200");
		else if(skill == 4) format(needp, 10, "400");
		else if(skill == 5) format(needp, 10, "-");
		format(string, sizeof(string), "{3AA2E8}Budowniczy: {FFFFFF}%d (%d/%s)\n", GetPlayerSkill2(playerid, 9), PlayerInfo[playerid][pConstructorSkill], needp);
		strcat(szDialog, string);

		// job 10
		skill = GetPlayerSkill2(playerid, 10);
		if(skill == 1) format(needp, 10, "50");
		else if(skill == 2) format(needp, 10, "100");
		else if(skill == 3) format(needp, 10, "200");
		else if(skill == 4) format(needp, 10, "400");
		else if(skill == 5) format(needp, 10, "-");
		format(string, sizeof(string), "{3AA2E8}Rybak: {FFFFFF}%d (%d/%s)\n", GetPlayerSkill2(playerid, 10), PlayerInfo[playerid][pFishSkill], needp);
		strcat(szDialog, string);

/*
		// job 11
		skill = GetPlayerSkill2(playerid, 11);
		if(skill == 1) format(needp, 10, "50");
		else if(skill == 2) format(needp, 10, "100");
		else if(skill == 3) format(needp, 10, "200");
		else if(skill == 4) format(needp, 10, "400");
		else if(skill == 5) format(needp, 10, "-");
		format(string, sizeof(string), "{3AA2E8}Hot de masini: {FFFFFF}%d (%d/%s)\n", GetPlayerSkill2(playerid, 11), PlayerInfo[playerid][pHotSkill], needp);
		strcat(szDialog, string);
*/
		// job 11
		skill = GetPlayerSkill2(playerid, 12);
		if(skill == 1) format(needp, 10, "50");
		else if(skill == 2) format(needp, 10, "100");
		else if(skill == 3) format(needp, 10, "200");
		else if(skill == 4) format(needp, 10, "400");
		else if(skill == 5) format(needp, 10, "-");
		format(string, sizeof(string), "{3AA2E8}Kierowca autobusu: {FFFFFF}%d (%d/%s)\n", GetPlayerSkill2(playerid, 11), PlayerInfo[playerid][pBusSkill], needp);
		strcat(szDialog, string);

		// job 12
		skill = GetPlayerSkill2(playerid, 12);
		if(skill == 1) format(needp, 10, "50");
		else if(skill == 2) format(needp, 10, "100");
		else if(skill == 3) format(needp, 10, "200");
		else if(skill == 4) format(needp, 10, "400");
		else if(skill == 5) format(needp, 10, "-");
		format(string, sizeof(string), "{3AA2E8}Pizza Boy: {FFFFFF}%d (%d/%s)\n", GetPlayerSkill2(playerid, 12), PlayerInfo[playerid][pPizzaSkill], needp);
		strcat(szDialog, string);

		new name[256];
		format(name, 256, "%s", GetName(playerid));
		// show
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, name, szDialog, "Ok", "");
    }
    return 1;
}

CMD:show(playerid, params[]) {
	new szDialog[1024], string[256];
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Musisz sie najpierw zalogowac.");
    if(IsPlayerConnected(playerid))
    {
		// 1
        if(PlayerInfo[playerid][pShowJob] == 0) format(string, sizeof(string), "Opcje\tStatus\nInformacja\t{DB0909}Dezaktywacja{FFFFFF}\n");
        else format(string, sizeof(string), "Opcje\tStatus\nInformacja\t{1AAB07}Aktywuj{FFFFFF}\n");
		strcat(szDialog, string);
		// 2
        if(PlayerInfo[playerid][pShowFaction] == 0) format(string, sizeof(string), "Informacje o frakcji\t{DB0909}Dezaktywacja{FFFFFF}\n");
        else format(string, sizeof(string), "Informacje o frakcji\t{1AAB07}Aktywuj{FFFFFF}\n");
		strcat(szDialog, string);
        ShowPlayerDialog(playerid, DIALOG_SHOW, DIALOG_STYLE_TABLIST_HEADERS, "Pokaz:", szDialog, "Wybierz", "Anuluj");
    }
	return 1;
}

NewsInfo(text[]) {
    if(jestnews) {
    TextDrawHideForAll(SanNewsInfo);
    KillTimer(OffNews); }
    pntly = true;
    TextDrawSetString(SanNewsInfo,text);
    TextDrawShowForAll(SanNewsInfo);
    OffNews = SetTimer("StopDrawNews", NEWS_TIME ,false); //120sek info
}



forward StopDrawNews();
public StopDrawNews()
{
	new string[128];
    jestnews = false; //bool false [penalty]
    format(string, sizeof(string), "~y~San News:~w~ w radiu leci standardowy blok muzyczny SantosFM");
    NewsInfo(string);
    KillTimer(OffNews);
    return 1;
}


CMD:wiadomosci(playerid, params[])
{
    new string[125], text[80];
    if(!IsANewsReporter(playerid)) return SCM(playerid, COLOR_GREY, "Nie jeste z San News!");
    if(sscanf(params, "s[80]", text)) return SCM(playerid, COLOR_GREY, "U¯YCIE: /wiadomosci [tresc = 80 znaki] Pamiêtaj aby nie u¿ywaæ polskich znaków i zachowywaæ kulturê, to czat IC");
   
    if(PlayerInfo[playerid][pMuted] == 1)
    {
        format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
        SendClientMessage(playerid, COLOR_LIGHTRED, string);
        return 1;
    }
   
    //if(OnDuty[playerid] == 0) return SCM(playerid, COLOR_LGREEN, "Nie mozesz uzyc tego polecenia, poniewaz nie jeste na s³u¿bie!");
    format(string, sizeof(string), "~y~San News (wiadomosci)~w~ reporter %s:~w~ %s", GetName(playerid), text);
    NewsInfo(string);
    SetTimerEx("StopDrawNews", NEWS_TIME ,false, "i", playerid); 
    return 1;
}
 
CMD:livenews(playerid, params[])
{
    new string[125], text[80];
    if(!IsANewsReporter(playerid)) return SCM(playerid, COLOR_GREY, "Nie jeste z San News");
    if(sscanf(params, "s[80]", text)) return SCM(playerid, COLOR_GREY, "U¯YCIE: /livenews [tresc = 80 znaki] Pamiêtaj aby nie u¿ywaæ polskich znaków i zachowywaæ kulturê, to czat IC");
   
    if(PlayerInfo[playerid][pMuted] == 1)
    {
        format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
        SendClientMessage(playerid, COLOR_LIGHTRED, string);
        return 1;
    }
   
    //if(OnDuty[playerid] == 0) return SCM(playerid, COLOR_LGREEN, "Nie mozesz uzyc tego polecenia, poniewaz nie jeste na s³u¿bie!");
    format(string, sizeof(string), "~y~San News (LIVE)~w~ reporter: %s:~w~ %s", GetName(playerid), text);
    NewsInfo(string);
    SetTimerEx("StopDrawNews", NEWS_TIME, false, "i", playerid);
    return 1;
}

CMD:news(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
		    new newcar = GetPlayerVehicleID(playerid);
		    new string[128],sendername[25];
	        if(PlayerInfo[playerid][pMuted] == 1)
            {
				format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				return 1;
		    }
		    new result[250];
		    if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/news <wiadomosc>");
			if(ServerVehicles[newcar][vFaction] == 9)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "NR %s: %s", sendername, result);
				OOCNews(COLOR_NEWS,string);
				PlayerInfo[playerid][pCommands] ++;
				new rquery[256];
				format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pSQLID]);
				mysql_query(SQL, rquery);
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w pojezdzie frakcji.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Nu Jestes czescia frakcji News Reporter.");
	}
	return 1;
}
CMD:kupubranie(playerid,params[])
{
    if(IsAtClothShop(playerid))
    {
		if(PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1)  {
			if(OnDuty[playerid] == 0 && IsACop(playerid)) return SCM(playerid, COLOR_LGREEN, "Nie mozesz uzyc tego polecenia, poniewaz nie jeste na s³u¿bie!");
			ShowModelSelectionMenu (playerid, fskins[PlayerInfo[playerid][pMember]], "FSkin");	
		}
		else ShowModelSelectionMenu (playerid, skinlist, "Odziez");
	}
	else SCM(playerid,COLOR_GREY, "Nie ma cie w sklepie.");
    return 1;
}

total_skins(playerid) {
	new x;
	for(new i; i < 10; i++){
	if(PlayerInfo[playerid][pSkins][i] != -1) x++;
	}
	return x;
}

having_skin(playerid, model) {
	for(new i; i < 10; i++){
	if(PlayerInfo[playerid][pSkins][i] == model) return 1;
	}
	return 0;
}
save_skin(playerid){
	new string[128];
	mysql_format(SQL, string, sizeof(string), "UPDATE `users` SET `Skin`='%d|%d|%d|%d|%d|%d|%d|%d|%d|%d' WHERE `ID`='%d'", PlayerInfo[playerid][pSkins][0], PlayerInfo[playerid][pSkins][1], PlayerInfo[playerid][pSkins][2], PlayerInfo[playerid][pSkins][3], PlayerInfo[playerid][pSkins][4], PlayerInfo[playerid][pSkins][5], PlayerInfo[playerid][pSkins][6], PlayerInfo[playerid][pSkins][7], PlayerInfo[playerid][pSkins][8], PlayerInfo[playerid][pSkins][9], PlayerInfo[playerid][pSQLID]);
	mysql_tquery(SQL, string, "", "");
}

give_skin(playerid, model) {
	for(new i; i < 10; i++){
	if(PlayerInfo[playerid][pSkins][i] == -1) {
	PlayerInfo[playerid][pSkins][i] = model;
	save_skin(playerid);
	break;
		}
	}
}




public OnPlayerModelSelection(playerid, response, listid, modelid)
{
	/*if(listid == hats) {
        if(response) {
			if(GetPlayerCash(playerid) < 1000) return SCM(playerid, COLOR_GREY, "Nie masz wystarczajaco duzo pieniedzy!");
			PlayerInfo[playerid][pHat] = modelid;
			PlayerInfo[playerid][pShowHat] = 1;
			PutHat(playerid);
			UpdateVar(playerid, "Hat", modelid);
			UpdateVar(playerid, "ShowHat", 1);
			SCM(playerid, COLOR_YELLOW, "Kupiles kapelusz! Dostepne polecenia: /puthat, /removehat.");
			BizzInfo[InBussines[playerid]][bBalance] += 1000;
            GivePlayerCash(playerid,-1000);
			new query[128];
			format(query,sizeof(query),"UPDATE users SET `Money`='%d' WHERE `ID`='%d'",GetPlayerCash(playerid),PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL,query);
        }
		return 1;
    }
	
    if(listid == glasses)
    {
        if(response)
        {
	    	PlayerInfo[playerid][pGlasses] = modelid;
		    PlayerInfo[playerid][pShowGlasses] = 1;
			new szQuery[256];
			format(szQuery, sizeof(szQuery), "UPDATE users SET `ShowGlasses` = '%d', `Glasses`='%d' WHERE `ID` = '%d'", PlayerInfo[playerid][pShowGlasses], modelid, PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL, szQuery);
		    new skin = PlayerInfo[playerid][pChar];
			SetPlayerHoldingObject(playerid, modelid, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
			BizzInfo[InBussines[playerid]][bBalance] += 100;
			GivePlayerCash(playerid, -100);
			new query[184];
			format(query,sizeof(query),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bBalance],InBussines[playerid]);
			mysql_query(SQL,query);
			SCM(playerid, COLOR_MONEY, "Kupiles pare okularów za $100.");
			SCM(playerid, -1, "Aby zdjac okulary z oczu, mozesz uzyc polecenia /removeglasses.");
		}
		return 1;
    }*/
	
	if(listid == furnitures) {
	    if(response) {
	        new Float: Pos[3];
	        GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	        EditHouse[playerid] = 1;
	        EditModel[playerid] = modelid;
            ObjectEdited[playerid] = CreateDynamicObject(modelid, Pos[0]+4, Pos[1], Pos[2], 0, 0, 0);
            SendClientMessage(playerid, COLOR_YELLOW, "Wybrane meble zostaly stworzone. Wszystko, co musisz zrobic, to wybrac pozycje!");
            SendClientMessage(playerid, COLOR_YELLOW, "Aby przesunac kamere, nacisnij klawisz SPACJA i, aby przesunac obiekt, kliknij te osie (X,Y,Z)");
            EditDynamicObject(playerid, ObjectEdited[playerid]);
	    }
	}


    if(listid == skinlist)
    {
        if(response)
        {
			if(GetPlayerCash(playerid) < 1000) return SCM(playerid, COLOR_GREY, "Nie stac Cie na to!");
			if(total_skins(playerid) == 3) return SCM(playerid, COLOR_GREY, "Nie mozesz kupic wiecej ubran!");
			if(having_skin(playerid, modelid)) return SCM(playerid, COLOR_GREY, "Posiadasz juz to ubranie");
			give_skin(playerid, modelid);
			PlayerInfo[playerid][pChar] = modelid;
            SetPlayerSkinEx(playerid, PlayerInfo[playerid][pChar]);
			BizzInfo[InBussines[playerid]][bBalance] += 1500;
            GivePlayerCash(playerid,-1500);
			new str2[128];
			format(str2,sizeof(str2),"UPDATE users SET `Money`='%d',`CChar`='%d' WHERE `ID`='%d'",GetPlayerCash(playerid),PlayerInfo[playerid][pChar],PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL,str2);
        }
		return 1;
    }

    if(listid == fskins[PlayerInfo[playerid][pMember]])
    {
        if(response)
        {
			if(GetPlayerCash(playerid) < 1000) return SCM(playerid, COLOR_GREY, "Nie stac Cie na to!");
			//if(total_skins(playerid) == 10) return SCM(playerid, COLOR_GREY, "Nie mozesz kupic wiecej ubran!");
			//give_skin(playerid, modelid);
			if(!IsACop(playerid)) return SCM(playerid, COLOR_CLIENT, "Musisz pracowac w sluzbach porzadkowych!");
			PlayerInfo[playerid][pfSkin] = modelid;
			SCM(playerid, COLOR_GREY, "Wybrales sobie swoje ubranie, bedziesz sie w nie ubieral podczas sluzby! (/duty)");
			//SetPlayerSkinEx(playerid, PlayerInfo[playerid][pfSkin]);
			//if(IsACop(playerid) && OnDuty[playerid] == 0) SetPlayerSkinEx(playerid, PlayerInfo[playerid][pChar]);
			//else SetPlayerSkinEx(playerid, PlayerInfo[playerid][pChar]);
            GivePlayerCash(playerid,-1500);
			new str2[128];
			format(str2,sizeof(str2),"UPDATE users SET `Money`='%d',`FSkin`='%d' WHERE `ID`='%d'",GetPlayerCash(playerid),PlayerInfo[playerid][pfSkin],PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL,str2);
        }
    }	
	return 1;
}


CMD:licytacja(playerid, params[]) {
	new item[50], id, time, string[180];
	if(PlayerInfo[playerid][pAdmin] < 5) return 1;
	if(Licitatie == 1) return SendClientMessage(playerid, -1, "Jest ju¿ aktywna oferta!");
	if(sscanf(params, "s[50]ii", item, id, time)) {
		SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/licytacja <typ> <id> <czas w minutach>");
		SendClientMessage(playerid, COLOR_WHITE, "Parametry: dom, biz.");
		return 1;
	}
	if(strcmp(item, "dom", true, strlen(item)) == 0) TipLicitatie = 1;
	else if(strcmp(item, "biz", true, strlen(item)) == 0) TipLicitatie = 2;
	else return SendClientMessage(playerid, COLOR_GREY, "Nieprawidlowy typ!");

	Licitatie = 1;
	TimpLicitatie = time*60;
	TotalBani = 0;
	foreach(Player, i) {
	    if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) TotalMoney[i] = 0;
	}
	IDLicitatie = id;
	LastPlayer = -1;
	
	switch(TipLicitatie) {
	    case 1: format(string, sizeof(string), "[BID] Mozesz teraz ubiegac sie o dom z identyfikatorem  %d", id);
	    case 2: format(string, sizeof(string), "[BID] Mozesz teraz licytowac biznes o identyfikatorze %d", id);
	}
	WiadomoscLicytacja(0x483d8bFF, string);
	format(string, sizeof(string), "[BID] Mozesz uzyc /togbid aby pokazywac/ukrywac stawki innych graczy.");
	WiadomoscLicytacja(0x8470ffFF, string);
	format(string, sizeof(string), "[BID] Mozesz uzyc opcji /bid, by licytowac. Gdy licytujesz, zostaniesz powstrzymany przez swoje konto po zakonczeniu aukcji.", time);
	WiadomoscLicytacja(0x8470ffFF, string);
	format(string, sizeof(string), "[BID] Aukcja jest dostepna przez %d minut.", time);
	WiadomoscLicytacja(0x8470ffFF, string);	
	return 1;
}

CMD:bid(playerid, params[]) {
	new suma, string[180];
	if(Licitatie == 0) return SendClientMessage(playerid, -1, "To nie jest aktywna aukcja!");
	if(sscanf(params, "i", suma)) {
		SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/bid <suma>");
		new id = IDLicitatie;
		switch(TipLicitatie) {
			case 1: format(string, sizeof(string), "Tym razem licytujesz domu z ID %d. (/findhouse %d).", id, id);
			case 2: format(string, sizeof(string), "Tym razem licytujesz biznes o identyfikatorze% d. (/findbiz %d).", id, id);
		}
		SendClientMessage(playerid, COLOR_LGREEN, string);
		format(string, sizeof(string), "Czas dostepny do licytowania: %s", CalculeazaTimp2(TimpLicitatie));
		SendClientMessage(playerid, COLOR_LGREEN, string);
		if(LastPlayer == INVALID_PLAYER_ID || LastPlayer == -1) format(string, sizeof(string), "Ostatni licytant: Nieznany | | Kwota: $%s", FormatNumber(TotalBani)); 
		else format(string, sizeof(string), "Ostatni licytant: %s | Kwota: $%s", GetName(LastPlayer), FormatNumber(TotalBani));			
		SendClientMessage(playerid, COLOR_LGREEN, string);	
		return 1;
	} 
	if(suma < 5000) return SCM(playerid, COLOR_GREY, "Minimalna kwota to 5000 $!");
	if(GetPlayerCash(playerid) < TotalBani) return SendClientMessage(playerid, -1, "Nie masz wystarczajaco duzo pieniedzy!");
	if(GetPlayerCash(playerid) < suma) return SendClientMessage(playerid, -1, "Nie masz wystarczajaco duzo pieniedzy!");
	if(suma < TotalBani+5000 && TotalBani != 0) {
		format(string, sizeof(string), "Nieprawidlowa kwota! Mozesz ustawic minimalna stawke $%s.", FormatNumber(TotalBani+5000));
		SCM(playerid, COLOR_GREY, string);
		return 1;
	}	
	if(TipLicitatie == 1) {
		if(PlayerInfo[playerid][pHouse] != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0) return SendClientMessage(playerid, COLOR_WHITE, "Masz juz dom!");
	}
	else if(TipLicitatie == 2 && PlayerInfo[playerid][pBizz] != 255) return SendClientMessage(playerid, -1, "Nie mozesz licytowac, poniewaz  masz juz biznes.");
	format(string, sizeof(string), "Czy na pewno chcesz wystawic $%s na aukcje?", FormatNumber(suma));
	ShowPlayerDialog(playerid, DIALOG_BID, DIALOG_STYLE_MSGBOX, "Server:", string, "Tak", "Nie");
	SelectedMoney[playerid] = suma;
	return 1;
}
         
stock WiadomoscLicytacja(color, string[]) {
	foreach(Player, i) {
		if(IsPlayerConnected(i) && toglicitatie[i] == 1) {
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}

stock HavingItem(type, playerid) {
		new itemid = 0;
		for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
		{
			if(Thing[i][t_owner] == PlayerInfo[playerid][pSQLID])
			{
				if(Thing[i][t_type] == type)
				{
				itemid = i;
					}
				  }
			}
		return itemid;
}

CMD:przeszukaj(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
        new giveplayerid,sendername[25],giveplayer[25],string[128];
	    if(sscanf(params, "u",giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/przeszukaj <id/nazwa>");
		if(IsACop(playerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
			    if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					    //if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz przeszukac samego siebie !"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
				  		ListPlayerThingsShow(giveplayerid, playerid);
						if(PlayerInfo[playerid][pMasked] == 1) format(sendername, 64, "Nieznajomy");
						if(PlayerInfo[giveplayerid][pMasked] == 1) format(giveplayer, 64, "nieznajomego");
						format(string, sizeof(string), "* %s przeszukal %s.", GetName(playerid), GetName(giveplayerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else return SendClientMessage(playerid, COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
			}
            else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
		}
        else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste policjantem.");
	}
    return 1;
}

CMD:odznaka(playerid, params[])
{
	new string[300], giveplayerid;
	if(IsPlayerConnected(playerid))
	{
	    if(IsACop(playerid))
		{
			if(sscanf(params, "u",giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/odznaka <id/nazwa>");
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
			        	format(string, sizeof(string), "* %s pokazal swoja odznake %s.", GetName(playerid), GetName(giveplayerid));
						ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						format(string, sizeof(string), "{8CAFCD}Odznaka %s\n\t{FFFFFF}Imie Nazwisko:\t\t{ce3943}%s\n\t{FFFFFF}Organizacja:\t\t{ce3943}%s\n\t{FFFFFF}Ranga:\t\t\t{ce3943}%s", GetName(playerid), GetName(playerid), GetFactionName(PlayerInfo[playerid][pMember]), GetRankName(playerid));
						ShowPlayerDialog(giveplayerid, 999, DIALOG_STYLE_LIST, "Odznaka", string, "Akceptuj", "");
					}
					else
					{
   						SendClientMessage(playerid, COLOR_GREY, "   Nie znajdujesz sie poblizu tego gracza !");
			    		return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Gracz o podanym id nie jest aktywny !");
	   			return 1;
	   		}
        }
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "	Nie nalezysz do sluzb porzadkowych !");
	   		return 1;
	 	}
	}
	return 1;
}
CMD:f(playerid,params[])
{
    if(IsPlayerConnected(playerid))
    {
		new string[300];
	    if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		new result,sendername[25];
    	if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/f <wiadomosc>");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) format(string, sizeof(string), "* %s %s: %s.", GetRankName(playerid), sendername, result);
			else if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) format(string, sizeof(string), "* %s %s: %s.", GetRankName(playerid), sendername, result);
			else if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) format(string, sizeof(string), "* %s %s: %s.", GetRankName(playerid), sendername, result);
			else if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7) format(string, sizeof(string), "* %s %s: %s.", GetRankName(playerid), sendername, result);
			else if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) format(string, sizeof(string), "* %s %s: %s.", GetRankName(playerid), sendername, result);
			else if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) format(string, sizeof(string), "* %s %s: %s.", GetRankName(playerid), sendername, result);
			else if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) format(string, sizeof(string), "* %s %s: %s.", GetRankName(playerid), sendername, result);
			else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) format(string, sizeof(string), "* %s %s: %s.", GetRankName(playerid), sendername, result);
			else if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) format(string, sizeof(string), "* %s %s: %s.", GetRankName(playerid), sendername, result);
			else if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) format(string, sizeof(string), "* %s %s: %s.", GetRankName(playerid), sendername, result);
			else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) format(string, sizeof(string), "* %s %s: %s.", GetRankName(playerid), sendername, result);
			else return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz tego uzyc");
			SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
	}
	return 1;
}
CMD:animlist(playerid,params[])
{
    SendClientMessage(playerid,COLOR_GROVE,"Anim List");
    SendClientMessage(playerid,COLOR_WHITE,"Lifejump : Robman : Exhaust : Carlock : Rcarjack1 : Lcarjack1 : Rcarjack2 : Lcarjack2 : Hoodfrisked");
    SendClientMessage(playerid,COLOR_WHITE,"Lightcig : Tapcig : Bat : Lean : Clearanim : Dancing : Box : Lowthrow : Highthrow");
    SendClientMessage(playerid,COLOR_WHITE,"Leftslap : Handsup : Fall : Fallback : Sup : Rap : Push : Akick : Lowbodypush");
    SendClientMessage(playerid,COLOR_WHITE,"Spray : Headbutt : Pee : Koface : Kostomach : Kiss : Rollfall : Lay2 : Hitch");
    SendClientMessage(playerid,COLOR_WHITE,"Beach : Medic : Scratch : Sit : Drunk : Bomb : Getarrested : Laugh : Lookout");
    SendClientMessage(playerid,COLOR_WHITE,"Aim : Crossarms : Lay : Hide : Vomit : Eating : Wave : Shouting : Chant");
    SendClientMessage(playerid,COLOR_WHITE,"Frisked : Exhausted : Injured : Slapass : Deal : Dealstance : Crack : Wank : Gro");
    SendClientMessage(playerid,COLOR_WHITE,"Sit : Chat : Fucku : Taichi : Knife : Basket : JumpWater");
    return 1;
}
CMD:carhand(playerid,params[])
{
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    ApplyAnimation(playerid,"CAR","Tap_hand",4.1,0,1,1 ,1,1);
	return 1;
}
CMD:lifejump(playerid,params[])
{
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	LoopingAnim(playerid,"PED","EV_dive",4.0,0,1,1,1,0);
	return 1;
}
CMD:robman(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	LoopingAnim(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:exhaust(playerid,params[])
{
	if(IsPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Musisz sie najpierw zalogowac.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	LoopingAnim(playerid,"PED","IDLE_tired",3.0,1,0,0,0,0);
	return 1;
}
CMD:rcarjack1(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	OnePlayAnim(playerid,"PED","CAR_pulloutL_LHS",4.0,0,0,0,0,0);
	return 1;
}
CMD:lcarjack1(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	OnePlayAnim(playerid,"PED","CAR_pulloutL_RHS",4.0,0,0,0,0,0);
	return 1;
}
CMD:rcarjack2(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	OnePlayAnim(playerid,"PED","CAR_pullout_LHS",4.0,0,0,0,0,0);
	return 1;
}
CMD:lcarjack2(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	OnePlayAnim(playerid,"PED","CAR_pullout_RHS",4.0,0,0,0,0,0);
	return 1;
}
CMD:hoodfrisked(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	LoopingAnim(playerid,"POLICE","crm_drgbst_01",4.0,0,1,1,1,0);
	return 1;
}
CMD:lightcig(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	OnePlayAnim(playerid,"SMOKING","M_smk_in",3.0,0,0,0,0,0);
	return 1;
}
CMD:tapcig(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	OnePlayAnim(playerid,"SMOKING","M_smk_tap",3.0,0,0,0,0,0);
	return 1;
}
CMD:bat(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	LoopingAnim(playerid,"BASEBALL","Bat_IDLE",4.0,1,1,1,1,0);
	return 1;
}
CMD:lean(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	new test;
    if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/lean <1-2>");
    switch (test)
    {
	    case 1: LoopingAnim(playerid,"GANGS","leanIDLE",4.0,0,1,1,1,0);
	    case 2: LoopingAnim(playerid,"MISC","Plyrlean_loop",4.0,0,1,1,1,0);
	    default: SendClientMessage(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/lean <1-2>");
	}
	return 1;
}
CMD:clearanim(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:dancing(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	new test;
    if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/dancing <1-7>");
	switch (test)
   	{
	    case 1: LoopingAnim(playerid,"STRIP", "strip_A", 4.1, 1, 1, 1, 1, 1 );
        case 2: LoopingAnim(playerid,"STRIP", "strip_B", 4.1, 1, 1, 1, 1, 1 );
     	case 3: LoopingAnim(playerid,"STRIP", "strip_C", 4.1, 1, 1, 1, 1, 1 );
    	case 4: LoopingAnim(playerid,"STRIP", "strip_D", 4.1, 1, 1, 1, 1, 1 );
    	case 5: LoopingAnim(playerid,"STRIP", "strip_E", 4.1, 1, 1, 1, 1, 1 );
    	case 6: LoopingAnim(playerid,"STRIP", "strip_F", 4.1, 1, 1, 1, 1, 1 );
     	case 7: LoopingAnim(playerid,"STRIP", "strip_G", 4.1, 1, 1, 1, 1, 1 );
     	default: SendClientMessage(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/dancing <1-7>");
	}
	return 1;
}
CMD:box(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	LoopingAnim(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,0);
	return 1;
}
CMD:lowthrow(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	OnePlayAnim(playerid,"GRENADE","WEAPON_throwu",3.0,0,0,0,0,0);
	return 1;
}
CMD:highthrow(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	OnePlayAnim(playerid,"GRENADE","WEAPON_throw",4.0,0,0,0,0,0);
	return 1;
}
CMD:leftslap(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	OnePlayAnim(playerid,"PED","BIKE_elbowL",4.0,0,0,0,0,0);
	return 1;
}
CMD:handsup(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    if(Freezed[playerid] == 1) return 1;
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	return 1;
}
CMD:fall(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	LoopingAnim(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);
	return 1;
}
CMD:fallback(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    LoopingAnim(playerid, "PED","FLOOR_hit_f", 4.0, 1, 0, 0, 0, 0);
    return 1;
}
CMD:laugh(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	OnePlayAnim(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:lookout(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    OnePlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:aim(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    LoopingAnim(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:crossarms(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    LoopingAnim(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);
	return 1;
}
CMD:lay(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	LoopingAnim(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:hide(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	LoopingAnim(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:vomit(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	OnePlayAnim(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:wave(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    LoopingAnim(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:shouting(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    LoopingAnim(playerid,"RIOT","RIOT_shout",4.0,1,0,0,0,0);
	return 1;
}
CMD:chant(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    LoopingAnim(playerid,"RIOT","RIOT_CHANT",4.0,1,1,1,1,0);
	return 1;
}
CMD:frisked(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    LoopingAnim(playerid,"POLICE","crm_drgbst_01",4.0,0,1,1,1,0);
	return 1;
}
CMD:exhausted(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    LoopingAnim(playerid,"PED","IDLE_tired",3.0,1,0,0,0,0);
	return 1;
}
CMD:injured(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    LoopingAnim(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:slapass(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    OnePlayAnim(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:deal(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    OnePlayAnim(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:dealstance(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    LoopingAnim(playerid,"DEALER","DEALER_IDLE",4.0,1,0,0,0,0);
	return 1;
}
CMD:crack(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    LoopingAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:wank(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    LoopingAnim(playerid,"PAULNMAC", "wank_loop", 1.800001, 1, 0, 0, 1, 600);
	return 1;
}
CMD:gro(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	LoopingAnim(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:sup(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	new test;
    if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/sup <1-3>");
	switch (test)
  	{
    	case 1: OnePlayAnim(playerid,"GANGS","hndshkba",4.0,0,0,0,0,0);
     	case 2: OnePlayAnim(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0);
     	case 3: OnePlayAnim(playerid,"GANGS","hndshkfa_swt",4.0,0,0,0,0,0);
    	default: SendClientMessage(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/sup <1-3>");
	}
    return 1;
}
CMD:rap(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	new test;
    if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/rap <1-4>");
	switch (test)
	{
	    case 1: LoopingAnim(playerid,"RAPPING","RAP_A_Loop",4.0,1,0,0,0,0);
    	case 2: LoopingAnim(playerid,"RAPPING","RAP_C_Loop",4.0,1,0,0,0,0);
    	case 3: LoopingAnim(playerid,"GANGS","prtial_gngtlkD",4.0,1,0,0,0,0);
     	case 4: LoopingAnim(playerid,"GANGS","prtial_gngtlkH",4.0,1,0,0,1,1);
    	default: SendClientMessage(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/rap <1-4>");
	}
    return 1;
}
CMD:push(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
 	OnePlayAnim(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);
	return 1;
}
CMD:akick(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	OnePlayAnim(playerid,"POLICE","Door_Kick",4.0,0,0,0,0,0);
	return 1;
}
CMD:lowbodypush(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	OnePlayAnim(playerid,"GANGS","shake_carSH",4.0,0,0,0,0,0);
	return 1;
}

CMD:headbutt(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	OnePlayAnim(playerid,"WAYFARER","WF_Fwd",4.0,0,0,0,0,0);
	return 1;
}
CMD:pee(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	if(CP[playerid] == 0)
	{
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);
	}
	else return SCM(playerid,COLOR_WHITE,"Masz juz aktywny punkt kontrolny. Wpisz /cancel checkpoint");
	return 1;
}
CMD:koface(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	LoopingAnim(playerid,"PED","KO_shot_face",4.0,0,1,1,1,0);
	return 1;
}
CMD:kostomach(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	LoopingAnim(playerid,"PED","KO_shot_stom",4.0,0,1,1,1,0);
	return 1;
}
CMD:kiss(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	LoopingAnim(playerid,"KISSING", "Grlfrd_Kiss_02", 1.800001, 1, 0, 0, 1, 600);
	return 1;
}
CMD:rollfall(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	LoopingAnim(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0);
	return 1;
}
CMD:lay2(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	LoopingAnim(playerid,"SUNBATHE","Lay_Bac_in",3.0,0,1,1,1,0);
	return 1;
}
CMD:hitch(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	LoopingAnim(playerid,"MISC","Hiker_Pose", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:beach(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	LoopingAnim(playerid,"BEACH","SitnWait_loop_W",4.1,0,1,1,1,1);
	return 1;
}
CMD:medic(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	LoopingAnim(playerid,"MEDIC","CPR",4.1,0,1,1,1,1);
	return 1;
}
CMD:scratch(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	LoopingAnim(playerid,"MISC","Scratchballs_01", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:sit(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	LoopingAnim(playerid,"PED","SEAT_idle", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:drunk(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	LoopingAnim(playerid,"PED","WALK_DRUNK",4.0,1,1,1,1,0);
	return 1;
}
CMD:bomb(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
   	ClearAnimations(playerid);
   	OnePlayAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:getarrested(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    LoopingAnim(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1);
	return 1;
}
CMD:chat(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    OnePlayAnim(playerid,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
	return 1;
}
CMD:fucku(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    OnePlayAnim(playerid,"PED","fucku",4.0,0,0,0,0,0);
	return 1;
}
CMD:taichi(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    LoopingAnim(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);
	return 1;
}
CMD:knife(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	new test;
    if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/knife <1-4>");
	switch (test)
	{
	    case 1: LoopingAnim(playerid,"KNIFE","KILL_Knife_Ped_Damage",4.0,0,1,1,1,0);
     	case 2: LoopingAnim(playerid,"KNIFE","KILL_Knife_Ped_Die",4.0,0,1,1,1,0);
      	case 3: OnePlayAnim(playerid,"KNIFE","KILL_Knife_Player",4.0,0,0,0,0,0);
     	case 4: LoopingAnim(playerid,"KNIFE","KILL_Partial",4.0,0,1,1,1,1);
    	default: SendClientMessage(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/knife <1-4>");
	}
	return 1;
}
CMD:basket(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	new test;
    if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/basket <1-6>");
	switch (test)
 	{
    	case 1: LoopingAnim(playerid,"BSKTBALL","BBALL_idleloop",4.0,1,0,0,0,0);
    	case 2: OnePlayAnim(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
     	case 3: OnePlayAnim(playerid,"BSKTBALL","BBALL_pickup",4.0,0,0,0,0,0);
     	case 4: LoopingAnim(playerid,"BSKTBALL","BBALL_run",4.1,1,1,1,1,1);
    	case 5: LoopingAnim(playerid,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,0);
       	case 6: LoopingAnim(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,0);
    	default: SendClientMessage(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/basket <1-6>");
	}
	return 1;
}
CMD:dance(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
	if(CP[playerid] == 0)
	{
		new test;
		if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/dance <1-4>");
		if(test < 1 || test > 4) return SendClientMessage(playerid,COLOR_GREY, "Uzycie: {FFFFFF}/dance <1-4>");
		if(test == 1)
		{
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
		}
		else if(test== 2)
		{
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
		}
		else if(test == 3)
		{
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
		}
		else if(test == 4)
		{
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
		}
	}
	else return SCM(playerid,COLOR_WHITE,"Masz juz aktywny punkt kontrolny. Wpisz /cancel checkpoint");
	return 1;
}
CMD:jumpwater(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie mozesz uzywac tej animacji, dopóki Jestes w pojezdzie.");
    ApplyAnimation(playerid,"DAM_JUMP","DAM_LAUNCH",2,0,1,1,0,0);
	return 1;
}

CMD:bizwithdraw(playerid,params[])
{
	new bouse = PlayerInfo[playerid][pBizz];
	if (bouse == 255) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem tego biznesu.");				
	new cashdeposit,string[64];
	if(sscanf(params, "d",cashdeposit))
	{
		SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/bizwithdraw <kwota>");
		if(cashdeposit > 10000000) return SCM(playerid,COLOR_GREY, "Maksymalna kwota to 10 000 000 $.");			
		format(string, sizeof(string), "Masz $%s w sejfie.", FormatNumber(BizzInfo[bouse][bBalance]));
		SendClientMessage(playerid, COLOR_WHITE, string);		
		return 1;
	}
	new biz = bouse;
	if(!PlayerToPoint(50.0, playerid,BizzInfo[biz][bExitX],BizzInfo[biz][bExitY],BizzInfo[biz][bExitZ]) && BizzInfo[biz][bStatic] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w swoim biznesie!");
	else if(!PlayerToPoint(5.0, playerid,BizzInfo[biz][bEntranceX],BizzInfo[biz][bEntranceY],BizzInfo[biz][bEntranceZ]) && BizzInfo[biz][bStatic] == 1) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w swoim biznesie!");
	GivePlayerCash(playerid,cashdeposit);
	Update(playerid, pCashx);
	BizzInfo[bouse][bBalance] -= cashdeposit;
	format(string, sizeof(string), "Wyciagnales $%s z sejfu. Teraz masz $%s.", FormatNumber(cashdeposit),FormatNumber(BizzInfo[bouse][bBalance]));
	SendClientMessage(playerid, COLOR_YELLOW, string);
	new str1[184];
	format(str1,sizeof(str1),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[bouse][bBalance],bouse);
	mysql_query(SQL,str1);
	Update(playerid, pCashx);		
	return 1;
}

CMD:bizfee(playerid,params[])
{
    if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pBizz];
		if (bouse == 255) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem tego biznesu.");
		new fee,string[64];
		if(sscanf(params, "d",fee)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/bizfee <kwota>");
		if(fee < 1 || fee > 100) return SendClientMessage(playerid, COLOR_GREY, "Kwota musi wynosic od 1$do 100$.");
		BizzInfo[bouse][bFee] = fee;
		format(string, sizeof(string), "{FFFF00}Oplata ustalona na: $%s.", FormatNumber(BizzInfo[bouse][bFee]));
		new str1[184];
		format(str1,sizeof(str1),"UPDATE `bizz` SET `EntranceCost`='%d' WHERE `ID`='%d'",BizzInfo[bouse][bFee],bouse);
		mysql_query(SQL,str1);
		UpdateLabel(2,bouse);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	return 1;
}
CMD:bizname(playerid,params[])
{
    if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pBizz];
		if (bouse == 255) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem tego biznesu.");
		new result[60],string[128];
		if(sscanf(params, "s[60]",result)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/bizname <wiadomosc>");
		new maxc = strlen(result);
		if(maxc > 20) return SCM(playerid,COLOR_GREY, "Maksymalna ilosc znaków to 20.");
		new result2[250];
		mysql_real_escape_string(result, result2);
		strmid(BizzInfo[bouse][bMessage], result2, 0, 64, 255);
		format(string, sizeof(string), "{FFFF00}Nazwa ustawiona na: %s.",BizzInfo[bouse][bMessage]);
		new str1[184];
		format(str1,sizeof(str1),"UPDATE bizz SET Message='%s' WHERE ID='%d'",BizzInfo[bouse][bMessage],bouse);
		mysql_query(SQL,str1);
		UpdateLabel(2, bouse);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	return 1;
}

CMD:sellbizto(playerid, params[])
{
    if(IsPlayerConnected(playerid))
    {
		new money,giveplayerid,sendername[25],giveplayer[25],string[150],playername[25];
		GetPlayerName(playerid, playername, sizeof(playername));
	    if(PlayerInfo[playerid][pBizz] == 255) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem tego biznesu.");
		if(sscanf(params, "ui",giveplayerid,money)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/sellbizto <id/nazwa> <cena>");
		if(money < 1 || money > 1000000000) return SendClientMessage(playerid, COLOR_WHITE,"Cena musi wynosic od 1$ do 1 000 000 000$.");
		if(PlayerInfo[giveplayerid][pBizz] != 255) return SendClientMessage(playerid, COLOR_WHITE, "Ten gracz juz jest wlascicielem biznesu.");
		if(IsPlayerConnected(giveplayerid))
		{
		    if(giveplayerid != INVALID_PLAYER_ID)
		    {
		        if(ProxDetectorS(8.0, playerid, giveplayerid))
				{				  
					if(PlayerInfo[playerid][pBizz] < 100)
					{
						if(PlayerInfo[giveplayerid][pLevel] < BizzInfo[PlayerInfo[playerid][pBizz]][bLevelNeeded]) return SCM(playerid,COLOR_WHITE,"Ten gracz nie ma wymaganego poziomu.");
						if(giveplayerid == playerid) return 1;
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Zlozyles oferte %s, aby sprzedac biznes w zamian za $%s.", giveplayer, FormatNumber(money));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s chce sprzedac swoj biznes za $%s, (wpisz /akceptuj biz %d) aby akceptowac.", sendername, FormatNumber(money),playerid);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						biztype[giveplayerid] = 1;
						bizid[giveplayerid] = PlayerInfo[playerid][pBizz];
						bizprice[giveplayerid] = money;
						bizoffer[giveplayerid] = playerid;
						return 1;
					}
				}
    			else return SCM(playerid,COLOR_YELLOW2, "Ten gracz nie jest blisko ciebie.");
			}
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	}
	return 1;
}

CMD:sellbiz(playerid, params[])
{
	new bIDs = PlayerInfo[playerid][pBizz];
	if(bIDs != 255) {
		new price, string[256], szQuery[256];
		if(sscanf(params, "i", price)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/sellbiz <cena>");
		format(string, 256, "Ustawiasz cene swojego biznesu na $%s.", FormatNumber(price));
		SCM(playerid, COLOR_MONEY, string);
		BizzInfo[bIDs][bBuyPrice]= price;
		format(szQuery, sizeof(szQuery), "UPDATE `bizz` SET `BuyPrice`= '%d' WHERE `ID`= '%d'", price, bIDs);
		mysql_query(SQL, szQuery);
		UpdateLabel(2,bIDs);
	}
	else SCM(playerid, -1, "Nie jeste wlascicielem tego biznesu!");
	return 1;
}

CMD:buybiz(playerid,params[])
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new id, moneys, newmoneys, szQuery[256];
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		new string[128];
		if(PlayerInfo[playerid][pBizz] != 255) return SendClientMessage(playerid, COLOR_GREY, "juz masz biznes.");
		for(new b = 1; b < sizeof(BizzInfo); b++)
		{
			if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bBuyPrice] != 0)
			{
				if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
				{
					format(string, sizeof(string), "Potrzebujesz poziomu %d.",BizzInfo[b][bLevelNeeded]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					return 1;
				}
				if(GetPlayerCash(playerid) > BizzInfo[b][bBuyPrice])
				{
					id = GetPlayerID(BizzInfo[b][bOwner]);
					if(id != INVALID_PLAYER_ID) {
						PlayerInfo[id][pBizz] = 255;
						PlayerInfo[id][pAccount] += BizzInfo[b][bBuyPrice];
						format(string, sizeof(string), "* %s kupil Twój biznes za {19CF2E}$%s{239931}. Pieniadze zostaly przekazane na twoje konto bankowe.", GetName(playerid), FormatNumber(BizzInfo[b][bBuyPrice]));
						SendClientMessage(id, 0x239931FF, string);
					}
					else {
						format(szQuery, sizeof(szQuery), "SELECT * FROM `users` WHERE `name` = '%s'", BizzInfo[b][bOwner]);
						new Cache: result = mysql_query(SQL, szQuery);
						if(cache_get_row_count() != 0) {
							cache_get_field_content(0, "Bank", string); moneys = strval(string);
							newmoneys = moneys + BizzInfo[b][bBuyPrice];
						}
						cache_delete(result);
						format(szQuery, sizeof(szQuery), "UPDATE `users` SET `Bank` = '%d', `Biz` = '255' WHERE `name` = '%s'", newmoneys, BizzInfo[b][bOwner]);
						mysql_tquery(SQL, szQuery, "", "");
					}
				    InBussines[playerid] = b;
					PlayerInfo[playerid][pBizz] = b;
					BizzInfo[b][bOwned] = 1;
					strmid(BizzInfo[b][bOwner], GetName(playerid), 0, strlen(GetName(playerid)), 255);
					GivePlayerCash(playerid,-BizzInfo[b][bBuyPrice]);
					Update(playerid, pCashx);
					SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
					PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
					SetPlayerVirtualWorld(playerid, BizzInfo[b][bVirtual]);
					SetPlayerPosEx(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
					GameTextForPlayer(playerid, "~w~Witaj!~n~", 5000, 3);
					PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
					PlayerInfo[playerid][pLocal] = b ;
					new str1[256];
					format(str1,sizeof(str1),"UPDATE users SET `Money`='%d',`Bizz`='%d' WHERE `ID`='%d'",GetPlayerCash(playerid),PlayerInfo[playerid][pBizz],PlayerInfo[playerid][pSQLID]);
					mysql_query(SQL,str1);
					format(str1,sizeof(str1),"UPDATE `bizz` SET `Owned`='1',`Owner`='%s' WHERE `ID`='%d'",BizzInfo[b][bOwner],b);
					mysql_query(SQL,str1);
					
					BizzInfo[b][bBuyPrice] = 0;
					format(szQuery, sizeof(szQuery), "UPDATE `bizz` SET `BuyPrice`= '%d' WHERE `ID`= '%d'", 0, b);
					mysql_query(SQL, szQuery);
					UpdateLabel(2,b);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Nie masz potrzebnych pieniedzy");
					return 1;
				}
			}
		}
	}
	return 1;
}

CMD:setkey(playerid,params[])
{
    if (PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,COLOR_LGREEN, "Nie masz dostepu do tego polecenia!");
	new id,x_nr[10],key;
	if(sscanf(params, "s[10]ud",x_nr,id,key)) return SCM(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/setkey <dom-biznes> <id/nazwa> <Key ID(House(999)-Bussines(255)>");
    if(strcmp(x_nr,"dom",true) == 0)
 	{
		PlayerInfo[id][pHouse] = key;
		Update(id,pHousex);
	    return 1;
	}
    if(strcmp(x_nr,"biznes",true) == 0)
 	{
		PlayerInfo[id][pBizz] = key;
		Update(id,pBizzx);
   	    return 1;
	}
    return 1;
}

CMD:goup(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid,COLOR_GREY, "Nie jeste policjantem.");
	if(IsPlayerInRangeOfPoint(playerid, 4.0, 1526.4816,-1678.1033,5.8906))
	{
	    SetPlayerPosEx(playerid,1564.8662,-1666.4962,28.3956);
	}
	return 1;
}
CMD:godown(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid,COLOR_GREY, "Nie jeste policjantem.");
	if(IsPlayerInRangeOfPoint(playerid, 4.0, 1564.8662,-1666.4962,28.3956))
	{
	    SetPlayerPosEx(playerid,1526.4816,-1678.1033,5.8906);
	}
	return 1;
}

// OnPlayerCommandText
public OnPlayerCommandReceived(playerid, cmdtext[])
{
	if(IsPlayerLogged[playerid] == 0) return 0;
    return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(success)
	{
		SpamCheck[playerid] = GetTickCount();
	}
	if(!success) return SendClientMessage(playerid, COLOR_WHITE, "To polecenie nie istnieje! Wpisz /pomoc");
	return 1;
}

public HouseLevel(playerid)
{
	new h = PlayerInfo[playerid][pHouse];
	if(h == 999)
	{
		return 0;
	}
	if(h <= 4)
	{
		return 1;
	}
	if(h >= 5 && h <= 9)
	{
		return 2;
	}
	if(h >= 10 && h <= 18)
	{
		return 3;
	}
	if(h >= 19 && h <= 22)
	{
		return 4;
	}
	if(h >= 23 && h <= 25)
	{
		return 5;
	}
	if(h == 26)
	{
		return 6;
	}
	if(h == 27)
	{
		return 7;
	}
	if(h >= 28 && h <= 31)
	{
		return 7;
	}
	return 0;
}

public CHouseLevel(houseid)
{
	if(houseid <= 4)
	{
		return 3;
	}
	if(houseid >= 29 && houseid <= 30)
	{
		return 4;
	}
	if(houseid >= 5 && houseid <= 9)
	{
		return 5;
	}
	if(houseid >= 10 && houseid <= 18 || houseid == 28)
	{
		return 7;
	}
	if(houseid >= 19 && houseid <= 22)
	{
		return 8;
	}
	if(houseid >= 23 && houseid <= 25)
	{
		return 9;
	}
	if(houseid == 26)
	{
		return 10;
	}
	if(houseid == 27)
	{
		return 11;
	}
	if(houseid >= 28 && houseid <= 31)
	{
		return 12;
	}
	return 0;
}

public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		foreach(Player,i)
		{
			if(GetPlayerInterior(playerid) == GetPlayerInterior(i) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SendClientMessage(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SendClientMessage(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SendClientMessage(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SendClientMessage(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SendClientMessage(i, col5, string);
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}
	return 1;
}

public CrimInRange(Float:radi, playerid,copid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(copid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(copid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public CustomPickups()
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new string[564];
	foreach(Player,i)
	{
		GetPlayerPos(i, oldposx, oldposy, oldposz);
	    if(Radaron[i] == 1)
	    {
	        foreach(Player, o)
 			{
 			    if(IsPlayerInRangeOfPoint(o, 30.0, oldposx, oldposy, oldposz) && GetPlayerState(o) == PLAYER_STATE_DRIVER && OnDuty[o] == 0)
			    {
					new viteza = Carspeed(o);
				    if(viteza > Radarlimit[i])
			        {
				        new nameradar[25],nameradar1[25];
				        GetPlayerName(o,nameradar,sizeof(nameradar));
				        GetPlayerName(i,nameradar1,sizeof(nameradar1));
				        format(string, sizeof(string), "{f03337}%s[ID:%d] jedzie z predkoscia %d km/h, Lokalizacja: %s, Radar Limit: %d km/h!", nameradar,o,viteza,GetPlayerZone(o),Radarlimit[i]);
						SCM(i,COLOR_WHITE,string);
						format(string, sizeof(string), "{f03337}You were caught by %s radar with %d km/h, Radar Limit: %d km/h.",nameradar1,viteza,Radarlimit[i]);
    					SCM(o,COLOR_WHITE,string);
    					return 1;
					}
				}
			}
		}
	}
	return 1;
}

stock Carspeed(playerid,mode = 1)
{
    new Float:Velocity [3];
    GetVehicleVelocity ( GetPlayerVehicleID ( playerid ) , Velocity [ 0 ] , Velocity [ 1 ] , Velocity [ 2 ] ) ;
    return IsPlayerInAnyVehicle ( playerid ) ? floatround ( ( ( floatsqroot ( ( ( Velocity [ 0 ] * Velocity [ 0 ] ) + ( Velocity [ 1 ] * Velocity [ 1 ] ) + ( Velocity [ 2 ] * Velocity [ 2 ] ) ) ) * ( !mode ? 105.0 : 170.0 ) ) ) * 1 ) : 0;
}

stock stringContainsIP(string[])
{
    new
        dotCount
    ;
    for(new i; string[i] != EOS; ++i)
    {
        if(('0' <= string[i] <= '9') || string[i] == '.' || string[i] == ':')
        {
            if((string[i] == '.') && (string[i + 1] != '.') && ('0' <= string[i - 1] <= '9'))
            {
                ++dotCount;
            }
            continue;
        }
    }
    return (dotCount > 2);
}


AntiFlood_Check( playerid, bool:inc=true )
{
	AntiFlood_Data[playerid][floodRate] += inc ? RATE_INC : 0;
	AntiFlood_Data[playerid][floodRate] = AntiFlood_Data[playerid][floodRate] - ( GetTickCount() - AntiFlood_Data[playerid][lastCheck] );
	AntiFlood_Data[playerid][lastCheck] = GetTickCount();
	AntiFlood_Data[playerid][floodRate] = AntiFlood_Data[playerid][floodRate] < 0 ? 0 : AntiFlood_Data[playerid][floodRate];

	if ( AntiFlood_Data[playerid][floodRate] >= RATE_MAX )
	{
		#if THRESOLD_ACTION == 1
			SendClientMessage(playerid,COLOR_LIGHTRED,"Kick: Dostales kicka za spam!");
			Kick(playerid);
		#elseif THRESOLD_ACTION == 2
			SendClientMessage(playerid,COLOR_LIGHTRED,"Kick: Dostales kicka za spam!");
			Kick(playerid);
		#else
			SendClientMessage(playerid, COLOR_LIGHTRED, "Przestan spamowac." );
		#endif

		return false;
	}

	return true;
}

AntiFlood_InitPlayer( playerid )
{
	AntiFlood_Data[playerid][lastCheck] = GetTickCount();
	AntiFlood_Data[playerid][floodRate] = 0;
}

public OnPlayerText(playerid, text[])
{
	if(IsPlayerLogged[playerid] == 0) return 0;
	SpamCheck2[playerid] = GetTickCount();

	new sendername[MAX_PLAYER_NAME];
	new tmp[256];
	new string[256];
    if(PlayerInfo[playerid][pMuted] == 1)
    {
	    format(string, sizeof(string), "Nie mozesz pisac na czacie ani uzywac polecen podczas mute jeszcze przez %d sekund.",PlayerInfo[playerid][pMuteTime]);
	    SendClientMessage(playerid, COLOR_LIGHTRED, string);
		return 0;
	}
	assert(AntiFlood_Check(playerid));
	if(TalkingLive[playerid] != 255)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pMember] == 9)
		{
		    format(string, sizeof(string), "Reporter %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
		}
		else
		{
		    format(string, sizeof(string), "Gosc wywiadu %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
		}
		return 0;
	}
	if(Mobile[playerid] != 255)
	{
		new idx;
		tmp = strtok(text, idx);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s mówi (telefon): %s", sendername, text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		if(IsPlayerConnected(Mobile[playerid]))
		{
		    if(Mobile[Mobile[playerid]] == playerid)
		    {
				if(PlayerInfo[Mobile[playerid]][pSpeaker] == 1)
				{
				if(PlayerInfo[playerid][pZastrzezony] == 1)
				{
				format(string, sizeof(string), "Nieznajomy(zastrzezony) mówi (telefon): %s", text);
				ProxDetector(20.0, Mobile[playerid], string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				} else {
					ProxDetector(20.0, Mobile[playerid], string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					}
				}
				else
				{
				if(PlayerInfo[playerid][pZastrzezony] == 1)
				{
				format(string, sizeof(string), "Nieznajomy(zastrzezony) mówi (telefon): %s", text);
				SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
				} else {
				SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_YELLOW,"Nie rozmawiasz z nikim.");
		}
		return 0;
	}
	if (realchat)
	{
        if(strlen(text) < 78)
        {	
		if(PlayerInfo[playerid][pMasked] == 1) {
			format(string, sizeof(string), "Nieznajomy %s mówi: %s", PlayerInfo[playerid][pMaskName], text);
            //format(string, sizeof(string), "%s mówi: %s", GetName(playerid), text);
            ProxDetector(10.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
            SetPlayerChatBubble(playerid,text,COLOR_FADE1,10.0,8000);
			}
			if(PlayerInfo[playerid][pAdminDuty] == 1) {
			format(string, sizeof(string), "%s %s mówi: %s", PlayerInfo[playerid][pOOCName], text);
            //format(string, sizeof(string), "%s mówi: %s", GetName(playerid), text);
            ProxDetector(10.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
            SetPlayerChatBubble(playerid,text,COLOR_FADE1,10.0,8000);
			} else {
            format(string, sizeof(string), "%s mówi: %s", Nick(playerid), text);
            ProxDetector(10.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
            SetPlayerChatBubble(playerid,text,COLOR_FADE1,10.0,8000);
			}
        }
        else
        {
            new pos = strfind(text, " ", true, strlen(text) / 2);
            if(pos != -1)
            {
                new text2[64];

                strmid(text2, text, pos + 1, strlen(text));
                strdel(text, pos, strlen(text));

                format(string, sizeof(string), "%s mówi: %s [.]", Nick(playerid), text);
                ProxDetector(13.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);

                format(string, sizeof(string), "[.] %s", text2);
                ProxDetector(13.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
		}
	}
	return 0;
}
return 1;
}

public FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0)
	{
		hour = hour+24;
	}
	else if (hour > 23)
	{
		hour = hour-24;
	}
	shifthour = hour;
	return 1;
}

public UnFreezeStation(playerid)
{
	TogglePlayerControllable(playerid, 1);
	return 1;
}

/*public lspdgateclose()
{
    MoveObject(gatelspd, 1588.6552, -1637.9025, 15.0358, 1.5);
    return 1;
}

public nggateclose()
{
    MoveObject(gateng, 135.2833, 1941.3331, 21.6932, 1.5);
    return 1;
}

public lspdbarclose()
{
    MoveObject(lspdbar, 1544.7007, -1630.7527, 13.2983, 1.5,0.0000, 90.0200, 90.0000);
    return 1;
}*/

stock strvalEx( const string[] )
{
   if( strlen( string ) >= 50 ) return 0;
   return strval(string);
}

public UnsetAfterTutorial(playerid)
{
	if(IsPlayerConnected(playerid))
	{
        AfterTutorial[playerid] = 0;
	}
	return 1;
}


public Float:GetDistance(playerid, Float:x, Float:y)
{
	new Float:x2, Float:y2, Float:z2;
	GetPlayerPos(playerid, x2, y2, z2);
	x = x - x2;
	y = y - y2;
	return floatsqroot(x*x+y*y);
}

stock TempBanCheck(playerid)
{
	new str[128];
	new year, month, day;
	getdate(year, month, day);
    if(PlayerInfo[playerid][pBTemp] == 1)
    {
    	if (!(year >= PlayerInfo[playerid][pBYear] && month >= PlayerInfo[playerid][pBMonth] && day >= PlayerInfo[playerid][pBDay]))
    	{
    	    format(str, sizeof str, "Esti banat temporar de %s, expira pe %d.%d.%d, Powód: ",PlayerInfo[playerid][pBBy],PlayerInfo[playerid][pBDay], PlayerInfo[playerid][pBMonth], PlayerInfo[playerid][pBYear],PlayerInfo[playerid][pBReason]);
    	    SendClientMessage(playerid, COLOR_SYN2, str);
    	    return KickEx(playerid);
    	}
    	else
    	{
			PlayerInfo[playerid][pBTemp] = 0;
			PlayerInfo[playerid][pBYear] = 0;
			PlayerInfo[playerid][pBMonth] = 0;
			PlayerInfo[playerid][pBDay] = 0;
			Update(playerid,pBTempx);
			Update(playerid,pBYearx);
			Update(playerid,pBMonthx);
			Update(playerid,pBDayx);
    	}
	}
	return true;
}

stock IsMonth31(month)
{
 	switch (month)
	{
	    case 1: return 1;
	    case 3: return 1;
	    case 5: return 1;
	    case 7: return 1;
	    case 8: return 1;
	    case 10: return 1;
	    case 12: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsMonth29(year)
{
 	new y = 2000;
 	for(new i = 4; i < 3000; i += 4) if ((y+i) == year) return 1;
 	return 0;
}

stock strtok2(const string[], &idx)
{
    new length = strlen(string);
	while ((idx < length) && (string[idx] <= ' '))
	{
		idx++;
	}
	new offset = idx;
	new result[128];
	while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
	{
		result[idx - offset] = string[idx];
		idx++;
	}
	result[idx - offset] = EOS;
	return result;
}

CMD:resetraport(playerid, params[])
{
    new fid = PlayerInfo[playerid][pMember], string[256], membs;
	if(PlayerInfo[playerid][pLeader] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste liderem!");
	foreach(Player, i) {
	    if(IsPlayerConnected(i) && PlayerInfo[i][pMember] == fid) {
			PlayerInfo[i][pCommands] = 0;
			membs++;
		}
	}
	format(string, sizeof(string), "Ai resetat cu succes rapoartele la %d membri!", membs);
	SCM(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:oocname(playerid, params[])
{
	new szQuery[256], string[128], oocname[30];
	if(sscanf(params, "s[30]", oocname)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/oocname <nick>");
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		format(string, sizeof(string), "Zaaktualizowales swój nick OOC na %s", oocname);
		SendClientMessage(playerid, COLOR_LGREEN, string);
		format(PlayerInfo[playerid][pOOCName], 24, oocname);
		format(szQuery, sizeof(szQuery), "UPDATE users SET `pOOCName` = '%s' WHERE `ID` = '%d' ", PlayerInfo[playerid][pOOCName], PlayerInfo[playerid][pSQLID]);
		mysql_query(SQL, szQuery);	
		return 1;
	}
	return 1;
}

CMD:vopis(playerid, params[])
{
    new string[256], tmp[256], query[256];
	if(sscanf(params, "s[126]", tmp)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/vopis [opis]/usun");
	new carid = FindSpawnID(GetPlayerVehicleID(playerid));
	if(CarInfo[carid][Userid] != PlayerInfo[playerid][pSQLID] || CarInfo[carid][cID] == 0) {
	SendClientMessage(playerid, COLOR_GREY, "Nie mozesz ustawic opisu w tym samochodzie!");
	return 1;
	}
	if(strcmp(tmp,"usun",true) == 0)
	{
	    if(CarInfo[carid][cOpis] > 0) Delete3DTextLabel(CarInfo[carid][vOpis]);
		Update3DTextLabelText(CarInfo[carid][vOpis], COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_GREY, "Usunales opis samochodu!");
		CarInfo[carid][cOpis] = 0;
		mysql_format(SQL, query, sizeof(string), "UPDATE cars SET IsOpis='0' WHERE ID=%d", carid);
		mysql_tquery(SQL, query, "", "");
	}
	else
	{
	    if(CarInfo[carid][cOpis] > 0)
	    {
	        CarInfo[carid][cOpis] = 1;
			mysql_real_escape_string(tmp, hackmysql);
			mysql_format(SQL, query, sizeof(string), "UPDATE cars SET IsOpis='1', VOpis='%s' WHERE ID=%d", hackmysql, carid);
			mysql_tquery(SQL, query, "", "");
	        Update3DTextLabelText(CarInfo[carid][vOpis], COLOR_PURPLE, SMessage(tmp));
	    }
	    else
	    {
			new Float:x, Float:y, Float:z;
			GetVehiclePos(GetPlayerVehicleID(playerid), x, y, z);
	        CarInfo[carid][cOpis] = 1;
			CarInfo[carid][vOpis] = Create3DTextLabel(SMessage(tmp),0xC2A2DAAA, x, y, z, 10.0, 1);
			Attach3DTextLabelToVehicle(CarInfo[carid][vOpis], GetPlayerVehicleID(playerid), 0.0, 0.0, -0.2);
			mysql_real_escape_string(tmp, hackmysql);
			mysql_format(SQL, query, sizeof(string), "UPDATE cars SET IsOpis='1', VOpis='%s' WHERE ID=%d", hackmysql, carid);
			mysql_tquery(SQL, query, "", "");
		}
		format(string, sizeof(string), "Ustawiles opis pojazdu na:%s", SMessage(tmp));
		SendClientMessage(playerid, COLOR_LOGS, string);
	}
	return 1;
}

CMD:opis(playerid, params[])
{
    new string[256], tmp[256];
	if(sscanf(params, "s[126]", tmp)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/opis [opis]/usun");
	if(strcmp(tmp,"usun",true) == 0)
	{
	    if(strlen(PlayerInfo[playerid][pOpis]) > 0) DestroyDynamic3DTextLabel(Opis[playerid]);
	    SendClientMessage(playerid, COLOR_GREY, "Usunales swój opis !");
	}
	else
	{
	    if(strlen(PlayerInfo[playerid][pOpis]) > 0)
	    {
	        PlayerInfo[playerid][pOpis] = 1;
	        UpdateDynamic3DTextLabelText(Opis[playerid], COLOR_PURPLE, SMessage(tmp));
	    }
	    else
	    {
	        PlayerInfo[playerid][pOpis] = 1;
			Opis[playerid] = CreateDynamic3DTextLabel(SMessage(tmp),COLOR_PURPLE,0.0,0.0,-0.5,3.5,playerid,INVALID_VEHICLE_ID,1);
			Attach3DTextLabelToPlayer(Opis[playerid], playerid, 0.0, 0.0, -0.5);
		}
		format(string, sizeof(string), "Ustawiles swój opis na: %s", tmp);
		SendClientMessage(playerid, COLOR_YELLOW, string);
	}
	return 1;
}

CMD:aduty(playerid, params[])
{
	new string[128];
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		if(PlayerInfo[playerid][pAdminDuty] == 1)
		{
			SCM(playerid, COLOR_LIGHTRED, "Jestes juz na sluzbie Administratora, aby z niej zejsc wpisz /adoff");
			return 1;
		}

		PlayerInfo[playerid][pAdminDuty] = 1;
		format(string, sizeof(string), "Wchodzisz na sluzbe Administratora. Twój nick OOC: %s", PlayerInfo[playerid][pOOCName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	return 1;
}

CMD:adoff(playerid, params[])
{
	new string[128];
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		if(PlayerInfo[playerid][pAdminDuty] == 1)
		{
			format(string, sizeof(string), "%s", GetName(playerid));
			SetPlayerName(playerid, string);
			format(string, sizeof(string), "Schodzisz ze sluzby Administratora. Twój nick IC: %s", GetName(playerid));
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			PlayerInfo[playerid][pAdminDuty] = 0;
		}
	}
	return 1;
}

CMD:faction(playerid, params[])
{
    new fid = PlayerInfo[playerid][pMember], string[256];
	if(PlayerInfo[playerid][pLeader] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste liderem!");
	format(string, sizeof(string), "Rank 1\t%d\nRank 2\t%d\nRank 3\t%d\nRank 4\t%d\nRank 5\t%d\nRank 6\t%d", FactionInfo[fid][fRank1], FactionInfo[fid][fRank2],
	FactionInfo[fid][fRank3], FactionInfo[fid][fRank4], FactionInfo[fid][fRank5], FactionInfo[fid][fRank6]);
    ShowPlayerDialog(playerid, DIALOG_FACTION, DIALOG_STYLE_TABLIST, "Raport system:", string, "Wybierz", "Iesire");
	return 1;
}

stock ShowPlayerDialogEx(playerid, dialogid, style, caption[], info[], button1[], button2[])
{
	ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);

	return 1;
}



// OnDialogResponse
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(strlen(inputtext) != 1) {
		if(strfind(inputtext, "%", true) != -1) return SCM(playerid, COLOR_WARNING, "Wez nie crashuj pls");
		if(strfind(inputtext, "{", true) != -1 && PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, COLOR_WARNING, "Nie uzywamy tu kolorków misiu!");
    }
	if(PlayerInfo[playerid][pSpawned] == 0) {
	TogglePlayerSpectating(playerid, 1);
	}
    
	new validmysql[258];
	new query[256];
	new name[MAX_PLAYER_NAME];
    new vehicleid = GetPlayerVehicleID(playerid);
	new sendername[25];
	new string[1024], title[64];
	if(dialogid == 333)
	{
	            if(response)
	            {
				TogglePlayerSpectating(playerid, 0);
				SCM(playerid, COLOR_GREY, "Przywracam Twoj¹ ostatni¹ pozycjê!");
				PlayerInfo[playerid][pLastPos] = 1;
				SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pChar], 1642.4734, -2239.2910, 13.5285, 1.0, -1, -1, -1, -1, -1, -1);
				SpawnPlayer(playerid);
	            }
	            if(!response)
	            {
				TogglePlayerSpectating(playerid, 0);
				SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pChar], 1642.4734, -2239.2910, 13.5285, 1.0, -1, -1, -1, -1, -1, -1);
				PlayerInfo[playerid][pLastPos] = 0;
				SpawnPlayer(playerid);
				if(PlayerInfo[playerid][pBWTime] == 0) {
					TogglePlayerControllable(playerid, 0);
					SetTimerEx("UnFreezeStation", 3000, false, "i", playerid);
			 }
		}
		return 1;
	}
	if(dialogid == 401)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
				PlayerInfo[playerid][pSpawnMode] = 0;
				Update(playerid,pSpawnModex);
				SCM(playerid, COLOR_LIGHTBLUE, "Od teraz bedziesz respawnowal sie normalnie!");
	            }
	            case 1:
	            {
				if(PlayerInfo[playerid][pHouse] == 999)
				{
				SCM(playerid, COLOR_LIGHTRED, "Nie masz domu!");
				} else {
				PlayerInfo[playerid][pSpawnMode] = 1;
				Update(playerid,pSpawnModex);
				SCM(playerid, COLOR_LIGHTBLUE, "Od teraz bedziesz respawnowal sie w domu!");
					}
	            }
	            /*case 2:
	            {
				if(PlayerInfo[playerid][pLastPos] == 0){
				PlayerInfo[playerid][pLastPos] = 1;
				Update(playerid,pLastPosx);
				SCM(playerid, COLOR_LIGHTBLUE, "Wlaczyles ladowanie ostatniej lokalizacji przy wejsciu!");
				} else {
				PlayerInfo[playerid][pLastPos] = 0;
				Update(playerid,pLastPosx);
				SCM(playerid, COLOR_LIGHTBLUE, "Wylaczyles ladowanie ostatniej lokalizacji przy wejsciu!");
				}
	            }*/
			 }
		}
		return 1;
	}
	if(dialogid == 499)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(LoadThing[playerid] == 0)
					{
						//ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, "Przedmioty", "{B4FF5A}Prosze czekac, {FFFFFF}trwa wczytywanie przedmiotów!","Akceptuj","");
						DBUnloadPlayerThings(playerid);
						LadowaniePrzedmiotow[playerid] = DBLoadPlayerThings(playerid);
					    ListPlayerThings(playerid, playerid);
					    LoadThing[playerid] = 1;
				    }
				    else if(LoadThing[playerid] == 1)
					{
						ListPlayerThings(playerid, playerid);
					}
	            }
	            case 1:
	            {
				new szDialog[512], typ[18];
				strcat(szDialog, "Nr.\tTyp\tModel ubrania\tStatus\n");
				for(new i; i < 3; i++) {
				if(IsACopSkin(PlayerInfo[playerid][pSkins][i]))
				{
				format(typ, sizeof(typ), "Frakcyjny");
				} else {
				format(typ, sizeof(typ), "Cywilny");
				}
				if(PlayerInfo[playerid][pSkins][i] == GetPlayerSkin(playerid)) format(string, sizeof(string), "%d.\t%s\t%d\t{FF3333}Uzywany\n", i+1, typ, PlayerInfo[playerid][pSkins][i]);
				else if(PlayerInfo[playerid][pSkins][i] != -1) format(string, sizeof(string), "%d.\t%s\t%d\t{FF6600}Posiadany\n",i+1, typ, PlayerInfo[playerid][pSkins][i]);
				else if(PlayerInfo[playerid][pSkins][i] == -1) format(string, sizeof(string), "%d.\t-\tBrak\t{99FF33}Wolny\n",i+1, typ);
				strcat(szDialog, string);
					}
				ShowPlayerDialog(playerid, DIALOG_SKIN, DIALOG_STYLE_TABLIST_HEADERS, "Twoje ubrania", szDialog, "Ubierz", "Wyjdz");
	            }
	            case 2:
	            {
	                new thinglist[512],num;
					for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
					{
					    if((Thing[i][t_ownertype] == 1 && PlayerToPoint(1.5, playerid, Thing[i][t_pos][0], Thing[i][t_pos][1], Thing[i][t_pos][2]) && Thing[i][t_vw] == GetPlayerVirtualWorld(playerid)) || (Thing[i][t_ownertype] == 2 && Thing[i][t_owner] == GetPlayerVehicleID(playerid)))
					    {
					        num++;
					        format(thinglist, sizeof(thinglist), "%s{646464}%d. %s (uid: %d)\n", thinglist, i, GetThingName(i), Thing[i][t_uid]);
					    }
					}
     				if(num == 0)
					{
						ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, "Przedmioty", "{FF500F}W tym miejscu nie znajduja sie zadne przedmioty !", "Akceptuj", "");
					}
					else
					{
						ShowPlayerDialog(playerid, 500, DIALOG_STYLE_LIST, "Przedmioty", thinglist, "Podnies", "Zamknij");
					}
	            }
			 }
		}
		return 1;
	}
	if(dialogid == 498)
	{
	    if(response)
	    {
					new thinglist[512],num;
					for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
					{
					    if((Thing[i][t_ownertype] == 1 && PlayerToPoint(1.5, playerid, Thing[i][t_pos][0], Thing[i][t_pos][1], Thing[i][t_pos][2]) && Thing[i][t_vw] == GetPlayerVirtualWorld(playerid)) || (Thing[i][t_ownertype] == 2 && Thing[i][t_owner] == GetPlayerVehicleID(playerid)))
					    {
					        num++;
					        format(thinglist, sizeof(thinglist), "%s{646464}%d. %s (uid: %d)\n", thinglist, i, GetThingName(i), Thing[i][t_uid]);
					    }
					}
     				if(num == 0)
					{
						SCM(playerid, COLOR_GREY, "Nie ma tutaj zadnych przedmiotów!");
						//ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, "Przedmioty", "{FF500F}W tym miejscu nie znajduja sie zadne przedmioty !", "Akceptuj", "");
					}
					else
					{
						ShowPlayerDialog(playerid, 500, DIALOG_STYLE_LIST, "Przedmioty", thinglist, "Podnies", "Zamknij");
			 }
		}
		return 1;
	}
 	if(dialogid == 500) // Podnoszenie przedmiotów
	{
	    if(response)
	    {
	        new idx;
			new tid = strval(strtok(inputtext, idx));
			if((Thing[tid][t_ownertype] == 1 && PlayerToPoint(1.5, playerid, Thing[tid][t_pos][0], Thing[tid][t_pos][1], Thing[tid][t_pos][2])) || (Thing[tid][t_ownertype] == 2 && Thing[tid][t_owner] == GetPlayerVehicleID(playerid)) /*(Thing[tid][t_ownertype] == 3 && Thing[tid][t_owner] == House[PlayerInfo[playerid][pHire]][house_uid]*/)
			{
			    if(IsPlayerFull(playerid))
			        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, "Przedmioty", "{FF500F}Posiadasz juz maksymalna mozliwa liczbe przedmiotów !", "Akceptuj", "");
				else
			    {
				    // Przepisywanie
				    Thing[tid][t_ownertype] = 0;
				    Thing[tid][t_owner] = PlayerInfo[playerid][pSQLID];
				    Thing[tid][t_used] = 0;

				    // Czyszczenie pozycji
				    Thing[tid][t_pos][0] = 0.0;
				    Thing[tid][t_pos][1] = 0.0;
				    Thing[tid][t_pos][2] = 0.0;
				    Thing[tid][t_vw] = 0;

				    AddTrace(tid, playerid);
				    DBUpdateThing(tid);
				    Delete3DTextLabel(Thing[tid][t_textid]);
				    Update3DTextLabelText(Thing[tid][t_textid], COLOR_WHITE, " ");
				    DestroyDynamic3DTextLabel(Thing[tid][t_textid]);
					DBUpdateThing(tid);
        			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 0, 0, 0, 0);
				    format(string, sizeof(string), "* %s podnosi cos z ziemi.", GetName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					string = "";
					format(string,sizeof(string),"UPDATE `przedmioty` SET `ownertype`='0', `owner`='%d', `pos_x`='0.0', `pos_y`='0.0', `pos_z`='0.0' WHERE `id`='%d'", PlayerInfo[playerid][pSQLID], Thing[tid][t_uid]);
					mysql_query(SQL,string);	
				}
			}
	    }
	}
	if(dialogid == 510) // Opcje przedmiotu gracza
	{
	    if(response)
	    {
	        if(strfind(inputtext, "Zlacz", true) > 0) // Zlacz zaznaczone przedmioty
	        {
	            new linked[10], firstthing, selnum, weapnum, weapthingid;
	            for(new i = 0; i < PRZEDMIOT_LIMIT; i++)
	            {
	                if(Thing[i][t_ownertype] == 0 && Thing[i][t_owner] == PlayerInfo[playerid][pSQLID] && Thing[i][t_selected] == 1)
	                {
	                	switch(Thing[i][t_type])
						{
							case 100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,150,151,152:
							{
							    SendClientMessage(playerid, COLOR_GREY, "Nie mozesz laczyc tego typu przedmiotów.");
							  	LoadingThings[playerid] = ListPlayerThings(playerid, playerid);
								return 0;
							}
						}
						if(Thing[i][t_type] < 100)
						{
							weapnum++;
							weapthingid = i;
						}
						else
						{
						    if(firstthing == 0)
							{
								firstthing = i;
								if(weapthingid > 0)
								{
								    for(new j = 0; j < sizeof(AmmoThing); j++)
								    {
								        if(AmmoThing[j][1] == Thing[firstthing][t_type])
								        {
								            if(AmmoThing[j][0] != Thing[weapthingid][t_type])
								            {
								                ShowPlayerDialog(playerid, 499, DIALOG_STYLE_MSGBOX, "Przedmioty", "{FF500F}Wybrana amunicja nie odpowiada danemu typowi broni !", "Akceptuj", "");
												return 1;
								            }
								        }
								    }
								}
							}
							if(Thing[firstthing][t_type] != Thing[i][t_type])
							{
							    ShowPlayerDialog(playerid, 499, DIALOG_STYLE_MSGBOX, "Przedmioty", "{FF500F}Wybrane przedmioty nie sa ze soba niczym powiazane !", "Akceptuj", "");
								return 1;
							}
							linked[selnum] = i;
							selnum++;
						}
						switch(Thing[i][t_type])
						{
							case 100, 101, 102, 103, 104, 106, 124, 125, 126, 127, 128, 129, 134, 135, 136, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 187, 188, 189, 190, 193:
							{
							    SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz polaczyc danych przedmiotów !");
							  	LoadingThings[playerid] = ListPlayerThings(playerid, playerid);
								return 1;
							}
						}
						if(Thing[i][t_used] == 1)
						{
						    ShowPlayerDialog(playerid, 499, DIALOG_STYLE_MSGBOX, "Przedmioty", "{FF500F}Nie mozesz polaczyc przedmiotów, które obecnie uzywasz !", "Akceptuj", "");
							return 1;
						}
						if(weapnum > 1)
						{
						    ShowPlayerDialog(playerid, 499, DIALOG_STYLE_MSGBOX, "Przedmioty", "{FF500F}Nie mozesz polaczyc ze soba dwóch broni !", "Akceptuj", "");
							return 1;
						}
						if(selnum > 5)
						{
						    ShowPlayerDialog(playerid, 499, DIALOG_STYLE_MSGBOX, "Przedmioty", "{FF500F}Nie mozesz polaczyc ze soba wiecej niz 5 przedmiotów jednorazowo !", "Akceptuj", "");
						    return 1;
						}
	                }
	            }

	            if(weapthingid > 0) // Laczenie broni
	            {
	                for(new i = 0; i < selnum; i++)
	                {
	                    Thing[weapthingid][t_number] += Thing[linked[i]][t_number];
	                    RemoveThing(linked[i]);
	                }
	                Thing[weapthingid][t_selected] = 0;
	                DBUpdateThing(weapthingid);
	            }
	            else
	            {
	                Thing[linked[0]][t_selected] = 0;
	                for(new i = 1; i < selnum; i++)
	                {
	                    Thing[linked[0]][t_number] += Thing[linked[i]][t_number];
	                    Thing[linked[i]][t_selected] = 0;
	                    RemoveThing(linked[i]);
	                }
                 	DBUpdateThing(linked[0]);
	            }
	            LoadingThings[playerid] = ListPlayerThings(playerid, playerid);
	            return 1;
	        }
	        else if(strfind(inputtext, "Odznacz", true) > 0) // Odznacz wszystkie
	        {
	            for(new i = 0; i < PRZEDMIOT_LIMIT; i++)
	            {
	                if(Thing[i][t_ownertype] == 0 && Thing[i][t_owner] == PlayerInfo[playerid][pSQLID] && Thing[i][t_selected] == 1)
	                {
                        Thing[i][t_selected] = 0;
	                }
	            }
				LoadingThings[playerid] = ListPlayerThings(playerid, playerid);
	            return 1;
	        }

	        new idx;
	        new cutstart = strfind(inputtext, "uid", true);
	        strdel(inputtext, 0, cutstart+5);
			new cutend = strlen(inputtext);
			strdel(inputtext, cutend-2, cutend);
	        new tmpuid = strval(strtok(inputtext, idx));
	        if(tmpuid == 0) return 1;

	        for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
	        {
	            if(Thing[i][t_uid] == tmpuid)
	            {
	                SelectedThing[playerid] = i;
	                break;
	            }
	        }

	        format(title, sizeof(title), "Przedmioty (%s (uid: %d))",GetThingName(SelectedThing[playerid]), Thing[SelectedThing[playerid]][t_uid]);
 			if(Thing[SelectedThing[playerid]][t_used] == 0) format(string, sizeof(string), "%s{ff3333}  {FFFFFF}Uzyj przedmiotu\n",string);
 			else format(string, sizeof(string), "%s{ff3333}  {FFFFFF}Nie uzywaj przedmiotu\n",string);
 			format(string, sizeof(string), "%s{ff3333}  {FFFFFF}Wyrzuc\n",string);
 			format(string, sizeof(string), "%s{ff3333}  {FFFFFF}Zniszcz\n",string);
 			format(string, sizeof(string), "%s{ff3333}  {FFFFFF}Odswiez\n",string);
 			format(string, sizeof(string), "%s{ff3333}  {FFFFFF}Oferuj\n",string);
 			format(string, sizeof(string), "%s{ff3333}  {FFFFFF}Rozdziel\n",string);
 			format(string, sizeof(string), "%s{ff3333}  {FFFFFF}Umiesc w...\n",string);
 			format(string, sizeof(string), "%s{ff3333}  {FFFFFF}Informacje\n",string);
 			if(Thing[SelectedThing[playerid]][t_selected] == 0) format(string, sizeof(string), "%s{ff3333}  {FFFFFF}Zaznacz\n",string);
 			else format(string, sizeof(string), "%s{ff3333}  {FFFFFF}Odznacz\n",string);
    		ShowPlayerDialog(playerid,520,DIALOG_STYLE_LIST,title,string,"Wybierz","Anuluj");
	    }
	}
	if(dialogid == 520) // Wykonanie operacji
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0: // Uzywanie
	            {
					if(Thing[SelectedThing[playerid]][t_type] < 100) // bron
					{
					    new tid = Thing[SelectedThing[playerid]][t_type];
					    if((Thing[SelectedThing[playerid]][t_number] == 0) && (tid == 1 || tid == 2 || tid == 3 || tid == 4 || tid == 5 || tid == 6 || tid == 7 ||
						tid == 8 || tid == 9 || tid == 10 || tid == 11 || tid == 12 || tid == 13 || tid == 14 || tid == 43 || tid == 44 || tid == 45 || tid == 46))
					    {
					        RemoveThing(SelectedThing[playerid]);
					    }
					    if(IsPlayerInAnyVehicle(playerid))
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz wykonac tej akcji, znajdujac sie w pojezdzie !");
	                        return OnDialogResponse(playerid, 510, true, 0, string);
				        }
					    if(Thing[SelectedThing[playerid]][t_used] == 0)
					    {
					        if(UsedWeap[playerid] > 0)
			                {
		                        format(string, sizeof(string), "   W uzytku jest obecnie inna bron: %s (uid: %d) !", GetThingName(UsedWeapThing[playerid]), Thing[UsedWeapThing[playerid]][t_uid]);
		                        SendClientMessage(playerid, COLOR_GREY, string);
		                        format(string, sizeof(string), "uid: %d", Thing[SelectedThing[playerid]][t_uid]);
		                        return OnDialogResponse(playerid, 510, true, 0, string);
							}

							if(Thing[SelectedThing[playerid]][t_number] <= 0)
					    	{
					    	    ShowPlayerDialog(playerid, 499, DIALOG_STYLE_MSGBOX, "Przedmioty", "{FF500F}Nie mozesz uzyc tej broni (brak amunicji) !", "Akceptuj", "");
					    	    return 1;
					    	}
					    	//AntiCheatProtectGun[playerid] = 100;
					        GivePlayerWeaponEx(playerid, Thing[SelectedThing[playerid]][t_type], Thing[SelectedThing[playerid]][t_number]);
							SetPlayerArmedWeapon(playerid, Thing[SelectedThing[playerid]][t_type]);
					        Thing[SelectedThing[playerid]][t_used] = 1;
							
							new gunname[64];
							GetWeaponName(Thing[SelectedThing[playerid]][t_type], gunname, sizeof(gunname));
							
					        UsedSlot[playerid] = GetWeapSlotID(Thing[SelectedThing[playerid]][t_type]);
					        UsedWeapThing[playerid] = SelectedThing[playerid];
					        UsedWeap[playerid] = Thing[SelectedThing[playerid]][t_type];
							
							format(string, sizeof(string), "* %s wyciaga zza koszuli %s. ", GetName(playerid), gunname, Thing[UsedWeapThing[playerid]][t_uid]);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					    }
					    else
					    {
					        
					        //Thing[SelectedThing[playerid]][t_number] = GetPlayerAmmo(playerid);
					        //DBUpdateThing(SelectedThing[playerid]);
							//AntiCheatProtect[playerid] = 255;
					        //AntiCheatProtectGun[playerid] = 255;
					        ResetPlayerWeaponsEx(playerid);
							format(string, sizeof(string), "* %s chowa bron", GetName(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					    }
					    AddTrace(SelectedThing[playerid], playerid);
					}
					else // Pozostale
					{
					    new tmpuid = Thing[SelectedThing[playerid]][t_uid];
					    new tick;
						switch(Thing[SelectedThing[playerid]][t_type])
						{
							case 100: //Telefon
							{
								if(PlayerInfo[playerid][pPnumber] == 0)
								{
									SendClientMessage(playerid, COLOR_GREY, "   Nie posiadasz karty do telefonu !");
									return 1;
								}
							    if(Mobile[playerid] != 255)
								{
								    if(PlayerInfo[playerid][pSpeaker] == 1)
								    {
								        ShowPlayerDialog(playerid, 2067, DIALOG_STYLE_LIST, "Menu telefonu", "{FFFFFF}Wylacz tryb glosnomówiacy", "Zatwierdz", "Anuluj");
								    }
									else
									{
										ShowPlayerDialog(playerid, 2067, DIALOG_STYLE_LIST, "Menu telefonu", "{FFFFFF}Wlacz tryb glosnomówiacy", "Zatwierdz", "Anuluj");
									}
								    return 1;
								}
								if(PlayerInfo[playerid][pTelefonOnline] == 1)
								{
									new systemmobile[150];
									new systemd, systemm, systemr;
									getdate(systemr, systemm, systemd);
									format(systemmobile, sizeof(systemmobile), "{FFFFFF}\n  %d.%d.%dr.\n\n\t       Los Santos\t\n\t            Mobile\n\t\t{FFFF00}%d\n\n", systemd, systemm, systemr, PlayerInfo[playerid][pPnumber]);
									ShowPlayerDialog(playerid, 2050, DIALOG_STYLE_MSGBOX, "Menu telefonu", systemmobile, "Menu", "Schowaj");
									GetPlayerName(playerid, name, sizeof(name));
									format(string, sizeof(string), "* %s wyciaga swój telefon z kieszeni.", name);
									SetPlayerChatBubble(playerid,string,COLOR_FADE1,10.0,8000);
									//ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
								}
								else
								{
								    new systemmobile[64];
									GetPlayerName(playerid, name, sizeof(name));
									format(string, sizeof(string), "* %s wyciaga swój telefon z kieszeni.", name);
									SetPlayerChatBubble(playerid,string,COLOR_FADE1,10.0,8000);
									//ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
									format(systemmobile, sizeof(systemmobile), "{FFFFFF}\nTwój telefon jest obecnie wylaczony !\n\t               Wlaczyc?\n\n");
									ShowPlayerDialog(playerid, 2066, DIALOG_STYLE_MSGBOX, "Menu telefonu", systemmobile, "Wlacz", "Schowaj");
								}
								Thing[SelectedThing[playerid]][t_used] = 1;
								SelectedItem0[playerid] = SelectedThing[playerid];
							}
							case 101: //Zegarek
							{
							    format(string, sizeof(string), "* %s spoglada na zegarek.", GetName(playerid));
							    ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							    new mtext[20], year, month, day, hour, minute, minresult[16], second;
								getdate(year, month, day);
								if(month == 1) { mtext = "Styczen"; }
								else if(month == 2) { mtext = "Luty"; }
								else if(month == 3) { mtext = "Marzec"; }
								else if(month == 4) { mtext = "Kwiecien"; }
								else if(month == 5) { mtext = "Maj"; }
								else if(month == 6) { mtext = "Czerwiec"; }
								else if(month == 7) { mtext = "Lipiec"; }
								else if(month == 8) { mtext = "Sierpien"; }
								else if(month == 9) { mtext = "Wrzesien"; }
								else if(month == 10) { mtext = "Pazdziernik"; }
								else if(month == 11) { mtext = "Listopad"; }
								else if(month == 12) { mtext = "Grudzien"; }
								gettime(hour,minute,second);
								FixHour(hour);
								hour = shifthour;
								if(minute < 10) format(minresult, sizeof(minresult), "0%d", minute);
								else format(minresult, sizeof(minresult), "%d", minute);
								if(PlayerInfo[playerid][pJailTime] > 0)
								{
									format(string, sizeof(string), "~y~%d %s~n~~g~>~w~%d:%s~g~<~n~~w~Koniec odsiadki: %d sekund", day, mtext, hour, minresult, PlayerInfo[playerid][pJailTime]-10);
								}
								else
								{
									format(string, sizeof(string), "~y~%d %s~n~~g~>~w~%d:%s~g~<", day, mtext, hour, minresult);
								}
								GameTextForPlayer(playerid, string, 5000, 1);
							}	
							case 102: // Kanister
							{
									new veh = GetPlayerVehicleID(playerid);
									if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
									{
				                    new paliwo, itemid;
				                    paliwo = 0;
				                    itemid = 0;
								    for(new i = 1; i < PRZEDMIOT_LIMIT; i++)
								    {
								        if(Thing[i][t_owner] == PlayerInfo[playerid][pSQLID])
								        {
								            if(Thing[i][t_type] == 102)
								            {
								                itemid = i;
								            }
								        }
								    }
								    if(itemid == 0)
								    {
								        SendClientMessage(playerid, COLOR_GREY, "   Nie posiadasz karnistra !");
										return 1;
								    }
								    if(Gas[vehicleid] >= 99)
								    {
								        SendClientMessage(playerid, COLOR_GREY, "   Ilosc paliwa w baku jest obecnie maksymalna !");
								        return 1;
								    }
                                    if((Thing[itemid][t_number]+Gas[vehicleid]) > 100)
                                    {
										paliwo = (100-Gas[vehicleid]);
                                    }
                                    else
                                    {
                                        paliwo = Thing[itemid][t_number];
									}
									if(paliwo > Thing[itemid][t_number])
									{
									    SendClientMessage(playerid, COLOR_GREY, "(ERROR) B02 - zglos ten kod do administratora!");
									    return 1;
									}
								    GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Tankowanie pojazdu~n~~w~Prosze czekac...",500,3);
									//SetTimerEx("Fillup", RefuelWait, 0, "ddd", playerid, paliwo, itemid);
									Gas[veh] += paliwo;
									Thing[SelectedThing[playerid]][t_number] -= paliwo;
									//Refueling[playerid] = 3;
									//TogglePlayerControllable(playerid, 0);
									//Thing[SelectedThing[playerid]][t_used] = 0;
									//SelectedItem3[playerid] = SelectedThing[playerid];
								}else return SendClientMessage(playerid,COLOR_GREY,"Musisz byc w pojezdzie!");
							} 
						    case 103: // Kostka do gry
						    {
									new dice = random(6)+1;
									format(string, sizeof(string), "* %s rzuca kostk¹ i wyrzuca %d oczek.", Nick(playerid),dice);
									ProxDetector(5.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						    }
							case 104: 
							{ 			//Pas taktyczny
									if(!IsACop(playerid)) {
									SCM(playerid, COLOR_GREY, "Aby go uzywac musisz byc we frakcji porzadkowej!");
									} else {
									SCM(playerid, COLOR_GREY, "Gdy masz go pod /p mozesz uzywac kajdanek oraz paralizatora!");
								}
							}
						    case 105: // Papieros
						    {
						        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
						        if(Thing[SelectedThing[playerid]][t_number] > 1) Thing[SelectedThing[playerid]][t_number]--;
						        else RemoveThing(SelectedThing[playerid]);
						        tick++;
						    }
                            case 106, 110: //Wino
						    {
						        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "Nie mo¿esz kierowaæ pojazdem!");
						            return 1;
								}
						        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
						        if(Thing[SelectedThing[playerid]][t_number] > 1) Thing[SelectedThing[playerid]][t_number]--;
						        else RemoveThing(SelectedThing[playerid]);
						        SetPlayerDrunkLevel(playerid, (GetPlayerDrunkLevel(playerid)+1650));
						        tick++;
						    }
							case 107: //Materia³y
							{
								if(HavingItem(playerid, 107) == 0) return 1;
								format(string, sizeof(string), "INFORMACJA: {FF9933}Masz %d materialów, diler broni moze robic z nich bron! (/stworzbron)", Thing[HavingItem(playerid, 107)][t_number]);
								SendClientMessage(playerid, COLOR_YELLOW, string);
							}
							case 108://MP3
							{
								if(HavingItem(108, playerid) == 0) return SCM(playerid, COLOR_GREY, "Nie posiadasz MP3");
								ShowPlayerDialog(playerid, DIALOG_SONGMP3, DIALOG_STYLE_INPUT, "Twoje MP3", "Wpisz link z YOUTUBE - pe³ny link np. https://www.youtube.com/watch?v=LwZ3CijMsNY", "Ok", "Zatrzymaj");
							}
						    case 109: //Piwo
						    {
						        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "Nie mo¿esz kierowaæ pojazdem!");
						            return 1;
								}
						        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
						        if(Thing[SelectedThing[playerid]][t_number] > 1) Thing[SelectedThing[playerid]][t_number]--;
						        else RemoveThing(SelectedThing[playerid]);
						        SetPlayerDrunkLevel(playerid, (GetPlayerDrunkLevel(playerid)+1000));
						        tick++;
						    }
						    case 111, 118: // Napój (oran¿ada), sok owocowy
						    {
						        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
						        if(Thing[SelectedThing[playerid]][t_number] > 1) Thing[SelectedThing[playerid]][t_number]--;
						        else RemoveThing(SelectedThing[playerid]);
						        tick++;
						        new Float:health;
							    GetPlayerHealth(playerid, health);
						        if(health < 95.0)
							    {
				       				SetPlayerHealth(playerid, health + 5.0);
				       			}
				       			else
				       			{
				       			    SetPlayerHealth(playerid, 100.0);
				       			}
				       			//PlayerInfo[playerid][pSytosc] += 5;
						    }
						    case 112..117: // ¯ywnoæ
						    {
						        ApplyAnimation(playerid, "FOOD", "EAT_Chicken", 1, 0, 1, 1, 0, 5000);
						        GetFuckinPower[playerid] = 20;
						        if(Thing[SelectedThing[playerid]][t_number] > 1) Thing[SelectedThing[playerid]][t_number]--;
						        else RemoveThing(SelectedThing[playerid]);
						        tick++;
						        new Float:health;
							    GetPlayerHealth(playerid, health);
						        if(health < 95.0)
							    {
				       				SetPlayerHealth(playerid, health + 5.0);
				       			}
				       			else
				       			{
				       			    SetPlayerHealth(playerid, 100.0);
				       			}
				       			//PlayerInfo[playerid][pSytosc] += 5;
						    }
							case 187: 
							{ //Kamizelka
								new Float: armourh;
								GetPlayerArmour(playerid, armourh);
								SetPlayerArmour(playerid, 100);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Zalozyles kamizelke !");
								RemoveThing(SelectedThing[playerid]);
							}
							case 193: 
							{
							if(!IsACop(playerid)) {
							SCM(playerid, COLOR_GREY, "Aby go uzywac musisz byc we frakcji porzadkowej!");
							} else {
							SCM(playerid, COLOR_GREY, "Gdy masz go pod /p mozesz uzywac megafonu pod /m !");
							}
							}
							case 196: //maska
							{
                                if(IsPlayerAttachedObjectSlotUsed(playerid, 0) == 1)
                                {
                                 return SendClientMessage(playerid, COLOR_GREY, "   Obecnie w uzytku znajduje sie inny przedmiot !");
								}
						        if(Thing[SelectedThing[playerid]][t_used] == 0)
							    {
								if(PlayerInfo[playerid][pMasked] == 1 ) return SCM(playerid, COLOR_GREY, "Obecnie w uzytku znajduje sie inna kominiarka !");
							    Thing[SelectedThing[playerid]][t_used] = 1;
								format(string, sizeof(string), "* %s zaklada kominiarke na twarz", GetName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								SetPlayerAttachedObject(playerid, 1, 19036, 2, 0.1, 0.05, -0.005, 0, 90, 90);
								PlayerInfo[playerid][pMasked] = 1;
								foreach(Player, i) ShowPlayerNameTagForPlayer(i, playerid, false);
								PlayerTextDrawShow(playerid, UndercoverTD);
								return 1;
								}
								else {
							    Thing[SelectedThing[playerid]][t_used] = 0;
								format(string, sizeof(string), "* %s sciaga kominiarke z twarzy", GetName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								RemovePlayerAttachedObject(playerid, 1);
								PlayerInfo[playerid][pMasked] = 0;
								foreach(Player, i) ShowPlayerNameTagForPlayer(i, playerid, true);
								PlayerTextDrawHide(playerid, UndercoverTD);
								}
							}
					}
						if(tick > 0)
						{
							format(string, sizeof(string), "* Uzyles przedmiotu %s (uid: %d) !", GetThingName(SelectedThing[playerid]), tmpuid);
			                SendClientMessage(playerid, COLOR_RED, string);
							AddTrace(SelectedThing[playerid], playerid);
						}
					}
				}
	            case 1: // Wyrzucanie
	            {
	                new tid = Thing[SelectedThing[playerid]][t_type];
	                if((tid > 170 && tid < 181) || tid == 182)
	                {
	                    SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz wyrzucic danego przedmiotu !");
	                    return 1;
	                }
	                if(tid == 100)
	                {
	                    SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz wyrzucic danego przedmiotu !");
	                    return 1; //nie mozesz wywalic telefonu
	                }
					if(UsedWeap[playerid] > 0)
			        {
	                    SendClientMessage(playerid, COLOR_GREY, "Nie mozesz upuszczac przedmiotow majac bron w rekach!");
	                    return 1;
					}
				    ResetPlayerWeaponsEx(playerid);
	                // Przepisywanie
				    Thing[SelectedThing[playerid]][t_ownertype] = 1;
				    Thing[SelectedThing[playerid]][t_owner] = 0;
				    Thing[SelectedThing[playerid]][t_used] = 0;
				    Thing[SelectedThing[playerid]][t_selected] = 0;
				    AddTrace(SelectedThing[playerid], playerid);
				    // Ustawianie pozycji
				    GetPlayerPos(playerid, Thing[SelectedThing[playerid]][t_pos][0], Thing[SelectedThing[playerid]][t_pos][1], Thing[SelectedThing[playerid]][t_pos][2]);
				    Thing[SelectedThing[playerid]][t_pos][2] -= 0.75;
				    GetXYInFrontOfPlayer(playerid, Thing[SelectedThing[playerid]][t_pos][0], Thing[SelectedThing[playerid]][t_pos][1], 0.5);
				    Thing[SelectedThing[playerid]][t_vw] = GetPlayerVirtualWorld(playerid);
				    // Ustawianie etykiety
				    format(string, sizeof(string), "%s (uid: %d)", GetThingName(SelectedThing[playerid]), Thing[SelectedThing[playerid]][t_uid]);
					Thing[SelectedThing[playerid]][t_textid] = Create3DTextLabel(string, COLOR_PURPLE, Thing[SelectedThing[playerid]][t_pos][0], Thing[SelectedThing[playerid]][t_pos][1], Thing[SelectedThing[playerid]][t_pos][2], 15.0, Thing[SelectedThing[playerid]][t_vw]);
					// /me
					format(string, sizeof(string), "* %s wyrzuca cos na ziemie.", GetName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ApplyAnimation(playerid, "bomber", "bom_plant", 4.1, 0, 0, 0, 0, 0, 0);
					string = "";
					format(string,sizeof(string),"UPDATE `przedmioty` SET `ownertype`='1', `owner`='0', `pos_x`='%f', `pos_y`='%f', `pos_z`='%f' WHERE `id`='%d'",Thing[SelectedThing[playerid]][t_pos][0], Thing[SelectedThing[playerid]][t_pos][1], Thing[SelectedThing[playerid]][t_pos][2], Thing[SelectedThing[playerid]][t_uid]);
					mysql_query(SQL,string);	
				}
	            case 2: // Kasowanie
	            {
	                // Przepisywanie
					new tid = Thing[SelectedThing[playerid]][t_type];
					if(UsedWeap[playerid] > 0)
			        {
	                    SendClientMessage(playerid, COLOR_GREY, "Nie mozesz upuszczac przedmiotow majac bron w rekach!");
	                    return 1;
					}
	                if(tid == 100)
	                {
	                    PlayerInfo[playerid][pPnumber] = 0;
						PlayerInfo[playerid][pTelefonOnline] = 0;
						Update(playerid, pTelefonOnlinex);
						Update(playerid, pPnumberx); //jezeli wywala telefon to skasuj mu tez numer
	                }
					format(string, sizeof(string), "* %s wyrzuca cos na ziemie, a nastepnie po tym depcze. ((%s))", GetName(playerid), GetThingName(SelectedThing[playerid]));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					RemoveThing(SelectedThing[playerid]);
	                new ThingId = Thing[SelectedThing[playerid]][t_uid];
				   	Thing[SelectedThing[playerid]][t_ownertype] = 1;
				    Thing[SelectedThing[playerid]][t_owner] = 0;
				    Thing[SelectedThing[playerid]][t_used] = 0;
				    Thing[SelectedThing[playerid]][t_selected] = 0;
			    	Thing[SelectedThing[playerid]][t_pos][0] = 90.90;
				    Thing[SelectedThing[playerid]][t_pos][1] = 90.90;
				    Thing[SelectedThing[playerid]][t_pos][2] = 90.90;
				    Thing[SelectedThing[playerid]][t_vw] = 999;
			    	// Usuwanie
			    	format(string, sizeof(string), "DELETE FROM przedmioty WHERE id=%d", ThingId);
				    mysql_query(SQL, string);
				}
	            case 3: // Odswiezanie
	            {
	                if(Thing[SelectedThing[playerid]][t_used] == 1 && Thing[SelectedThing[playerid]][t_type] < 100)
	                {
	                 	ResetPlayerWeaponsEx(playerid);
	                }
	                // Przepisywanie
	                new ThingId = Thing[SelectedThing[playerid]][t_uid];
			  		DBUpdateThing(SelectedThing[playerid]);
				   	format(string, sizeof(string), "* Przedmiot %s (uid: %d) zostal odswiezony !", GetThingName(SelectedThing[playerid]), ThingId);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
	            }
	            case 4: // Oferuj
	            {
	                new tid = Thing[SelectedThing[playerid]][t_type];
					if(UsedWeap[playerid] > 0)
			        {
	                    SendClientMessage(playerid, COLOR_GREY, "Nie mo¿esz siê handlowaæ maj¹c broñ w rekach!");
	                    return 1;
					}
	                if((tid > 170 && tid < 181) || tid == 182)
	                {
	                    SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz zaoferowac danego przedmiotu !");
	                    return 1;
	                }
	                if(Thing[SelectedThing[playerid]][t_type] == 104)
						return SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz zaoferowac tego przedmiotu !");
	                if(Thing[SelectedThing[playerid]][t_used] == 1)
	                    return SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz zaoferowac uzywanego przedmiotu !");
	                format(title, sizeof(title), "Przedmioty (%s (uid: %d))",GetThingName(SelectedThing[playerid]), Thing[SelectedThing[playerid]][t_uid]);
	                format(string, sizeof(string),"{FFFFFF}Zamierzasz sprzedac przedmiot %s (uid: %d) !\nPodaj id postaci, której zamierzasz zlozyc oferte:", GetThingName(SelectedThing[playerid]), Thing[SelectedThing[playerid]][t_uid]);
	                ShowPlayerDialog(playerid,525,DIALOG_STYLE_INPUT,title,string,"Dalej","Anuluj");
	            }
	            case 5: // Rozdziel
	            {
	                switch(Thing[SelectedThing[playerid]][t_type])
					{
						case 100, 102, 104, 106, 107, 124, 125, 126, 127, 129, 135, 136:
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz rozdzielic danego przedmiotu !");
						    LoadingThings[playerid] = ListPlayerThings(playerid, playerid);
							return 1;
						}
					}
	                if(Thing[SelectedThing[playerid]][t_used] == 1)
	                {
						SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz rozdzielac uzywanego przedmiotu !");
						LoadingThings[playerid] = ListPlayerThings(playerid, playerid);
						return 1;
					}
					if(Thing[SelectedThing[playerid]][t_number] == 1)
	                {
						SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz rozdzielac pojedynczego przedmiotu !");
						LoadingThings[playerid] = ListPlayerThings(playerid, playerid);
						return 1;
					}
	                format(title, sizeof(title), "Przedmioty (%s (uid: %d))",GetThingName(SelectedThing[playerid]), Thing[SelectedThing[playerid]][t_uid]);
                 	format(string, sizeof(string),"{FFFFFF}Podaj liczbe jednostek, która chcesz oddzielic:");
	                ShowPlayerDialog(playerid,522,DIALOG_STYLE_INPUT,title,string,"Rozdziel","Anuluj");
	            }
	            case 6: //Umiesc w USUN
	            {
	            }
	            case 7:
	            {
	                format(string, sizeof(string), "{FFFFFF}Przedmiot:\t\t{FFFF64}%s\n{FFFFFF}Identyfikator UID:\t{FFFF64}%d\n{FFFFFF}Data utworzenia:\t{FFFF64}%s", GetThingName(SelectedThing[playerid]), Thing[SelectedThing[playerid]][t_uid], Thing[SelectedThing[playerid]][t_createdate]);
					ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{B4CEFF}Informacje o przedmiocie", string, "Akceptuj", "");
				}
	            case 8: // Zaznacz / odznacz
	            {
	                if(Thing[SelectedThing[playerid]][t_selected] == 0) Thing[SelectedThing[playerid]][t_selected] = 1;
	                else Thing[SelectedThing[playerid]][t_selected] = 0;
	               	LoadingThings[playerid] = ListPlayerThings(playerid, playerid);
	                return 1;
				}
			}
	        DBUpdateThing(SelectedThing[playerid]);
	    }
	    else
	    {
	        SelectedThing[playerid] = 0;
	       	LoadingThings[playerid] = ListPlayerThings(playerid, playerid);
	    }
	    return 1;
	}	
	if(dialogid == 522) // Rozdzielanie
	{
	    if(response)
	    {
	        new newnumber = strval(inputtext);
	        if(newnumber < 1 || newnumber >= Thing[SelectedThing[playerid]][t_number])
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz wykonac tej operacji !");
				LoadingThings[playerid] = ListPlayerThings(playerid, playerid);
				return 1;
	        }
	        if(Thing[SelectedThing[playerid]][t_type] < 100)
	        {
	            new thingid;
	            for(new i = 0; i < sizeof(AmmoThing); i++)
	            {
	                if(AmmoThing[i][0] == Thing[SelectedThing[playerid]][t_type])
	                {
	                    Thing[SelectedThing[playerid]][t_number] -= newnumber;
			            thingid = GivePlayerThing(playerid, AmmoThing[i][1], newnumber, 0, 0);
						AddTrace(thingid, playerid);
	                }
	            }
	            if(thingid == 0) SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz rozdzielic tego przedmiotu !");
	        }
	        else
	        {
	            Thing[SelectedThing[playerid]][t_number] -= newnumber;
	            new thingid = GivePlayerThing(playerid, Thing[SelectedThing[playerid]][t_type], newnumber, Thing[SelectedThing[playerid]][t_value1], Thing[SelectedThing[playerid]][t_value2]);
				AddTrace(thingid, playerid);
	        }
	        LoadingThings[playerid] = ListPlayerThings(playerid, playerid);
	        SelectedThing[playerid] = 0;
	    }
	    else SelectedThing[playerid] = 0;
	}
	if(dialogid == 525) // Oferta - weryfikacja osoby
	{
	    if(response)
	    {
	        new target = ReturnUser(inputtext);
	        if(!IsPlayerConnected(target))
				return SendClientMessage(playerid, COLOR_GREY, "   Gracz o podanym id jest nieaktywny !");
	        if(IsPlayerLogged[target] != 1)
				return SendClientMessage(playerid, COLOR_GREY, "   Gracz o podanym id nie jest zalogowany !");
	        if(!ProxDetectorS(5.0, playerid, target))
				return SendClientMessage(playerid, COLOR_GREY, "   Nie znajdujesz sie w poblizu danego gracza !");
            if(playerid == target)
				return SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz zaoferowac samemu sobie danego przedmiotu !");

			Offer[playerid][o_player] = target;
			Offer[playerid][o_playeruid] = PlayerInfo[target][pSQLID];
			format(title, sizeof(title), "Przedmioty (%s (uid: %d))",GetThingName(SelectedThing[playerid]), Thing[SelectedThing[playerid]][t_uid]);
            format(string, sizeof(string),"{FFFFFF}Zamierzasz sprzedac przedmiot %s (uid: %d) !\nPodaj kwote, za która zamierzasz sprzedac przedmiot:",GetThingName(SelectedThing[playerid]), Thing[SelectedThing[playerid]][t_uid]);
            ShowPlayerDialog(playerid,523,DIALOG_STYLE_INPUT,title,string,"Dalej","Anuluj");
	    }
	    else SelectedThing[playerid] = 0;
	}
	if(dialogid == 527)
	{
	    if(response)
	    {
	        new idx;
	        new cutstart = strfind(inputtext, "uid", true);
	        strdel(inputtext, 0, cutstart+5);
			new cutend = strlen(inputtext);
			strdel(inputtext, cutend-1, cutend);
	        new tmpuid = strval(strtok(inputtext, idx));
	        if(tmpuid == 0) return 1;

	        new thingid = DBLoadThing(tmpuid);
	        Thing[thingid][t_ownertype] = 0;
			Thing[thingid][t_owner] = PlayerInfo[playerid][pSQLID];
			Thing[thingid][t_value2] = 0;
			DBUpdateThing(thingid);
	    }
	    else
		{
	        SelectedThing[playerid] = 0;
		}
		LoadingThings[playerid] = ListPlayerThings(playerid, playerid);
	}
	if(dialogid == 523)
	{
	    if(response)
	    {
	        new price = strval(inputtext);
	        if(price < 0 || price > 9999999)
	        {
				format(title, sizeof(title), "Przedmioty (%s (uid: %d))",GetThingName(SelectedThing[playerid]), Thing[SelectedThing[playerid]][t_uid]);
	            format(string, sizeof(string),"{FFFFFF}Zamierzasz sprzedac przedmiot %s (uid: %d) !\nPodaj kwote, za która zamierzasz sprzedac przedmiot:",GetThingName(SelectedThing[playerid]), Thing[SelectedThing[playerid]][t_uid]);
	            ShowPlayerDialog(playerid,523,DIALOG_STYLE_INPUT,title,string,"Dalej","Anuluj");
			}
			else
			{
				if(!IsPlayerConnected(Offer[playerid][o_player]) || PlayerInfo[Offer[playerid][o_player]][pSQLID] != Offer[playerid][o_playeruid])
	                SendClientMessage(playerid, COLOR_GREY, "   Oferta zostala anulowana, gdyz dana osoba opuscila serwer !");
				else
				{
				    Offer[playerid][o_price] = price;
				    format(title, sizeof(title), "Przedmioty > %s (uid: %d) > Oferuj",GetThingName(SelectedThing[playerid]), Thing[SelectedThing[playerid]][t_uid]);
					format(string, sizeof(string), "{FFFFFF}Potwierdzenie oferty:\n\tPrzedmiot:\t%s (uid: %d)\n\tKwota:\t\t%d$\n\tGracz:\t\t%s (id: %d)",GetThingName(SelectedThing[playerid]), Thing[SelectedThing[playerid]][t_uid], price, GetName(Offer[playerid][o_player]), Offer[playerid][o_player]);
					ShowPlayerDialog(playerid,524,DIALOG_STYLE_MSGBOX,title,string,"Oferuj","Anuluj");
					return 1;
				}
			}
	    }
	    SelectedThing[playerid] = 0;
	    Offer[playerid][o_player] = INVALID_PLAYER_ID;
	    Offer[playerid][o_playeruid] = 0;
	}
	if(dialogid == 524)
	{
	    if(response)
	    {
	        if(!IsPlayerConnected(Offer[playerid][o_player]) || PlayerInfo[Offer[playerid][o_player]][pSQLID] != Offer[playerid][o_playeruid])
                SendClientMessage(playerid, COLOR_GREY, "   Oferta zostala anulowana, gdyz dana osoba opuscila serwer !");
			else
			{
			    // Oferta
			    Offer[playerid][o_active] = 1;
				Offer[playerid][o_type] = 1; // 1 - przedmiot
				Offer[playerid][o_value1] = SelectedThing[playerid];

				Offer[Offer[playerid][o_player]][o_player] = playerid;
				Offer[Offer[playerid][o_player]][o_active] = 1;
				Offer[Offer[playerid][o_player]][o_type] = 0;

				format(string, sizeof(string), "* Zaoferowales %s przedmiot %s (uid: %d) za %d$ !", GetName(Offer[playerid][o_player]), GetThingName(SelectedThing[playerid]), Thing[SelectedThing[playerid]][t_uid], Offer[playerid][o_price]);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				ShowPlayerOffer(Offer[playerid][o_player]);

				return 1;
			}
	    }
	    SelectedThing[playerid] = 0;
	    Offer[playerid][o_player] = INVALID_PLAYER_ID;
	    Offer[playerid][o_playeruid] = 0;
	    Offer[playerid][o_price] = 0;
	}	
    if(dialogid == 600) // Oferty
	{
	    if(response)
	    {
	        if(Offer[playerid][o_active] == 0)
	            SendClientMessage(playerid, COLOR_GREY, "   Nikt nie zlozyl Ci zadnej oferty !");
			else
			{
		        if(!IsPlayerConnected(Offer[playerid][o_player]) || Offer[Offer[playerid][o_player]][o_playeruid] != PlayerInfo[playerid][pSQLID])
	                SendClientMessage(playerid, COLOR_GREY, "   Oferta zostala anulowana, gdyz dana osoba opuscila serwer !");
				else
				{
				    if(Offer[Offer[playerid][o_player]][o_price] > GetPlayerCash(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Oferta zostala anulowana, gdyz nie posiadasz wystarczajacej ilosci gotówki !");
				        SendClientMessage(Offer[playerid][o_player], COLOR_GREY, "   Oferta zostala anulowana, gdyz dana postac nie posiada wystarczajacej ilosci gotówki !");
				    }
				    else
				    {
						switch(Offer[Offer[playerid][o_player]][o_type])
						{
						    case 1: // Przedmiot
						    {
						        if(IsPlayerFull(playerid))
						        {
						            SendClientMessage(playerid, COLOR_GREY, "   Nie mozesz posiadac wiekszej ilosci przedmiotów !");
						            SendClientMessage(Offer[playerid][o_player], COLOR_GREY, "   Oferta zostala anulowana, gdyz dana osoba nie moze posiadac wiekszej ilosci przedmiotów !");
						        }
						        else
								{
							        format(string, sizeof(string), "* Otrzymales przedmiot %s (uid: %d) od %s za %d$ !", GetThingName(Offer[Offer[playerid][o_player]][o_value1]), Thing[Offer[Offer[playerid][o_player]][o_value1]][t_uid], GetName(Offer[playerid][o_player]), Offer[Offer[playerid][o_player]][o_price]);
									SendClientMessage(playerid, COLOR_LIGHTBLUE, string);

									format(string, sizeof(string), "* Przekazales %s przedmiot %s (uid: %d) za $%d !", GetName(Offer[playerid][o_player]), GetThingName(Offer[Offer[playerid][o_player]][o_value1]), Thing[Offer[Offer[playerid][o_player]][o_value1]][t_uid], Offer[Offer[playerid][o_player]][o_price]);
									SendClientMessage(Offer[playerid][o_player], COLOR_LIGHTBLUE, string);

									GivePlayerCash(playerid, -Offer[Offer[playerid][o_player]][o_price]);
									GivePlayerCash(Offer[playerid][o_player], Offer[Offer[playerid][o_player]][o_price]);

									AddTrace(Offer[Offer[playerid][o_player]][o_value1], playerid);
									Thing[Offer[Offer[playerid][o_player]][o_value1]][t_owner] = PlayerInfo[playerid][pSQLID];
									DBUpdateThing(Offer[Offer[playerid][o_player]][o_value1]);
								}
						    }
						}
					}
				}
			}
	    }
	    else
		{
		    SendClientMessage(Offer[playerid][o_player], COLOR_GREY, "   Oferta zostala odrzucona przez dana osobe !");
		}
	    Offer[Offer[playerid][o_player]][o_player] = INVALID_PLAYER_ID;
	    Offer[Offer[playerid][o_player]][o_playeruid] = 0;
	    Offer[Offer[playerid][o_player]][o_price] = 0;
	    Offer[Offer[playerid][o_player]][o_active] = 0;

	    Offer[playerid][o_player] = INVALID_PLAYER_ID;
	    Offer[playerid][o_playeruid] = 0;
	    Offer[playerid][o_price] = 0;
	    Offer[playerid][o_active] = 0;
	}
	if(dialogid == 760)
	{
	    if(!response)
	    {
	        return 1;
		}
		new ppid = strval(inputtext), dis, timee, koszt;
		new Float:x2, Float:y2,	Float:z2;
		GetPlayerPos(playerid, x2, y2, z2);
		dis = floatround(floatadd(floatadd(floatsqroot(floatpower(floatsub(Przystanek[ppid][busPozX], x2), 2)), floatsqroot(floatpower(floatsub(Przystanek[ppid][busPozY], y2), 2))), floatsqroot(floatpower(floatsub(Przystanek[ppid][busPozZ], z2), 2))), floatround_tozero);
		koszt = dis/100;
		timee = dis/12;
		if(koszt < MIN_TICKET_COST)
		{
		    koszt = MIN_TICKET_COST;
		}
		if(koszt > MAX_TICKET_COST)
		{
		    koszt = MAX_TICKET_COST;
		}
		SetPVarInt(playerid, "BusKoszt", koszt);
		SetPVarInt(playerid, "BusCzas", timee);
		SetPVarInt(playerid, "BusDo", ppid);
		SetPVarInt(playerid, "BusPrzystanek", GetPlayerBusStop(playerid));
		format(string, sizeof(string), "{8CAFCD}Trasa %s - %s\n\t{646464}# {FFFFFF}Czas:\t\t{FFFF00}~%d min\n\t{646464}# {FFFFFF}Koszt:\t{FFFF00}%d$", Przystanek[GetPlayerBusStop(playerid)][busText], Przystanek[ppid][busText], timee/60, koszt);
		ShowPlayerDialog(playerid, 761, DIALOG_STYLE_LIST, "Przystanek", string, "Kup", "Anuluj" );
		return 1;
	}
 	if(dialogid == 761)
	{
	    if(!response)
	    {
	        DeletePVar(playerid, "BusKoszt");
	        DeletePVar(playerid, "BusCzas");
	        DeletePVar(playerid, "BusPrzystanek");
	        DeletePVar(playerid, "BusDo");
	        return 1;
		}
		if(GetPVarInt(playerid, "BusKoszt") > GetPlayerCash(playerid))
		{
		    DeletePVar(playerid, "BusKoszt");
	        DeletePVar(playerid, "BusCzas");
	        DeletePVar(playerid, "BusDo");
	        DeletePVar(playerid, "BusPrzystanek");
	        return SendClientMessage(playerid, COLOR_GREY, "   Nie posiadasz wystarczajacej ilosci pieniedzy !");
		}
		SetTimerEx("BusStart", 500, 0, "i", playerid);
		//SendClientMessage(playerid, COLOR_YELLOW, "* Autobus podjedzie lada chwila !");
	}
	if(dialogid == 762)
	{
		if(!response)
		{
		    return 1;
		}
		if(!strlen(inputtext) || strlen(inputtext) > 32)
		{
		    return ShowPlayerDialog(playerid, 762, DIALOG_STYLE_INPUT, "Przystanek", "{FF500F}Podana przez Ciebie nazwa przystanku jest nieprawidlowa !", "Dalej", "Anuluj");
		}
		new Float:x, Float:y, Float:z, Float:a;
		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, a);
		new id = StworzPrzystanek(inputtext, x, y, z, a);
		format(string, sizeof(string), "* Utworzyles przystanek %s (id: %d) !", Przystanek[id][busText], id);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	if(dialogid == 763)
	{
	    if(!response)
	    {
	        return DeletePVar(playerid, "BusPoz");
	 	}
		switch(listitem)
		{
		    case 0, 1, 2, 3, 4, 5:
		    {
		        return cmd_abus(playerid, "edytuj");
			}
			case 6:
			{
			    return 	ShowPlayerDialog(playerid, 764, DIALOG_STYLE_INPUT, "Przystanek", "Wprowadz nowa nazwe dla wybranego przystanku:", "Akceptuj", "Anuluj" );
			}
			case 7:
			{
				return SendClientMessage(playerid, COLOR_GREY, "   Ustaw sie w nowej pozycji przystanku i skorzystaj z /abus !");
			}
			case 8:
			{
			    UsunPrzystanek(GetPVarInt(playerid, "BusPoz"));
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Przystanek zostal pomyslnie usuniety !");
			    DeletePVar(playerid, "BusPoz");
			}
		}
	}
	if(dialogid == 764)
	{
	    if(!response)
	    {
	        return DeletePVar(playerid, "BusPoz");
		}

		if(!strlen(inputtext) || strlen(inputtext) > 32)
		{
		    return ShowPlayerDialog(playerid, 764, DIALOG_STYLE_INPUT, "Przystanek", "{FF500F}Podana przez Ciebie nazwa przystanku jest nieprawidlowa !", "Dalej", "Anuluj");
		}
		new id = GetPVarInt(playerid, "BusPoz");
		format(Przystanek[id][busText], 32, "%s", inputtext);
		ZapiszPrzystanek(id);
		format(string, 100, "Przystanek %d: %s\nAby kupic bilet, wpisz /bus", id, Przystanek[id][busText]);
		Update3DTextLabelText(Przystanek[id][busTag], COLOR_NEWS, string);
		DeletePVar(playerid, "BusPoz");
	}
	if(dialogid == 2050)
	{
		if(response)
		{
		    new menutel[350];
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wiadomosci SMS\n");
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Polaczenia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Ustawienia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Stan konta\n", menutel);
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wylacz", menutel);
			ShowPlayerDialog(playerid, 2051, DIALOG_STYLE_LIST, "Menu telefonu", menutel, "Wybierz", "Schowaj");
		}
		else
		{
			GetPlayerName(playerid, name, sizeof(name));
			format(string, sizeof(string), "* %s chowa swój telefon do kieszeni.", name);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			Thing[SelectedItem0[playerid]][t_used] = 0;
   			SelectedItem0[playerid] = 0;
   			Mobile[playerid] = 255;
		}
		return 1;
	}
	if(dialogid == 2051)
	{
	    if(response)
	    {
	        switch(listitem)
		 	{
				case 0:
				{
				    if(IsPlayerConnected(playerid))
				    {
					    if(PlayerInfo[playerid][pTelefonOnline] == 0)
						{
							SendClientMessage(playerid, COLOR_GREY, "   Twój telefon jest obecnie wylaczony !");
       						GetPlayerName(playerid, name, sizeof(name));
							format(string, sizeof(string), "* %s chowa swój telefon do kieszeni.", name);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							Thing[SelectedItem0[playerid]][t_used] = 0;
							SelectedItem0[playerid] = 0;
							Mobile[playerid] = 255;
							return 1;
						}
					    new nowykontakt[256];
						format(nowykontakt, sizeof(nowykontakt), "{FFFFFF}Wprowadz numer telefonu, do którego chcesz wyslac wiadomosc:");
						ShowPlayerDialog(playerid, 2059, DIALOG_STYLE_INPUT, "Menu telefonu", nowykontakt, "Akceptuj", "Anuluj");
						return 1;
					}
	    		}
	    		case 1:
	    		{
	    		    if(IsPlayerConnected(playerid))
				    {
					    if(PlayerInfo[playerid][pTelefonOnline] == 0)
						{
							SendClientMessage(playerid, COLOR_GREY, "   Twój telefon jest obecnie wylaczony !");
       						GetPlayerName(playerid, name, sizeof(name));
							format(string, sizeof(string), "* %s chowa swój telefon do kieszeni.", name);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							Thing[SelectedItem0[playerid]][t_used] = 0;
							Mobile[playerid] = 255;
							SelectedItem0[playerid] = 0;
							return 1;
						}
						ShowPlayerDialog(playerid, 2061, DIALOG_STYLE_INPUT, "Menu telefonu", "{FFFFFF}Wprowadz numer telefonu pod który chcesz zadzwonic:", "Dzwon", "Anuluj");
						return 1;
					}
	    		}
	    		case 2:
				{
				    if(IsPlayerConnected(playerid))
				    {
					    if(PlayerInfo[playerid][pTelefonOnline] == 0)
						{
							SendClientMessage(playerid, COLOR_GREY, "   Twój telefon jest obecnie wylaczony !");
       						GetPlayerName(playerid, name, sizeof(name));
							format(string, sizeof(string), "* %s chowa swój telefon do kieszeni.", name);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							Thing[SelectedItem0[playerid]][t_used] = 0;
							Mobile[playerid] = 255;
							SelectedItem0[playerid] = 0;
							return 1;
						}
						new menutel[512];
					    format(menutel, sizeof(menutel), "{ff3333}  {FFFFFF}Tryb cichy\n");
					    format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Glosnik\n", menutel);
						format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Dzwonek\n", menutel);
						format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Dzwiek SMS\n", menutel);
						format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Zastrzezony", menutel);
						ShowPlayerDialog(playerid, 2062, DIALOG_STYLE_LIST, "Menu telefonu", menutel, "Wybierz", "Menu");
						return 1;
					}
				}
				case 3:
				{
					if(IsPlayerConnected(playerid))
				    {
					    if(PlayerInfo[playerid][pTelefonOnline] == 0)
						{
							SendClientMessage(playerid, COLOR_GREY, "   Twój telefon jest obecnie wylaczony !");
       						GetPlayerName(playerid, name, sizeof(name));
							format(string, sizeof(string), "* %s chowa swój telefon do kieszeni.", name);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							Thing[SelectedItem0[playerid]][t_used] = 0;
							Mobile[playerid] = 255;
							SelectedItem0[playerid] = 0;
							return 1;
						}
      					format(string, sizeof(string), "{FFFFFF}Aktualny stan twojego konta: {FFFF00}Taryfa Unlimited FREE {FFFFFF}!");
						ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", string, "Menu", "");
						return 1;
					}
				}
				case 4:
				{
				    if(IsPlayerConnected(playerid))
				    {
						if(PlayerInfo[playerid][pTelefonOnline] == 0)
						{
						    PlayerInfo[playerid][pTelefonOnline] = 1;
					        ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Wlaczyles swój telefon !", "Menu", "");
						    return 1;
						}
						if(PlayerInfo[playerid][pTelefonOnline] == 1)
						{
						    PlayerInfo[playerid][pTelefonOnline] = 0;
							Update(playerid, pTelefonOnlinex);
          					GetPlayerName(playerid, name, sizeof(name));
							format(string, sizeof(string), "* %s wylacza telefon i chowa go do kieszeni.", name);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							Thing[SelectedItem0[playerid]][t_used] = 0;
				   			SelectedItem0[playerid] = 0;
				   			Mobile[playerid] = 255;
						    return 1;
						}
						return 1;
					}
				}
		 	}
		}
	    else
	    {
         	GetPlayerName(playerid, name, sizeof(name));
			format(string, sizeof(string), "* %s chowa swój telefon do kieszeni.", name);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			Thing[SelectedItem0[playerid]][t_used] = 0;
			Mobile[playerid] = 255;
			SelectedItem0[playerid] = 0;
	    }
	}
	if(dialogid == 2057)
	{
	    if(response)
	    {
	        new menutel[256];
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wiadomosci SMS\n");
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Polaczenia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Ustawienia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Stan konta\n", menutel);
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wylacz", menutel);
			ShowPlayerDialog(playerid, 2051, DIALOG_STYLE_LIST, "Menu telefonu", menutel, "Wybierz", "Schowaj");
	    }
	    else
	    {
	        new menutel[256];
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wiadomosci SMS\n");
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Polaczenia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Ustawienia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Stan konta\n", menutel);
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wylacz", menutel);
			ShowPlayerDialog(playerid, 2051, DIALOG_STYLE_LIST, "Menu telefonu", menutel, "Wybierz", "Schowaj");
	    }
	}
	if(dialogid == 2062)
	{
	    if(response)
	    {
	        switch(listitem)
		 	{
				case 0:
				{
				    if(IsPlayerConnected(playerid))
				    {
					    if(PlayerInfo[playerid][pTrybCichy] == 0)
					    {
					        PlayerInfo[playerid][pTrybCichy] = 1;
					        ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, wlaczajac tryb cichy !", "Menu", "");
					        return 1;
					    }
					    if(PlayerInfo[playerid][pTrybCichy] == 1)
					    {
					        PlayerInfo[playerid][pTrybCichy] = 0;
					        ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, wylaczajac tryb cichy !", "Menu", "");
					        return 1;
					    }
				    }
	            }
	            case 1:
	            {
	                if(IsPlayerConnected(playerid))
				    {
				        if(Mobile[playerid] == 255)
					    {
					        ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Obecnie z nikim nie prowadzisz rozmowy !", "Menu", "");
					        return 1;
					    }
						if(PlayerInfo[playerid][pSpeaker] == 0)
						{
							ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, wlaczajac tryb glosnomówiacy !", "Menu", "");
       						GetPlayerName(playerid, name, sizeof(name));
							format(string, sizeof(string), "* %s wlacza tryb glosnomówiacy w telefonie.", name);
							ProxDetector(15.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							PlayerInfo[playerid][pSpeaker] = 1;
							return 1;
						}
						if(PlayerInfo[playerid][pSpeaker] == 1)
						{
						    ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, wylaczajac tryb glosnomówiacy !", "Menu", "");
          					GetPlayerName(playerid, name, sizeof(name));
							format(string, sizeof(string), "* %s wylacza tryb glosnomówiacy w telefonie.", name);
							ProxDetector(15.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							PlayerInfo[playerid][pSpeaker] = 0;
							return 1;
						}
				    }
	            }
	            case 2:
	            {
	                if(IsPlayerConnected(playerid))
				    {
		                new menutel[512];
					    format(menutel, sizeof(menutel), "{ff3333}  {FFFFFF}Dzwonek 1\n");
						format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Dzwonek 2\n", menutel);
						format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Dzwonek 3\n", menutel);
						format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Dzwonek 4\n", menutel);
			            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Dzwonek 5\n", menutel);
			            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Dzwonek 6\n", menutel);
			            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Dzwonek 7", menutel);
						format(title, sizeof(title), "Menu telefonu");
						ShowPlayerDialog(playerid, 2063, DIALOG_STYLE_LIST, title, menutel, "Wybierz", "Menu");
					}
	            }
	            case 3:
	            {
	                if(IsPlayerConnected(playerid))
				    {
		                new menutel[512];
					    format(menutel, sizeof(menutel), "{ff3333}  {FFFFFF}Dzwiek SMS 1\n");
						format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Dzwiek SMS 2", menutel);
						format(title, sizeof(title), "Menu telefonu");
						ShowPlayerDialog(playerid, 2064, DIALOG_STYLE_LIST, title, menutel, "Wybierz", "Menu");
					}
	            }
	            case 4:
	            {
	                if(PlayerInfo[playerid][pZastrzezony] == 0)
					{
					    PlayerInfo[playerid][pZastrzezony] = 1;
						Update(playerid, pZastrzezonyx);
					    ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Twój numer telefonu zostal zastrzezony !", "Menu", "");
					    return 1;
					}
					if(PlayerInfo[playerid][pZastrzezony] == 1)
					{
					    PlayerInfo[playerid][pZastrzezony] = 0;
						Update(playerid, pZastrzezonyx);
					    ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Twój numer telefonu jest widoczny !", "Menu", "");
					    return 1;
					}
	            }
			}
	    }
	    else
	    {
	        new menutel[256];
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wiadomosci SMS\n");
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Polaczenia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Ustawienia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Stan konta\n", menutel);
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wylacz", menutel);
			ShowPlayerDialog(playerid, 2051, DIALOG_STYLE_LIST, "Menu telefonu", menutel, "Wybierz", "Schowaj");
	    }
	    return 1;
	}
	if(dialogid == 2063)
	{
	    if(response)
	    {
	        switch(listitem)
		 	{
		 	    case 0:
			    {
			        PlayerInfo[playerid][pDzwonek] = 1;
					Update(playerid, pDzwonekx);
			        PlayerPlaySound(playerid, 1076, 0.0, 0.0, 0.0);
			        SetTimerEx("StopMusic", 5014, 0, "i", playerid);
			        ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, zmieniajac dzwonek telefonu !", "Menu", "");
			    }
			    case 1:
			    {
			        PlayerInfo[playerid][pDzwonek] = 2;
					Update(playerid, pDzwonekx);
			        PlayerPlaySound(playerid, 1187, 0.0, 0.0, 0.0);
			        SetTimerEx("StopMusic", 5014, 0, "i", playerid);
			        ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, zmieniajac dzwonek telefonu !", "Menu", "");
			    }
			    case 2:
			    {
			        PlayerInfo[playerid][pDzwonek] = 3;
					Update(playerid, pDzwonekx);
			        PlayerPlaySound(playerid, 1185, 0.0, 0.0, 0.0);
			        SetTimerEx("StopMusic", 5014, 0, "i", playerid);
			        ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, zmieniajac dzwonek telefonu !", "Menu", "");
			    }
			    case 3:
			    {
			        PlayerInfo[playerid][pDzwonek] = 4;
					Update(playerid, pDzwonekx);
			        PlayerPlaySound(playerid, 1183, 0.0, 0.0, 0.0);
			        SetTimerEx("StopMusic", 5014, 0, "i", playerid);
			        ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, zmieniajac dzwonek telefonu !", "Menu", "");
			    }
			    case 4:
			    {
			        PlayerInfo[playerid][pDzwonek] = 5;
					Update(playerid, pDzwonekx);
			        PlayerPlaySound(playerid, 1097, 0.0, 0.0, 0.0);
			        SetTimerEx("StopMusic", 5014, 0, "i", playerid);
			        ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, zmieniajac dzwonek telefonu !", "Menu", "");
			    }
			    case 5:
			    {
			        PlayerInfo[playerid][pDzwonek] = 6;
					Update(playerid, pDzwonekx);
			        PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
			        SetTimerEx("StopMusic", 5014, 0, "i", playerid);
			        ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, zmieniajac dzwonek telefonu !", "Menu", "");
			    }
			    case 6:
			    {
			        PlayerInfo[playerid][pDzwonek] = 7;
					Update(playerid, pDzwonekx);
			        PlayerPlaySound(playerid, 1062, 0.0, 0.0, 0.0);
			        SetTimerEx("StopMusic", 5014, 0, "i", playerid);
			        ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, zmieniajac dzwonek telefonu !", "Menu", "");
			    }
			}
		}
		else
		{
		    new menutel[256];
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wiadomosci SMS\n");
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Polaczenia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Ustawienia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Stan konta\n", menutel);
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wylacz", menutel);
			ShowPlayerDialog(playerid, 2051, DIALOG_STYLE_LIST, "Menu telefonu", menutel, "Wybierz", "Schowaj");
		}
		return 1;
}
	if(dialogid == 2064)
	{
	    if(response)
	    {
	        switch(listitem)
		 	{
		 	    case 0:
			    {
			        PlayerInfo[playerid][pDzwiekSMS] = 1;
					Update(playerid, pDzwiekSMSx);
			        PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			        ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, zmieniajac dzwiek SMS !", "Menu", "");
			    }
			    case 1:
			    {
			        PlayerInfo[playerid][pDzwiekSMS] = 2;
					Update(playerid, pDzwiekSMSx);
			        PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			        ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, zmieniajac dzwiek SMS !", "Menu", "");
			    }
			}
		}
		else
		{
		    new menutel[256];
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wiadomosci SMS\n");
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Polaczenia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Ustawienia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Stan konta\n", menutel);
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wylacz", menutel);
			ShowPlayerDialog(playerid, 2051, DIALOG_STYLE_LIST, "Menu telefonu", menutel, "Wybierz", "Schowaj");
		}
		return 1;
}
	if(dialogid == 2065)
	{
	    if(response)
	    {
	        if(IsPlayerConnected(playerid))
	        {
	        	ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, wylaczajac tryb glosnomówiacy !", "Menu", "");
       			GetPlayerName(playerid, name, sizeof(name));
				format(string, sizeof(string), "* %s wylacza tryb glosnomówiacy w telefonie.", name);
				ProxDetector(15.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				PlayerInfo[playerid][pSpeaker] = 0;
			}
			return 1;
	    }
	    else
	    {
	        return 1;
	    }
	}
	if(dialogid == 2066)
	{
	    if(response)
	    {
	        PlayerInfo[playerid][pTelefonOnline] = 1;
			Update(playerid, pTelefonOnlinex);
			ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "\t  {FFFFFF}Wlaczyles telefon !", "Menu", "");
	    }
	    else
	    {
         	GetPlayerName(playerid, name, sizeof(name));
			format(string, sizeof(string), "* %s chowa swój telefon do kieszeni.", name);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			Thing[SelectedItem0[playerid]][t_used] = 0;
			Mobile[playerid] = 255;
			SelectedItem0[playerid] = 0;
	    }
	    return 1;
	}
	if(dialogid == 2067)
	{
	    if(response)
	    {
	        if(IsPlayerConnected(playerid))
	        {
	            if(PlayerInfo[playerid][pSpeaker] == 1)
			    {
			        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, wylaczajac tryb glosnomówiacy !", "Akceptuj", "");
        			GetPlayerName(playerid, name, sizeof(name));
					format(string, sizeof(string), "* %s wylacza tryb glosnomówiacy w telefonie.", name);
					ProxDetector(15.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					PlayerInfo[playerid][pSpeaker] = 0;
					return 1;
			    }
				else
				{
					ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Zmieniles ustawienia w telefonie, wlaczajac tryb glosnomówiacy !", "Akceptuj", "");
        			GetPlayerName(playerid, name, sizeof(name));
					format(string, sizeof(string), "* %s wlacza tryb glosnomówiacy w telefonie.", name);
					ProxDetector(15.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					PlayerInfo[playerid][pSpeaker] = 1;
					return 1;
				}
			}
	    }
	    else
	    {
	        return 1;
	    }
	}
	if(dialogid == 2057)
	{
	    if(response)
	    {
	        new menutel[256];
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wiadomosci SMS\n");
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Polaczenia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Ustawienia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Stan konta\n", menutel);
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wylacz", menutel);
			ShowPlayerDialog(playerid, 2051, DIALOG_STYLE_LIST, "Menu telefonu", menutel, "Wybierz", "Schowaj");
	    }
	    else
	    {
	        new menutel[256];
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wiadomosci SMS\n");
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Polaczenia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Ustawienia\n", menutel);
            format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Stan konta\n", menutel);
			format(menutel, sizeof(menutel), "%s{ff3333}  {FFFFFF}Wylacz", menutel);
			ShowPlayerDialog(playerid, 2051, DIALOG_STYLE_LIST, "Menu telefonu", menutel, "Wybierz", "Schowaj");
	    }
	}
	if(dialogid == 2059)
	{
	    if(response)
	    {
	        new giveplayerid = -1;
			new numernowy = strval(inputtext);
			if(numernowy == 0)
			{
			    new nowykontakt[256];
				format(nowykontakt, sizeof(nowykontakt), "{FF500F} Podany numer jest nieprawidlowy !\n{FFFFFF}Wprowadz numer telefonu odbiorcy:");
				ShowPlayerDialog(playerid, 2059, DIALOG_STYLE_INPUT, "Menu telefonu", nowykontakt, "Akceptuj", "Anuluj");
				return 1;
			}
			Loop(i)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == WybranyNumer[playerid])
					{
						giveplayerid = i;
					}
				}
			}
			if(giveplayerid < 0)
			{
			    ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Problem z nawiazaniem polaczenia...", "Menu", "");
				Mobile[playerid] = 255;
				return 1;
			}
			WybranyNumer[playerid] = numernowy;
			new nowykontakt[256];
			format(nowykontakt, sizeof(nowykontakt), "{FFFFFF}Wprowadz tekst wiadomosci, która ma zostac wyslana:");
			ShowPlayerDialog(playerid, 2060, DIALOG_STYLE_INPUT, "Menu telefonu", nowykontakt, "Wyslij", "Anuluj");
			return 1;
		}
		else
		{
   			GetPlayerName(playerid, name, sizeof(name));
			format(string, sizeof(string), "* %s chowa swój telefon do kieszeni.", name);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			Thing[SelectedItem0[playerid]][t_used] = 0;
			Mobile[playerid] = 255;
			SelectedItem0[playerid] = 0;
		}
		return 1;
	}
	if(dialogid == 2060)
	{
        if(response)
		{
		    new giveplayerid = -1;
			if(strlen(inputtext) < 3)
			{
			    new nowykontakt[128];
				format(nowykontakt, sizeof(nowykontakt), "                         {FF500F}Wiadomosc jest za krótka !\n{FFFFFF}Wprowadz tekst wiadomosci, która ma zostac wyslana:");
				ShowPlayerDialog(playerid, 2060, DIALOG_STYLE_INPUT, "Menu telefonu", nowykontakt, "Wyslij", "Anuluj");
				return 1;
			}
			if(strlen(inputtext) > 50)
			{
			    new nowykontakt[128];
				format(nowykontakt, sizeof(nowykontakt), "                           {FF500F}Wiadomosc jest za dluga !\n{FFFFFF}Wprowadz tekst wiadomosci, która ma zostac wyslana:");
				ShowPlayerDialog(playerid, 2060, DIALOG_STYLE_INPUT, "Menu telefonu", nowykontakt, "Wyslij", "Anuluj");
				return 1;
			}
			if(WybranyNumer[playerid] == 0)
			{
			    ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Problem z nawiazaniem polaczenia...", "Menu", "");
				Mobile[playerid] = 255;
				return 1;
			}
			Loop(i)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == WybranyNumer[playerid])
					{
						giveplayerid = i;
					}
				}
			}
			/*if(giveplayerid < 0)
			{
			    ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Problem z nawiazaniem polaczenia...", "Menu", "");
				Mobile[playerid] = 255;
				return 1;
			}*/
   			Mobile[playerid] = giveplayerid;
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pTelefonOnline] == 0)
			        {
			            ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Problem z nawiazaniem polaczenia... witam", "Menu", "");
						Mobile[playerid] = 255;
						return 1;
			        }
					if(PlayerInfo[playerid][pPnumber] > 0)
					{
					    new giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* %s wyciaga swój telefon z kieszeni, odczytuje wiadomosc tekstowa, po czym..", giveplayer);
						ProxDetector(30.0, giveplayerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
                        format(string, sizeof(string), ".. chowa swój telefon spowrotem do kieszeni.");
						ProxDetector(30.0, giveplayerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					    if(PlayerInfo[playerid][pZastrzezony] == 0)
					    {
						format(string, sizeof(string), " {FFFF00}Wiadomosc SMS: {FFFFFF}%s{FFFF00}, nadawca: %d !", inputtext, PlayerInfo[playerid][pPnumber]);
						}
						else
						{
						    format(string, sizeof(string), " {FFFF00}Wiadomosc SMS: {FFFFFF}%s{FFFF00}, numer: zastrzezony !", inputtext);
						}
						Thing[SelectedItem0[giveplayerid]][t_used] = 0;
						SelectedItem0[giveplayerid] = 0;
						ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Wiadomosc tekstowa zostala wyslana !", "Menu", "");
						//ShowPlayerDialog(giveplayerid, 999, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Otrzymales nowa wiadomosc tekstowa !", "Ackeptuj", "");
						SCM(giveplayerid, COLOR_GREEN, "Nowy SMS!");
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
						SendClientMessage(playerid,  COLOR_YELLOW, string);
						//PlayerInfo[playerid][pDoladowanie] -= 1;
			           	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			           	if(PlayerInfo[giveplayerid][pTrybCichy] == 0)
			           	{
				           	if(PlayerInfo[giveplayerid][pDzwiekSMS] == 1)
						    {
						        PlayerPlaySound(giveplayerid, 1058, 0.0, 0.0, 0.0);
						    }
						    if(PlayerInfo[giveplayerid][pDzwiekSMS] == 2)
						    {
						        PlayerPlaySound(giveplayerid, 1057, 0.0, 0.0, 0.0);
						    }
					    }
			           	Mobile[playerid] = 255;
			           	PlayerInfo[playerid][pSpeaker] = 0;
						return 1;
					}
				}
				return 1;
			}
			ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Brak zasiegu !", "Menu", "");
			Mobile[playerid] = 255;
		}
		else
		{
   			GetPlayerName(playerid, name, sizeof(name));
			format(string, sizeof(string), "* %s chowa swój telefon do kieszeni.", name);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			Thing[SelectedItem0[playerid]][t_used] = 0;
			Mobile[playerid] = 255;
			SelectedItem0[playerid] = 0;
		}
		return 1;
	}
	if(dialogid == 2061)
	{
	    if(response)
		{
		    new giveplayerid = -1;
		    if(strval(inputtext) == 0)
		    {
		        ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FF500F}Wprowadzony numer jest nieprawidlowy !", "Menu", "");
				return 1;
		    }
			/*if(PlayerInfo[playerid][pDoladowanie] == 0)
			{
			    ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Nie masz nic na koncie !", "Menu", "");
				return 1;
			}*/
			if(Mobile[playerid] != 255)
			{
				ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Jestes podczas telefonowania !", "Menu", "");
				return 1;
			}
            Loop(i)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == strval(inputtext))
					{
					    //SendClientMessageToAll(COLOR_GREEN, "It's Works!");
						giveplayerid = i;
					}
				}
			}
			/*if(strval(inputtext) == 911)
			{
			    GetPlayerName(playerid, name, sizeof(name));
				format(string, sizeof(string), "* %s wykreca numer na telefonie i wykonuje polaczenie.", name);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				SendClientMessage(playerid,  COLOR_GREY, "  Twój rozmówca odebral telefon ! Do rozmowy uzywaj chatu glównego !");
				SendClientMessage(playerid, -1, "{8CAFCD}Centrala: {FFFFFF}Dzien dobry, z kim polaczyc? '{FFFF00}Policja{FFFFFF}', '{FFFF00}pogotowie{FFFFFF}' czy '{FFFF00}straz{FFFFFF}'?");
				Mobile[playerid] = 911;
				return 1;
			}
			if(strval(inputtext) == 666)
			{
			    GetPlayerName(playerid, name, sizeof(name));
				format(string, sizeof(string), "* %s wykreca numer na telefonie i wykonuje polaczenie.", name);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				SendClientMessage(playerid,  COLOR_GREY, "  Twój rozmówca odebral telefon ! Do rozmowy uzywaj chatu glównego !");
				SendClientMessage(playerid, -1, "{8CAFCD}Centrala: {FFFFFF}Dzien dobry, tutaj biuro Colucci Transport Corporation.");
				SendClientMessage(playerid, -1, "{8CAFCD}Centrala: {FFFFFF}Czy chce pan wezwac taksówke? '{FFFF00}Tak{FFFFFF}' czy '{FFFF00}nie{FFFFFF}'?");
				Mobile[playerid] = 950;
				return 1;
			}
			if(strval(inputtext) == 777)
			{
			    if(PlayerInfo[playerid][pLeader] == 0)
			    {
			        return SendClientMessage(playerid, COLOR_GREY, "   Problem z nawiazaniem polaczenia !");
			    }
			    GetPlayerName(playerid, name, sizeof(name));
				format(string, sizeof(string), "* %s wykreca numer na telefonie i wykonuje polaczenie.", name);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				SendClientMessage(playerid,  COLOR_GREY, "  Twój rozmówca odebral telefon ! Do rozmowy uzywaj chatu glównego !");
				SendClientMessage(playerid, -1, "{8CAFCD}Centrala: {FFFFFF}Dzien dobry, tutaj centrum skladania zamówien.");
				SendClientMessage(playerid, -1, "{8CAFCD}Centrala: {FFFFFF}Czy chce pan zamówic towary? '{FFFF00}Tak{FFFFFF}' czy '{FFFF00}nie{FFFFFF}'?");
				Mobile[playerid] = 960;
				return 1;
			}*/
			if(giveplayerid < 0)
			{
			    ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FF500F}Wprowadzony numer jest nieprawidlowy !", "Menu", "");
			    return 1;
			}
			Mobile[playerid] = giveplayerid;
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pTelefonOnline] == 0)
			        {
			            ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Abonent jest tymczasowo niedostepny !", "Menu", "");
			            return 1;
			        }
        			if(Mobile[giveplayerid] == 255)
					{
					    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
						SCM(giveplayerid, COLOR_GREEN, "Twój telefon dzwoni! Uzyj /odbierz aby odebrac!");
						//ShowPlayerDialog(giveplayerid, 999, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Twój telefon dzwoni ! Uzyj /od aby odebrac !", "Akceptuj", "");
						PlayerPlaySound(giveplayerid, 1076, 0.0, 0.0, 0.0);
						new name2[20];
						GetPlayerName(giveplayerid, name2, sizeof(name2));
						GetPlayerName(playerid, name, sizeof(name));
						format(string, sizeof(string), "* %s wykreca numer na telefonie i wykonuje polaczenie.", name);
						ProxDetector(20.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						format(string, sizeof(string), "* Telefon %s zaczyna dzwonic.", name2);
						if(PlayerInfo[giveplayerid][pTrybCichy] == 0)
						{
							if(PlayerInfo[giveplayerid][pDzwonek] == 1)
						    {
						        PlayerPlaySound(giveplayerid, 1076, 0.0, 0.0, 0.0);
						    }
						    if(PlayerInfo[giveplayerid][pDzwonek] == 2)
						    {
						        PlayerPlaySound(giveplayerid, 1187, 0.0, 0.0, 0.0);
						    }
						    if(PlayerInfo[giveplayerid][pDzwonek] == 3)
						    {
						        PlayerPlaySound(giveplayerid, 1185, 0.0, 0.0, 0.0);
						    }
						    if(PlayerInfo[giveplayerid][pDzwonek] == 4)
						    {
						        PlayerPlaySound(giveplayerid, 1183, 0.0, 0.0, 0.0);
						    }
						    if(PlayerInfo[giveplayerid][pDzwonek] == 5)
						    {
						        PlayerPlaySound(giveplayerid, 1097, 0.0, 0.0, 0.0);
						    }
						    if(PlayerInfo[giveplayerid][pDzwonek] == 6)
						    {
						        PlayerPlaySound(giveplayerid, 1068, 0.0, 0.0, 0.0);
						    }
						    if(PlayerInfo[giveplayerid][pDzwonek] == 7)
						    {
						        PlayerPlaySound(giveplayerid, 1062, 0.0, 0.0, 0.0);
						    }
						    mojeconnection[playerid] = SetTimerEx("EndOfConnection", 20000, 0, "i", playerid);
						}
						ProxDetector(20.0, giveplayerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						CellTime[playerid] = 1;
                        return 1;
					}
					else
					{
						ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Wybrany abonament jest tymczasowo nieosiagalny !", "Menu", "");
						Mobile[playerid] = 255;
						return 1;
					}
				}
				return 1;
			}
			ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Wybrany abonament jest tymczasowo nieosiagalny !", "Menu", "");
			Mobile[playerid] = 255;
			return 1;
		}
		else
		{
      		GetPlayerName(playerid, name, sizeof(name));
			format(string, sizeof(string), "* %s chowa swój telefon do kieszeni.", name);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			Thing[SelectedItem0[playerid]][t_used] = 0;
			Mobile[playerid] = 255;
			SelectedItem0[playerid] = 0;
		}
	    return 1;
	}
	if(dialogid == 2058)
	{
        if(response)
		{
		    new giveplayerid = -1;
			if(strlen(inputtext) < 3)
			{
			    new nowykontakt[128];
				format(nowykontakt, sizeof(nowykontakt), "                         {FF500F}Wiadomosc jest za krótka !\n{FFFFFF}Wprowadz tekst wiadomosci, która ma zostac wyslana:");
				ShowPlayerDialog(playerid, 2058, DIALOG_STYLE_INPUT, "Menu telefonu", nowykontakt, "Wyslij", "Anuluj");
				return 1;
			}
			if(strlen(inputtext) > 54)
			{
			    new nowykontakt[128];
				format(nowykontakt, sizeof(nowykontakt), "                           {FF500F}Wiadomosc jest za dluga !\n{FFFFFF}Wprowadz tekst wiadomosci, która ma zostac wyslana:");
				ShowPlayerDialog(playerid, 2058, DIALOG_STYLE_INPUT, "Menu telefonu", nowykontakt, "Wyslij", "Anuluj");
				return 1;
			}
			new phonenumb = WybranyNumer[playerid];
			if(phonenumb == 0)
			{
				new nowykontakt[256];
				format(nowykontakt, sizeof(nowykontakt), "{FF500F} Podany numer jest nieprawidlowy !\n{FFFFFF}Wprowadz numer telefonu odbiorcy:");
				ShowPlayerDialog(playerid, 2059, DIALOG_STYLE_INPUT, "Menu telefonu", nowykontakt, "Akceptuj", "Anuluj");
				return 1;
			}
			Loop(i)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb)
					{
						giveplayerid = i;
					}
				}
			}
			if(giveplayerid < 0)
			{
			    ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FF500F}Wprowadzony numer jest nieprawidlowy !", "Menu", "");
			    return 1;
			}

			Mobile[playerid] = giveplayerid;
			if(IsPlayerConnected(giveplayerid))
			{
       		    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pTelefonOnline] == 0)
			        {
			            ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Problem z nawiazaniem polaczenia !", "Menu", "");
                        Mobile[playerid] = 255;
						return 1;
			        }
					if(PlayerInfo[playerid][pPnumber] > 0)
					{
					    new giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* %s wyciaga swój telefon z kieszeni, odczytuje wiadomosc tekstowa, po czym..", giveplayer);
						ProxDetector(30.0, giveplayerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
                        format(string, sizeof(string), "             .. chowa swój telefon spowrotem do kieszeni.");
						ProxDetector(30.0, giveplayerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						Thing[SelectedItem0[giveplayerid]][t_used] = 0;
						SelectedItem0[giveplayerid] = 0;
					    if(PlayerInfo[playerid][pZastrzezony] == 0)
					    {
							format(string, sizeof(string), " {FFFF00}Wiadomosc SMS: {FFFFFF}%s{FFFF00}, nadawca: %d !", inputtext, PlayerInfo[playerid][pPnumber]);
						}
						else
						{
         				    format(string, sizeof(string), " {FFFF00}Wiadomosc SMS: {FFFFFF}%s{FFFF00}, numer: zastrzezony !", inputtext);
						}
						ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Wiadomosc tekstowa zostala wyslana !", "Menu", "");
                        //ShowPlayerDialog(giveplayerid, 999, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Otrzymales nowa wiadomosc tekstowa !", "Ackeptuj", "");
						SCM(giveplayerid, COLOR_GREEN, "Nowy SMS!");
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
						SendClientMessage(playerid,  COLOR_YELLOW, string);
						//PlayerInfo[playerid][pDoladowanie] -= 1;
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						if(PlayerInfo[giveplayerid][pTrybCichy] == 0)
					   	{
					       	if(PlayerInfo[giveplayerid][pDzwiekSMS] == 1)
						    {
						        PlayerPlaySound(giveplayerid, 1058, 0.0, 0.0, 0.0);
						    }
						    if(PlayerInfo[giveplayerid][pDzwiekSMS] == 2)
						   	{
						        PlayerPlaySound(giveplayerid, 1057, 0.0, 0.0, 0.0);
						    }
						}
						Mobile[playerid] = 255;
						PlayerInfo[playerid][pSpeaker] = 0;
						return 1;
					}
				}
				return 1;
			}
			ShowPlayerDialog(playerid, 2057, DIALOG_STYLE_MSGBOX, "Menu telefonu", "{FFFFFF}Brak zasiegu !", "Menu", "");
		}
		else
		{
      		GetPlayerName(playerid, name, sizeof(name));
			format(string, sizeof(string), "* %s chowa swój telefon do kieszeni.", name);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			Thing[SelectedItem0[playerid]][t_used] = 0;
			Mobile[playerid] = 255;
			SelectedItem0[playerid] = 0;
		}
		return 1;
	}
	switch(dialogid) {
        case DIALOG_SONGMP3:
        {
            if(!response) return StopAudioStreamForPlayer(playerid), DeletePVar(playerid, "mp3");
            if(strfind(inputtext,"www.youtube.com",true) == -1) return SendClientMessage(playerid, COLOR_GREY, "Wpisuj tylko linki z youtube!"), ShowPlayerDialog(playerid, DIALOG_SONGMP3, DIALOG_STYLE_INPUT, "Twoje MP3", "Wpisz link z YOUTUBE - pe³ny link np. https://www.youtube.com/watch?v=LwZ3CijMsNY", "Ok", "Zatrzymaj");
            PlayYoutubeVideoFor(inputtext, playerid);
			SCM(playerid, COLOR_LIGHTBLUE, "W³¹czy³em piosenkê!");
			SetPVarInt(playerid, "mp3", 1);
			return 1;
        }
			case DIALOG_SKIN: {
				if(!response) return 1;
				new id = listitem;
				if(PlayerInfo[playerid][pSkins][id] == -1) return SCM(playerid, COLOR_GREY, "Nie posiadasz ubrania na tym miejscu!");
				ShowPlayerDialog(playerid, DIALOG_SKIN+1, DIALOG_STYLE_MSGBOX, "Twoje ubrania", "Wybierz czynnosci które chcesz wykonac:", "Ubierz sie", "Wywal");
				SetPVarInt(playerid, "skin", id);
				//format(string, sizeof(string), "ID: %d", id);
				//SCM(playerid, COLOR_BIZ, string);
				//string = "";
			}
	
			case DIALOG_SKIN+1: {
				new id = PlayerInfo[playerid][pSkins][GetPVarInt(playerid, "skin")];
				//format(string, sizeof(string), "ID: %d", id);
				//SCM(playerid, COLOR_RED, string);
				switch(response) {
				case 0: {
				if(total_skins(playerid) == 1) return SCM(playerid, COLOR_GREY, "Nie mo¿esz tego zrobiæ poniewa¿ musisz mieæ min. 1 skina.");
				//if(GetPVarInt(playerid, "skin") == 0) return SCM(playerid, COLOR_GREY, "Podstawowego skina nie mozesz wywalic!");
				if (GetPlayerSkin(playerid) == id) return SCM(playerid, COLOR_GREY, "Nie mo¿esz wywaliæ ubranego skina!");
						PlayerInfo[playerid][pSkins][GetPVarInt(playerid, "skin")] = -1;
						save_skin(playerid);
						format(string, sizeof(string), "* %s wyrzuca ubranie.", GetName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						SCM(playerid, COLOR_YELLOW, "Ubranie wyrzucone!");
					}
						case 1: {
						PlayerInfo[playerid][pChar] = id;
						SetPlayerSkinEx(playerid, id);
						UpdateVar(playerid, "CChar", id);
						SCM(playerid, COLOR_GREY, "Ubranie zalozone!");
						format(string, sizeof(string), "* %s ubiera sie w nowe ciuchy.", GetName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					}
				}
					DeletePVar(playerid, "skin");
			}
		case DIALOG_BID: {
			if(!response) return 1;
			if(Licitatie == 0) return SendClientMessage(playerid, -1, "Nie ma aktywnej licytacji!");
			new suma = SelectedMoney[playerid];
			if(GetPlayerCash(playerid) < TotalBani) return SendClientMessage(playerid, -1, "Nie masz wystarczajaco duzo pieniedzy!");
			if(GetPlayerCash(playerid) < suma) return SendClientMessage(playerid, -1, "Nie masz wystarczajaco duzo pieniedzy!");
			if(suma < TotalBani+5000 && TotalBani != 0) {
				format(string, sizeof(string), "Suma invalida! Poti licita minim $%s.", FormatNumber(TotalBani+5000));
				SCM(playerid, COLOR_GREY, string);
				return 1;
			}				
			TotalBani = suma;
			TotalMoney[playerid] = suma;
			LastPlayer = playerid;
			if(toglicitatie[playerid] == 0) {
				toglicitatie[playerid] = 1;
				SendClientMessage(playerid, COLOR_YELLOW, "Server-ul ti-a Aktywuj automat Opcjea de a vedea mesajele de la licitatie.");
				UpdateVar(playerid, "TogLicitatie", 1);
			}
			format(string, sizeof(string), "[BID] %s a licitat suma de $%s.", GetName(playerid), FormatNumber(suma));
			WiadomoscLicytacja(0x483d8bFF, string);	
		}		
		case DIALOG_CHECKPOINT: {
			if(!response) return 1;			
			if(CP[playerid] == 50) return SCM(playerid,COLOR_GREY, "To punkt kontrolny dla rabusiów.");
			if(CP[playerid] >= 100 && CP[playerid] <= 119) return SCM(playerid,COLOR_WHITE,"Acest checkpoint nu poate fi sters deoarece este dla DMV!");
			if(JobWorking[playerid] == 1) return SCM(playerid,COLOR_GREY, "Foloseste /stopwork dla a nu mai munci!");
			if(CP[playerid] != 0)
			{
		  		DisablePlayerCheckpoint(playerid);
				SCM(playerid,COLOR_WHITE,"Czerwony punkt zostal pomyslnie usuniety.");
				CP[playerid] = 0;
				targetfind[playerid] = -1;
			}		
		}
		
		case D_EDIT: {
		//new lStr[1024];
		new carid = GetPlayerVehicleID(playerid), Float: Pos[3], Float: Angle, szQuery[256], model;
			if(!response) return 1;			
			 switch(listitem)
        {
            case 1:
            {
				GetVehiclePos(carid, Pos[0], Pos[1], Pos[2]);
				GetVehicleZAngle(carid, Angle);
				ServerVehicles[carid][vLocation][0] = Pos[0];
				ServerVehicles[carid][vLocation][1] = Pos[1];
				ServerVehicles[carid][vLocation][2] = Pos[2];
				ServerVehicles[carid][vAngle] = Angle;
				model = ServerVehicles[carid][vModel];
				printf("%d", model);
				DestroyVehicle(carid);
				CreateVehicleEx(model, ServerVehicles[carid][vLocation][0], ServerVehicles[carid][vLocation][1], ServerVehicles[carid][vLocation][2], ServerVehicles[carid][vAngle], ServerVehicles[carid][vColor][0], ServerVehicles[carid][vColor][1], -1);
				printf("%d", model);
				SetVehicleNumberPlate(carid, ServerVehicles[carid][vNumberPlate]);
				ChangeVehicleColor(carid, ServerVehicles[carid][vColor][0], ServerVehicles[carid][vColor][1]);
				PutPlayerInVehicle(playerid, carid, 0);
				format(string, sizeof(string), "Pojazd zostal pomyslnie przeparkowany (UUID: %d). %d", ServerVehicles[carid][vuuid], ServerVehicles[carid][vModel]);
				SCM(playerid, COLOR_YELLOW, string);
				format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET `LocationX` = '%f', `LocationY` = '%f', `LocationZ` = '%f', `Angle` = '%f' WHERE `id` = '%d'", Pos[0], Pos[1], Pos[2], Angle, ServerVehicles[carid][vuuid]);
				mysql_query(SQL, szQuery);
				SendClientMessage(playerid, COLOR_YELLOW, "Pomyslnie przeparkowales ten pojazd");
				Silnik[carid] = 0;
				Swiatla[carid] = 0;
				Maska[carid] = 0;
				Bagaznik[carid] = 0;
            }
			case 2: ShowPlayerDialog(playerid, D_EDIT_PLATE, DIALOG_STYLE_INPUT, "Tablica rejestracyjna:", "Wpisz nowa tablice.", "Ok", "Anuluj");
			case 3: {ShowPlayerDialog(playerid, D_EDIT_OPIS, DIALOG_STYLE_INPUT, "Opis pojazdu:", "Wpisz nowa opis.", "Ok", "Anuluj");}
			case 4: {
			ShowPlayerDialog(playerid, D_EDIT_OPIS, DIALOG_STYLE_INPUT, "Kolor1 pojazdu:", "Wpisz ID koloru 1:", "Ok", "Anuluj");
			}
			case 5: {
			ShowPlayerDialog(playerid, D_EDIT_OPIS, DIALOG_STYLE_INPUT, "Kolor2 pojazdu:", "Wpisz ID koloru 2:", "Ok", "Anuluj");
			}
			case 6: {
			ShowPlayerDialog(playerid, D_EDIT_OPIS, DIALOG_STYLE_INPUT, "Frakcja pojazdu:", "Wpisz ID nowej frakcji:", "Ok", "Anuluj");
			}
			case 7: {
			ShowPlayerDialog(playerid, D_EDIT_OPIS, DIALOG_STYLE_INPUT, "Model pojazdu:", "Wpisz ID nowego modelu:", "Ok", "Anuluj");
			}
			case 8:
            {
				DestroyDynamic3DTextLabel(ServerVehicles[carid][svOpis]);
				format(string, sizeof(string), "Pojazd zostal pomyslnie usuniety (UUID: %d).", ServerVehicles[carid][vuuid]);
				format(szQuery, sizeof(szQuery), "DELETE FROM `svehicles` WHERE `id`='%d'", ServerVehicles[carid][vuuid]);
				mysql_query(SQL, szQuery);
				SCM(playerid, COLOR_YELLOW, string);
				ServerVehicles[carid][vuuid] = 0;
				ServerVehicles[carid][vID] = 0;
				ServerVehicles[carid][vModel] = 0;
				ServerVehicles[carid][vLocation][0] = 0;
				ServerVehicles[carid][vLocation][1] = 0;
				ServerVehicles[carid][vLocation][2] = 0;
				ServerVehicles[carid][vAngle] = 0;
				ServerVehicles[carid][vColor][0] = 0;
				ServerVehicles[carid][vColor][1] = 0;
				ServerVehicles[carid][vFaction] = 0;
				ServerVehicles[carid][vRank] = 0;
				ServerVehicles[carid][vJob] = 0;
				ServerVehicles[carid][vSkill] = 0;
				GetVehiclePos(carid, Pos[0], Pos[1], Pos[2]);
				DestroyVehicle(carid);
				Silnik[carid] = 0;
				Swiatla[carid] = 0;
				Maska[carid] = 0;
				Bagaznik[carid] = 0;
				}
			}
			EditJob[playerid] = listitem;//zapisywanie id case do dialogu getujacego dane
		}
		case D_EDIT_PLATE: {
		new carid = GetPlayerVehicleID(playerid), Float: Pos[3], szQuery[256];
		if(!response) return 1;
		 switch(EditJob[playerid]) {
		case 2: {
		GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
		SetVehicleNumberPlate(carid, inputtext);
		SetVehicleToRespawn(carid);
		SetVehiclePos(carid, Pos[0], Pos[1], Pos[2]);
		PutPlayerInVehicle(playerid, carid, 0);
		format(ServerVehicles[carid][vNumberPlate], 32, inputtext);
		format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET `NumberPlate` = '%s' WHERE `id` = '%d'", inputtext, ServerVehicles[carid][vuuid]);
		mysql_query(SQL, szQuery);
		format(string, sizeof(string), "Pomyslnie zmieniles rejestracje pojazdu (UUID: %d) na [%s].", ServerVehicles[carid][vuuid], inputtext);
		SCM(playerid, COLOR_YELLOW, string);
		return 1;
					}
				}
			}
		case D_EDIT_OPIS: {
		new carid = GetPlayerVehicleID(playerid), szQuery[256];
		new veh = GetPlayerVehicleID(playerid);
		if(!response) return 1;
		 switch(EditJob[playerid]) {
		case 3: {
		if(strlen(inputtext) == strlen("usun"))
		{
	    if(ServerVehicles[carid][sOpis] > 0) DestroyDynamic3DTextLabel(ServerVehicles[carid][svOpis]);
		UpdateDynamic3DTextLabelText(ServerVehicles[carid][svOpis], COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_GREY, "Usunales opis samochodu!");
		ServerVehicles[carid][sOpis] = 0;
		format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET SIsOpis='0' WHERE id=%d LIMIT 1", ServerVehicles[carid][vuuid]);
		mysql_query(SQL, szQuery);
		return 1;
		} else {
	    if(ServerVehicles[carid][sOpis] > 0)
	    {	
	        ServerVehicles[carid][sOpis] = 1;
			mysql_real_escape_string(inputtext, validmysql);
			format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET SIsOpis='1', SOpis='%s' WHERE id=%d LIMIT 1", validmysql, ServerVehicles[carid][vuuid]);
			mysql_query(SQL, szQuery);
	        UpdateDynamic3DTextLabelText(ServerVehicles[carid][svOpis], COLOR_PURPLE, SMessage(inputtext));
	    }
	    else
	    {
			new Float:x, Float:y, Float:z;
			GetVehiclePos(GetPlayerVehicleID(playerid), x, y, z);
	        ServerVehicles[carid][sOpis] = 1;
			ServerVehicles[carid][svOpis] = CreateDynamic3DTextLabel(SMessage(inputtext),0xC2A2DAAA, x, y, z-0.2, 20.0, INVALID_PLAYER_ID, carid, 1, -1, -1, -1, 100.00);
			mysql_real_escape_string(inputtext, validmysql);
			format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET SIsOpis='1', SOpis='%s' WHERE id=%d LIMIT 1", validmysql, ServerVehicles[carid][vuuid]);
			mysql_query(SQL, szQuery);
		}
		format(string, sizeof(string), "Ustawiles opis pojazdu na:%s oraz id %d", SMessage(validmysql), ServerVehicles[carid][vuuid]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		return 1;
						}
					}
		case 4: {
			if(!IsNumeric(inputtext)) return SCM(playerid, COLOR_GREY, "Wpisz id koloru!");
			ServerVehicles[carid][vColor][0] = strval(inputtext);
			format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET Color1='%d' WHERE id=%d LIMIT 1", ServerVehicles[carid][vColor][0], ServerVehicles[carid][vuuid]);
			mysql_query(SQL, szQuery);
			format(string, sizeof(string), "Pomyslnie zmieniles KOLOR1 pojazdu (UUID: %d) na [%d].",ServerVehicles[carid][vuuid], ServerVehicles[carid][vColor][0]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			ChangeVehicleColor(veh, strval(inputtext), ServerVehicles[vehicleid][vColor][1]);
			return 1;
					}
		case 5: {
			if(!IsNumeric(inputtext)) return SCM(playerid, COLOR_GREY, "Wpisz id koloru!");
			ServerVehicles[carid][vColor][1] = strval(inputtext);
			format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET Color2='%d' WHERE id=%d LIMIT 1", ServerVehicles[carid][vColor][1], ServerVehicles[carid][vuuid]);
			mysql_query(SQL, szQuery);
			format(string, sizeof(string), "Pomyslnie zmieniles KOLOR2 pojazdu (UUID: %d) na [%d].",ServerVehicles[carid][vuuid], ServerVehicles[carid][vColor][1]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			ChangeVehicleColor(veh, ServerVehicles[vehicleid][vColor][0], strval(inputtext));
			return 1;
					}
		case 6: {
			if(!IsNumeric(inputtext)) return SCM(playerid, COLOR_GREY, "Wpisz id frakcji!");
			ServerVehicles[carid][vFaction] = strval(inputtext);
			format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET Faction='%d' WHERE id=%d LIMIT 1", ServerVehicles[carid][vFaction], ServerVehicles[carid][vuuid]);
			mysql_query(SQL, szQuery);
			format(string, sizeof(string), "Pomyslnie zmieniles FRAKCJE pojazdu (UUID: %d) na [%s].",ServerVehicles[carid][vuuid], GetFactionName(ServerVehicles[carid][vFaction]));
			SendClientMessage(playerid, COLOR_YELLOW, string);
			return 1;
					}					
		case 7: {
			if(!IsNumeric(inputtext)) return SCM(playerid, COLOR_GREY, "Wpisz id modelu!");
			ServerVehicles[carid][vModel] = strval(inputtext);
			format(szQuery, sizeof(szQuery), "UPDATE `svehicles` SET vModel='%d' WHERE id=%d LIMIT 1", ServerVehicles[carid][vModel], ServerVehicles[carid][vuuid]);
			mysql_query(SQL, szQuery);
			DestroyVehicle(carid);
			CreateVehicleEx(ServerVehicles[carid][vModel], ServerVehicles[carid][vLocation][0], ServerVehicles[carid][vLocation][1], ServerVehicles[carid][vLocation][2], ServerVehicles[carid][vAngle], ServerVehicles[carid][vColor][0], ServerVehicles[carid][vColor][1], -1);
			SetVehicleNumberPlate(carid, ServerVehicles[carid][vNumberPlate]);
			ChangeVehicleColor(carid, ServerVehicles[carid][vColor][0], ServerVehicles[carid][vColor][1]);
			format(string, sizeof(string), "Pomyslnie zmieniles MODEL pojazdu (UUID: %d) na [%d].",ServerVehicles[carid][vuuid], ServerVehicles[carid][vModel]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			return 1;
					}					
				}
			}
		case DIALOG_GPS: {
			if(!response) return 1;
			if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
			new szDialog[1000],szDialog2[1000];
			SetPVarInt(playerid, "listitem", listitem);
			switch(listitem) {
				case 0: {
					SetPlayerCheckpointEx(playerid, 1481.065917,-1771.223266, 18.795755, 5.0);
					CP[playerid] = 53;
					SCM(playerid,COLOR_YELLOW, "Serwer umiescil swój czerwony punkt w wybranej przez ciebie lokalizacji.");			
				}			
				case 1: {
					for(new i = 1; i < sizeof(BizzInfo); i++) {
						if(BizzInfo[i][bEntranceX] != 0) {
							format(szDialog, sizeof(szDialog), "[#%d] %s\n", i, BizzInfo[i][bMessage]);
							strcat(szDialog2, szDialog);
						}	
					}			
					ShowPlayerDialog(playerid, DIALOG_GPS+1, DIALOG_STYLE_LIST, "SERVER: GPS - Businesses", szDialog2, "Wybierz", "Anuluj");
				}
				case 2: {
					for(new i = 0; i < 15; i++) {
						format(szDialog, sizeof(szDialog), "%s\n", DynamicFactions[i+1][fName]);
						strcat(szDialog2, szDialog);
					}
					ShowPlayerDialog(playerid, DIALOG_GPS+1, DIALOG_STYLE_LIST, "SERVER: GPS - Factions", szDialog2, "Wybierz", "Anuluj");
				}
				case 3: {
					SetPlayerCheckpointEx(playerid, 1129.4088,-1454.9733,15.7969, 5.0);
					CP[playerid] = 53;
					SCM(playerid,COLOR_YELLOW, "Serwer umiescil Cie w Czerwonym punkcie w wybranej przez ciebie lokalizacji.");			
				}				
			}
		}

		case DIALOG_GPS+1: {
			if(!response) return 1;
			if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz to anulowac?", "Ok", "Wyjdz");
			new x = listitem+1;
			switch(GetPVarInt(playerid, "listitem")) {
				case 1: SetPlayerCheckpointEx(playerid, BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ], 5.0);
				case 2: SetPlayerCheckpointEx(playerid, DynamicFactions[x][extX], DynamicFactions[x][extY], DynamicFactions[x][extZ], 5.0);
			}
			CP[playerid] = 53;
			SCM(playerid,COLOR_YELLOW, "Serwer umiescil Cie w Czerwonym punkcie w wybranej przez ciebie lokalizacji.");			
		}	
	
		case DIALOG_HUD: {
			if(!response) return 1;
			SelectedHud[playerid] = listitem;
			if(listitem == 4 && PlayerInfo[playerid][pMember] == 0) return SCM(playerid, COLOR_GREY, "Nu faci parte dintr-o factiune!");
			switch(listitem) {
				case 0: ShowPlayerDialog(playerid,DIALOG_HUDSELECT,DIALOG_STYLE_LIST,"Opcje HUD: ¯ycie","{FF9E9E}Dezaktywacja\n{B8BFC2}Szary\n{FF0000}Czerwony\n{00FF2F}Zielony\n{0022FF}Niebieski\n{FFFB00}¯ó³ty\n{8000FF}Rózowy","Ok","Wróc");
				case 1: ShowPlayerDialog(playerid,DIALOG_HUDSELECT,DIALOG_STYLE_LIST,"Opcje HUD: Armura","{FF9E9E}Dezaktywacja\n{B8BFC2}Szary\n{FF0000}Czerwony\n{00FF2F}Zielony\n{0022FF}Niebieski\n{FFFB00}¯ó³ty\n{8000FF}Rózowy","Ok","Wróc"); 
				case 2: ShowPlayerDialog(playerid,DIALOG_HUDSELECT,DIALOG_STYLE_LIST,"Opcje HUD: FPS","{FF9E9E}Dezaktywacja\n{C8FF9E}Aktywacja","Ok","Wróc"); 						
				case 3: ShowPlayerDialog(playerid,DIALOG_HUDSELECT,DIALOG_STYLE_LIST,"Opcje HUD: Postep levelowy","{FF9E9E}Dezaktywacja\n{B8BFC2}Szary\n{FF0000}Czerwony\n{00FF2F}Zielony\n{0022FF}Niebieski\n{FFFB00}¯ó³ty\n{8000FF}Rózowy","Ok","Wróc"); 
				case 4: ShowPlayerDialog(playerid,DIALOG_HUDSELECT,DIALOG_STYLE_LIST,"Opcje HUD: Ilosc reportów","{FF9E9E}Dezaktywacja\n{B8BFC2}Szary\n{FF0000}Czerwony\n{00FF2F}Zielony\n{0022FF}Niebieski\n{FFFB00}¯ó³ty\n{8000FF}Rózowy","Ok","Wróc"); 	
			}
		}
		case DIALOG_HUDSELECT: {
			if(!response) return ShowPlayerHud(playerid);
 			
			switch(SelectedHud[playerid]) {
				case 0: {
					PlayerInfo[playerid][pShowHud][0] = listitem;
					format(query, sizeof(query), "UPDATE `users` SET `ShowHud`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pShowHud][0], PlayerInfo[playerid][pSQLID]);
					mysql_query(SQL, query);
				}
				case 1: {
					PlayerInfo[playerid][pShowHud][1] = listitem;
					format(query, sizeof(query), "UPDATE `users` SET `ShowHud1`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pShowHud][1], PlayerInfo[playerid][pSQLID]);
					mysql_query(SQL, query);					
				}		
				case 2: {
					PlayerInfo[playerid][pShowHud][2] = listitem;
					format(query, sizeof(query), "UPDATE `users` SET `ShowHud2`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pShowHud][2], PlayerInfo[playerid][pSQLID]);
					mysql_query(SQL, query);
				}
				case 3: {
					PlayerInfo[playerid][pShowHud][3] = listitem;
					if(listitem == 0) DestroyProgress(playerid, 0);
					else UpdateProgress(playerid, 0);
					format(query, sizeof(query), "UPDATE `users` SET `ShowHud3`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pShowHud][3], PlayerInfo[playerid][pSQLID]);
					mysql_query(SQL, query);					
				}		
				case 4: {
					PlayerInfo[playerid][pShowHud][4] = listitem;
					if(listitem == 0) DestroyProgress(playerid, 1);
					else UpdateProgress(playerid, 1);				
					format(query, sizeof(query), "UPDATE `users` SET `ShowHud4`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pShowHud][4], PlayerInfo[playerid][pSQLID]);
					mysql_query(SQL, query);
				}					
			}
			SendClientMessage(playerid, 0xFFADADFF, "Opcje HUD zaaktualizowane!");
		}	
		
		case DIALOG_WANTEDON: {
			if(!response) return 1;
			if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
			new id = SelectedPlayer[playerid][listitem];
			if(PlayerInfo[id][pWantedLevel] == 0) return SCM(playerid, COLOR_LGREEN, "Eroare: Acel player nu mai are wanted!");
			ShowMDC(playerid, id);			
			UsedFind[playerid] = 1;
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(id, X,Y,Z);
			SetPlayerCheckpointEx(playerid, X,Y,Z, 3.5);
			targetfind[playerid] = id;
			CP[playerid] = 43;
		}

		case DIALOG_BLACKLIST: {
			if(!response) return 1;
			if(listitem == 0) {
				ShowPlayerDialog(playerid, DIALOG_BLACKLIST+1, DIALOG_STYLE_INPUT, "Dodaj gracza:", "Type in the ID, the full or partial name of the player\nyou want to be players with.", "Submit", "Anuluj");
				return 1;
			}
			format(sName[playerid], 256, Selected[playerid][listitem-1]);
			new szTitle[256];
			format(szTitle, sizeof(szTitle), "%s", sName[playerid]);
			ShowPlayerDialog(playerid, DIALOG_BLACKLIST+2, DIALOG_STYLE_LIST, szTitle, "{FF0000}Sterge de pe blacklist", "Wybierz", "Wróc");
		}
		case DIALOG_BLACKLIST+1: {
			if(!response) return 1;
			new id;
			if(sscanf(inputtext, "u", id)) {
				if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GRAD2, "Acel player nu este online!");
			}
			else {
                if(id == playerid) return SendClientMessage(playerid, COLOR_GRAD2, "Nu te poti adauga pe tine in lista!");
				if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GRAD2, "Acel player nu este online!");
				if(IsInBlacklist(id, PlayerInfo[playerid][pLeader])) return SCM(playerid, -1, "Acel player este deja pe blacklist-ul acestei factiuni!");
				format(string, sizeof(string), "{FFB870}%s (%d) face acum parte din lista de blacklist a factiunii.", GetName(id), id);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "{FFB870}%s (%d) te-a adaugat pe blacklist-ul factiunii %s.", GetName(playerid), playerid, FactionName(PlayerInfo[playerid][pLeader]));
				SendClientMessage(id, COLOR_WHITE, string);
				format(string, sizeof(string), "INSERT INTO `blacklist` (`Userid`, `Name`, `Faction`, `Added`) VALUES ('%d', '%s', '%d', '%s')", PlayerInfo[id][pSQLID], PlayerInfo[id][pUsername], PlayerInfo[playerid][pLeader], PlayerInfo[playerid][pUsername]);
				mysql_tquery(SQL, string, "", "");
			}
		}

		case DIALOG_BLACKLIST+2: {
			if(!response) return 1;
			format(string, sizeof(string), "{FFB870}%s nu mai face parte din lista de blacklist.", sName[playerid]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			new userID = GetPlayerID( sName[playerid] );
			if(userID != INVALID_PLAYER_ID) {
				mysql_format(SQL,string,128,"DELETE FROM `blacklist` WHERE `Userid`='%d'",PlayerInfo[userID][pSQLID]);
				mysql_query(SQL, string);
				format(string, sizeof(string), "{FFB870}%s te-a scos de pe lista de blacklist a factiunii %s.", GetName(playerid), FactionName(PlayerInfo[playerid][pLeader]));
				SendClientMessage(userID, COLOR_WHITE, string);
			}
			else {
				mysql_format(SQL,string,128,"DELETE FROM `blacklist` WHERE `Name`='%s'",sName[playerid]);
				mysql_query(SQL, string);
			}
		}
	
		case DIALOG_DONATE: {
			if(!response) return 1;
            ShowPlayerDialog(playerid, DIALOG_DONATE2, DIALOG_STYLE_LIST, "Suma:", "5 Euro\n10 Euro\n25 Euro\n50 Euro\n100 Euro", "Wybierz", "Anuluj");
		}
		case DIALOG_DONATE2: {
		    if(!response) return 1;
		    new x;
		    switch(listitem) {
		        case 0: x = 5;
		        case 1: x = 10;
		        case 2: x = 25;
		        case 3: x = 50;
		        case 4: x = 100;
		    }
		    Doneaza[playerid] = x;
			format(string, 1024, "{FFFFFF}Iti multumim ca ai ales sa donezi!\n{FF2929}Nu uita! Introducerea unui cod/pin invalid este sanctionata!{FFFFFF}\n\n\
			Intordu in casuta de jos codul/pinul tau paysafe sau cod de reincarcare:\n{FFFF00}Mentineaza reteaua in care ai dat codu");
			ShowPlayerDialog(playerid, DIALOG_DONATE1, DIALOG_STYLE_INPUT, "Doneaza:", string, "Trimite", "Anuluj");
		}
		case DIALOG_DONATE1: {
			if(!response) return 1;
			/*if(strval(inputtext) < 10) {
				format(string, 1024, "{FFFFFF}Iti multumim ca ai ales sa donezi!\n{FF2929}Nu uita! Introducerea unui cod/pin invalid este sanctionata!{FFFFFF}\n\n\
				Intordu in casuta de jos codul/pinul tau paysafe sau cod de reincarcare:\n{FFFF00}Mentineaza reteaua in care ai dat codu");
				ShowPlayerDialog(playerid, DIALOG_DONATE1, DIALOG_STYLE_INPUT, "Doneaza:", string, "Trimite", "Anuluj");
				SCM(playerid, -1, "Codul/pinul trebuie sa aiba minim 10 caractere");
			    return 1;
			}*/
			PlayerTime7[playerid] = 15;
			
			new
			    szDate[256],
				Year, Month, Day, Hour, Minute, Second;

			getdate(Year, Month, Day);
			gettime(Hour, Minute, Second);

		    format(szDate, sizeof(szDate), "%02d/%02d/%d - %02d:%02d:%02d", Day, Month, Year, Hour, Minute, Second);
			mysql_format(SQL, query, 256, "INSERT INTO `donate` (`Player`, `Userid`, `Text`, `Date`, `Value`) VALUES ('%s', '%d', '%s', '%s', '%d')", PlayerInfo[playerid][pUsername], PlayerInfo[playerid][pSQLID], inputtext, szDate, Doneaza[playerid]);
			new Cache: result = mysql_query(SQL, query);
			//new i = cache_insert_id();
			cache_delete(result);

			format(string, 256, "Donatia ta a fost trimisa cu succes!");
			SCM(playerid, COLOR_YELLOW, string);
			format(string, 256, "Asteapta pana un administrator o sa verifice donatia. Poti folosi comanda /mydonations dla a vedea toate donatiile.");
			SCM(playerid, COLOR_YELLOW, string);
		}
	
	    case DIALOG_AHELP: {
	        if(!response) return 1;
			
			new szDialog[1024];
			new szTitle[256];
			format(szTitle, 256, "Admin %d Commands:", listitem);
			switch(listitem) {
			    case 0: {
			        if(PlayerInfo[playerid][pHelper] < 1) return SCM(playerid, -1, "Nu poti vedea comenzile de la acest nivel de helper!");
					SendClientMessage(playerid, COLOR_GRAD1, "/hc, /hduty, /nreply, /nskip, /ndelete, /checkhelp, /goto.");
			    }
			    case 1: {
			        if(PlayerInfo[playerid][pHelper] < 2) return SCM(playerid, -1, "Nu poti vedea comenzile de la acest nivel de helper!");
                    SendClientMessage(playerid, COLOR_GRAD1, "Helper 2: /spec, /kick.");
			    }
			    case 2: {
			        if(PlayerInfo[playerid][pHelper] < 3) return SCM(playerid, -1, "Nu poti vedea comenzile de la acest nivel de helper!");
			        SendClientMessage(playerid, COLOR_GRAD1, "/acceptevent");
			    }
			    case 3: {
			        if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, "Nu poti vedea comenzile de la acest nivel de admin!");
					SendClientMessage(playerid, COLOR_GRAD1, "/flip, /spec, /kick, /mute, /unmute, /check, /warn, /goto, /cc, /bigears, /rveh, /freeze, /o, /disarm, /jail.");
					SendClientMessage(playerid, COLOR_GRAD1, "/slap, /gethere, /getip, /togfind, /jailo, /managearea, /respawn, /gsearch, /vsearch, /slapcar.");					
					SendClientMessage(playerid, COLOR_GRAD1, "/cc, /specoff, /setvw, /unfreeze, /setint, /setskin.");
			    }
			    case 4: {
			        if(PlayerInfo[playerid][pAdmin] < 2) return SCM(playerid, -1, "Nu poti vedea comenzile de la acest nivel de admin!");
					SendClientMessage(playerid, COLOR_GRAD1, "/oplace, /healrange, /fixveh, /checkgun, /getcar, /gotocar, /sethp, /setarmour, /spawncar, /despawncars, /checkspawncar, /despawncar, /givegun.");
			    }
			    case 5: {
			        if(PlayerInfo[playerid][pAdmin] < 3) return SCM(playerid, -1, "Nu poti vedea comenzile de la acest nivel de admin!");
					SendClientMessage(playerid, COLOR_GRAD1, "/gotomark, /rac, /mark, /healall.");
			    }
			    case 6: {
			        if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, -1, "Nu poti vedea comenzile de la acest nivel de admin!");
					SendClientMessage(playerid, COLOR_GRAD1, "/fuelcars, /unbanip, /unban, /unwarn, /weatherall, /skick, /unfrakcja(off).");
			    }
			    case 7: {
			        if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid, -1, "Nu poti vedea comenzile de la acest nivel de admin!");
					SendClientMessage(playerid, COLOR_GRAD1, "/setrankname, /setleader, /sethelper, /agl, /tod, /asellhouse, /asellbiz, /givealllevel, /giveallrp.");
			    }
			    case 8: {
			        if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, "Nu poti vedea comenzile de la acest nivel de admin!");
					SendClientMessage(playerid, COLOR_GRAD1, "/set, /restartgame, /serverpass, /servername, /editjob, /editclan, /deleteclan.");
					SendClientMessage(playerid, COLOR_GRAD1, "/createhouse, /addsafezone, /editsafezone, /editbizz, /edithouse, /givebiz, /givehouse, /licytacja.");
					SendClientMessage(playerid, COLOR_GRAD1, "/givemoney, /money, /givepp, /giveallmoney, /editvehicle, /vehicleplate, /vehiclepark, /giftpointsall.");
			    }
			}
			ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, szTitle, szDialog, "Anuluj", "");
	    }
		case DIALOG_EDITMOBILA: {
			if(!response) return 1;
			SlotSel[playerid] = listitem;
			ShowPlayerDialog(playerid, DIALOG_EDITMOBILA2, DIALOG_STYLE_MSGBOX, "Opcje:", "Co chcesz zrobic z tym obiektem?\nEdytowac/Stergi?", "Editeaza", "Sterge");
		}
		case DIALOG_EDITMOBILA2: {
		    new id = SelMobila[playerid][SlotSel[playerid]];
		    printf("id = %d", id);
		    EditedObjectID[playerid] = id;
		    EditHouse[playerid] = 2;
		    new obj2 = FurnitureInfo[id][fiObject];
			if(!response) {
				mysql_format(SQL,string,128,"DELETE FROM `fobjects` WHERE `ID`='%d'",id);
				mysql_query(SQL, string);
				SCM(playerid, COLOR_YELLOW, "Obiect sters!");
				DestroyDynamicObject(FurnitureInfo[id][fiObject]);
				FurnitureInfo[id][fiHouse] = 0;
			}
			else {
		        EditHouse[playerid] = 2;
		        SendClientMessage(playerid, COLOR_YELLOW, "Wybrane meble zostaly stworzone. Wszystko, co musisz zrobic, to wybrac pozycje!");
		        SendClientMessage(playerid, COLOR_YELLOW, "Aby przesunac kamere, nacisnij klawisz SPACJA i aby przesunac obiekt, kliknij te osie (X,Y,Z)");
		        EditDynamicObject(playerid, obj2);
			}
		}

		case DIALOG_FACTION: {
			if(!response) return 1;
			SelectedRank[playerid] = listitem;
			ShowPlayerDialog(playerid, DIALOG_FACTION1, DIALOG_STYLE_INPUT, "Raport system:", "Wpisz liczbe polecen, które chcesz wprowadzic czlonków tej rangi!", "Wybierz", "Wróc");
		}
		case DIALOG_FACTION1: {
			new ffID = PlayerInfo[playerid][pMember];
			if(!response) {
				format(string, sizeof(string), "Rank 1\t%d\nRank 2\t%d\nRank 3\t%d\nRank 4\t%d\nRank 5\t%d\nRank 6\t%d", FactionInfo[ffID][fRank1], FactionInfo[ffID][fRank2],
				FactionInfo[ffID][fRank3], FactionInfo[ffID][fRank4], FactionInfo[ffID][fRank5], FactionInfo[ffID][fRank6]);
			    ShowPlayerDialog(playerid, DIALOG_FACTION, DIALOG_STYLE_TABLIST, "Raport system:", string, "Wybierz", "Iesire");
			    return 1;
			}
			format(string, sizeof(string), "Liczba polecen, które czlonkowie rank %d musza przeslac, wynosi teraz: %d", SelectedRank[playerid]+1, strval(inputtext));
			SCM(playerid, -1, string);
			switch(SelectedRank[playerid]) {
			    case 0: FactionInfo[ffID][fRank1] = strval(inputtext);
			    case 1: FactionInfo[ffID][fRank2] = strval(inputtext);
			    case 2: FactionInfo[ffID][fRank3] = strval(inputtext);
			    case 3: FactionInfo[ffID][fRank4] = strval(inputtext);
			    case 4: FactionInfo[ffID][fRank5] = strval(inputtext);
			    case 5: FactionInfo[ffID][fRank6] = strval(inputtext);
			}
			format(query, sizeof(query), "UPDATE `factions` SET `Rank1`='%d', `Rank2`='%d', `Rank3`='%d', `Rank4`='%d', `Rank5`='%d', `Rank6`='%d' WHERE `ID`='%d'",
			FactionInfo[ffID][fRank1], FactionInfo[ffID][fRank2], FactionInfo[ffID][fRank3], FactionInfo[ffID][fRank4], FactionInfo[ffID][fRank5], FactionInfo[ffID][fRank6], ffID);
			mysql_query(SQL, query);
		}

		case DIALOG_FRIENDS: {
			if(!response) return 1;
			if(listitem == 0) {
				ShowPlayerDialog(playerid, DIALOG_FRIENDS+1, DIALOG_STYLE_INPUT, "Add friend:", "Wpisz ID-ul sau numele celui care vrei sa-l adaugi in lista ta de prieteni!", "Ok", "Wyjdz");
				return 1;
			}
			format(sName[playerid], 256, Selected[playerid][listitem-1]);
			new userid = GetPlayerID(sName[playerid]);
			new szTitle[256];
			format(szTitle, sizeof(szTitle), "%s", sName[playerid]);
			if(userid != INVALID_PLAYER_ID) // online
			{
				ShowPlayerDialog(playerid, DIALOG_FRIENDS+2, DIALOG_STYLE_LIST, szTitle, "Call\nSMS\n{FF0000}Remove Friend", "Wybierz", "Wróc");
			}
			else // offline
			{
				ShowPlayerDialog(playerid, DIALOG_FRIENDS+3, DIALOG_STYLE_LIST, szTitle, "{FF0000}Remove Friend", "Wybierz", "Wróc");
			}
		}
		case DIALOG_FRIENDS+1: {
			if(!response) return 1;
			new id;
			if(sscanf(inputtext, "u", id)) {
				if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GRAD2, "Acel player nu este online!");
			}
			else {
                if(id == playerid) return SendClientMessage(playerid, COLOR_GRAD2, "Nu te poti adauga pe tine in lista!");
				if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GRAD2, "Acel player nu este online!");
				new test, friends;
				new result[256];
				format(string, sizeof(string), "SELECT * FROM `friends` WHERE `friendID`='%d'", PlayerInfo[id][pSQLID]);
				new Cache: db = mysql_query (SQL, string);
				for ( new i, j = cache_get_row_count (); i != j; ++i )
				{
					friends++;
					cache_get_field_content( i, "AddBy", result ); test = strval( result );
					if(test == PlayerInfo[playerid][pSQLID]) return SendClientMessage(playerid, COLOR_WHITE, "Acest player este deja in lista ta de prieteni!");
				}
				if(friends == 25 && PlayerInfo[playerid][pPremiumAccount] == 0) return SendClientMessage(playerid, COLOR_GRAD2, "* Poti avea doar 25 prieteni fara cont premium!");
				if(friends == 50) return SendClientMessage(playerid, COLOR_GRAD2, "* Ai prea multi prieteni!");
				cache_delete( db );
				format(string, sizeof(string), "{FFB870}%s (%d) face acum parte din lista ta de prieteni.", GetName(id), id);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "{FFB870}%s (%d) te-a adaugat in lista sa de prieteni.", GetName(playerid), playerid);
				SendClientMessage(id, COLOR_WHITE, string);
				format(string, sizeof(string), "INSERT INTO `friends` (`friendID`, `friendName`, `AddBy`) VALUES ('%d', '%s', '%d')", PlayerInfo[id][pSQLID], PlayerInfo[id][pUsername], PlayerInfo[playerid][pSQLID]);
				mysql_tquery(SQL, string, "", "");
			}
		}

		case DIALOG_FRIENDS+2: {
			if(!response) return ShowPlayerFriends(playerid);
			new userid = GetPlayerID(sName[playerid]);
			if(!IsPlayerConnected(userid)) return 1;
			switch(listitem) {
				case 0: {
					if(PlayerInfo[playerid][pPnumber] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nu ai a cellphone!");
					foreach(Player, i)
					{
						if(PlayerInfo[i][pPnumber] == PlayerInfo[userid][pPnumber])
						{
							new id = i;
							if(PlayerInfo[id][pPnumber] == 0) return SendClientMessage(playerid, COLOR_GREY, "This player dont have a cellphone!");
							if(PhoneOnline[id] == 1) return SendClientMessage(playerid, COLOR_GREY, "Player's phone is offline!");
							Mobile[playerid] = id;
							if(Mobile[id] != 255) return SendClientMessage(playerid, COLOR_GREY, "That player is speaking with someone.");
							if(Mobile[id] == 255)
							{
								if(IsBlocked(id, playerid)) return SCM(playerid, COLOR_LGREEN, "Ten gracz Cie zablokowa3! Nie mo?esz sie z nim skontaktowaa.");
								if(IsBlocked(playerid, id)) return SCM(playerid, COLOR_LGREEN, "Zablokowales tego gracza! Nie mo?esz sie z nim skontaktowaa.");								
								format(string, sizeof(string), "Te suna %s cu numarul %s. Scrie '/pickup' dla a raspunde.", GetName(playerid), DecimalNumber(playerid));
								SendClientMessage(id, COLOR_YELLOW, string);
								format(string, sizeof(string), "%s scoate telefonul si scrie un numar.", GetName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								format(string, sizeof(string), "Lui %s ii suna telefonul.", GetName(id));
								ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
								return 1;
							}
						}
					}
				}
				case 1: {
					if(PlayerInfo[playerid][pPnumber] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nu ai a cellphone!");
					ShowPlayerDialog(playerid, DIALOG_FRIENDS+4, DIALOG_STYLE_INPUT, "Send SMS:", "Write the SMS text in the box below.", "Send", "Anuluj");
				}
				case 2: {
					mysql_format(SQL,string,128,"DELETE FROM `friends` WHERE `friendID`='%d'",PlayerInfo[userid][pSQLID]);
					mysql_query(SQL, string);
					format(string, sizeof(string), "{FFB870}%s nu mai face parte din lista ta de prieteni.", PlayerInfo[userid][pUsername]);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
			}
		}

		case DIALOG_FRIENDS+3: {
			if(!response) return ShowPlayerFriends(playerid);
			mysql_format(SQL,string,128,"DELETE FROM `friends` WHERE `friendName`='%s'",sName[playerid]);
			mysql_query(SQL, string);
			format(string, sizeof(string), "{FFB870}%s nu mai face parte din lista ta de prieteni.", sName[playerid]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}

		case DIALOG_FRIENDS+4: {
			if(!response) return 1;
			new userid = GetPlayerID(sName[playerid]);
			if(!IsPlayerConnected(userid)) return 1;
			foreach(Player, i)
			{
				if(PlayerInfo[i][pPnumber] == PlayerInfo[userid][pPnumber] && PlayerInfo[userid][pPnumber] != 0)
				{
					new id = i;
					if(PlayerInfo[id][pPnumber] == 0) return SendClientMessage(playerid, COLOR_GREY, "This player dont have a cellphone!");
					if(PhoneOnline[id] == 1) return SendClientMessage(playerid, COLOR_GREY, "Player's phone is offline!");
					if(IsBlocked(id, playerid)) return SCM(playerid, COLOR_LGREEN, "Ten gracz Cie zablokowa3! Nie mo?esz sie z nim skontaktowaa.");
					if(IsBlocked(playerid, id)) return SCM(playerid, COLOR_LGREEN, "Zablokowales tego gracza! Nie mo?esz sie z nim skontaktowaa.");					
					format(string, sizeof(string), "SMS from %s ({FFFFFF}%s{FFFF00}): %s",GetName(playerid),DecimalNumber(playerid), inputtext);
					SendClientMessage(id, COLOR_YELLOW, string);
					format(string, sizeof(string), "SMS to %s ({FFFFFF}%s{FFFF00}): %s",GetName(id),DecimalNumber(id),inputtext);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					PlayerPlaySound(id, 1052, 0.0, 0.0, 10.0);
					Reply[id] = playerid;
					return 1;
				}
			}
		}

		case DIALOG_EDITSF: {
			if(!response) return 1;
			pSelectSFZ[playerid] = listitem+1;
			format(string, sizeof(string), "Pozycja\t(%f, %f, %f)\nRanga\t%d", SafeZone[listitem+1][szX], SafeZone[listitem+1][szY], SafeZone[listitem+1][szZ], SafeZone[listitem+1][szRange]);
			//new title[256];
			format(title, sizeof(title), "Edycja safe zone %d", listitem+1);
		    ShowPlayerDialog(playerid, DIALOG_EDITSF1, DIALOG_STYLE_TABLIST, title, string, "Ok", "Iesire");
		}
		case DIALOG_EDITSF1: {
			if(!response) return 1;
			switch(listitem) {
			    case 0: ShowPlayerDialog(playerid, DIALOG_EDITSF2, DIALOG_STYLE_INPUT, "Position:", "Wpisz putin mai jos valoarea care vrei sa o aiba aceasta variabila.\nUzycie: x, y, z", "Ok", "Anuluj");
				case 1: ShowPlayerDialog(playerid, DIALOG_EDITSF2, DIALOG_STYLE_INPUT, "Range:", "Wpisz putin mai jos valoarea care vrei sa o aiba aceasta variabila.", "Ok", "Anuluj");
			}
			EditJob[playerid] = listitem;
		}

		case DIALOG_EDITSF2: {
			if(!response) return 1;
			new job = pSelectSFZ[playerid];
			new amount = strval(inputtext);
		    switch(EditJob[playerid]) {
				case 0: {
					new Float: Pos[3];
					if(sscanf(inputtext, "fff", Pos[0], Pos[1], Pos[2])) return SendClientMessage(playerid, COLOR_GREY, "Invalid syntax!");
					SafeZone[job][szX] = Pos[0];
					SafeZone[job][szY] = Pos[1];
					SafeZone[job][szZ] = Pos[2];
					format(string, sizeof(string), "Ai modificat 'Pozitiile' la safezone-ul cu ID-ul %d, in: %f, %f, %f.", job, Pos[0], Pos[1], Pos[2]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL, query, sizeof(query), "UPDATE `safezones` SET `X`='%f', `Y`='%f', `Z`='%f' WHERE `ID`='%d'", Pos[0], Pos[1], Pos[2], job);
					mysql_tquery(SQL, query, "", "");
				}
				case 1: {
					SafeZone[job][szRange] = amount;
					format(string, sizeof(string), "Ai modificat 'Raza' la safezone-ul cu ID-ul %d, in: %d.", job, amount);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL, query, sizeof(query), "UPDATE `safezones` SET `Range`='%d' WHERE `ID`='%d'", amount, job);
					mysql_tquery(SQL, query, "", "");
				}
			}
		}

		case DIALOG_RESETKM: {
			if(!response) return ShowShop(playerid);
			if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "Nie jeste w pojezdzie!");
		    if(PlayerInfo[playerid][pPremiumPoints] < 100) return SCM(playerid, COLOR_GREY, "Ai nevoie de 20 puncte premium dla a lua acest produs.");
			PlayerInfo[playerid][pPremiumPoints] -= 100;
			Update(playerid, pPremiumPointsx);
			CarInfo[pCar[playerid]][KM] = 0;
			format(query, sizeof(query), "SELECT `cars` SET `Km`='0' WHERE `ID`='%d'", pCar[playerid]);
			mysql_query(SQL, query);
			SCM(playerid, COLOR_GOLD, "Gratulacje! Zresetowales przebieg swojego pojazdu.");
		}

		case DIALOG_MEMBERS: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pRank] < 6) return 1;
			format(sName[playerid], 256, Selected[playerid][listitem]);
			new userID = GetPlayerID(sName[playerid]);
			if(userID != INVALID_PLAYER_ID)
			{
			    new giveplayer[25], sstring[256], id = userID;
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				if(PlayerInfo[id][pSleeping] == 1)
				{
					format(sstring, sizeof(sstring), "{FFFFCC}ID: (%d) %s | Poziom: %d | %s (Ranga %d) (AFK)",id,giveplayer,PlayerInfo[id][pLevel],NumeFactiune(PlayerInfo[id][pMember]),PlayerInfo[id][pRank]);
					SendClientMessage(playerid, COLOR_WHITE, sstring);
				}
				else
				{
					format(sstring, sizeof(sstring), "{FFFFCC}ID: (%d) %s | Poziom: %d | %s (Ranga %d)",id,giveplayer,PlayerInfo[id][pLevel],NumeFactiune(PlayerInfo[id][pMember]),PlayerInfo[id][pRank]);
					SendClientMessage(playerid, COLOR_WHITE, sstring);
				}
			}
			else
			{
				format(string, sizeof(string), "Pracownik: %s", sName[playerid]);
				ShowPlayerDialog(playerid, DIALOG_MEMBERS+1, DIALOG_STYLE_LIST, string, "Ranga\nFaction warn\nUn faction warn\nWyrzuc", "Wybierz", "Wróc");
			}
		}

		case DIALOG_MEMBERS+1: {
			new szQuery[256], str[256];
			if(!response) return ShowFactionMembers(playerid);
			if(PlayerInfo[playerid][pRank] < 6) return 1;
			new userID = GetPlayerID(sName[playerid]);
			if(userID != INVALID_PLAYER_ID) SendClientMessage(playerid, COLOR_GREY, "Ten gracz jest podlaczony.");
			switch(listitem) {
				case 0: {
					format(string, sizeof(string), "Jaka range chcesz dac %s?", sName[playerid]);
					ShowPlayerDialog(playerid, DIALOG_MEMBERS+2, DIALOG_STYLE_INPUT, "Daj range", string, "Ok", "Anuluj");
				}
				case 1: {
					format(szQuery, sizeof(szQuery), "SELECT * FROM `users` WHERE `name`='%s'", sName[playerid]);
					new Cache: result = mysql_query(SQL, szQuery);
					cache_get_field_content(0, "FWarn", string);
					new fw = strval(string);
					cache_delete(result);
					fw++;
					format(string, sizeof(string), "{00B8E6}I-ai dat lui %s (offline) un FW.", sName[playerid]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL,str,128,"UPDATE `users` SET `FWarn`='%d' WHERE `name`='%s' LIMIT 1",fw,sName[playerid]);
					mysql_tquery(SQL,str, "", "");
					if(fw >= 3)
					{
						format(string, sizeof(string), "* SYSTEM wyrzucil z frakcji %s, Powód 3/3 FW.", sName[playerid]);
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
						mysql_format(SQL,str,128,"UPDATE `users` SET `Member`='0',`Rank`='0',`FSkin`='0',`FPunish`='10',`FWarn`='0' WHERE `name`='%s' LIMIT 1",sName[playerid]);
						mysql_tquery(SQL,str, "", "");
					}
				}
				case 2: {
					format(szQuery, sizeof(szQuery), "SELECT * FROM `users` WHERE `name`='%s'", sName[playerid]);
					new Cache: result = mysql_query(SQL, szQuery);
					cache_get_field_content(0, "FWarn", string);
					new fw = strval(string);
					cache_delete(result);
					if(fw == 0) return SendClientMessage(playerid, COLOR_GREY, "Ten pracownik ma 0/3 faction warnów!");
					format(string, sizeof(string), "{00B8E6}Zdjales FW %s (offline).", sName[playerid]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL,str,128,"UPDATE `users` SET `FWarn`='%d' WHERE `name`='%s' LIMIT 1",fw-1,sName[playerid]);
					mysql_tquery(SQL,str, "", "");
				}
				case 3: {
					format(string, sizeof(string), "Wyrzucic %s?", sName[playerid]);
					ShowPlayerDialog(playerid, DIALOG_MEMBERS+3, DIALOG_STYLE_LIST, string, "Z fp\nBrak fp", "Ok", "Anuluj");
				}
			}
		}

		case DIALOG_MEMBERS+2: {
			new str[256];
			if(!response) return 1;
			if(PlayerInfo[playerid][pRank] < 6) return 1;
			new userID = GetPlayerID(sName[playerid]);
			if(userID != INVALID_PLAYER_ID) SendClientMessage(playerid, COLOR_GREY, "Acel player este conectat.");
			new rank = strval(inputtext);
			if(rank < 1 || rank > 6) return SendClientMessage(playerid, COLOR_GREY, "Zla ranga.");
			format(string, sizeof(string), "{00B8E6}* Zmieniles %s (offline) range na %d.", sName[playerid],rank);
			SendClientMessage(playerid, COLOR_WHITE, string);
			mysql_format(SQL, str,128,"UPDATE `users` SET `Rank`='%d' WHERE `name`='%s' LIMIT 1",rank,sName[playerid]);
			mysql_tquery(SQL, str, "", "");
		}

		case DIALOG_MEMBERS+3: {
			new str[256];
			if(!response) return 1;
			if(PlayerInfo[playerid][pRank] < 6) return 1;
			new userID = GetPlayerID(sName[playerid]);
			if(userID != INVALID_PLAYER_ID) SendClientMessage(playerid, COLOR_GREY, "Acel player este conectat.");
			switch(listitem) {
				case 0: { // with fp
					format(string, sizeof(string), "L-ai dat afara pe %s (offline) din factiune 40 FP.", sName[playerid]);
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					mysql_format(SQL,str,256,"UPDATE `users` SET `Member`='0',`Rank`='0',`FSkin`='0',`FPunish`='40',`FWarn`='0' WHERE `name`='%s' LIMIT 1",sName[playerid]);
					mysql_tquery(SQL,str, "", "");
				}
				case 1: { // without fp
					format(string, sizeof(string), "L-ai dat afara pe %s (offline) din factiunea fara FP.", sName[playerid]);
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					mysql_format(SQL,str,256,"UPDATE `users` SET `Member`='0',`Rank`='0',`FSkin`='0',`FPunish`='0',`FWarn`='0' WHERE `name`='%s' LIMIT 1",sName[playerid]);
					mysql_tquery(SQL,str, "", "");
				}
			}
		}
		case DIALOG_SELLCAR: {
			if(!response) return 1;
			new vsid = PlayerSellCar[playerid];
			if(CarInfo[vsid][Spawned] == 0) return 1;
			VehicleOwned[CarInfo[vsid][Spawned]] = CarInfo[vsid][Spawned];
			VehicleSQL[CarInfo[vsid][Spawned]] = vsid;
						
			new value;
			CheckVehicle(CarInfo[vsid][Spawned]);
			value = CarPriceValid(CarInfo[vsid][cModel]) / 2;
			GivePlayerCash(playerid, value);
			format(string, sizeof(string), "Ai primit $%s dla ca ti-ai vandut vehiculul!",FormatNumber(value), "%%");
			SendClientMessage(playerid,COLOR_MONEY,string);
			if(strlen(CarInfo[vsid][cText]) >= 3) {
				DestroyDynamicObject(nameobject[CarInfo[vsid][Spawned]]);
			}	
			
			DestroyVehicle(CarInfo[vsid][Spawned]);		
							
			
			mysql_format(SQL, string, sizeof(string), "DELETE FROM cars WHERE ID=%d",vsid);
			mysql_tquery(SQL, string, "", "");

			if(PlayerInfo[playerid][pCarKey][0] == vsid) { PlayerInfo[playerid][pCarKey][0] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey1 = %d WHERE `name`='%s'",PlayerInfo[playerid][pCarKey][0],PlayerInfo[playerid][pUsername]); }
			if(PlayerInfo[playerid][pCarKey][1] == vsid) { PlayerInfo[playerid][pCarKey][1] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey2 = %d WHERE `name`='%s'",PlayerInfo[playerid][pCarKey][1],PlayerInfo[playerid][pUsername]); }
			if(PlayerInfo[playerid][pCarKey][2] == vsid) { PlayerInfo[playerid][pCarKey][2] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey3 = %d WHERE `name`='%s'",PlayerInfo[playerid][pCarKey][2],PlayerInfo[playerid][pUsername]); }
			if(PlayerInfo[playerid][pCarKey][3] == vsid) { PlayerInfo[playerid][pCarKey][3] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey4 = %d WHERE `name`='%s'",PlayerInfo[playerid][pCarKey][3],PlayerInfo[playerid][pUsername]); }
			if(PlayerInfo[playerid][pCarKey][4] == vsid) { PlayerInfo[playerid][pCarKey][4] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey5 = %d WHERE `name`='%s'",PlayerInfo[playerid][pCarKey][4],PlayerInfo[playerid][pUsername]); }
			if(PlayerInfo[playerid][pCarKey][5] == vsid) { PlayerInfo[playerid][pCarKey][5] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey6 = %d WHERE `name`='%s'",PlayerInfo[playerid][pCarKey][5],PlayerInfo[playerid][pUsername]); }
			if(PlayerInfo[playerid][pCarKey][6] == vsid) { PlayerInfo[playerid][pCarKey][6] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey7 = %d WHERE `name`='%s'",PlayerInfo[playerid][pCarKey][6],PlayerInfo[playerid][pUsername]); }
			if(PlayerInfo[playerid][pCarKey][7] == vsid) { PlayerInfo[playerid][pCarKey][7] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey8 = %d WHERE `name`='%s'",PlayerInfo[playerid][pCarKey][7],PlayerInfo[playerid][pUsername]); }
			if(PlayerInfo[playerid][pCarKey][8] == vsid) { PlayerInfo[playerid][pCarKey][8] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey9 = %d WHERE `name`='%s'",PlayerInfo[playerid][pCarKey][8],PlayerInfo[playerid][pUsername]); }
			if(PlayerInfo[playerid][pCarKey][9] == vsid) { PlayerInfo[playerid][pCarKey][9] = 0; mysql_format(SQL, string, sizeof(string), "UPDATE `users`SET CarKey10 = %d WHERE `name`='%s'",PlayerInfo[playerid][pCarKey][9],PlayerInfo[playerid][pUsername]); }
							
			mysql_tquery(SQL, string, "", "");
			CarInfo[vsid][cID] = -2;
			CarInfo[vsid][Spawned] = 0;
			CarInfo[vsid][cValue] = 0;
			format(CarInfo[vsid][cText], 256, "-");			
		}
		case DIALOG_WHEELS: {
			if(!response) return 1;
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nu esti in vehiculul tau!");
			new car = GetPlayerVehicleID(playerid), idd;
			if(GetVehicles(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz prywatnego pojazdu!");
			if(PersonalCar(playerid) == -1) return SCM(playerid, COLOR_LGREEN, "* Nu esti in unul dintre vehiculele tale personale!");
			idd = PersonalCar(playerid);
			if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nu esti in vehiculul tau.");
			if(idd == 0) return SendClientMessage(playerid, COLOR_WHITE, "Ten pojazd nie nalezy do ciebie!");
			if(strlen(CarInfo[idd][cText]) < 3) return SCM(playerid, -1, "Acest vehicul nu este unul VIP!");
			if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nu esti in vehiculul tau.");	
			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			switch(listitem) {
				case 0: AddVehicleComponent(car,1073);
				case 1: AddVehicleComponent(car,1079);
				case 2: AddVehicleComponent(car,1080);
				case 3: AddVehicleComponent(car,1083);
			}
			SCM(playerid, COLOR_YELLOW, "Modificari actualizate!");
			saveTuning(playerid, GetPlayerVehicleID(playerid));			
		}	
		case DIALOG_VIPCOLOR: {
			if(!response) return 1;		
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nu esti in vehiculul tau!");
			new car = GetPlayerVehicleID(playerid), idd;
			if(GetVehicles(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz prywatnego pojazdu!");
			if(PersonalCar(playerid) == -1) return SCM(playerid, COLOR_LGREEN, "* Nu esti in unul dintre vehiculele tale personale!");
			idd = PersonalCar(playerid);	
			if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nu esti in vehiculul tau.");
			if(idd == 0) return SendClientMessage(playerid, COLOR_WHITE, "Ten pojazd nie nalezy do ciebie!");
			if(strlen(CarInfo[idd][cText]) < 3) return SCM(playerid, -1, "Acest vehicul nu este unul VIP!");
			if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nu esti in vehiculul tau.");
			if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nu esti in vehiculul tau.");
			if(strlen(CarInfo[idd][cText]) >= 3) {
				DestroyDynamicObject(nameobject[CarInfo[idd][Spawned]]);
			}			
			CarInfo[idd][cTextColor] = listitem;
			format(query, sizeof(query), "UPDATE `cars` SET `TextColor`='%d' WHERE `ID`='%d'", listitem, idd);
			mysql_query(SQL, query);	
			format(string, sizeof(string), "Culoarea textului a fost modificata in {00ccff}%s{FFFFFF}.", serverColors(listitem), CarInfo[idd][cText]);
			SCM(playerid, -1, string);
			attach_vip_text(idd);
		}	
		case DIALOG_PCOLOR: {
			if(!response) return 1;		
			PlayerInfo[playerid][pColor] = listitem;
			format(query, sizeof(query), "UPDATE `users` SET `Color`='%d' WHERE `ID`='%d'", listitem, PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL, query);			
			if(listitem == 0) return SCM(playerid, -1, "Ai scos culoarea!");
			format(string, sizeof(string), "{00ccff}Server: {FFFFFF}Ti-ai schimbat culoarea numelui!", serverColors(listitem));
			SCM(playerid, -1, string);
		}	
		case DIALOG_GARAGE: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pCarKey][listitem] == 0) return 1;
			sVehicle[5][playerid] = PlayerInfo[playerid][pCarKey][listitem];
			if(CarInfo[sVehicle[5][playerid]][Spawned] != 0) ShowPlayerDialog(playerid, DIALOG_GARAGE1, DIALOG_STYLE_LIST, "Opcje", "Informacja\nLokalizacja\nTow\nDespawn\nOdbuguj\nSprzedaj\nUlepsz do VIP - {FFFF00}1000 punktów premium{FFFFFF}", "Ok", "Wróc");
			else if(CarInfo[sVehicle[5][playerid]][Spawned] == 0) ShowPlayerDialog(playerid, DIALOG_GARAGE1, DIALOG_STYLE_LIST, "Opcje", "Informacja\nLokalizacja\nTow\nSpawn\nOdbuguj\nSprzedaj\nUlepsz do VIP - {FFFF00}1000 punktów premium{FFFFFF}", "Ok", "Wróc");
		}

		case DIALOG_GARAGE1: {
			if(!response) return ShowVehiclesMenu(playerid);
			new vsid = sVehicle[5][playerid];
			switch(listitem) {
				case 0: { // info
					new locktext[15];
					if(CarInfo[vsid][cLock] > 0) {locktext = "Zamkniety";}
					else {locktext = "Otwarty";}
					format(string, sizeof(string), "Model: %s (%d)\nStatus: %s\nKolor 1: %d\nKolor 2: %d\nDrogomierz: %.2f km", aVehicleNames[CarInfo[vsid][cModel]-400], CarInfo[vsid][Spawned], locktext, CarInfo[vsid][cColorOne], CarInfo[vsid][cColorTwo], CarInfo[vsid][KM]);
					ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Informacje o pojezdzie", string, "Zamknij", "");
				}
				case 1: { // find
					if(CarInfo[vsid][Spawned] == 0) return SendClientMessage(playerid, COLOR_GREY, "Twój samochód nie jest zespawnowany!");
					if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
					new Float:vehx, Float:vehy, Float:vehz;
					GetVehiclePos(CarInfo[vsid][Spawned], vehx, vehy, vehz);
					SetPlayerCheckpointEx(playerid, vehx, vehy, vehz, 3.0);
					new szZone[128];
					GetPlayer3DZone2(vehx, vehy, vehz, szZone, sizeof(szZone));
					format(string, sizeof(string), "{FFB870}Twój pojazd %s zostal zlokalizowany i jest w %s.", aVehicleNames[CarInfo[vsid][cModel]-400], szZone);
					SendClientMessage(playerid, COLOR_WHITE, string);
					CP[playerid] = 53;
				}
				case 2: { // tow
					if(CarInfo[vsid][Spawned] == 0) return SendClientMessage(playerid, COLOR_GREY, "Twój samochód nie jest zespawnowany!");
					if(GetPlayerCash(playerid) < 500) return SendClientMessage(playerid, COLOR_GREY, "Nie masz 500 $!");
					if(IsVehicleOccupied(CarInfo[vsid][Spawned])) return SendClientMessage(playerid, COLOR_GREY, "Pojazd jest zajety!");
					SetVehicleToRespawn(CarInfo[vsid][Spawned]);
					SetTunning(vsid);
					GivePlayerCash(playerid, -500);
					BizzInfo[11][bBalance] += 500;
					mysql_format(SQL, string,sizeof(string),"UPDATE bizz SET Till = %d WHERE ID = %d",BizzInfo[11][bBalance],5);
					mysql_tquery(SQL, string, "", "");
					format(string, sizeof(string), "Twój pojazd, %s jest teraz na parkingu.", aVehicleNames[CarInfo[vsid][cModel]-400]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				}
				case 3: { // despawn & spawn
					if(CarInfo[vsid][Spawned] == 0) {
						CarInfo[vsid][Spawned] = CreateVehicleEx(CarInfo[vsid][cModel],CarInfo[vsid][cLocationx],CarInfo[vsid][cLocationy],CarInfo[vsid][cLocationz],CarInfo[vsid][cAngle],CarInfo[vsid][cColorOne],CarInfo[vsid][cColorTwo],-1);
						VehicleOwned[CarInfo[vsid][Spawned]] = CarInfo[vsid][Spawned];
						VehicleSQL[CarInfo[vsid][Spawned]] = vsid;						
						attach_vip_text(vsid);
						SetTunning(CarInfo[vsid][Spawned]);
						CheckVehicle(CarInfo[vsid][Spawned]);
						format(string, sizeof(string), "Twój pojazd, %s zostal zespawnowany.", aVehicleNames[CarInfo[vsid][cModel]-400]);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						new engine,lights,alarm,doors,bonnet,boot,objective;	
						GetVehicleParamsEx(CarInfo[vsid][Spawned],engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(CarInfo[vsid][Spawned],engine,lights,alarm,CarInfo[vsid][cLock],bonnet,boot,objective);
						mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Spawned='%d' WHERE ID=%d", CarInfo[vsid][Spawned], vsid);
						if(CarInfo[vsid][cHP] < 25){
						CarInfo[vsid][cHP] = 25;
						saveCar(vsid);
						SetVehicleHealth(CarInfo[vsid][Spawned], 250);
						} else {
						SetVehicleHealth(CarInfo[vsid][Spawned], CarInfo[vsid][cHP]*10);
						}
						if(CarInfo[vsid][cOpis] == 1) {
						CarInfo[vsid][vOpis] = Create3DTextLabel(CarInfo[vsid][dbOpis],0xC2A2DAAA,CarInfo[vsid][cLocationx],CarInfo[vsid][cLocationy],CarInfo[vsid][cLocationz], 10.0, 1);
						Attach3DTextLabelToVehicle(CarInfo[vsid][vOpis], CarInfo[vsid][Spawned], 0.0, 0.0, -0.2);
						}
						SetVehicleNumberPlate(vsid, CarInfo[vsid][cLicense]);
						SetVehicleToRespawn(vsid);
						mysql_tquery(SQL, string, "", "");
					}
					else {
						if(IsVehicleOccupied(CarInfo[vsid][Spawned])) return SendClientMessage(playerid, COLOR_GREY, "Pojazd jest zajety!");
						if(strlen(CarInfo[vsid][cText]) >= 3) {
							DestroyDynamicObject(nameobject[CarInfo[vsid][Spawned]]);
						}
						Delete3DTextLabel(CarInfo[vsid][vOpis]);
						Update3DTextLabelText(CarInfo[vsid][vOpis], COLOR_WHITE, " ");						
						Silnik[CarInfo[vsid][Spawned]] = 0;
						Swiatla[CarInfo[vsid][Spawned]] = 0;
						Maska[CarInfo[vsid][Spawned]] = 0;
						Bagaznik[CarInfo[vsid][Spawned]] = 0;
						DestroyVehicle(CarInfo[vsid][Spawned]);
						VehicleOwned[CarInfo[vsid][Spawned]] = 0;
						VehicleSQL[CarInfo[vsid][Spawned]] = 0;	
						SetTunning(CarInfo[vsid][Spawned]);
						CheckVehicle(CarInfo[vsid][Spawned]);
						CarInfo[vsid][Spawned] = 0;
						format(string, sizeof(string), "Twój pojazd, %s zostal odspawnowany.", aVehicleNames[CarInfo[vsid][cModel]-400]);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Spawned='%d' WHERE ID=%d", CarInfo[vsid][Spawned], vsid);
						mysql_tquery(SQL, string, "", "");
					}
				}
				case 4: { // Debug
					if(CarInfo[vsid][Spawned] == 0) return SendClientMessage(playerid, COLOR_GREY, "Twój samochód nie jest zespawnowany!");
					if(IsVehicleOccupied(CarInfo[vsid][Spawned])) return SendClientMessage(playerid, COLOR_GREY, "Pojazd jest zajety!");
					SetVehiclePos(CarInfo[vsid][Spawned], 1688.9471,1306.3896,10.9159);
					SetVehicleZAngle(CarInfo[vsid][Spawned], 359.3103);
					CP[playerid] = 53;
					if(IsAFLYCar(CarInfo[vsid][Spawned])) {
						format(string, sizeof(string), "Serwer ustawil nowy punkt kontrolny w nowej lokalizacji pojazdu.", aVehicleNames[CarInfo[vsid][cModel]-400]);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						SetVehiclePos(CarInfo[vsid][Spawned], -1649.1798, -159.0667, 17.3618);
						SetVehicleZAngle(CarInfo[vsid][Spawned], -44.1000);
		                new randspawn = random(sizeof(HeliVehPos));
						SetVehiclePos(CarInfo[vsid][Spawned], HeliVehPos[randspawn][0], HeliVehPos[randspawn][1], HeliVehPos[randspawn][2]);
						SetVehicleZAngle(CarInfo[vsid][Spawned], 44.4000);
						SetPlayerCheckpointEx(playerid, HeliVehPos[randspawn][0], HeliVehPos[randspawn][1], HeliVehPos[randspawn][2], 5.0);
						return 1;
					}
					else if(IsABOATCar(CarInfo[vsid][Spawned])) {
						format(string, sizeof(string), "Serwer ustawil nowy punkt kontrolny w nowej lokalizacji pojazdu.", aVehicleNames[CarInfo[vsid][cModel]-400]);
						SendClientMessage(playerid, COLOR_YELLOW, string);
		                new randspawn = random(sizeof(BoatVehPos));
						SetVehiclePos(CarInfo[vsid][Spawned], BoatVehPos[randspawn][0], BoatVehPos[randspawn][1], BoatVehPos[randspawn][2]);
						SetVehicleZAngle(CarInfo[vsid][Spawned], -173.4001);
						SetPlayerCheckpointEx(playerid, BoatVehPos[randspawn][0], BoatVehPos[randspawn][1], BoatVehPos[randspawn][2], 5.0);
						return 1;
					}
			        else {
						format(string, sizeof(string), "Serwer ustawil nowy punkt kontrolny w nowej lokalizacji pojazdu.", aVehicleNames[CarInfo[vsid][cModel]-400]);
						SendClientMessage(playerid, COLOR_YELLOW, string);
		                new randspawn = random(sizeof(DealerCarPos));
						SetVehiclePos(CarInfo[vsid][Spawned], DealerCarPos[randspawn][0], DealerCarPos[randspawn][1], DealerCarPos[randspawn][2]);
						SetVehicleZAngle(CarInfo[vsid][Spawned], -173.4001);
						SetPlayerCheckpointEx(playerid, DealerCarPos[randspawn][0], DealerCarPos[randspawn][1], DealerCarPos[randspawn][2], 5.0);
						return 1;
					}
				}
				case 5: { // sell
					if(CarInfo[vsid][Spawned] == 0) return SendClientMessage(playerid, COLOR_GREY, "Twój samochód nie jest zespawnowany!");
					if(CarInfo[vsid][cSpecial] == 1) return SendClientMessage(playerid, COLOR_GREY, "Zabroniony dostep!");
					if(!PlayerToPoint(5.0,playerid,327.9443, -1512.6609, 36.1366)) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}{FFFFCC}Blad: Musisz byc u w sklepie pojazdów.");
                    
					new value;
					value = floatround((CarInfo[vsid][cValue] * 7) / 10);
					format(string, sizeof(string), "Czy na pewno chcesz sprzedac swój %s za $%s?",aVehicleNames[CarInfo[vsid][cModel]-400],FormatNumber(value));
					ShowPlayerDialog(playerid, DIALOG_SELLCAR, DIALOG_STYLE_MSGBOX, "Sklep pojazdów", string, "Tak", "Nie");
					PlayerSellCar[playerid] = vsid;
					if(CP[playerid] == 43 || CP[playerid] == 53) { CP[playerid] = 0; DisablePlayerCheckpoint(playerid); }
				}
				case 6: {
					if(PlayerInfo[playerid][pVip] == 0) return SCM(playerid, COLOR_GREY, "Nie masz konta VIP! Aby otrzymac, musisz przekazac darowizne za 1000 punktów premium!");
					if(CarInfo[vsid][Spawned] == 0) return SendClientMessage(playerid, -1, "Twój samochód nie jest zespawnowany!");
					if(valid_vip_vehicle(CarInfo[vsid][cModel]) == 0) return SCM(playerid, COLOR_GREY, "Tego pojazdu nie mozna ulepszyc!");
					if(strlen(CarInfo[vsid][cText]) > 3) return SCM(playerid, -1, "Ten pojazd jest juz VIP-em!");
					if(PlayerInfo[playerid][pPremiumPoints] < 1000) return SCM(playerid, -1, "Nie masz wystarczajacej liczby punktów premium.");
					SetPVarInt(playerid, "VehicleID", vsid);
					ShowPlayerDialog(playerid, DIALOG_UPGRADEVIP, DIALOG_STYLE_MSGBOX, "Ulepsz do pojazdu VIP", "Czy na pewno chcesz to zrobic?\nStracisz 1000 punktów premium.", "Tak", "Nie");
				}
			}
		}
		case DIALOG_UPGRADEVIP: {
			if(!response) return 1;
			new idd = GetPVarInt(playerid, "VehicleID");
			if(CarInfo[idd][Spawned] == 0) return SendClientMessage(playerid, -1, "Twój samochód nie jest zespawnowany!");
			if(valid_vip_vehicle(CarInfo[idd][cModel]) == 0) return SCM(playerid, COLOR_GREY, "Tego pojazdu nie mozna ulepszyc!");
			if(strlen(CarInfo[idd][cText]) > 3) return SCM(playerid, -1, "Ten pojazd jest juz VIP-em!");
			if(PlayerInfo[playerid][pPremiumPoints] < 1000) return SCM(playerid, -1, "Nie masz wystarczajacej liczby punktów premium.");		
			PlayerInfo[playerid][pPremiumPoints] -= 1000;
			Update(playerid, pPremiumPointsx);	
			SCM(playerid, COLOR_YELLOW, "* Gratulacje! Ti-ai upgradat cu succes vehiculul la unul VIP.");			
			format(string, sizeof(string), "UPDATE `cars` SET `Text`='%s' WHERE `ID`='%d'", GetName(playerid), idd);
			mysql_query(SQL, string);
			format(CarInfo[idd][cText], 32, GetName(playerid));
			attach_vip_text(idd);
			
		}		
		case DIALOG_CLAN_COMMAND: {
			if(!response) return 1;
			switch(listitem) {
				case 0: ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX , "Komendy klanu:", "/rodzina, /(c)lanchat, /rprzyjmij, /rduty.", "Anuluj", "");
				case 1: {
					new
					    szDialog[1024], szDialog2[1024],
					    Members,
					    szRank1[256];

					format(query, sizeof(query), "SELECT * FROM `users` WHERE `users`.`Clan` = '%d' ORDER BY `users`.`ClanRank` DESC LIMIT 50", PlayerInfo[playerid][pClan]);
					new Cache: result = mysql_query(SQL, query);

					for(new i, j = cache_get_row_count (); i != j; ++i)
					{
						cache_get_field_content(i, "name", name);
						cache_get_field_content(i, "ClanRank", szRank1);
						format(Selected[playerid][Members], MAX_PLAYER_NAME, name);
						if(Members==0)format(szDialog, sizeof(szDialog), "#\tNazwa\tRanga\n%d.\t%s\t%d\n", Members+1, name, strval(szRank1));
						else format(szDialog, sizeof(szDialog), "%d.\t%s\t%d\n", Members+1, name, strval(szRank1));
						strcat(szDialog2, szDialog);
						Members++;
					}
					cache_delete(result);
					if(PlayerInfo[playerid][pClanRank] < 6) return SCM(playerid, -1, "Nie masz dostepu!");
					ShowPlayerDialog(playerid, DIALOG_CLAN_MEMBERS, DIALOG_STYLE_TABLIST_HEADERS, "Cz³onkowie rodziny:", szDialog2, "Wybierz", "Wróæ");
				}
				case 2: {
					if(PlayerInfo[playerid][pClanRank] < 6) return SCM(playerid, -1, "Nie masz dostepu!");
				    ShowPlayerDialog(playerid, DIALOG_CLAN_SETTINGS, DIALOG_STYLE_LIST, "Ustawienia:", "Zmien MOTD\nZmien rankingi nazw", "Wybierz", "Anuluj");
				}
			}
		}

		case DIALOG_CLAN_MEMBERS: {
			if(!response) return ShowPlayerDialog(playerid, DIALOG_CLAN_COMMAND, DIALOG_STYLE_LIST, "Rodzina:", "Komendy rodziny\nCz³onkowie rodziny\nUstawienia", "Wybierz", "Anuluj");
		    if(PlayerInfo[playerid][pClanRank] < 6) return SendClientMessage(playerid, COLOR_GREY, "W tej kategorii tylko w³aciciel rodziny ma dostep.");
            format(sName[playerid], MAX_PLAYER_NAME, Selected[playerid][listitem]);
			ShowPlayerDialog(playerid, DIALOG_CLAN_MANAGE2, DIALOG_STYLE_LIST, "Ustawienia:", "Wywal\nNadaj mu now¹ range", "Wybierz" ,"Wróæ");
		}

		case DIALOG_CLAN_MANAGE2: {
			if(!response) {
				new
				    szDialog[1024], szDialog2[1024],
				    Members,
				    szRank1[256];

				format(query, sizeof(query), "SELECT * FROM `users` WHERE `users`.`Clan` = '%d' ORDER BY `users`.`ClanRank` DESC LIMIT 50", PlayerInfo[playerid][pClan]);
				new Cache: result = mysql_query(SQL, query);

				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
					cache_get_field_content(i, "name", name);
					cache_get_field_content(i, "ClanRank", szRank1);
					format(Selected[playerid][Members], MAX_PLAYER_NAME, name);
					if(Members==0)format(szDialog, sizeof(szDialog), "#\tNazwa\tRanga\n%d.\t%s\t%d\n", Members+1, name, strval(szRank1));
					else format(szDialog, sizeof(szDialog), "%d.\t%s\t%d\n", Members+1, name, strval(szRank1));
					strcat(szDialog2, szDialog);
					Members++;
				}
				cache_delete(result);
				ShowPlayerDialog(playerid, DIALOG_CLAN_MEMBERS, DIALOG_STYLE_TABLIST_HEADERS, "Cz³onkowie rodziny:", szDialog2, "Wybierz", "Wróæ");
			    return 1;
			}
			switch(listitem)
			{
			    case 0:
			    {
			        new
						userID = GetPlayerID(sName[playerid]),
						clanid = PlayerInfo[playerid][pClan];

					if(userID == playerid) return 1;
			        if(userID != INVALID_PLAYER_ID) {
		  				format(string, sizeof(string), "Ai fost dat afara din clan de catre %s.", GetName(playerid));
		  				SendClientMessage(userID, COLOR_LIGHTBLUE, string);
						PlayerInfo[userID][pClan] = 0;
						PlayerInfo[userID][pClanRank] = 0;
						format(string, sizeof(string), "{00ccff}(ORG) %s l-a dat pe %s afara.",  GetName(playerid), sName[playerid]);
						//SetPlayerName(playerid, PlayerInfo[playerid][pUsername]); name klan
				    }
				    else format(string, sizeof(string), "{00ccff}(ORG) %s l-a dat pe %s (neconectat) afara.",  GetName(playerid), sName[playerid]);
				    SendClanMessage(clanid, string);
					format(query, sizeof(query), "UPDATE `users` SET `Clan`='0', `ClanRank`='0' WHERE `Name`='%s'", sName[playerid]);
					mysql_query(SQL, query);
		            ClanInfo[clanid][clSlots]++;
					format(query, sizeof(query), "UPDATE `clans` SET `Slots`='%d' WHERE `ID`='%d'", ClanInfo[clanid][clSlots], clanid);
					mysql_query(SQL, query);
			    }
			    case 1:
			    {
			        new szDialog[1024];
					format(szDialog, sizeof(szDialog), "Ce rank vrei sa ii acorzi membrului %s?\nWpisz un rank valid (1-5).", sName[playerid]);
					ShowPlayerDialog(playerid, DIALOG_CLAN_GRANK, DIALOG_STYLE_INPUT, " ", szDialog, "Wybierz", "Wróæ");
			    }
			}
		}
		case DIALOG_CLAN_GRANK:
		{
			if(!response) {
				new
				    szDialog[1024], szDialog2[1024],
				    Members, 
				    szRank1[256];

				format(query, sizeof(query), "SELECT * FROM `users` WHERE `users`.`Clan` = '%d' ORDER BY `users`.`ClanRank` DESC LIMIT 50", PlayerInfo[playerid][pClan]);
				new Cache: result = mysql_query(SQL, query);

				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
					cache_get_field_content(i, "name", name);
					cache_get_field_content(i, "ClanRank", szRank1);
					format(Selected[playerid][Members], MAX_PLAYER_NAME, name);
					if(Members==0)format(szDialog, sizeof(szDialog), "#\tNazwa\tRanga\n%d.\t%s\t%d\n", Members+1, name, strval(szRank1));
					else format(szDialog, sizeof(szDialog), "%d.\t%s\t%d\n", Members+1, name, strval(szRank1));
					strcat(szDialog2, szDialog);
					Members++;
				}
				cache_delete(result);
				ShowPlayerDialog(playerid, DIALOG_CLAN_MEMBERS, DIALOG_STYLE_TABLIST_HEADERS, "Cz³onkowie rodziny:", szDialog2, "Wybierz", "Wróæ");
			    return 1;
			}
			if(strval(inputtext) <= 0 || strval(inputtext) >= 6) return SendClientMessage(playerid, COLOR_GREY, "Rank-ul este invalid. Trebuie sa fie cuprins intre 1 si 5!");
		    new
				userID = GetPlayerID(sName[playerid]),
				clanid = PlayerInfo[playerid][pClan];

			if(userID == playerid) return 1;
		    if(userID != INVALID_PLAYER_ID) {
				PlayerInfo[userID][pClanRank] = strval(inputtext);
				format(string, sizeof(string), "{00ccff}(ORG) %s i-a dat rank %d lui %s.",  GetName(playerid), strval(inputtext), sName[playerid]);
		    }
		    else format(string, sizeof(string), "{00ccff}(ORG) %s i-a dat rank %d lui %s (neconectat).",  GetName(playerid), strval(inputtext), sName[playerid]);
		    SendClanMessage(clanid, string);

			format(query, sizeof(query), "UPDATE `users` SET `ClanRank`='%d' WHERE `Name`='%s'", strval(inputtext), sName[playerid]);
			mysql_query(SQL, query);
		}

		case DIALOG_CLAN: {
			if(strlen(inputtext) < 2 || strlen(inputtext) > 10) {
				SendClientMessage(playerid, COLOR_GREY, "Nazwa klanu musi miea miedzy 3 a 10 znakami.");
				if(sSlot[playerid] == 10) {
					ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_INPUT, "Zakup:", "{FFFFFF}Za chwile stworzysz {D10A0A}clan z 10 dostepnymi miejscami{FFFFFF}.\nTot ce trebuie sa faci in acest moment,\
					 este sa-ti alegi numele clanului.\nNazwa klanu musi zawieraa pomiedzy {D10A0A}3{FFFFFF} a {D10A0A}10{FFFFFF} znakami.", "Ok", "");
				}
				else if(sSlot[playerid] == 20) {
					ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_INPUT, "Zakup:", "{FFFFFF}Za chwile stworzysz {D10A0A}z 20 dostepnymi miejscami{FFFFFF}.\nTot ce trebuie sa faci in acest moment,\
					 este sa-ti alegi numele clanului.\nNazwa klanu musi zawieraa pomiedzy {D10A0A}3{FFFFFF} a {D10A0A}10{FFFFFF} znakami.", "Ok", "");
				}
				else if(sSlot[playerid] == 40) {
					ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_INPUT, "Zakup:", "{FFFFFF}Za chwile stworzysz {D10A0A}z 40 dostepnymi miejscami{FFFFFF}.\nTot ce trebuie sa faci in acest moment,\
					 este sa-ti alegi numele clanului.\nNazwa klanu musi zawieraa pomiedzy {D10A0A}3{FFFFFF} a {D10A0A}10{FFFFFF} znakami.", "Ok", "");
				}
				return 1;
			}

			new
			    szDate[256],
				Year, Month, Day, Hour, Minute, Second;

			getdate(Year, Month, Day);
			gettime(Hour, Minute, Second);

	        format(szDate, sizeof(szDate), "%02d/%02d/%d - %02d:%02d:%02d", Day, Month, Year, Hour, Minute, Second);
			mysql_format(SQL, query, 256, "INSERT INTO `clans` (`Name`, `Owner`, `RegisterDate`, `Color`, `Slots`) VALUES ('%e', '%e', '%e', 'FFFFFF', '%d')", inputtext, PlayerInfo[playerid][pUsername], szDate, sSlot[playerid]);
			new Cache: result = mysql_query(SQL, query);
			new i = cache_insert_id();
			cache_delete(result);

			ClanInfo[i][clSlots] = sSlot[playerid];
			format(ClanInfo[i][clName], 64, inputtext);
			format(ClanInfo[i][clOwner], 256, PlayerInfo[playerid][pUsername]);
			format(ClanInfo[i][clRegisterDate], 256, szDate);

			PlayerInfo[playerid][pClan] = i;
			PlayerInfo[playerid][pClanRank] = 6;

			new szText[256];
			format(szText, sizeof(szText), "{FFFFFF}Numele ales de tine este: {D10A0A}%s{FFFFFF}.\nCel de-al doilea pas, este de a alege tagul clanului.\nTagul clanului trebuie sa contina intre {D10A0A}3{FFFFFF} a {D10A0A}6{FFFFFF} znakami.", inputtext);
			ShowPlayerDialog(playerid, DIALOG_CLAN2, DIALOG_STYLE_INPUT, "Zakup:", szText, "Ok", "");

			format(query, sizeof(query), "UPDATE `users` SET `Clan`='%d', `ClanRank`='%d' WHERE `Name`='%s'", PlayerInfo[playerid][pClan], PlayerInfo[playerid][pClanRank], PlayerInfo[playerid][pUsername]);
			mysql_query(SQL, query);
		}
		case DIALOG_CLAN2: {
			if(strlen(inputtext) < 3 || strlen(inputtext) > 6) {
				SendClientMessage(playerid, COLOR_GREY, "Tagul clanului musi miea miedzy 3 si 6 znakami.");
				new szText[256];
				format(szText, sizeof(szText), "{FFFFFF}Numele ales de tine este: {D10A0A}%s{FFFFFF}.\nCel de-al doilea pas, este de a alege tagul clanului.\nTagul clanului trebuie sa contina intre {D10A0A}3{FFFFFF} a {D10A0A}6{FFFFFF} znakami.", inputtext);
				ShowPlayerDialog(playerid, DIALOG_CLAN2, DIALOG_STYLE_INPUT, "Zakup:", szText, "Ok", "");
				return 1;
			}
			new clanid = PlayerInfo[playerid][pClan];
			format(ClanInfo[clanid][clTag], 32, inputtext);
			format(query, sizeof(query), "UPDATE `clans` SET `Tag`='%s' WHERE `ID`='%d'", inputtext, clanid);
			mysql_query(SQL, query);

			new szText[256];
			format(szText, sizeof(szText), "{D10A0A}%s{FFFFFF}Nume\nNume{D10A0A}%s", ClanInfo[clanid][clTag], ClanInfo[clanid][clTag]);

			ShowPlayerDialog(playerid, DIALOG_CLAN3, DIALOG_STYLE_LIST, "Alege pozitia:", szText, "Ok", "");
		}
		case DIALOG_CLAN3: {
			new
				szName[256],
				clanid = PlayerInfo[playerid][pClan];


			format(string, sizeof(string), "Gratulacje! Ti-ai cumparat din magazin, un clan cu %d locuri disponibile.", sSlot[playerid]);
			SendClientMessage(playerid, COLOR_GOLD, string);
            Update(playerid, pPremiumPointsx);
			format(string, sizeof(string), "Informatii: Numele clanului, este %s (tag: %s). [clan #%d]", ClanInfo[clanid][clName], ClanInfo[clanid][clTag], PlayerInfo[playerid][pClan]);
			SendClientMessage(playerid, COLOR_GOLD, string);

			format(ClanInfo[clanid][clRankName1], 32, "Rank 1");
			format(ClanInfo[clanid][clRankName2], 32, "Rank 2");
			format(ClanInfo[clanid][clRankName3], 32, "Rank 3");
			format(ClanInfo[clanid][clRankName4], 32, "Rank 4");
			format(ClanInfo[clanid][clRankName5], 32, "Rank 5");
			format(ClanInfo[clanid][clRankName6], 32, "Rank 6");
			format(ClanInfo[clanid][clMotd], 32, "Brak");

		}
		case DIALOG_CLAN_SETTINGS:
		{
		    if(!response) return ShowPlayerDialog(playerid, DIALOG_CLAN_COMMAND, DIALOG_STYLE_LIST, "Rodzina:", "Komendy rodzinne\nCz³onkowie klanu\nUstawienia", "Wybierz", "Anuluj");
		    switch(listitem)
			{
			    case 0:
			    {
					ShowPlayerDialog(playerid, DIALOG_CLAN_MOTD, DIALOG_STYLE_INPUT, "Ustawienia:", "{FFFFFF}Wpisz nowy MOTD Twojej rodziny.", "Wybierz", "Wróæ");
			    }
			    case 1:
			    {
					ShowPlayerDialog(playerid, DIALOG_CLAN_RANK, DIALOG_STYLE_INPUT, "Ustawienia:", "{FFFFFF}Wpisz nowa nazwe rangi.", "Wybierz", "Wróæ");
			    }
			}
		}
		case DIALOG_CLAN_MOTD:
		{
		    if(!response) return ShowPlayerDialog(playerid, DIALOG_CLAN_SETTINGS, DIALOG_STYLE_LIST , "Ustawieniale rodziny:", "{FFFFFF}Zmien MOTD\nZmien rankingi nazw", "Wybierz", "Wróæ");
		    new clanid = PlayerInfo[playerid][pClan];
			format(string, sizeof(string), "{00ccff}(ORG) %s a schimbat MOTD clan in %s.",  GetName(playerid), inputtext);
			SendClanMessage(clanid, string);

		    format(ClanInfo[clanid][clMotd], 32, "%s", inputtext);
			format(query, sizeof(query), "UPDATE `clans` SET `Motd`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clMotd], clanid);
            mysql_query(SQL, query);
		}
		case DIALOG_CLAN_RANK:
		{
		    if(!response) return ShowPlayerDialog(playerid, DIALOG_CLAN_SETTINGS, DIALOG_STYLE_LIST , "Ustawienia rodziny:", "{FFFFFF}Zmien MOTD\nZmien rankingi nazw", "Wybierz", "Wróæ");
		    format(string, 256, "%s", inputtext);
			format(szRank[playerid], 256, string);
			ShowPlayerDialog(playerid, DIALOG_CLAN_RANK2, DIALOG_STYLE_LIST, "Wybieranie rang:", "Rank 1\nRank 2\nRank 3\nRank 4\nRank 5\nRank 6", "Zmien", "Wróæ");
		}
		case DIALOG_CLAN_RANK2:
		{
		    if(!response) return ShowPlayerDialog(playerid, DIALOG_CLAN_RANK, DIALOG_STYLE_INPUT, "Ustawienia rodziny:", "{FFFFFF}Introdu numele pe care vrei sa-l pui la rankuri.", "Wybierz", "Wróæ");
		    new
				ClanRank,
				clanid = PlayerInfo[playerid][pClan];

		    switch(listitem)
			{
			    case 0:
			    {
			        ClanRank = 1;
		    		format(ClanInfo[clanid][clRankName1], 32, "%s", szRank[playerid]);
					format(query, sizeof(query), "UPDATE `clans` SET `RankName1`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clRankName1], clanid);
		            mysql_query(SQL, query);
			    }
			    case 1:
			    {
					ClanRank = 2;
		    		format(ClanInfo[clanid][clRankName2], 32, "%s", szRank[playerid]);
					format(query, sizeof(query), "UPDATE `clans` SET `RankName2`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clRankName2], clanid);
		            mysql_query(SQL, query);
			    }
			    case 2:
			    {
					ClanRank = 3;
		    		format(ClanInfo[clanid][clRankName3], 32, "%s", szRank[playerid]);
					format(query, sizeof(query), "UPDATE `clans` SET `RankName3`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clRankName3], clanid);
		            mysql_query(SQL, query);
			    }
			    case 3:
			    {
					ClanRank = 4;
		    		format(ClanInfo[clanid][clRankName4], 32, "%s", szRank[playerid]);
					format(query, sizeof(query), "UPDATE `clans` SET `RankName4`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clRankName4], clanid);
		            mysql_query(SQL, query);
				}
			    case 4:
			    {
					ClanRank = 5;
		    		format(ClanInfo[clanid][clRankName5], 32, "%s", szRank[playerid]);
					format(query, sizeof(query), "UPDATE `clans` SET `RankName5`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clRankName5], clanid);
		            mysql_query(SQL, query);
			    }
			    case 5:
			    {
					ClanRank = 6;
		    		format(ClanInfo[clanid][clRankName6], 32, "%s", szRank[playerid]);
					format(query, sizeof(query), "UPDATE `clans` SET `RankName6`='%s' WHERE `ID`='%d'", ClanInfo[clanid][clRankName6], clanid);
		            mysql_query(SQL, query);
			    }
			}
			format(string, sizeof(string), "{00ccff}(ORG) %s a schimbat name rank %d in %s.",  GetName(playerid), ClanRank, szRank[playerid]);
			SendClanMessage(clanid, string);
		}
		
		/*case DIALOG_TREASURESHOP:
		{
			if(!response) return 1;
			{
				if(listitem == 0)
				{
					if(PlayerInfo[playerid][pTreasurePoints] <= 150) return ShowPlayerDialog(playerid, DIALOG_NOTREASUREPOINTS, DIALOG_STYLE_MSGBOX, "Not enough treasure points", "You don't have enough treasure points to do this.", "Zamknij", "");
					ShowPlayerDialog(playerid, DIALOG_TREASURESHOP_MONEY1, DIALOG_STYLE_MSGBOX, "Money", "Do you want to pay 150 treasure points to buy $300,000?","Yes","No");
				}
				if(listitem == 1)
				{
					if(PlayerInfo[playerid][pTreasurePoints] <= 250) return ShowPlayerDialog(playerid, DIALOG_NOTREASUREPOINTS, DIALOG_STYLE_MSGBOX, "Not enough treasure points", "You don't have enough treasure points to do this.", "Zamknij", "");
					ShowPlayerDialog(playerid, DIALOG_TREASURESHOP_MONEY2, DIALOG_STYLE_MSGBOX, "Money", "Do you want to pay 250 treasure points to buy $500,000?","Yes","No");
				}
				if(listitem == 2)
				{
					if(PlayerInfo[playerid][pTreasurePoints] <= 300) return ShowPlayerDialog(playerid, DIALOG_NOTREASUREPOINTS, DIALOG_STYLE_MSGBOX, "Not enough treasure points", "You don't have enough treasure points to do this.", "Zamknij", "");
					ShowPlayerDialog(playerid, DIALOG_TREASURESHOP_MONEY3, DIALOG_STYLE_MSGBOX, "Money", "Do you want to pay 300 treasure points to buy $1,000,000?","Yes","No");
				}
				if(listitem == 3)
				{
					if(PlayerInfo[playerid][pTreasurePoints] <= 500) return ShowPlayerDialog(playerid, DIALOG_NOTREASUREPOINTS, DIALOG_STYLE_MSGBOX, "Not enough treasure points", "You don't have enough treasure points to do this.", "Zamknij", "");
					ShowPlayerDialog(playerid, DIALOG_TREASURESHOP_MONEY4, DIALOG_STYLE_MSGBOX, "Money", "Do you want to pay 500 treasure points to buy $2,500,000","Yes","No");
				}
			}
		}
		
		case DIALOG_TREASURESHOP_MONEY1:
		{
			if(!response) return 1;
			{
				if(PlayerInfo[playerid][pTreasurePoints] < 150) 
						return SCM(playerid, COLOR_GREY, "Ai nevoie de 150 treasure points dla a lua acest produs.");
						
				GivePlayerCash(playerid, 300000);
				PlayerInfo[playerid][pTreasurePoints]-=150;
				format(string, sizeof(string), "Gratulacje! Ti-Kupiles $300,000 din trasure shop. Acum, ai $%s bani in mana!", FormatNumber(GetPlayerCash(playerid)));
				SCM(playerid, COLOR_GOLD, string);
			}
		}
		
		case DIALOG_TREASURESHOP_MONEY2:
		{
			if(!response) return 1;
			{
				if(PlayerInfo[playerid][pTreasurePoints] < 250) 
						return SCM(playerid, COLOR_GREY, "Ai nevoie de 250 treasure points dla a lua acest produs.");
						
				GivePlayerCash(playerid, 500000);
				PlayerInfo[playerid][pTreasurePoints]-=250;
				format(string, sizeof(string), "Gratulacje! Ti-Kupiles $500,000 din trasure shop. Acum, ai $%s bani in mana!", FormatNumber(GetPlayerCash(playerid)));
				SCM(playerid, COLOR_GOLD, string);
			}
		}

		case DIALOG_TREASURESHOP_MONEY3:
		{
			if(!response) return 1;
			{
				if(PlayerInfo[playerid][pTreasurePoints] < 300) 
						return SCM(playerid, COLOR_GREY, "Ai nevoie de 300 treasure points dla a lua acest produs.");
						
				GivePlayerCash(playerid, 1000000);
				PlayerInfo[playerid][pTreasurePoints]-=300;
				format(string, sizeof(string), "Gratulacje! Ti-Kupiles $1,000,000 din trasure shop. Acum, ai $%s bani in mana!", FormatNumber(GetPlayerCash(playerid)));
				SCM(playerid, COLOR_GOLD, string);
			}
		}

		case DIALOG_TREASURESHOP_MONEY4:
		{
			if(!response) return 1;
			{
				if(PlayerInfo[playerid][pTreasurePoints] < 500) 
						return SCM(playerid, COLOR_GREY, "Ai nevoie de 500 treasure points dla a lua acest produs.");
						
				GivePlayerCash(playerid, 2500000);
				PlayerInfo[playerid][pTreasurePoints]-=500;
				format(string, sizeof(string), "Gratulacje! Ti-Kupiles $2,500,000 din trasure shop. Acum, ai $%s bani in mana!", FormatNumber(GetPlayerCash(playerid)));
				SCM(playerid, COLOR_GOLD, string);
			}
		}	*/	
		
		case DIALOG_SHOP: {
			new szDialog[1100];
			if(!response) { InShop[playerid] = 0; return 1; }
			switch(listitem) {
			    case 0: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi un {D10A0A}cont premium dla o saptamana.\ndla asta, ai nevoie de 3000 puncte premium.\n\n\
					Avantaje:\n- /togwhisper, /music (in alhambra)\n-Interes 0.2 la payday\n- 2 RP-uri o data la 5 ore\n- Poti avea 5 masini personale in total\n- +25%% la joburi.\n- Iti raman RP-urile pastrate dupa /buylevel.");
				}
			    case 1: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi un {D10A0A}cont premium dla o luna.\ndla asta, ai nevoie de 3000 puncte premium.\n\n\
					Avantaje:\n- /togwhisper, /music (in alhambra)\n-Interes 0.2 la payday\n- 2 RP-uri o data la 5 ore\n- Poti avea 5 masini personale in total\n- +25%% la joburi.\n- Iti raman RP-urile pastrate dupa /buylevel.");
				}
				case 2: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi un {D10A0A}clan z 10 dostepnymi miejscami.\ndla asta, ai nevoie de 1000 puncte premium.\n\n\
					Avantaje:\n- Clan permanent\n- Poti invita 10 playeri");
				}
				case 3: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi un {D10A0A}z 20 dostepnymi miejscami.\ndla asta, ai nevoie de 2000 puncte premium.\n\n\
					Avantaje:\n- Clan permanent\n- Poti invita 20 playeri");
				}
				case 4: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi un {D10A0A}z 40 dostepnymi miejscami.\ndla asta, ai nevoie de 3000 puncte premium.\n\n\
					Avantaje:\n- Clan permanent\n- Poti invita 40 playeri");
				}
				case 5: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi 500,000.\ndla asta, ai nevoie de 200 punct gold.\n\n\
					Avantaje:\n- Primesti $500,000");
				}
				case 6: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi 1,000,000.\ndla asta, ai nevoie de 400 punct gold.\n\n\
					Avantaje:\n- Primesti $1,000,000");
				}
				case 7: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi 1,500,000.\ndla asta, ai nevoie de 600 punct gold.\n\n\
					Avantaje:\n- Primesti $1,500,000");
				}
				case 8: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi 2,000,000.\ndla asta, ai nevoie de 800 punct gold.\n\n\
					Avantaje:\n- Primesti $2,000,000");
				}
				case 9: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi 2,500,000.\ndla asta, ai nevoie de 1000 punct gold.\n\n\
					Avantaje:\n- Primesti $2,500,000");
				}		
				case 10: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi 3,000,000.\ndla asta, ai nevoie de 1200 punct gold.\n\n\
					Avantaje:\n- Primesti $3,000,000");
				}
				case 11: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi 3,500,000.\ndla asta, ai nevoie de 1400 punct gold.\n\n\
					Avantaje:\n- Primesti $3,500,000");
				}		
				case 12: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi 4,000,000.\ndla asta, ai nevoie de 1600 punct gold.\n\n\
					Avantaje:\n- Primesti $4,000,000");
				}
				case 13: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi 4,500,000.\ndla asta, ai nevoie de 1800 punct gold.\n\n\
					Avantaje:\n- Primesti $4,500,000");
				}	
				case 14: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi 5,000,000.\ndla asta, ai nevoie de 2000 punct gold.\n\n\
					Avantaje:\n- Primesti $5,000,000");
				}					
				case 15: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi schimbarea interiorului(casa).\ndla asta, ai nevoie de 2500 punct gold.\n\n\
					Avantaje:\n- Iti poti pune orice fel de interior in casa.");
				}
				case 16: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi stergerea kilometrilor (vehicul).\ndla asta, ai nevoie de 100 punct gold.\n\n\
					Avantaje:\n- Poti reseta kilometrii unui vehicul personal.");
				}
				case 17: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi o {D10A0A}culoare speciala.\ndla asta, ai nevoie de 1000 punct gold.\n\n\
					Avantaje:\n- Poti pune o culoare speciala (128-255) pe un vehicul personal.");
				}
				case 18: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi stergerea FPunish.\ndla asta, ai nevoie de 200 punct gold.\n\n\
					Avantaje:\n- Iti poti sterge FPunish-ul.");
				}
				case 19: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi stergerea warn-uri.\ndla asta, ai nevoie de 200 punct gold.\n\n\
					Avantaje:\n- Iti poti sterge Warn-urile.");
				}
				case 20: {
					format(szDialog, sizeof(szDialog), "Esti pe cale sa-ti achizitionezi un slot dla vehicule.\ndla asta, ai nevoie de 1000 punct gold.");
				}				
			}
			SelectedItem[playerid] = listitem;
			ShowPlayerDialog(playerid, DIALOG_SHOP1, DIALOG_STYLE_MSGBOX, "Zakup:", szDialog, "Ok", "Anuluj");
		}
		case DIALOG_SHOP1: {
			if(!response) { InShop[playerid] = 0; return 1; }
		    switch(SelectedItem[playerid]) {
		        case 0: {
	            	if(PlayerInfo[playerid][pPremiumPoints] < 350) return SCM(playerid, COLOR_GREY, "Ai nevoie de 350 puncte premium dla a lua acest produs.");
		            if(PlayerInfo[playerid][pPremiumAccount] >= 1) return SCM(playerid, -1, "Contul tau deja este Premium.");
		            SCM(playerid, COLOR_GOLD, "Gratulacje! Contul tau, este acum, unul de tip Premium pe o perioada de o saptamana.");
                    lastpremium[playerid] = gettime();
				    PlayerInfo[playerid][pPremiumAccount] = 1;
					format(query, 256, "UPDATE `users` SET `PremiumDate`='%d' WHERE ID='%d'", gettime( ), PlayerInfo[playerid][pSQLID]);
					printf(query);
					mysql_query(SQL, query);
			        Update(playerid, pPremiumAccountx);
		            PlayerInfo[playerid][pPremiumPoints]-=350;
		        }
		        case 1: {
	            	if(PlayerInfo[playerid][pPremiumPoints] < 850) return SCM(playerid, COLOR_GREY, "Ai nevoie de 850 puncte premium dla a lua acest produs.");
		            if(PlayerInfo[playerid][pPremiumAccount] >= 1) return SCM(playerid, -1, "Contul tau deja este Premium.");
		            SCM(playerid, COLOR_GOLD, "Gratulacje! Contul tau, este acum, unul de tip Premium pe o perioada de o luna.");
		            lastpremium[playerid] = gettime();
		            PlayerInfo[playerid][pPremiumAccount] = 2;
					format(query, 256, "UPDATE `users` SET `PremiumDate`='%d' WHERE ID='%d'", gettime( ), PlayerInfo[playerid][pSQLID]);
					printf(query);
					mysql_query(SQL, query);
		            Update(playerid, pPremiumAccountx);
		            PlayerInfo[playerid][pPremiumPoints]-=850;
		        }
		        case 2: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 1000) return SCM(playerid, COLOR_GREY, "Aby otrzymac ten produkt, potrzebujesz 1000 punktów premium.");
		            if(PlayerInfo[playerid][pClanRank] == 6) return SendClientMessage(playerid, COLOR_GREY, "Masz ju¿ klan.");
		            if(PlayerInfo[playerid][pClan] != 0) return SendClientMessage(playerid, COLOR_GREY, "Masz ju¿ klan.");
		            sSlot[playerid] = 10;
		            PlayerInfo[playerid][pPremiumPoints]-=1000;
					ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_INPUT, "Zakup:", "{FFFFFF}Za chwile stworzysz {D10A0A}clan z 10 dostepnymi miejscami{FFFFFF}.\nTot ce trebuie sa faci in acest moment,\
					 este sa-ti alegi numele clanului.\nNazwa klanu musi zawieraa pomiedzy {D10A0A}3{FFFFFF} a {D10A0A}10{FFFFFF} znakami.", "Ok", "");
		        }
		        case 3: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 2000) return SCM(playerid, COLOR_GREY, "Ai nevoie de 2000 puncte premium dla a lua acest produs.");
		            if(PlayerInfo[playerid][pClanRank] == 6) return SendClientMessage(playerid, COLOR_GREY, "Masz ju¿ klan.");
		            if(PlayerInfo[playerid][pClan] != 0) return SendClientMessage(playerid, COLOR_GREY, "Masz ju¿ klan.");
		            sSlot[playerid] = 20;
		            PlayerInfo[playerid][pPremiumPoints]-=2000;
					ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_INPUT, "Zakup:", "{FFFFFF}Za chwile stworzysz {D10A0A}z 20 dostepnymi miejscami{FFFFFF}.\nTot ce trebuie sa faci in acest moment,\
					 este sa-ti alegi numele clanului.\nNazwa klanu musi zawieraa pomiedzy {D10A0A}3{FFFFFF} a {D10A0A}10{FFFFFF} znakami.", "Ok", "");
		        }
		        case 4: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 3000) return SCM(playerid, COLOR_GREY, "Ai nevoie de 3000 puncte premium dla a lua acest produs.");
		            if(PlayerInfo[playerid][pClanRank] == 6) return SendClientMessage(playerid, COLOR_GREY, "Masz ju¿ klan.");
		            if(PlayerInfo[playerid][pClan] != 0) return SendClientMessage(playerid, COLOR_GREY, "Masz ju¿ klan.");
		            sSlot[playerid] = 40;
		            PlayerInfo[playerid][pPremiumPoints]-=3000;
					ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_INPUT, "Zakup:", "{FFFFFF}Za chwile stworzysz {D10A0A}z 40 dostepnymi miejscami{FFFFFF}.\nTot ce trebuie sa faci in acest moment,\
					 este sa-ti alegi numele clanului.\nNazwa klanu musi zawieraa pomiedzy {D10A0A}3{FFFFFF} a {D10A0A}10{FFFFFF} znakami.", "Ok", "");
			    }
				case 5: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 200) return SCM(playerid, COLOR_GREY, "Ai nevoie de 200 puncte premium dla a lua acest produs.");
		            GivePlayerCash(playerid, 500000);
		            PlayerInfo[playerid][pPremiumPoints]-=200;
		            format(string, sizeof(string), "Gratulacje! Ti-Kupiles $500,000 din magazin. Acum, ai $%s bani in mana!", FormatNumber(GetPlayerCash(playerid)));
					SCM(playerid, COLOR_GOLD, string);
				}
				case 6: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 400) return SCM(playerid, COLOR_GREY, "Ai nevoie de 400 puncte premium dla a lua acest produs.");
		            GivePlayerCash(playerid, 1000000);
		            PlayerInfo[playerid][pPremiumPoints]-=400;
		            format(string, sizeof(string), "Gratulacje! Ti-Kupiles $1,000,000 din magazin. Acum, ai $%s bani in mana!", FormatNumber(GetPlayerCash(playerid)));
					SCM(playerid, COLOR_GOLD, string);
				}
				case 7: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 600) return SCM(playerid, COLOR_GREY, "Ai nevoie de 600 puncte premium dla a lua acest produs.");
		            GivePlayerCash(playerid, 1500000);
		            PlayerInfo[playerid][pPremiumPoints]-=600;
		            format(string, sizeof(string), "Gratulacje! Ti-Kupiles $1,500,000 din magazin. Acum, ai $%s bani in mana!", FormatNumber(GetPlayerCash(playerid)));
					SCM(playerid, COLOR_GOLD, string);
				}
				case 8: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 800) return SCM(playerid, COLOR_GREY, "Ai nevoie de 800 puncte premium dla a lua acest produs.");
		            GivePlayerCash(playerid, 2000000);
		            PlayerInfo[playerid][pPremiumPoints]-=800;
		            format(string, sizeof(string), "Gratulacje! Ti-Kupiles $2,000,000 din magazin. Acum, ai $%s bani in mana!", FormatNumber(GetPlayerCash(playerid)));
					SCM(playerid, COLOR_GOLD, string);
				}
				case 9: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 1000) return SCM(playerid, COLOR_GREY, "Aby otrzymac ten produkt, potrzebujesz 1000 punktów premium.");
		            GivePlayerCash(playerid, 2500000);
		            PlayerInfo[playerid][pPremiumPoints]-=1000;
		            format(string, sizeof(string), "Gratulacje! Ti-Kupiles $2,500,000 din magazin. Acum, ai $%s bani in mana!", FormatNumber(GetPlayerCash(playerid)));
					SCM(playerid, COLOR_GOLD, string);
				}
				case 10: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 1200) return SCM(playerid, COLOR_GREY, "Ai nevoie de 1200 puncte premium dla a lua acest produs.");
		            GivePlayerCash(playerid, 3000000);
		            PlayerInfo[playerid][pPremiumPoints]-=1200;
		            format(string, sizeof(string), "Gratulacje! Ti-Kupiles $3,000,000 din magazin. Acum, ai $%s bani in mana!", FormatNumber(GetPlayerCash(playerid)));
					SCM(playerid, COLOR_GOLD, string);
				}
				case 11: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 1400) return SCM(playerid, COLOR_GREY, "Ai nevoie de 1400 puncte premium dla a lua acest produs.");
		            GivePlayerCash(playerid, 3500000);
		            PlayerInfo[playerid][pPremiumPoints]-=1400;
		            format(string, sizeof(string), "Gratulacje! Ti-Kupiles $3,500,000 din magazin. Acum, ai $%s bani in mana!", FormatNumber(GetPlayerCash(playerid)));
					SCM(playerid, COLOR_GOLD, string);
				}
				case 12: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 1600) return SCM(playerid, COLOR_GREY, "Ai nevoie de 1600 puncte premium dla a lua acest produs.");
		            GivePlayerCash(playerid, 4000000);
		            PlayerInfo[playerid][pPremiumPoints]-=1600;
		            format(string, sizeof(string), "Gratulacje! Ti-Kupiles $4,000,000 din magazin. Acum, ai $%s bani in mana!", FormatNumber(GetPlayerCash(playerid)));
					SCM(playerid, COLOR_GOLD, string);
				}
				case 13: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 1800) return SCM(playerid, COLOR_GREY, "Ai nevoie de 1800 puncte premium dla a lua acest produs.");
		            GivePlayerCash(playerid, 4500000);
		            PlayerInfo[playerid][pPremiumPoints]-=1800;
		            format(string, sizeof(string), "Gratulacje! Ti-Kupiles $4,500,000 din magazin. Acum, ai $%s bani in mana!", FormatNumber(GetPlayerCash(playerid)));
					SCM(playerid, COLOR_GOLD, string);
				}
				case 14: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 2000) return SCM(playerid, COLOR_GREY, "Ai nevoie de 2000 puncte premium dla a lua acest produs.");
		            GivePlayerCash(playerid, 5000000);
		            PlayerInfo[playerid][pPremiumPoints]-=2000;
		            format(string, sizeof(string), "Gratulacje! Ti-Kupiles $5,000,000 din magazin. Acum, ai $%s bani in mana!", FormatNumber(GetPlayerCash(playerid)));
					SCM(playerid, COLOR_GOLD, string);
				}
				case 15: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 2500) return SCM(playerid, COLOR_GREY, "Ai nevoie de 2500 puncte premium dla a lua acest produs.");
					new bouse = PlayerInfo[playerid][pHouse],playername[25];
					GetPlayerName(playerid, playername, sizeof(playername));
					if(bouse != 999 && strcmp(GetName(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
					{
						SInterior[playerid] = 1;
						GetPlayerPos(playerid, pPos[playerid][0], pPos[playerid][1], pPos[playerid][2]);
	                    pInteriorID[playerid] = GetPlayerInterior(playerid), pVirtual[playerid] = GetPlayerVirtualWorld(playerid);
      					SetInteriorCamera(playerid);
      					PlayerTextDrawSetString(playerid, ShopTDs[1], "Kup");
						ShowShopTDs(playerid);
						SetPlayerVirtualWorld(playerid, playerid+900);
					}
					else return SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem domu.");
				}
				case 16: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 100) return SCM(playerid, COLOR_GREY, "Ai nevoie de 100 puncte premium dla a lua acest produs.");
					if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "Nie jeste w pojezdzie!");
					new idd;
					new valid = PlayerInfo[playerid][pCarKey][0] + PlayerInfo[playerid][pCarKey][1] + PlayerInfo[playerid][pCarKey][2] + PlayerInfo[playerid][pCarKey][3] + PlayerInfo[playerid][pCarKey][4];
					if(valid == 0) return SendClientMessage(playerid, COLOR_GREY, "Ten pojazd nie nalezy do ciebie!");
					new car = GetPlayerVehicleID(playerid);
					if(PersonalCar(playerid) == -1) return SCM(playerid, COLOR_LGREEN, "* Nu esti in unul dintre vehiculele tale personale!");
					idd = PersonalCar(playerid);
					if(idd == 0) return SendClientMessage(playerid, COLOR_GREY, "Ten pojazd nie nalezy do ciebie!");
					if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nu esti in vehiculul tau personal");
                    pCar[playerid] = idd;
                    ShowPlayerDialog(playerid, DIALOG_RESETKM, DIALOG_STYLE_MSGBOX, "Zakup:", "{FFFFFF}Esti sigur ca vrei sa {D10A0A}resetezi kilometrii{FFFFFF} acestui vehicul?", "Da", "Wróc");
				}
				case 17: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 1000) return SCM(playerid, COLOR_GREY, "Aby otrzymac ten produkt, potrzebujesz 1000 punktów premium.");
					if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "Nie jeste w pojezdzie!");
					new idd;
					new valid = PlayerInfo[playerid][pCarKey][0] + PlayerInfo[playerid][pCarKey][1] + PlayerInfo[playerid][pCarKey][2] + PlayerInfo[playerid][pCarKey][3] + PlayerInfo[playerid][pCarKey][4];
					if(valid == 0) return SendClientMessage(playerid, COLOR_GREY, "Ten pojazd nie nalezy do ciebie!");
					new car = GetPlayerVehicleID(playerid);
					if(PersonalCar(playerid) == -1) return SCM(playerid, COLOR_LGREEN, "* Nu esti in unul dintre vehiculele tale personale!");
					idd = PersonalCar(playerid);
					if(idd == 0) return SendClientMessage(playerid, COLOR_GREY, "Ten pojazd nie nalezy do ciebie!");
					if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nu esti in vehiculul tau personal");
                    pCarID[playerid] = CarInfo[idd][Spawned];
					GetPlayerPos(playerid, pPos[playerid][0], pPos[playerid][1], pPos[playerid][2]);
                    pInteriorID[playerid] = GetPlayerInterior(playerid), pVirtual[playerid] = GetPlayerVirtualWorld(playerid);
					SetVehiclePos(car, -1948.0808, 258.7329, 40.7669);
					SetVehicleVirtualWorld(car, playerid+1);
					SetPlayerVirtualWorld(playerid, playerid+1);
					SetPlayerCameraPos(playerid, -1956.2145, 261.2427, 42.3533);
					SetPlayerCameraLookAt(playerid, -1955.2532, 260.9547, 42.1530);
					SetVehicleZAngle(car, 46.4705);
					InShop[playerid] = 1;
					pCar[playerid] = idd;
					TextDrawShowForPlayer(playerid, HiddTD[0]);
					TextDrawShowForPlayer(playerid, HiddTD[1]);
					TextDrawShowForPlayer(playerid, HiddTD[2]);
					TextDrawShowForPlayer(playerid, HiddTD[3]);
					TextDrawShowForPlayer(playerid, HiddTD[4]);
					PlayerTextDrawShow(playerid, HiddTDs[0]);
					PlayerTextDrawShow(playerid, HiddTDs[1]);
					PlayerTextDrawShow(playerid, HiddTDs[2]);
					SelectTextDraw(playerid, 0xFF0000FF);
					PlayerTextDrawSetString(playerid, HiddTDs[0], "Color 1: 128");
					PlayerTextDrawSetString(playerid, HiddTDs[2], "Color 2: 128");
					pColor1[playerid] = 128;
					pColor2[playerid] = 128;
					ChangeVehicleColor(GetPlayerVehicleID(playerid), pColor2[playerid], pColor2[playerid]);
				}
				case 18: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 200) return SCM(playerid, COLOR_GREY, "Ai nevoie de 200 puncte premium dla a lua acest produs.");
					if(PlayerInfo[playerid][pFpunish] == 0) return SCM(playerid, COLOR_GREY, "Nu ai faction punish.");
					PlayerInfo[playerid][pPremiumPoints] -= 200;
					PlayerInfo[playerid][pFpunish] = 0;
					Update(playerid, pFpunishx);
				}
				case 19: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 200) return SCM(playerid, COLOR_GREY, "Ai nevoie de 200 puncte premium dla a lua acest produs.");
					if(PlayerInfo[playerid][pWarns] == 0) return SCM(playerid, COLOR_GREY, "Nu ai warn-uri.");
					PlayerInfo[playerid][pPremiumPoints] -= 200;
					PlayerInfo[playerid][pWarns] = 0;
					Update(playerid, pWarnsx);
				}
				case 20: {
		            if(PlayerInfo[playerid][pPremiumPoints] < 1000) return SCM(playerid, COLOR_GREY, "Ai nevoie de 200 puncte premium dla a lua acest produs.");
					if(GetSlots(playerid) == 10) return SCM(playerid, -1, "Ai numarul maxim de sloturi!");
					if(PlayerInfo[playerid][pSlot][0] == 0) PlayerInfo[playerid][pSlot][0] = 1;
					else if(PlayerInfo[playerid][pSlot][1] == 0) PlayerInfo[playerid][pSlot][1] = 1;
					else if(PlayerInfo[playerid][pSlot][2] == 0) PlayerInfo[playerid][pSlot][2] = 1;
					else if(PlayerInfo[playerid][pSlot][3] == 0) PlayerInfo[playerid][pSlot][3] = 1;
					else if(PlayerInfo[playerid][pSlot][4] == 0) PlayerInfo[playerid][pSlot][4] = 1;		
					UpdateSlots(playerid);
					PlayerInfo[playerid][pPremiumPoints] -= 1000;
					SCM(playerid, COLOR_GOLD, "Kupiles slot dla vehicule in schimbul a 800 puncte premium.");	
				}				
		    }
		    Update(playerid, pPremiumPointsx);
		}
		case DIALOG_CHANGENAME: {
			if(!response) return ShowShop(playerid);
			if(strlen(inputtext) < 2 || strlen(inputtext) > 24) {
				SendClientMessage(playerid, COLOR_GREY, "Nazwale musi miea miedzy 3 si 24 znakami.");
				ShowPlayerDialog(playerid, DIALOG_CHANGENAME, DIALOG_STYLE_INPUT, "Zakup:", "{FFFFFF}Esti pe cale sa-ti creezi {D10A0A}schimbi numele{FFFFFF}.\nTot ce trebuie sa faci in acest moment, este sa-ti alegi un nume care nu este luat de altcineva.\nLimit jest de 3{FFFFFF} a {D10A0A}24{FFFFFF} znakami.", "Ok", "Wróc");
			}
	        new cont = MySQLCheckAccount(inputtext);
	        if(cont == 1) {
				ShowPlayerDialog(playerid, DIALOG_CHANGENAME, DIALOG_STYLE_INPUT, "Zakup:", "{FFFFFF}Esti pe cale sa-ti creezi {D10A0A}schimbi numele{FFFFFF}.\nTot ce trebuie sa faci in acest moment, este sa-ti alegi un nume care nu este luat de altcineva.\nLimit jest de 3{FFFFFF} a {D10A0A}24{FFFFFF} znakami.", "Ok", "Wróc");
				SCM(playerid, COLOR_GREY, "Acest nume este deja luat. Alege-ti altul!");
				return 1;
		    }
		    PlayerInfo[playerid][pPremiumPoints] -= 30;
		    Update(playerid, pPremiumPointsx);
		    format(string, sizeof(string), "Gratulacje! Ti-ai schimbat numele in %s.", inputtext);
			SCM(playerid, COLOR_GOLD, string);
			GetPlayerName(playerid, PlayerInfo[playerid][pUsername], MAX_PLAYER_NAME);
			new clanid = PlayerInfo[playerid][pClan];
			if(clanid != 0) SCM(playerid, COLOR_GOLD, "Deoarece faci parte dintr-un clan, tagul ti-a fost dat Wróc fara sa se intample vreo problema.");
			format(query, sizeof(query), "UPDATE `users` SET `Name`='%s' WHERE `ID`='%d'", GetName(playerid), PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL, query);
		}
		case DIALOG_SHOW: {
			if(!response) return 1;
			switch(listitem) {
			    case 0: {
					if(PlayerInfo[playerid][pShowJob] == 0) {
					    if(PlayerInfo[playerid][pShowFaction] == 1) {
					        SCM(playerid, COLOR_GREY, "Nu poti folosi in acelasi timp si Opcjea de a vedea 'Informatiile despre factiune' atata timp [...]");
					        SCM(playerid, COLOR_YELLOW2, "[...] cat activezi si aceasta Opcje deoarece s-ar putea creea buguri.");
					        return 1;
					    }
					    SCM(playerid, COLOR_WHITE, "Ai Aktywuj Opcjea de a vedea informatii despre job.");
					    SCM(playerid, COLOR_WHITE, "Vei vedea detaliile despre job automat in momentul in care muncesti.");
					    PlayerInfo[playerid][pShowJob] = 1;
					}
					else {
					    SCM(playerid, COLOR_WHITE, "Ai Dezaktywacja Opcjea de a vedea informatii despre job.");
					    SCM(playerid, COLOR_WHITE, "Acum, nu vei mai vedea detaliile despre job.");
					    PlayerInfo[playerid][pShowJob] = 0;
					    if(JobWorking[playerid] == 1) PlayerTextDrawHide(playerid, JobTD);
					}
				}
			    case 1: {
					if(PlayerInfo[playerid][pShowFaction] == 0) {
					    if(PlayerInfo[playerid][pMember] == 0) return SCM(playerid, COLOR_GREY, "Aceasta Opcje este disponibila doar membrilor factiuniilor.");
					    if(PlayerInfo[playerid][pShowJob] == 1) {
					        SCM(playerid, COLOR_GREY, "Nu poti folosi in acelasi timp si Opcjea de a vedea 'Informatiile despre factiune' atata timp [...]");
					        SCM(playerid, COLOR_YELLOW2, "[...] cat activezi si aceasta Opcje deoarece s-ar putea creea buguri.");
					        return 1;
					    }
					    SCM(playerid, COLOR_WHITE, "Ai Aktywuj Opcjea de a vedea informatiile despre factiune.");
					    PlayerInfo[playerid][pShowFaction] = 1;
					}
					else {
					    SCM(playerid, COLOR_WHITE, "Ai Dezaktywacja Opcjea de a vedea informatiile despre factiune.");
					    PlayerInfo[playerid][pShowFaction] = 0;
					    PlayerTextDrawHide(playerid, JobTD);
					}
			    }
			}
			Update(playerid, pShowJobx);
			Update(playerid, pShowFPx);
			Update(playerid, pShowLogox);
			Update(playerid, pShowCeasx);
			Update(playerid, pShowFactionx);
		}
		case DIALOG_EDYTUJFRAKCJE: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pAdmin] < 6) return 1;
			switch(listitem) {
				case 0: ShowPlayerDialog(playerid, DIALOG_EDYTUJFRAKCJE+1, DIALOG_STYLE_INPUT, "Nazwa frakcji:", "Wpisz now¹ nazwê frakcji", "Ok", "Anuluj");
				case 1: ShowPlayerDialog(playerid, DIALOG_EDYTUJFRAKCJE+1, DIALOG_STYLE_INPUT, "Respawn frakcjyjny:", "Wpisz nowe koordynaty w ktorych ma byc spawn\nUzywaj: x, y, z", "Ok", "Anuluj");
				case 2: ShowPlayerDialog(playerid, DIALOG_EDYTUJFRAKCJE+1, DIALOG_STYLE_INPUT, "Virtual World:", "Wpisz numer nowego vw respawnu frakcji.", "Ok", "Anuluj");
				case 3: ShowPlayerDialog(playerid, DIALOG_EDYTUJFRAKCJE+1, DIALOG_STYLE_INPUT, "Interior", "Wpisz nowy numer interiora frakcji (TYLKO TE Z  ORGNINALNE GTA SA W RAZIE W)", "Ok", "Anuluj");
				case 4: ShowPlayerDialog(playerid, DIALOG_EDYTUJFRAKCJE+1, DIALOG_STYLE_INPUT, "Sejf frakcyjny:", "Wpisz nowa kwote ktora ma sie znajdywac w sejfie frakcji.", "Ok", "Anuluj");
			}
			EditJob[playerid] = listitem;
		}

		case DIALOG_EDYTUJFRAKCJE+1: {
			new
				amount = strval(inputtext),
				fac = EditJobID[playerid];

			if(!response) {
				new szTitle[256], szDialog[1024];
				format(szDialog, sizeof(szDialog),
					"Nazwa frakcji\t\t%s\nRespawn\t\t%f, %f, %f\nVW\t\t%d\n\
					Interior\t\t%d\nSejf\t\t%d",
				DynamicFactions[fac][fName], DynamicFactions[fac][fcX], DynamicFactions[fac][fcY],
				DynamicFactions[fac][fcZ], DynamicFactions[fac][fVW], DynamicFactions[fac][fInterior], DynamicFactions[fac][fBank]);
				format(szTitle, sizeof(szTitle), "Edytujesz frakcje %s", DynamicFactions[fac][fName]);
				ShowPlayerDialog(playerid, DIALOG_EDYTUJFRAKCJE, DIALOG_STYLE_TABLIST, szTitle, szDialog, "Wybierz", "Anuluj");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] < 6) return 1;
			switch(EditJob[playerid]) {
				case 0: {
					format(DynamicFactions[fac][fName], 64, inputtext);
					format(string, sizeof(string), "Nazwa frakcji o ID %d zostala zmodyfikowana na %s.", fac, inputtext);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_real_escape_string(inputtext, hackmysql);
					mysql_format(SQL, query, sizeof(query), "UPDATE `factions` SET `Name`='%s' WHERE `ID`='%d'", hackmysql, fac);
					mysql_tquery(SQL, query, "", "");
				}
				case 1: {
					new Float: Pos[3];
					if(sscanf(inputtext, "fff", Pos[0], Pos[1], Pos[2])) return SendClientMessage(playerid, COLOR_GREY, "Zly format!");
					DynamicFactions[fac][fcX] = Pos[0];
					DynamicFactions[fac][fcY] = Pos[1];
					DynamicFactions[fac][fcZ] = Pos[2];
					format(string, sizeof(string), "Frakcja %s ma teraz nowe koordynaty respawnu: %f, %f, %f.", DynamicFactions[fac][fName], Pos[0], Pos[1], Pos[2]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL, query, sizeof(query), "UPDATE `factions` SET `IntX`='%f', `IntY`='%f', `IntZ`='%f' WHERE `ID`='%d'", Pos[0], Pos[1], Pos[2], fac);
					mysql_tquery(SQL, query, "", "");
				}
				case 2: {
					DynamicFactions[fac][fVW] = amount;
					format(string, sizeof(string), "Respawn frakcji %s ma teraz nowy Virtual World: %d.", DynamicFactions[fac][fName], amount);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL, query, sizeof(query), "UPDATE `factions` SET `VW`='%d' WHERE `ID`='%d'", amount, fac);
					mysql_tquery(SQL, query, "", "");
				}
				case 3: {
					DynamicFactions[fac][fInterior] = amount;
					format(string, sizeof(string), "Respawn frakcji %s ma teraz nowy Interior: %d.", DynamicFactions[fac][fName], amount);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL, query, sizeof(query), "UPDATE `factions` SET `Interior`='%d' WHERE `ID`='%d'", amount, fac);
					mysql_tquery(SQL, query, "", "");
				}
				case 4: {
					DynamicFactions[fac][fBank] = amount;
					format(string, sizeof(string), "Frakcja %s ma teraz %d kasy w sejfie frakcyjnym!", DynamicFactions[fac][fName], amount);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL, query, sizeof(query), "UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'", amount, fac);
					mysql_tquery(SQL, query, "", "");
				}
			}
		}

		case DIALOG_EDITJOB: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pAdmin] < 6) return 1;
			switch(listitem) {
				case 0: ShowPlayerDialog(playerid, DIALOG_EDITJOB+1, DIALOG_STYLE_INPUT, "Job Nume:", "Wpisz putin mai jos valoarea care vrei sa o aiba aceasta variabila.", "Ok", "Anuluj");
				case 1: ShowPlayerDialog(playerid, DIALOG_EDITJOB+1, DIALOG_STYLE_INPUT, "Nivel:", "Wpisz putin mai jos valoarea care vrei sa o aiba aceasta variabila.", "Ok", "Anuluj");
				case 2: ShowPlayerDialog(playerid, DIALOG_EDITJOB+1, DIALOG_STYLE_INPUT, "Position:", "Wpisz putin mai jos valoarea care vrei sa o aiba aceasta variabila.\nUzycie: x, y, z", "Ok", "Anuluj");
				case 3: ShowPlayerDialog(playerid, DIALOG_EDITJOB+1, DIALOG_STYLE_INPUT, "Type:", "Wpisz putin mai jos valoarea care vrei sa o aiba aceasta variabila.", "Ok", "Anuluj");
				case 4: ShowPlayerDialog(playerid, DIALOG_EDITJOB+1, DIALOG_STYLE_INPUT, "Skill 1 Veh:", "Wpisz putin mai jos valoarea care vrei sa o aiba aceasta variabila.", "Ok", "Anuluj");
				case 5: ShowPlayerDialog(playerid, DIALOG_EDITJOB+1, DIALOG_STYLE_INPUT, "Skill 2 Veh:", "Wpisz putin mai jos valoarea care vrei sa o aiba aceasta variabila.", "Ok", "Anuluj");
				case 6: ShowPlayerDialog(playerid, DIALOG_EDITJOB+1, DIALOG_STYLE_INPUT, "Skill 3 Veh:", "Wpisz putin mai jos valoarea care vrei sa o aiba aceasta variabila.", "Ok", "Anuluj");
				case 7: ShowPlayerDialog(playerid, DIALOG_EDITJOB+1, DIALOG_STYLE_INPUT, "Skill 4 Veh:", "Wpisz putin mai jos valoarea care vrei sa o aiba aceasta variabila.", "Ok", "Anuluj");
				case 8: ShowPlayerDialog(playerid, DIALOG_EDITJOB+1, DIALOG_STYLE_INPUT, "Skill 5 Veh:", "Wpisz putin mai jos valoarea care vrei sa o aiba aceasta variabila.", "Ok", "Anuluj");
			}
			EditJob[playerid] = listitem;
		}

		case DIALOG_EDITJOB+1: {
			new
				amount = strval(inputtext),
				job = EditJobID[playerid];

			if(!response) {
				new szTitle[256], szDialog[1024];
				format(szDialog, sizeof(szDialog),
					"Job Name\t\t%s\nLevel\t\t%d\nPosition\t\t%f, %f, %f\nLegal\t\t%d\n\
					Skill 1 Veh\t\t%d\nSkill 2 Veh\t\t%d\nSkill 3 Veh\t\t%d\nSkill 4 Veh\t\t%d\nSkill 5 Veh\t\t%d\nSkill 6 Veh\t\t%d",
				JobInfo[job][jName], JobInfo[job][jLevel], JobInfo[job][jPosX], JobInfo[job][jPosY],
				JobInfo[job][jPosZ], JobInfo[job][jLegal], JobInfo[job][jSkill1Veh], JobInfo[job][jSkill2Veh], JobInfo[job][jSkill3Veh], JobInfo[job][jSkill4Veh],
				JobInfo[job][jSkill5Veh], JobInfo[job][jSkill6Veh]);
				format(szTitle, sizeof(szTitle), "Edit job %d", job);
				ShowPlayerDialog(playerid, DIALOG_EDITJOB, DIALOG_STYLE_TABLIST, szTitle, szDialog, "Wybierz", "Anuluj");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] < 6) return 1;
			switch(EditJob[playerid]) {
				case 0: {
					format(JobInfo[job][jName], 64, inputtext);
					format(string, sizeof(string), "Ai modificat 'Job Name' la jobul cu ID-ul %d, in: %s.", job, inputtext);
					SendClientMessage(playerid, COLOR_WHITE, string);
					DestroyDynamic3DTextLabel(JobInfo[job][jLabel]);
					DestroyDynamicPickup(JobInfo[job][jPickup]);
					format(string, sizeof(string), "{D10A0A}Praca %s{FFFFFF}\nAby podjac te prace, potrzebujesz poziomu {D10A0A}%d{FFFFFF}.\nWpisz {D10A0A}/getjob{FFFFFF} aby podjac te prace.", JobInfo[job][jName], JobInfo[job][jLevel]);
					JobInfo[job][jLabel] = CreateDynamic3DTextLabel(string, 0xFFFFFF99, JobInfo[job][jPosX], JobInfo[job][jPosY], JobInfo[job][jPosZ], 25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
					JobInfo[job][jPickup] = CreateDynamicPickup(1275, 23, JobInfo[job][jPosX], JobInfo[job][jPosY], JobInfo[job][jPosZ], -1, -1, -1, 100.0);
					mysql_real_escape_string(inputtext, hackmysql);
					mysql_format(SQL, query, sizeof(query), "UPDATE `jobs` SET `Name`='%s' WHERE `ID`='%d'", hackmysql, job);
					mysql_tquery(SQL, query, "", "");
				}
				case 1: {
					JobInfo[job][jLevel] = amount;
					DestroyDynamic3DTextLabel(JobInfo[job][jLabel]);
					DestroyDynamicPickup(JobInfo[job][jPickup]);
					format(string, sizeof(string), "{D10A0A}Praca %s{FFFFFF}\nAby podjac te prace, potrzebujesz poziomu {D10A0A}%d{FFFFFF}.\nWpisz {D10A0A}/getjob{FFFFFF} aby podjac te prace.", JobInfo[job][jName], JobInfo[job][jLevel]);					JobInfo[job][jLabel] = CreateDynamic3DTextLabel(string, 0xFFFFFF99, JobInfo[job][jPosX], JobInfo[job][jPosY], JobInfo[job][jPosZ], 25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
					JobInfo[job][jPickup] = CreateDynamicPickup(1275, 23, JobInfo[job][jPosX], JobInfo[job][jPosY], JobInfo[job][jPosZ], -1, -1, -1, 100.0);
					format(string, sizeof(string), "Ai modificat 'Level' la jobul cu ID-ul %d, in: %d.", job, amount);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL, query, sizeof(query), "UPDATE `jobs` SET `NeedLevel`='%d' WHERE `ID`='%d'", amount, job);
					mysql_tquery(SQL, query, "", "");
				}
				case 2: {
					new Float: Pos[3];
					if(sscanf(inputtext, "fff", Pos[0], Pos[1], Pos[2])) return SendClientMessage(playerid, COLOR_GREY, "Zly format!");
					JobInfo[job][jPosX] = Pos[0];
					JobInfo[job][jPosY] = Pos[1];
					JobInfo[job][jPosZ] = Pos[2];
					DestroyDynamic3DTextLabel(JobInfo[job][jLabel]);
					DestroyDynamicPickup(JobInfo[job][jPickup]);
					format(string, sizeof(string), "{D10A0A}Praca %s{FFFFFF}\nAby podjac te prace, potrzebujesz poziomu {D10A0A}%d{FFFFFF}.\nWpisz {D10A0A}/getjob{FFFFFF} aby podjac te prace.", JobInfo[job][jName], JobInfo[job][jLevel]);					JobInfo[job][jLabel] = CreateDynamic3DTextLabel(string, 0xFFFFFF99, JobInfo[job][jPosX], JobInfo[job][jPosY], JobInfo[job][jPosZ], 25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
					JobInfo[job][jPickup] = CreateDynamicPickup(1275, 23, JobInfo[job][jPosX], JobInfo[job][jPosY], JobInfo[job][jPosZ], -1, -1, -1, 100.0);
					format(string, sizeof(string), "Ai modificat 'Position' la jobul cu ID-ul %d, in: %f, %f, %f.", job, Pos[0], Pos[1], Pos[2]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL, query, sizeof(query), "UPDATE `jobs` SET `PosX`='%f', `PosY`='%f', `PosZ`='%f' WHERE `ID`='%d'", Pos[0], Pos[1], Pos[2], job);
					mysql_tquery(SQL, query, "", "");
				}
				case 3: {
					JobInfo[job][jLegal] = amount;
					format(string, sizeof(string), "Ai modificat 'Legal' la jobul cu ID-ul %d, in: %d.", job, amount);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL, query, sizeof(query), "UPDATE `jobs` SET `Legal`='%d' WHERE `ID`='%d'", amount, job);
					mysql_tquery(SQL, query, "", "");
				}
				case 4: {
					JobInfo[job][jSkill1Veh] = amount;
					format(string, sizeof(string), "Ai modificat 'Skill1Veh' la jobul cu ID-ul %d, in: %d.", job, amount);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL, query, sizeof(query), "UPDATE `jobs` SET `Skill1Veh`='%d' WHERE `ID`='%d'", amount, job);
					mysql_tquery(SQL, query, "", "");
				}
				case 5: {
					JobInfo[job][jSkill2Veh] = amount;
					format(string, sizeof(string), "Ai modificat 'Skill2Veh' la jobul cu ID-ul %d, in: %d.", job, amount);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL, query, sizeof(query), "UPDATE `jobs` SET `Skill2Veh`='%d' WHERE `ID`='%d'", amount, job);
					mysql_tquery(SQL, query, "", "");
				}
				case 6: {
					JobInfo[job][jSkill3Veh] = amount;
					format(string, sizeof(string), "Ai modificat 'Skill3Veh' la jobul cu ID-ul %d, in: %d.", job, amount);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL, query, sizeof(query), "UPDATE `jobs` SET `Skill3Veh`='%d' WHERE `ID`='%d'", amount, job);
					mysql_tquery(SQL, query, "", "");
				}
				case 7: {
					JobInfo[job][jSkill4Veh] = amount;
					format(string, sizeof(string), "Ai modificat 'Skill4Veh' la jobul cu ID-ul %d, in: %d.", job, amount);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL, query, sizeof(query), "UPDATE `jobs` SET `Skill4Veh`='%d' WHERE `ID`='%d'", amount, job);
					mysql_tquery(SQL, query, "", "");
				}
				case 8: {
					JobInfo[job][jSkill5Veh] = amount;
					format(string, sizeof(string), "Ai modificat 'Skill5Veh' la jobul cu ID-ul %d, in: %d.", job, amount);
					SendClientMessage(playerid, COLOR_WHITE, string);
					mysql_format(SQL, query, sizeof(query), "UPDATE `jobs` SET `Skill5Veh`='%d' WHERE `ID`='%d'", amount, job);
					mysql_tquery(SQL, query, "", "");
				}
			}
		}

		case DIALOG_JOBS: {
			if(!response) return 1;
			if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
			new jid = listitem +1;
			format(string, sizeof(string), "Na mapie zosta³a zaznaczona lokalizacja pracy %s.", JobInfo[jid][jName]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			SetPlayerCheckpointEx(playerid, JobInfo[jid][jPosX], JobInfo[jid][jPosY], JobInfo[jid][jPosZ], 5.0);
			CP[playerid] = 53;
		}

		case DIALOG_TRUCKER: {
		    if(JobWorking[playerid] == 0) return 1;
			TruckerRoute[playerid] = listitem;
			CP[playerid] = 51;
			SetPlayerCheckpointEx(playerid, TruckerPos[listitem][0], TruckerPos[listitem][1], TruckerPos[listitem][2], 6.0);
	        new Float:pX,Float:pY,Float:pZ,Float:vA;
			GetPlayerPos(playerid,pX,pY,pZ);
			GetVehicleZAngle(GetPlayerVehicleID(playerid),vA);
			Trailer[playerid] = CreateVehicleEx(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
			SetTimerEx("AttachTrailer", 1000, 0, "i", playerid);
			new Float:x, Float:y, Float:z;
			GetVehiclePos(Trailer[playerid], x, y, z);
			if(TruckerRoute[playerid] == 14 || TruckerRoute[playerid] == 13 || TruckerRoute[playerid] == 12) {
			Trucker[Trailer[playerid]][Truck3D] = Create3DTextLabel("** przyczepa ma podejrzane oznakowanie **", 0xC2A2DAAA, x, y, z, 40.0, 0);
			Attach3DTextLabelToVehicle(Trucker[Trailer[playerid]][Truck3D], Trailer[playerid], 0.0, 0.0, 1.0);
			} else {
			Trucker[Trailer[playerid]][Truck3D] = Create3DTextLabel("** przyczepa ma normalne oznakowanie **", 0xC2A2DAAA, x, y, z, 40.0, 0);
			Attach3DTextLabelToVehicle(Trucker[Trailer[playerid]][Truck3D], Trailer[playerid], 0.0, 0.0, 1.0);
			}
		}
	} 
	if(dialogid == DIALOG_HELP) {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				strcat(string, "/stats - Wyswietla statystyki Twojego konta.\n");
				strcat(string, "/buylevel - Kup nast?pny poziom.\n");
				strcat(string, "/changeepass - Zmien haslo do konta .\n");
				strcat(string, "/changeemail - Zmien konto Email.\n");
				strcat(string, "/donate - Dotacje na serwer.\n");
				strcat(string, "/mydonations - Sprawd? status swoich dotacji.\n");
				strcat(string, "/findhouse - Prowadzi ci? do domu.\n");
				strcat(string, "/findbiz - Prowadzi ci? do biznesu.\n");
				strcat(string, "/findsbiz - Prowadzi ci? do Static Biz.\n");
				strcat(string, "/fmotd - Poinformuj o frakcji.\n");
				strcat(string, "/showmotd - Zobacz og?oszenie motd.\n");
				ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Pomoc:", string, "Anuluj", "");
			}
			case 1: {
				strcat(string, "/id: - Wyswietla dane dotycz?ce gracza.\n");
				strcat(string, "/pay - Wy?lij pieni?dze do gracza.\n");
				strcat(string, "/buy Kupuj przedmioty ze sklepu.\n");
				strcat(string, "/drink - Pij napoje w barze.\n");
				strcat(string, "/skills - Pokazuje umiejetnosci pracy.\n");
				strcat(string, "/sleep - Aktywacja modul AFK.\n");
				strcat(string, "/spawn - Zmien lokalizacje odrodzenia.\n");
				strcat(string, "/eject - Wyrzu? pasa?era z pojazdu.\n");
				strcat(string, "/rob - Organizowanie napadu.\n");
				strcat(string, "/service - Zadzwo? do mechanika serwisowego.\n");
				strcat(string, "/report - Skontaktuj sie z administratorem.\n");
				strcat(string, "/n - Pomaga nowym graczom.\n");
				strcat(string, "/speedlimit - Ogranicza pr?dko?? pojazdu.\n");
				strcat(string, "/usedrugs - Uzywa narkotyki.\n");
				strcat(string, "/tankuj - Napelnij zbiornik pojazdu.\n");
				strcat(string, "/karnister - Napelnij pojemnik benzyn?.\n");
				strcat(string, "/carradio - Wlacza radio w aucie.\n");
				strcat(string, "/mp3 - Uruchom muzyke z dowolnego miejsca.\n");
				strcat(string, "/time - Pokaz czas w grze.\n");
				strcat(string, "/donate - Mozesz przekazac darowizne na serwer.\n");
				strcat(string, "/mydonations - Mozesz zobaczy? wszystkie darowizny na serwer.\n");
				ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Pomoc:", string, "Anuluj", "");
			}
			case 2: {
				strcat(string, "/jobs - Lista zada?.\n");
				strcat(string, "/jobhelp - Dostepne komendy Uzywane w pracy.\n");
				strcat(string, "/getjob -  Dolacz do pracy.\n");
				strcat(string, "/quitjob - Rezygnacja z pracy.\n");
				strcat(string, "/pracuj  - Aktywuj zadanie.\n");
				strcat(string, "/stopwork - Oddalenie zadania/pracy.\n");
				strcat(string, "/skills - Pokaz poziomy umiejetnosci w pracy.\n");
				ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Pomoc:", string, "Anuluj", "");
			}
			case 3: {
				strcat(string, "/balance - Pokazuje aktualne saldo.\n");
				strcat(string, "/withdraw - Wyciaga kwote z Twojego konta.\n");
				strcat(string, "/deposit - Wplac kwote na swoje konto.\n");
				strcat(string, "/transfer - Przekaz kwote innemu graczowi.\n");
				strcat(string, "/buyvehicle - Kup Samochód w sklepie\n");
				ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Pomoc:", string, "Anuluj", "");
			}
			case 4: {
				strcat(string, "/silnik - Uruchamia / zatrzymuje silnik.\n");
				strcat(string, "/lock - Samochód otwarty / zamkniety.\n");
				strcat(string, "/park - Zaparkuj Samochód w miejscu.\n");
				strcat(string, "/carplate - Zmien numer rejestracyjny.\n");
				strcat(string, "/givekey - Dajesz klucz do pojazdu.\n");				
				strcat(string, "/throwkey - Upusc klucz pojazdu (dostepny dla tego, który dales / podales).\n");
				strcat(string, "/wymiana - Mo¿liwoæ wymiany z innym graczem.\n");
				strcat(string, "/sellcarto - Sprzedajesz pojazd graczowi.\n");
				strcat(string, "/carcolor - Ustaw kolor pojazdu.\n");
				strcat(string, "/v - Dost?p do menu pojazdu (+ inne opcje).\n");
				ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Pomoc:", string, "Anuluj", "");
			}
			case 5: {				
				strcat(string, "/zamek - Otwórz/zamknij dom.\n");
				strcat(string, "/wynajmowanie - Wybierz, czy gracze mog¹ wynajmowac mieszkanie w domu.\n");
				strcat(string, "/setrent - Wybierz czynsz.\n");
				strcat(string, "/evict - Eksmituj lokatora.\n");
				strcat(string, "/evictall - Eksmituj wszystkich lokatorów online.\n");
				strcat(string, "/sellhousetostate - Sprzedaj dom panstwu.\n");
				strcat(string, "/sprzedajdom - Wybierz cen? sprzedazy domu.\n");
				strcat(string, "/houseupgrade - Kup ?ycie / zbroj? dla domu.\n");
				strcat(string, "/housewithdraw - Wyciagnij pieni?dze z sejfu.\n");
				strcat(string, "/houseinfo - Informacje o domu.\n");
				strcat(string, "/furniture - Kupujesz przedmioty do domu.\n");
				strcat(string, "/editfurniture - Edytuj elementy dla domu.\n");
				ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Pomoc:", string, "Anuluj", "");
			}
			case 6: {
				strcat(string, "/enter - Wchodzenie do interiorów.\n");
				strcat(string, "/sellbiz - Wybierz cene sprzedazy Biz.\n");
				strcat(string, "/bizname - Zmien nazwe Biz.\n");
				strcat(string, "/zamek - Otwieranie lub zamykanie biznesu.\n");
				strcat(string, "/sellbiztostate - Sprzedaj biznes.\n");
				strcat(string, "/bizwithdraw - Wyplacanie pieniedzy.\n");
				strcat(string, "/bizstatus - Status Biznesu.\n");
				ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Pomoc:", string, "Anuluj", "");
			}
			case 7: {
				strcat(string, "/locations Wyswietla menu z wacnymi lokalizacjami.\n");
				ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Pomoc:", string, "Anuluj", "");
			}
			case 8: {
		  		if(PlayerInfo[playerid][pMember] != 0)
		    	{
		     		if(IsACop(playerid))
		            {
						SCM(playerid, -1, "Komendy dla PD:");
				        SendClientMessage(playerid,COLOR_WHITE,"/odkuj /przeszukaj /clear /d(epartments) /r(adio) /wanted /m(egaphone) /tazer /kajdanki /untie");
				        SendClientMessage(playerid,COLOR_WHITE,"/mandat /duty /zabierz /startradar /stopradar /mdc /su /arrest /so");
			    	}
		     		else if(IsAMember(playerid))
			    	{
						SCM(playerid, -1, "Komendy dla mafii:");
				        SendClientMessage(playerid,COLOR_WHITE,"/attack, /order, /f, /fdrugs, /fmats, /fdeposit, /tie, /untie.");
			    	}
		    		else if(PlayerInfo[playerid][pMember] == 8)
				    {
						SCM(playerid, -1, "Komendy TTC:");
		        		SendClientMessage(playerid,COLOR_WHITE,"/tow, /towpoints, /f, /fdrugs, /fmats, /fdeposit.");
		    		}
		    		else if(PlayerInfo[playerid][pMember] == 9)
			    	{
						SCM(playerid, -1, "Komendy dla SN");
			        	SendClientMessage(playerid,COLOR_WHITE,"Faction: /news, /live, /f, /fdrugs, /fmats, /fdeposit.");
			    	}
		            else if(PlayerInfo[playerid][pMember] == 11)
			    	{
						SCM(playerid, -1, "Komendy Hitman Agency");
			        	SendClientMessage(playerid,COLOR_WHITE,"/gethit, /leavehit, /kontrakty, /mojekontrakty /f, /fdrugs, /fmats, /fdeposit.");
		            }
		            else if(PlayerInfo[playerid][pMember] == 12)
			    	{
						SCM(playerid, -1, "Komendy Urzednikow:");
			        	SendClientMessage(playerid,COLOR_WHITE,"/givelicense, /startlesson, /stoplesson, /acceptlic, /closelic, /clicense, /license, /f, /fdrugs, /fmats, /fdeposit.");
		            }
		            else if(PlayerInfo[playerid][pMember] == 13)
			    	{
						SCM(playerid, -1, "Komendy dla taksówkarzy:");
			        	SendClientMessage(playerid,COLOR_WHITE,"/akceptuj taxi, /fare, /f, /fdrugs, /fmats, /fdeposit.");
		            }
		            else if(PlayerInfo[playerid][pMember] == 14)
			    	{
						SCM(playerid, -1, "Komendy dla lekarzy:");
			        	SendClientMessage(playerid,COLOR_WHITE,"Frakcja: /healto, /f, /fdrugs, /fmats, /fdeposit.");
		            }
		        }
		        else return SendClientMessage(playerid,COLOR_GREY, "Nie jeste czlonkiem frakcji.");
			}
			case 9: {
			    if(PlayerInfo[playerid][pLeader] == 0) return SCM(playerid, -1, "Nie jeste liderem!");
				strcat(string, "/invite - Zapraszasz gracza frakcji.\n");
				strcat(string, "/uninvite - Strzel w gracza frakcji.\n");
				strcat(string, "/giverank - Promuj gracza frakcji.\n");
				strcat(string, "/fjob - Sprawdz prace czlonka frakcji.\n");
				strcat(string, "/fwarn - Ostrzegasz gracza frakcji.\n");
				strcat(string, "/funwarn - Usun ostrzezenie frakcji.\n");
				strcat(string, "/fvr - Respawnuje samochody frakcyjne.\n");
				strcat(string, "/members - Pokazuje graczy frakcji.\n");
				strcat(string, "/lc - Rozmawiaj miedzy przywódcami.\n");
				strcat(string, "/setstatus - Otwórz / zablokuj frakcje.\n");
				strcat(string, "/faction - Ustawiles kilka tygodniowych raportów.\n");
				strcat(string, "/raports - Sprawdz raporty czlonków.\n");
				ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Lider:", string, "Anuluj", "");
			}
		}
	}
	if(dialogid == DIALOG_DTRANSFER)
	{
	    if(response)
	    {
	    	if(listitem == 0)
			{
			    SetPlayerPosEx(playerid,1529.1344,-1691.7327,6.2252);
			    SetPlayerInterior(playerid,0);
			    SetPlayerVirtualWorld(playerid,0);
			}
	    	if(listitem == 1)
			{
			    SetPlayerPosEx(playerid,611.1734,-583.4953,18.2109);
			    SetPlayerInterior(playerid,0);
			    SetPlayerVirtualWorld(playerid,0);
			}
	    	if(listitem == 2)
			{
			    SetPlayerPosEx(playerid,201.2595,1869.7244,13.1406);
			    SetPlayerInterior(playerid,0);
			    SetPlayerVirtualWorld(playerid,0);
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_MATERIALS)
	{
	    if(response)
	    {
	    	if(listitem == 0)
			{
				if(GetPlayerCash(playerid) < 900000) return SCM(playerid,COLOR_GREY, "Nie masz wymaganej kwoty.");
				PlayerInfo[playerid][pMats] += 1000000;
			    Update(playerid,pMatsx);
				SCM(playerid,COLOR_LIGHTBLUE,"Kupiles 1,000,000 materialy za $900,000.");
				GivePlayerCash(playerid,-1000000);
				Update(playerid,pCashx);
			}
			if(listitem == 1)
			{
				if(GetPlayerCash(playerid) < 1700000) return SCM(playerid,COLOR_GREY, "Nie masz wymaganej kwoty.");
			    PlayerInfo[playerid][pMats] += 2000000;
			    Update(playerid,pMatsx);
			    GivePlayerCash(playerid,-2000000);
			    Update(playerid,pCashx);
			    SCM(playerid,COLOR_LIGHTBLUE,"Kupiles 2 000 000 materialów za $1,700,000.");
			}
		}
	    return 1;
	}
	if(dialogid == DIALOG_MUS)
	{
	    if(response)
	    {
			PlayAudioStreamForPlayersInCar(vehicleid, inputtext);
		}
	    return 1;
	}

    if(dialogid == DIALOG_REGISTER)
	{
		if(response)
    	{
		    PlayerInfo[playerid][pSex] = 1;
		    SendClientMessage(playerid, COLOR_SERVER, "Rejestracja: {FFFFFF}Jestes mezczyzna.");
		    ShowPlayerDialog(playerid,DIALOG_REGISTER2,DIALOG_STYLE_INPUT,"Wiek:","Ile masz lat?","Ok","");
		    RegistrationStep[playerid] = 2;
		    SetPlayerInterior(playerid, 0);
	        PlayerInfo[playerid][pChar] = 250;
		    SetPlayerSkinEx(playerid, 250);
			PlayerInfo[playerid][pSkins][0] = 250;
			save_skin(playerid);
			new str1[512];
			format(str1,512,"UPDATE users SET `Sex`='1',`Model`='250' WHERE `ID`='%d'",PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL,str1);
		}
		else
		{
		    PlayerInfo[playerid][pSex] = 2;
		    SendClientMessage(playerid, COLOR_SERVER, "Rejestracja: {FFFFFF}Jestes kobieta.");
		    ShowPlayerDialog(playerid,DIALOG_REGISTER2,DIALOG_STYLE_INPUT,"Wiek:","Ile masz lat?","Ok","");
		    RegistrationStep[playerid] = 2;
		    SetPlayerInterior(playerid, 0);
	        PlayerInfo[playerid][pChar] = 216;
		    SetPlayerSkinEx(playerid, 216);
			PlayerInfo[playerid][pSkins][0] = 216;
			save_skin(playerid);
			new str1[512];
			format(str1,512,"UPDATE users SET `Sex`='2',`Model`='216' WHERE `ID`='%d'",PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL,str1);
		}
		return 1;
	}
	if(dialogid == DIALOG_REGISTER2)
	{
		new tmppass[64];
		mysql_real_escape_string(inputtext, tmppass);
		new age = strval(tmppass);
		if(age > 7 && age < 50 && response)
		{
			PlayerInfo[playerid][pAge] = age;
			new str1[512];
			format(str1,512,"UPDATE users SET `Age`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pAge],PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL,str1);
			RegistrationStep[playerid] = 3;
			format(string, sizeof(string), "Rejestracja: {FFFFFF}Wiek ustawiony na %d.",age);
			SendClientMessage(playerid, COLOR_SERVER, string);
			ShowPlayerDialog(playerid, DIALOG_REGISTER4, DIALOG_STYLE_INPUT, "Email:", "Jaki jest twój adres e-mail?\nJesli nie podasz waznego e-maila, nie bedziesz w stanie odzyskac swojego konta!", "Ok", "");
			SetPlayerInterior(playerid, 0);
		}
		else
		{
			ShowPlayerDialog(playerid,DIALOG_REGISTER2,DIALOG_STYLE_INPUT,"Wiek:","Ile masz lat?","Ok","");
			return 1;
		}
	}
	if(dialogid == DIALOG_NEWPASS) {
	    if(!response) return 1;
	    if(strcmp(inputtext, PlayerInfo[playerid][pKey])) {
			SCM(playerid, COLOR_WHITE, "Zle haslo! Wprowadz haslo, które juz skonfigurowace?!");
			return 1;
		}
		ShowPlayerDialog(playerid, DIALOG_NEWPASS1,DIALOG_STYLE_INPUT, "SERVER: Zmiana hasla:","Wpisz swoje NOWE haslo poni?ej!","Zmien","Anuluj");
	}
	if(dialogid == DIALOG_NEWPASS1) {
	    if(!response) return 1;
		new length = strlen(inputtext);
		if(length == 0 || length > 15)
		{
			ShowPlayerDialog(playerid, DIALOG_NEWPASS1,DIALOG_STYLE_INPUT, "SERVER: Zmiana hasla:","Wpisz swoje NOWE haslo poni?ej!","Zmien","Anuluj");
			return 1;
		}
		if(strlen(inputtext) > 1 && strlen(inputtext) < 16)
		{
            new emailtext[64];
			mysql_real_escape_string(inputtext, emailtext);
			strmid(PlayerInfo[playerid][pKey], emailtext, 0, strlen(emailtext), 64);
			new str1[512];
			format(str1,512,"UPDATE users SET `password`='%s' WHERE `ID`='%d'",PlayerInfo[playerid][pKey],PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL,str1);
			SCM(playerid, COLOR_WHITE, "Haslo zmienione!");
			SCM(playerid, 0x6db067FF, "Jesli podasz haslo innej osoby, administratorzy nie pomoga odzyskac konta.");
			SCM(playerid, 0x6db067FF, "Zabrania sie sprzedazy lub wymiany konta w grze. Jest to usankcjonowane perma banem.");
			format(string, sizeof(string), "Twoje nowe haslo to: %s", PlayerInfo[playerid][pKey]);
			SendClientMessage(playerid, COLOR_WARNING, string);
		}
		else ShowPlayerDialog(playerid, DIALOG_NEWPASS1,DIALOG_STYLE_INPUT, "Zmien haslo:","Wpisz haslo, które chcesz miec.","Ok","Anuluj");
	}
	if(dialogid == DIALOG_NEWEMAIL) {
	    if(strcmp(inputtext, PlayerInfo[playerid][pEmail])) {
			SCM(playerid, COLOR_WHITE, "Z?y email!");
			return 1;
		}
		ShowPlayerDialog(playerid, DIALOG_NEWEMAIL1,DIALOG_STYLE_INPUT, "SERVER: Zmien email:","Wpisz NOWY adres e-mail poni?ej!","Zmien","Anuluj");
	}
	if(dialogid == DIALOG_NEWEMAIL1) {
	    if(!response) return 1;
	    if(strval(inputtext) > 40) return ShowPlayerDialog(playerid, DIALOG_NEWEMAIL1,DIALOG_STYLE_INPUT, "SERVER: Zmien email:","Wpisz NOWY adres e-mail poni?ej!","Zmien","Anuluj");
		if(IsMail(inputtext) && response && strlen(inputtext)<30)
		{
            new emailtext[64];
			mysql_real_escape_string(inputtext, emailtext);
			strmid(PlayerInfo[playerid][pEmail], emailtext, 0, strlen(emailtext), 64);
			new str1[512];
			format(str1,512,"UPDATE users SET `Email`='%s' WHERE `ID`='%d'",PlayerInfo[playerid][pEmail],PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL,str1);
			SCM(playerid, COLOR_WHITE, "Email zmieniony!");
			SCM(playerid, 0x6db067FF, "Jesli podasz haslo innej osoby, administratorzy nie pomoga odzyskac konta.");
			SCM(playerid, 0x6db067FF, "Zabrania sie sprzedazy lub wymiany konta w grze. Jest to usankcjonowane perma banem.");
			format(string, sizeof(string), "Twój nowy email to: %s", PlayerInfo[playerid][pEmail]);
			SendClientMessage(playerid, COLOR_WARNING, string);			
		}
		else ShowPlayerDialog(playerid, DIALOG_NEWEMAIL1,DIALOG_STYLE_INPUT, "Zmien adres e-mail:","Wpisz adres e-mail, który chcesz miec.","Ok","Anuluj");
	}

 	if(dialogid == DIALOG_REGISTER4)
 	{
 		new length = strlen(inputtext);
		if(length > 40)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Wpisz kolejny e-mail (maksymalnie 40 znaków).");
			ShowPlayerDialog(playerid, DIALOG_REGISTER4, DIALOG_STYLE_INPUT, "Email:", "Jaki jest twój adres e-mail?\nJesli nie podasz waznego e-maila, nie bedziesz w stanie odzyskac swojego konta!", "Ok", "");
			return 1;
		}
		if(IsMail(inputtext) && response && strlen(inputtext)<30)
		{
            new emailtext[64];
			mysql_real_escape_string(inputtext, emailtext);
			strmid(PlayerInfo[playerid][pEmail], emailtext, 0, strlen(emailtext), 64);
			new str1[512];
			format(str1,512,"UPDATE users SET `Email`='%s' WHERE `ID`='%d'",PlayerInfo[playerid][pEmail],PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL,str1);
			format(string, sizeof(string), "Rejestracja: {FFFFFF}Ustaw adres e-mail: %s.", PlayerInfo[playerid][pEmail]);
			SendClientMessage(playerid, COLOR_SERVER, string);
		    RegistrationStep[playerid] = 5;
			SendClientMessage(playerid, COLOR_SERVER, "Rejestracja: {FFFFFF}Dziekuje za podanie adresu email.");
			ShowPlayerDialog(playerid, DIALOG_REGISTER5, DIALOG_STYLE_INPUT, "Nick OOC:", "Jaki jest twój {990000}Nick OOC?{ffffff}\nJesli nie podasz prawdziwego nicku, nie bedziemy w stanie zapewnic Twojemu kontu bezpieczenstwa!", "Ok", "");
			SetPlayerInterior(playerid, 0);
			return 1;
		}
		else
		{
			ShowPlayerDialog(playerid, DIALOG_REGISTER4, DIALOG_STYLE_INPUT, "Email:", "Jaki jest twój adres e-mail?\nJesli nie podasz waznego e-maila, nie bedziesz w stanie odzyskac swojego konta!", "Ok", "");
			return 1;
		}
 	}
	
 	if(dialogid == DIALOG_REGISTER5)
 	{
 		new length = strlen(inputtext);
		if(length > 26)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Wpisz kolejny nick OOC (maksymalnie 26 znaków).");
			ShowPlayerDialog(playerid, DIALOG_REGISTER4, DIALOG_STYLE_INPUT, "Nick OOC:", "Jaki jest twój {990000}Nick OOC?{ffffff}\nJesli nie podasz prawdziwego nicku, nie bedziemy w stanie zapewnic Twojemu kontu bezpieczenstwa!", "Ok", "");
			return 1;
		}
		if(response && strlen(inputtext)<30)
		{
            new ooctext[64];
			mysql_real_escape_string(inputtext, ooctext);
			strmid(PlayerInfo[playerid][pOOCName], ooctext, 0, strlen(ooctext), 64);
			new str1[512];
			format(str1,512,"UPDATE users SET `pOOCName`='%s' WHERE `ID`='%d'",PlayerInfo[playerid][pOOCName],PlayerInfo[playerid][pSQLID]);
			mysql_query(SQL,str1);
			format(string, sizeof(string), "Rejestracja: {FFFFFF}Ustaw swój nick OOC: %s.", PlayerInfo[playerid][pOOCName]);
			SendClientMessage(playerid, COLOR_SERVER, string);
		    RegistrationStep[playerid] = 6;
			language[playerid] = 1;
			SendClientMessage(playerid, COLOR_SERVER, "Rejestracja: {FFFFFF}Dziekuje za Twoje informacje.");
			new connectplayer[60],stringplayer[100], playersip[25];
			GetPlayerIp(playerid, playersip, sizeof(playersip));
	    	GetPlayerName(playerid,connectplayer,sizeof(connectplayer));
	    	format(stringplayer,sizeof(stringplayer),"%s(%d) zostal zarejestrowany na serwerze. [IP: %s / EMail: %s / Nick OOC: %s]",connectplayer, playerid, playersip, PlayerInfo[playerid][pEmail], PlayerInfo[playerid][pOOCName]);
	    	SendStaffMessage(COLOR_WARNING,stringplayer);
			ServerAccounts++;
			TextDrawHideForPlayer(playerid, Login[0]);
			TextDrawHideForPlayer(playerid, Login[1]);
			TextDrawHideForPlayer(playerid, Login[2]);		
		
	        TutTime[playerid] = 0; PlayerInfo[playerid][pTut] = 1;
			gOoc[playerid] = 0; gNews[playerid] = 0; gFam[playerid] = 0;
			TogglePlayerControllable(playerid, 1);
			SetCameraBehindPlayer(playerid);
			SetPlayerSpawn(playerid);
			PlayerInfo[playerid][pAccount] = 5000;
			ResetPlayerCash(playerid);
			GivePlayerCash(playerid,5000);
			SetPlayerInterior(playerid,0);
			TogglePlayerControllable(playerid,true);
			new wakaname1[25];
			GetPlayerName(playerid,wakaname1,25);
			format(str1,256,"UPDATE users SET `Tutorial`='1',`Bank`='5000',`Money`='5000' WHERE `name`='%s'",wakaname1);
			mysql_query(SQL,str1);
            GiveVehicle(playerid, 404); // vehicul de tutorial
			return 1;
		}
		else
		{
			ShowPlayerDialog(playerid, DIALOG_REGISTER4, DIALOG_STYLE_INPUT, "Email:", "Jaki jest twój adres e-mail?\nJesli nie podasz waznego e-maila, nie bedziesz w stanie odzyskac swojego konta!", "Ok", "");
			return 1;
		}
 	}

 	if(dialogid == DIALOG_REGISTER5)
 	{
		language[playerid] = 1;
		SendClientMessage(playerid, COLOR_SERVER, "Rejestracja: {FFFFFF}Dziekuje za twoje informacje.");
		new connectplayer[60],stringplayer[100], playersip[25];
		GetPlayerIp(playerid, playersip, sizeof(playersip));
    	GetPlayerName(playerid,connectplayer,sizeof(connectplayer));
    	format(stringplayer,sizeof(stringplayer),"%s(%d) zostal zarejestrowany na serwerze. [IP: %s / EMail: %s]",connectplayer, playerid, playersip, PlayerInfo[playerid][pEmail]);
    	SendStaffMessage(COLOR_WARNING,stringplayer);
		TextDrawHideForPlayer(playerid, Login[0]);
		TextDrawHideForPlayer(playerid, Login[1]);
		TextDrawHideForPlayer(playerid, Login[2]);		
		ServerAccounts++;
        TutTime[playerid] = 0; PlayerInfo[playerid][pTut] = 1;
		gOoc[playerid] = 0; gNews[playerid] = 0; gFam[playerid] = 0;
		TogglePlayerControllable(playerid, 1);
		SetCameraBehindPlayer(playerid);
		SetPlayerSpawn(playerid);
		PlayerInfo[playerid][pAccount] = 5000;
		ResetPlayerCash(playerid);
		GivePlayerCash(playerid,5000);
		SetPlayerInterior(playerid,0);
		TogglePlayerControllable(playerid,true);
		new wakaname1[25];
		GetPlayerName(playerid,wakaname1,25);
		new str1[256];
		format(str1,256,"UPDATE users SET `Tutorial`='1',`Bank`='5000',`Money`='5000' WHERE `name`='%s'",wakaname1);
		mysql_query(SQL,str1);
		GiveVehicle(playerid, 404); // vehicul de tutorial
		return 1;
 	}
	if(dialogid == DIALOG_TRANSFER)
	{
		if(response)
    	{
			new giveplayer[30];
			GetPlayerName(TransferOffer[playerid],giveplayer,sizeof(giveplayer));
			GetPlayerName(playerid,sendername,sizeof(sendername));
		    new cashbank = TransferMoney[playerid]/100;
			PlayerInfo[playerid][pAccount] -= TransferMoney[playerid]+cashbank;
			PlayerInfo[TransferOffer[playerid]][pAccount] += TransferMoney[playerid];
			BizzInfo[1][bBalance] += cashbank;
			format(string, sizeof(string), "Ai transferat $%s in contul bancar al lui %s. Taxa: $%s", FormatNumber(TransferMoney[playerid]), giveplayer,FormatNumber(cashbank));
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_MONEY, string);
		    format(string, sizeof(string), "Ai primit $%s in contul tau bancar de la %s.", FormatNumber(TransferMoney[playerid]), sendername, playerid);
			SendClientMessage(TransferOffer[playerid], COLOR_MONEY, string);
			format(string, sizeof(string), "%s a transferat $%s lui %s.", sendername, FormatNumber(TransferMoney[playerid]), giveplayer);
			SendAdminMessage(COLOR_YELLOW,string,1);
			PlayerPlaySound(TransferOffer[playerid], 1052, 0.0, 0.0, 0.0);
 	 		new str[256];
			Update(playerid, pBank);
			Update(TransferOffer[playerid], pBank);
			format(str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='1'",BizzInfo[1][bBalance]);
			mysql_query(SQL,str);
			new ip1[42],ip2[42];
    		GetPlayerIp(playerid,ip1,sizeof(ip1));
    		GetPlayerIp(TransferOffer[playerid],ip2,sizeof(ip2));
			Transferlog(ip2,ip1,PlayerInfo[TransferOffer[playerid]][pSQLID],PlayerInfo[playerid][pSQLID],TransferMoney[playerid]);
			TransferOffer[playerid] = 999;
			TransferMoney[playerid] = 0;
		}
		return 1;
	}

	if(dialogid == 170)
        {
            if(!response) return 1;
        new carid = GetPlayerVehicleID(playerid);
        PlayerRadio[playerid] = 1;
        switch(listitem)
        {
            case 0:
            {
                        for(new i = 0; i < MAX_PLAYERS; i++)
                                {
                                        if(IsPlayerInVehicle(i, carid))
                                        {
                                                StopAudioStreamForPlayer(playerid);
                                        }
                                }
                            CarRadio[carid] = 0;
                                SendClientMessage(playerid, COLOR_WHITE, "Zatrzyma³e radio.");
            }
                case 1:
            {
                        for(new i = 0; i < MAX_PLAYERS; i++)
                                {
                                        if(IsPlayerInVehicle(i, carid))
                                        {
                                        PlayAudioStreamForPlayer(i, "http://acdn.smcloud.net/t042-1.mp3.pls"); //r1
                                        }
                                }
                                CarRadio[carid] = 1;
                    }
            case 2:
            {
                        for(new i = 0; i < MAX_PLAYERS; i++)
                                {
                                        if(IsPlayerInVehicle(i, carid))
                                        {
                                        PlayAudioStreamForPlayer(i, "http://www.odsluchane.eu/pls/eska_rock.pls"); //r2
                                        }
                                }
                                CarRadio[carid] = 2;
                    }
            case 3:
            {
                        for(new i = 0; i < MAX_PLAYERS; i++)
                                {
                                        if(IsPlayerInVehicle(i, carid))
                                        {
                                        PlayAudioStreamForPlayer(i, "http://www.emsoft.strefa.pl/inne/radiozet.m3u"); //r3
                                        }
                                }
                                CarRadio[carid] = 3;
            }
            case 4:
            {
                        for(new i = 0; i < MAX_PLAYERS; i++)
                                {
                                        if(IsPlayerInVehicle(i, carid))
                                        {
                        PlayAudioStreamForPlayer(i, "http://www.rmfon.pl/n/rmffm.pls"); //r4
                                        }
                                }
                                CarRadio[carid] = 4;
                    }
            case 5:
            {
                        for(new i = 0; i < MAX_PLAYERS; i++)
                                {
                                        if(IsPlayerInVehicle(i, carid))
                                        {
                                        PlayAudioStreamForPlayer(i, "http://www.rmfon.pl/n/rmfmaxxx.pls"); //r5
                                        }
                                }
                                CarRadio[carid] = 5;
                    }
            case 6:
            {
                        for(new i = 0; i < MAX_PLAYERS; i++)
                                {
                                        if(IsPlayerInVehicle(i, carid))
                                        {
                                        PlayAudioStreamForPlayer(i, "http://www.rmfon.pl/odbior/rmfclassic_aacp.pls"); //r6
                                        }
                                }
                                CarRadio[carid] = 6;
                    }
            case 7:
            {
                        for(new i = 0; i < MAX_PLAYERS; i++)
                                {
                                        if(IsPlayerInVehicle(i, carid))
                                        {
                                        PlayAudioStreamForPlayer(i, "http://plus-warszawa-01.eurozet.pl:8500/listen.pls"); //r7
                                        }
                                }
                                CarRadio[carid] = 7;
                    }
            case 8:
            {
                        for(new i = 0; i < MAX_PLAYERS; i++)
                                {
                                        if(IsPlayerInVehicle(i, carid))
                                        {
                                        PlayAudioStreamForPlayer(i, "http://www.radioparty.pl/play/glowny_64.m3u"); //r8
                                        }
                                }
                                CarRadio[carid] = 8;
                    }
            case 9:
            {
                        for(new i = 0; i < MAX_PLAYERS; i++)
                                {
                                        if(IsPlayerInVehicle(i, carid))
                                        {
                                        PlayAudioStreamForPlayer(i, "http://www.radio.pionier.net.pl/stream.pls?radio=radio88"); //r9
                                        }
                                }
                                CarRadio[carid] = 9;
                    }
            case 10:
            {
                        for(new i = 0; i < MAX_PLAYERS; i++)
                                {
                                        if(IsPlayerInVehicle(i, carid))
                                        {
                                        PlayAudioStreamForPlayer(i, "http://planetamp3-01.eurozet.pl:8400/listen.pls"); //r10
                                        }
                                }
                                CarRadio[carid] = 10;
                    }
            case 11:
            {
                        for(new i = 0; i < MAX_PLAYERS; i++)
                                {
                                        if(IsPlayerInVehicle(i, carid))
                                        {
                                        PlayAudioStreamForPlayer(i, "http://94.23.89.48:7300/listen.pls"); //r11
                                        }
                                }
                                CarRadio[carid] = 11;
                    }
            case 12:
            {
                        for(new i = 0; i < MAX_PLAYERS; i++)
                                {
                                        if(IsPlayerInVehicle(i, carid))
                                        {
                                        PlayAudioStreamForPlayer(i, "http://lilly.keed.pl/Radia/MTV.pls"); //r12
                                        }
                                }
                                CarRadio[carid] = 12;
                    }
            case 13:
            {
                        for(new i = 0; i < MAX_PLAYERS; i++)
                                {
                                        if(IsPlayerInVehicle(i, carid))
                                        {
                                        PlayAudioStreamForPlayer(i, "http://lilly.keed.pl/Radia/Viva.pls"); //r13
                                        }
                                }
                                CarRadio[carid] = 13;
                    }
                }
        }
 	if(dialogid == 171)
	{
	    if(!response) return 1;
		new house = PlayerInfo[playerid][pHouse];
		HouseInfo[house][hRadio] = listitem;
		UpdateHouseRadio(house);
	}
 	if(dialogid == DIALOG_MP3)
	{
	    if(!response) return 1;
	    new i = playerid;
        switch(listitem)
        {
            case 0:
            {
				StopAudioStreamForPlayer(playerid);
				SendClientMessage(playerid, COLOR_WHITE, "Zatrzyma?e? radio.");
            }
	        case 1:
            {
	        	PlayAudioStreamForPlayer(i, "http://live.radiotaraf.com:8181");
		    }
            case 2:
            {
	        	PlayAudioStreamForPlayer(i, "http://radiofunky.ro/live.pls");
		    }
            case 3:
            {
	        	PlayAudioStreamForPlayer(i, "http://live.radiogangsta.ro:8800");
            }
            case 4:
            {
	        	PlayAudioStreamForPlayer(i, "http://dance.radiogangsta.ro:8800");
		    }
            case 5:
            {
	        	PlayAudioStreamForPlayer(i, "http://rbandit.dyndns.tv:8000");
		    }
            case 6:
            {
	        	PlayAudioStreamForPlayer(i, "http://live.radiohot.ro:8000");
		    }
            case 7:
            {
	        	PlayAudioStreamForPlayer(i, "http://www.radiotequila.ro/hiphop.m3u");
		    }
            case 8:
            {
	        	PlayAudioStreamForPlayer(i, "http://80.86.106.136/listen.pls");
		    }
            case 9:
            {
	        	PlayAudioStreamForPlayer(i, "http://stream.radiozu.ro:8020");
		    }
            case 10:
            {
	        	PlayAudioStreamForPlayer(i, "http://nextgen.go.ro:8012");
		    }
            case 11:
            {
	        	PlayAudioStreamForPlayer(i, "http://stream.profm.ro:8012/profm.mp3");
		    }
            case 12:
            {
	        	PlayAudioStreamForPlayer(i, "http://live.radioclubmix.ro:9999");
		    }
            case 13:
            {
	        	PlayAudioStreamForPlayer(i, "http://livemp3.radiopopular.ro:7777");
		    }
		}
	}
	if(dialogid == DIALOG_LOCATIONS)
	{
	  	if(response)
	    {
			if(listitem == 0)
			{
				SetPlayerCheckpointEx(playerid,1462.3958,-1012.3912,26.8438,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 1)
			{
				SetPlayerCheckpointEx(playerid,1309.9755,-1368.3885,13.5482,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 2)
			{
				SetPlayerCheckpointEx(playerid,1604.1193,-2178.0405,13.5547,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 3)
			{
				SetPlayerCheckpointEx(playerid,1110.7148,-1797.1449,16.5938,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 4)
			{
				SetPlayerCheckpointEx(playerid,1790.6315,-1165.1671,23.8281,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 5)
			{
				SetPlayerCheckpointEx(playerid,1481.1235,-1771.4303,18.7958,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 6)
			{
				SetPlayerCheckpointEx(playerid,327.6782,-1515.0623,36.0391,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 7)
			{
				SetPlayerCheckpointEx(playerid,1832.8033,-1842.6147,13.5781,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 8)
			{
				SetPlayerCheckpointEx(playerid,1457.4344,-1138.6978,24.0188,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 9)
			{
				SetPlayerCheckpointEx(playerid,1791.3302,-1165.8035,23.8281,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 10)
			{
				SetPlayerCheckpointEx(playerid,1129.3917,-1442.4305,15.7969,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 11)
			{
				SetPlayerCheckpointEx(playerid,2770.3369,-1627.8765,12.1775,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 12)
			{
				SetPlayerCheckpointEx(playerid,1671.5824,-1329.4281,17.4524,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 13)
			{
				SetPlayerCheckpointEx(playerid,1330.1700,-982.4580,33.8966,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 14)
			{
				SetPlayerCheckpointEx(playerid,1510.4600,-1059.5500,25.0625,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 15)
			{
				SetPlayerCheckpointEx(playerid,1328.1801,-1558.2500,13.5469,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 16)
			{
				SetPlayerCheckpointEx(playerid,914.5580,-1003.7300,37.9975,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
//
			if(listitem == 17)
			{
				SetPlayerCheckpointEx(playerid,1847.4486,-1871.6652,13.5781,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 18)
			{
				SetPlayerCheckpointEx(playerid,563.1794,-1289.7181,17.2482,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 19)
			{
				SetPlayerCheckpointEx(playerid,1868.0878,-1394.3169,13.5072,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 20)
			{
				SetPlayerCheckpointEx(playerid,2286.2141,-2354.5000,12.8306,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 21)
			{
				SetPlayerCheckpointEx(playerid,1122.8301,-1127.9458,23.8047,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 22)
			{
				SetPlayerCheckpointEx(playerid,-1988.8628,1118.1610,54.4721,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 23)
			{
				SetPlayerCheckpointEx(playerid,-2383.8538, 493.0981, 29.9980,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 24)
			{
				SetPlayerCheckpointEx(playerid,-1942.9023, 556.9941, 35.2404,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 25) {
				SetPlayerCheckpointEx(playerid,-2168.5476, 251.4719, 35.3528,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 26) {
				SetPlayerCheckpointEx(playerid,-1883.6589, 865.3618, 35.7099,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 27) {
				SetPlayerCheckpointEx(playerid, -1968.12, 291.694, 35.4021, 4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 28)
			{
				SetPlayerCheckpointEx(playerid,2577.7136, 1324.4395, 10.7265,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 29)
			{
				SetPlayerCheckpointEx(playerid,2079.4170, 2046.3610, 11.2109,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 30)
			{
				SetPlayerCheckpointEx(playerid,2596.3135, 1095.6047, 10.8208,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 31)
			{
				SetPlayerCheckpointEx(playerid,2090.3484, 2224.1812, 11.0542,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
			if(listitem == 32)
			{
				SetPlayerCheckpointEx(playerid,2200.3667,1393.2345,10.8203,4.0);
			    CP[playerid] = 53;
			    SCM(playerid,COLOR_YELLOW, "Serwer umiecci? Ci? w czerwonym punkcie w wybranej przez ciebie lokalizacji. ");
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_WALKSTYLE)
	{
		if(response)
		{
			if(listitem == 0)
			{
				SetPlayerWalkingStyle (playerid, WALK_NORMAL);
			    return 1;
			}
			if(listitem == 1)
			{
				SetPlayerWalkingStyle (playerid, WALK_PED);
			    return 1;
			}
			if(listitem == 2)
			{
			    SetPlayerWalkingStyle (playerid, WALK_GANGSTA);
			    return 1;
			}
			if(listitem == 3)
			{
				SetPlayerWalkingStyle (playerid, WALK_GANGSTA2);
			    return 1;
			}
			if(listitem == 4)
			{
			    SetPlayerWalkingStyle (playerid, WALK_OLD);
			    return 1;
			}
			if(listitem == 5)
			{
			    SetPlayerWalkingStyle (playerid, WALK_FAT_OLD);
			    return 1;
			}
			if(listitem == 6)
			{
			    SetPlayerWalkingStyle (playerid, WALK_FAT);
			    return 1;
			}
			if(listitem == 7)
			{
			    SetPlayerWalkingStyle (playerid, WALK_LADY);
			    return 1;
			}
			if(listitem == 8)
			{
			    SetPlayerWalkingStyle (playerid, WALK_LADY2);
			    return 1;
			}
			if(listitem == 9)
			{
			    SetPlayerWalkingStyle (playerid, WALK_WHORE);
			    return 1;
			}
			if(listitem == 10)
			{
			    SetPlayerWalkingStyle (playerid, WALK_WHORE2);
			    return 1;
			}
			if(listitem == 11)
			{
			    SetPlayerWalkingStyle (playerid, WALK_DRUNK);
			    return 1;
			}
			if(listitem == 12)
			{
			    SetPlayerWalkingStyle (playerid, WALK_BLIND);
			    return 1;
			}
			if(listitem == 13)
			{
			    SetPlayerWalkingStyle (playerid, WALK_DEFAULT);
			    return 1;
			}
		}
		return 1;
	}

    if(dialogid == DIALOG_BUY) {
	    if(!response) return 1;
		switch(listitem) {
			case 0: {
				if(GetPlayerCash(playerid) < 500) return SendClientMessage(playerid, COLOR_GREY, "Nie masz wystarczajaco duzo pieniedzy, aby to zrobic.");
				if(PlayerInfo[playerid][pPnumber] > 0) return SendClientMessage(playerid, COLOR_GREY, "Posiadasz juz telefon!");
				GivePlayerCash(playerid,-500);
				BizzInfo[InBussines[playerid]][bBalance] += 500;			    
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new randphone = 5000 + random(9999) + 5000 ;
				PlayerInfo[playerid][pPnumber] = randphone;
				format(string, sizeof(string), "Kupiles telefon, a twój numer jest %d.", randphone);
				SendClientMessage(playerid, COLOR_WHITE, string);
				GivePlayerThing(playerid, 100, 1, 0, 0);
			}
			case 1: {
				if(GetPlayerCash(playerid) < 2000) return SCM(playerid, COLOR_GREY, "Nie masz pieniedzy na kupienie tego!");
			    GivePlayerCash(playerid,-2000);
				BizzInfo[InBussines[playerid]][bBalance] += 2000;
			    format(string, sizeof(string), "~r~~h~-$%d", 2000);
			    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			    gDice[playerid] = 1;
			    SendClientMessage(playerid, COLOR_WHITE, "HINT: Scrie /dice ");		
			}
			case 2: {
				if(GetPlayerCash(playerid) < 3000) return SCM(playerid, COLOR_GREY, "Nie masz pieniedzy na kupienie tego!");
    		    GivePlayerCash(playerid, - 3000);
    		    BizzInfo[InBussines[playerid]][bBalance] += 3000;
		        PlayerInfo[playerid][pWTalkie] = 1;
   			    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			    format(string, sizeof(string), "~r~~h~-$%d", 3000);
			    GameTextForPlayer(playerid, string, 2000, 1);
			    SendClientMessage(playerid, COLOR_WHITE, "Kupiles radio! Aby zobaczyc polecenia, wpisz /wthelp.");		
			}
			case 3: {
				if(GetPlayerCash(playerid) < 500) return SCM(playerid, COLOR_GREY, "Nie masz pieniedzy na kupienie tego!");
				if(PlayerInfo[playerid][pLighter] != 0) return SendClientMessage(playerid, COLOR_GREY, "Masz juz zapalniczke.");
			    GivePlayerCash(playerid, - 500);
    		    BizzInfo[InBussines[playerid]][bBalance] += 500;
		        PlayerInfo[playerid][pLighter] = 10;
   			    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			    format(string, sizeof(string), "~r~~h~-$%d", 500);
			    GameTextForPlayer(playerid, string, 2000, 1);		
			}
			case 4: {
				if(GetPlayerCash(playerid) < 1500) return SCM(playerid, COLOR_GREY, "Nie masz pieniedzy aby to kupic!");
				if(PlayerInfo[playerid][pCigarettes] != 0) return SendClientMessage(playerid, COLOR_GREY, "Masz juz papierosy.");
			    GivePlayerCash(playerid, - 1500);
    		    BizzInfo[InBussines[playerid]][bBalance] += 1500;
		        PlayerInfo[playerid][pCigarettes] = 10;
   			    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			    format(string, sizeof(string), "~r~~h~-$%d", 1500);
			    GameTextForPlayer(playerid, string, 2000, 1);
			    SendClientMessage(playerid, COLOR_WHITE, "Aby zapalic papierosa, uzyj go /smoke.");	
			}
			case 5: {
				if(GetPlayerCash(playerid) < 1000) return SCM(playerid, COLOR_GREY, "Nie masz pieniedzy na kupienie tego");
				if(PlayerInfo[playerid][pGasCan] == 1) return SendClientMessage(playerid, COLOR_GREY, "Ai deja un a GasCan.");
			    GivePlayerCash(playerid, - 1000);
    		    BizzInfo[InBussines[playerid]][bBalance] += 1000;
		        PlayerInfo[playerid][pGasCan] = 1;
			    format(string, sizeof(string), "~r~~h~-$%d", 5000);
			    GameTextForPlayer(playerid, string, 2000, 1);
			    Update(playerid, pCashx);
			    Update(playerid, pGasCanx);
			    SCM(playerid,COLOR_WHITE,"Kupiles kanister! Dostepne polecenie do zaladowania kanistra /fillgascan.");		
			}
			case 6: {
				if(GetPlayerCash(playerid) < 1000) return SCM(playerid, COLOR_GREY, "Nie masz pieniedzy aby kupic gps!");
				if(PlayerInfo[playerid][pGPS] == 1) return SCM(playerid, COLOR_GREY, "Masz juz GPS!");
				PlayerInfo[playerid][pGPS] = 1;
				UpdateVar(playerid, "GPS", 1);
				SCM(playerid, COLOR_WHITE, "Kupiles GPS dla pojazdu!!");
			}
		}
		format(query,sizeof(query),"UPDATE `bizz` SET `Till`='%d',`Products`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bBalance],BizzInfo[InBussines[playerid]][bProducts],InBussines[playerid]);
		mysql_query(SQL,query);
    	return 1;
	}
    if(dialogid == Dialog_Gym)
	{
	    if(response)
	    {
			if(listitem == 0 && GetPlayerCash(playerid) >= 1000)
			{
                GivePlayerCash(playerid, -1000);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Zaplaciles 1000 $, aby zmienic styl walki w Boksie.");
				Update(playerid, pCashx);
            }
			else if(listitem == 1 && GetPlayerCash(playerid) >= 1500)
			{
                GivePlayerCash(playerid, -1500);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Zaplaciles 1500 $, aby zmienic styl walki w Kung Fu.");
				Update(playerid, pCashx);
            }
			else if(listitem == 2 && GetPlayerCash(playerid) >= 800)
			{
                GivePlayerCash(playerid, -800);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Zaplaciles 800 $, aby zmienic styl walki w Elbow.");
				Update(playerid, pCashx);
            }
			else if(listitem == 3 && GetPlayerCash(playerid) >= 500)
			{
                GivePlayerCash(playerid, -500);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Zaplaciles 500 $, aby zmienic styl walki w Grabkick.");
				Update(playerid, pCashx);
            }
			else if(listitem == 4 && GetPlayerCash(playerid) >= 600)
			{
                GivePlayerCash(playerid, -600);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Zaplaciles 600 $, aby zmienic styl walki w Kneehead.");
				Update(playerid, pCashx);
            }
    		else
    		{
		    	SendClientMessage(playerid, COLOR_GREY, "Nie masz potrzebnych pieniedzy.");
			}
		}
    	return 1;
	}
    if(dialogid == DIALOG_LOGIN2 || dialogid == DIALOG_LOGIN3)
	{
	    if(strlen(inputtext))
	    {
			new tmppass[64];
			mysql_real_escape_string(inputtext, tmppass);
			OnPlayerLogin2(playerid,tmppass);
			return 1;
		}
		else
		{
			new loginstring[128];
			new loginname[64];
			GetPlayerName(playerid,loginname,sizeof(loginname));
			format(loginstring,sizeof(loginstring),"Nieprawidlowe haslo!\nTe wprowadz poprawne haslo.",loginname);
			ShowPlayerDialog(playerid,DIALOG_LOGIN3,DIALOG_STYLE_PASSWORD,"SERVER: Login",loginstring,"Login","Anuluj");
			gPlayerLogTries[playerid] += 1;
			if(gPlayerLogTries[playerid] == 4)
			{
				SCM(playerid, -1, "Wykorzystales proby logowania!");
				KickEx(playerid);
			}
			return 1;
		}
	}
    if(dialogid == DIALOG_LOGIN1)
	{
	    if(strlen(inputtext) >= 4 && strlen(inputtext) <= 30)
	    {
			new tmppass[64];
			mysql_real_escape_string(inputtext, tmppass);
			OnPlayerRegister(playerid,tmppass);
		}
		else
		{
            new regstring[200];
			new regname[64];
            GetPlayerName(playerid,regname,sizeof(regname));
			format(regstring,sizeof(regstring),"{FFFFFF}Witaj, {6EF83C}%s{FFFFFF}!\n \n{FFFFFF}Nie posiadasz konta.\n{FFFFFF}Wprowad has³o, aby siê zarejestrowaæ.",regname);
			ShowPlayerDialog(playerid,DIALOG_LOGIN1,DIALOG_STYLE_PASSWORD,"SERVER: Rejestracja",regstring,"SERVER: Rejestracja","Anuluj");
		}
 	}
	return 1;
}


public EndOfConnection(playerid)
{
    new caller = Mobile[playerid];
    new string[256], name[MAX_PLAYER_NAME];
	if(IsPlayerConnected(caller))
	{
	    if(caller != INVALID_PLAYER_ID)
	    {
			if(caller == 255)
			{
			    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			    SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
			    StopMusic(playerid);
				SendClientMessage(caller, COLOR_GREY, "  Brak odpowiedzi.. Polaczenie zostalo zakonczone !");
				CellTime[caller] = 0;
				CellTime[playerid] = 0;
				SendClientMessage(playerid, COLOR_GREY, "  Brak odpowiedzi.. Polaczenie zostalo zakonczone !");
				Mobile[caller] = 255;
				GetPlayerName(playerid, name, sizeof(name));
				if(GetPVarInt(playerid, "Przykrywka") == 1)
				{
					format(name, sizeof(name), "Nieznajomy");
				}
				format(string, sizeof(string), "* %s chowa swój telefon komórkowy do kieszeni.", name);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				Thing[SelectedItem0[playerid]][t_used] = 0;
				SelectedItem0[playerid] = 0;
				Mobile[playerid] = 255;
				CellTime[playerid] = 0;
				PlayerInfo[playerid][pSpeaker] = 0;
				PlayerInfo[caller][pSpeaker] = 0;
			}
		}
	}
	return 1;
}

public SetPlayerHealthEx(playerid, Float:health)
{
	SetPlayerHealth(playerid, health);
	Health[playerid] = health;
	return 1;
}

public GetPlayerHealthEx(playerid, &Float:health)
{
	health = Health[playerid];
	return 1;
}

public SetPlayerArmourEx(playerid, Float:armour)
{
	SetPlayerArmour(playerid, armour);
	Armour[playerid] = armour;
	return 1;
}

public GetPlayerArmourEx(playerid, &Float:armour)
{
	armour = Armour[playerid];
	return 1;
}


public PlaceADDS()
{
    if(strlen(AdvMSG[0]) > 1) OOCNews(TEAM_GROVE_COLOR,AdvMSG[0]);
    for(new i = 0; i < sizeof(AdvMSG); i++)
    {
		if(i < sizeof(AdvMSG)-1)
		{
		    format(AdvMSG[i],256,"%s",AdvMSG[i+1]);
		    format(AdvMSG[i+1],256," ");

		    format(AdvPlayer[i],24,"%s",AdvPlayer[i+1]);
		    format(AdvPlayer[i+1],24," ");
		}
    }
	return 1;
}

/*public OnPlayerStreamIn(playerid, forplayerid)
{
	new iswar = 0, attackers, defenders;
	
	if(PlayerHit[playerid] != -1) ShowPlayerNameTagForPlayer(forplayerid, playerid, 0);

	else if(IsACop(playerid) && OnDuty[playerid] == 1 && PlayerInfo[forplayerid][pWantedLevel] != 0) {
		SetPlayerMarkerForPlayer( playerid, forplayerid, 0xe3336dFF );
	}	
	else
	{
		SetPlayerMarkerForPlayer( playerid, forplayerid, ( GetPlayerColor( forplayerid ) & 0xFFFFFF00 ) );
		SetPlayerMarkerForPlayer( forplayerid, playerid, ( GetPlayerColor( playerid ) & 0xFFFFFF00 ) );
	}	
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
    SetPlayerMarkerForPlayer( playerid, forplayerid, ( GetPlayerColor( forplayerid ) & 0xFFFFFF00 ) );
	SetPlayerMarkerForPlayer( forplayerid, playerid, ( GetPlayerColor( playerid ) & 0xFFFFFF00 ) );
	return 1;
}*/

public SBUpdate(bizzid, type)
{
	new gQuery[526];
	switch(type)
	{
	    case sbBalancex:
	    {
	        format(gQuery,sizeof(gQuery),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[bizzid][bBalance],bizzid);
			mysql_query(SQL, gQuery);
	    }
	}
	return 1;
}

public Race(playerid)
{
	SCM(playerid,COLOR_WHITE,"Rozpoczela sie wyscig.");
	TogglePlayerControllable(playerid, 1);
	Gas[hotc[1]] = GasMax;
	Gas[hotc[2]] = GasMax;
	Silnik[hotc[1]] = 1;
	new engine,lights,alarm,doors,bonnet,boot,objective;
    GetVehicleParamsEx(hotc[1],engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(hotc[1],VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	Silnik[hotc[2]] = 1;
    GetVehicleParamsEx(hotc[2],engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(hotc[2],VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	return 1;
}

public Race2(playerid)
{
	SCM(playerid,COLOR_WHITE,"Rozpoczela sie wyscig.");
	TogglePlayerControllable(playerid, 1);
	Gas[sanr[1]] = GasMax;
	Gas[sanr[2]] = GasMax;
	Silnik[sanr[1]] = 1;
	new engine,lights,alarm,doors,bonnet,boot,objective;
    GetVehicleParamsEx(sanr[1],engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(sanr[1],VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	Silnik[sanr[2]] = 1;
    GetVehicleParamsEx(sanr[2],engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(sanr[2],VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	return 1;
}


public NFight(playerid)
{
	TogglePlayerControllable(playerid, 1);
	SCM(playerid,COLOR_WHITE,"Walcz dalej.");
    SetPlayerArmourEx(playerid,0);
	SetPlayerHealthEx(playerid,100);
	GivePlayerWeaponEx(playerid,8,1);
	return 1;
}

public Fight(playerid)
{
	TogglePlayerControllable(playerid, 1);
	SCM(playerid,COLOR_WHITE,"Walcz dalej.");
    SetPlayerArmourEx(playerid,0);
	SetPlayerHealthEx(playerid,100);
	return 1;
}
public BusStart(playerid)
{
	new koszt = GetPVarInt(playerid, "BusKoszt"), timee = GetPVarInt(playerid, "BusCzas"), stop1 = GetPVarInt(playerid, "BusPrzystanek"), stop2 = GetPVarInt(playerid, "BusDo"), info[100];
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, Przystanek[stop1][busPozX], Przystanek[stop1][busPozY], Przystanek[stop1][busPozZ]))
	{
	    DeletePVar(playerid, "BusKoszt");
	    DeletePVar(playerid, "BusCzas");
	    DeletePVar(playerid, "BusDo");
	    DeletePVar(playerid, "BusPrzystanek");
	    return SendClientMessage( playerid, COLOR_GREY, "  Przegapiles autobus !");
	}
	if(koszt > GetPlayerCash(playerid))
	{
	    DeletePVar(playerid, "BusKoszt");
	    DeletePVar(playerid, "BusCzas");
	    DeletePVar(playerid, "BusDo");
		DeletePVar(playerid, "BusPrzystanek");
	    return SendClientMessage(playerid, COLOR_GREY, "   Nie posiadasz wystarczajacej ilosci pieniedzy !");
	}
    format(info, sizeof(info), "* %s wsiadl do autobusu linii %d.", GetName(playerid), stop2);
	ProxDetector(30.0, playerid, info, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	GivePlayerCash(playerid, -koszt);
	Update(playerid, pCashx);
	SetPlayerVirtualWorld(playerid, 3);
	SetPlayerPos(playerid, 2021.970092, 2238.373046, 2103.953613);
	SetPlayerFacingAngle(playerid, 180.11);
    SetCameraBehindPlayer(playerid);
    SetPlayerInterior(playerid, 0);
	/*SetPlayerPos(playerid, Przystanek[stop2][busPozX], Przystanek[stop2][busPozY], Przystanek[stop2][busPozZ]);
 	SetCameraBehindPlayer(playerid);
    SetPlayerInterior(playerid, 1);
 	SetPlayerVirtualWorld(playerid, playerid+1);
 	TogglePlayerControllable(playerid, 0);*/
 	DeletePVar(playerid, "BusKoszt");
	DeletePVar(playerid, "BusCzas");
	DeletePVar(playerid, "BusDo");
	DeletePVar(playerid, "BusPrzystanek");
	SetTimerEx("BusStop", timee*1000, 0, "ii", playerid, stop2);
	return 1;
}

public BusStop(playerid, stopid)
{
    new info[100];
	SetPlayerPos(playerid, Przystanek[stopid][busPozX], Przystanek[stopid][busPozY], Przystanek[stopid][busPozZ]);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	//TextDrawHideForPlayer(playerid, Box);
	TogglePlayerControllable(playerid, 1);
    format(info, sizeof(info), "* %s wysiadl z autobusu.", GetName(playerid));
	ProxDetector(30.0, playerid, info, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	return 1;
}

public LoadBus()
{
	new Cache: db = mysql_query(SQL, "SELECT * FROM `autobusy` ORDER BY `autobusy`.`uid` ASC");
	new entry = 0, x, result[256], text[150];
 	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
	    entry ++;
       	cache_get_field_content(i, "uid", result); x = strval(result);
		cache_get_field_content(i, "uid", result); Przystanek[x][busUID] = strval(result);
		cache_get_field_content(i, "text", Przystanek[x][busText], SQL, 129);
       	cache_get_field_content(i, "pozX", result); Przystanek[x][busPozX] = floatstr(result);
     	cache_get_field_content(i, "pozY", result); Przystanek[x][busPozY] = floatstr(result);
      	cache_get_field_content(i, "pozZ", result); Przystanek[x][busPozZ] = floatstr(result);
       	cache_get_field_content(i, "pozA", result); Przystanek[x][busPozA] = floatstr(result);
		format(text, 100, "Przystanek %d: %s\nAby kupic bilet, wpisz /bus",	x, Przystanek[x][busText]);
		Przystanek[x][busTag] = Create3DTextLabel(text, COLOR_NEWS, Przystanek[x][busPozX], Przystanek[x][busPozY], Przystanek[x][busPozZ], 30.0, 0, 0);
	}
	printf("[MySQL Autobus]: %d przystanki zostaly zaladowane.", entry);
	cache_delete(db);
	return 1;
}

public ZapiszPrzystanek(id)
{
	new szQuery[256];
	format(szQuery, sizeof(szQuery), "UPDATE `autobusy` SET `text` = '%s', `pozX` = %f, `pozY` = %f, `pozZ` = %f, `pozA` = %f WHERE `uid` = %d", Przystanek[id][busText], Przystanek[id][busPozX], Przystanek[id][busPozY], Przystanek[id][busPozZ], Przystanek[id][busPozA], Przystanek[id][busUID]);
	mysql_tquery(SQL, szQuery, "", "");
	return 1;
}

public UsunPrzystanek(id)
{
	new szQuery[100];
	format(szQuery, sizeof(szQuery), "DELETE FROM `autobusy` WHERE `uid` = %d", id);
	mysql_tquery(SQL, szQuery, "", "");
	Przystanek[id][busUID]  = 0;
	Przystanek[id][busPozX] = 0.0;
	Przystanek[id][busPozY] = 0.0;
	Przystanek[id][busPozZ] = 0.0;
	Przystanek[id][busPozA] = 0.0;
	Delete3DTextLabel(Przystanek[id][busTag]);
	return 1;
}

public StworzPrzystanek(text[], Float:pozX, Float:pozY, Float:pozZ, Float:pozA)
{
	new	szQuery[200], id = false;
	format(szQuery, sizeof(szQuery), "INSERT INTO `autobusy` (`text`, `pozX`, `pozY`, `pozZ`, `pozA`) VALUES('%s', %f, %f, %f, %f)", text, pozX, pozY, pozZ, pozA);
	mysql_query(SQL, szQuery);
	id = mysql_insert_id();
	format(Przystanek[id][busText], 32, "%s", text);
	Przystanek[id][busUID] = id;
	Przystanek[id][busPozX] = pozX;
	Przystanek[id][busPozY] = pozY;
	Przystanek[id][busPozZ] = pozZ;
	Przystanek[id][busPozA] = pozA;
	format(szQuery, 100, "Przystanek %d: %s\nAby kupic bilet, wpisz /bus", id, Przystanek[id][busText]);
	Przystanek[id][busTag] = Create3DTextLabel(szQuery, COLOR_NEWS, Przystanek[id][busPozX], Przystanek[id][busPozY], Przystanek[id][busPozZ], 30.0, 0, 0);
	return id;
}

stock GetPlayerBusStop(playerid)
{
	for(new i = 1; i < LIMIT_PRZYSTANKOW; i++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 6.0, Przystanek[i][busPozX], Przystanek[i][busPozY], Przystanek[i][busPozZ]))
	    {
		    return i;
		}
	}
	return 0;
}

stock IsACBUGWeapon(playerid)
{
	if (IsPlayerConnected(playerid) && (IsPlayerLogged[playerid] == 1))
	{
	    new wID = GetPlayerWeapon ( playerid ) ;
	    if (wID == 24 || wID == 25 || wID == 27 || wID == 34 ) return 1 ;
	}
	return 0 ;
}

stock GetPlayerID(playerName[])
{
  	for(new i = 0; i < MAX_PLAYERS; i++) {
    	if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {
      		if(strcmp(PlayerInfo[i][pUsername], playerName, true) == 0) return i;
    	}
  	}
  	return INVALID_PLAYER_ID;
}

stock GetNameEx(playerid)
{
	new PName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PName, MAX_PLAYER_NAME);

	return PName;
}


function SetPlayerSkinEx(playerid, skin) {
	SetPlayerSkin(playerid, skin);
	if(PlayerInfo[playerid][pTut] == 1) {
		new string[256];
		format(string, sizeof(string), "", GetName(playerid));
		PlayerTextDrawSetString(playerid, NameTD, string);
		PlayerTextDrawShow(playerid, NameTD);	
	}	
	return 1;
}
function AttachTrailer(playerid)
{
	new Float:pX, Float:pY, Float:pZ;
	GetPlayerPos(playerid,pX,pY,pZ);
	new Float:vX, Float:vY, Float:vZ;
	GetVehiclePos(Trailer[playerid],vX,vY,vZ);
	if ((floatabs(pX-vX)<100.0)&&(floatabs(pY-vY)<100.0)&&(floatabs(pZ-vZ)<100.0)&&(Trailer[playerid]!=GetPlayerVehicleID(playerid))){
	 AttachTrailerToVehicle(Trailer[playerid],GetPlayerVehicleID(playerid));
	 }
	NaczepaStart[playerid] = 1;
	return 1;
}

forward ClearWanted(playerid);
public ClearWanted(playerid)
{
	new string[80];
	format(string,sizeof(string),"Brak");
	strmid(WantedName[playerid], string, 0, strlen(string), 255);
	WantedReason[playerid] = 999;
	KillTimer(WantedTimer[playerid]);
	return 1;
}

forward StopDrawPenalty(); 
public StopDrawPenalty() 
{ 
    pntly = false; //bool false [penalty]
    TextDrawHideForAll(Kary); 
    KillTimer(OffPenalty); 
    return 1; 
} 

forward HideWejscieTD(playerid); 
public HideWejscieTD(playerid) 
{ 
    TextDrawHideForPlayer(playerid, TDWejscie[0]); 
    TextDrawHideForPlayer(playerid, TDWejscie[1]); 
    TextDrawHideForPlayer(playerid, TDWejscie[2]); 
    TextDrawHideForPlayer(playerid, TDWejscie[3]); 
	SetPVarInt(playerid, "WejscieID", 0);
    return 1; 
} 

stock KickPlayer(playerid, adminname[], reason[])
{
	//PlayerLogged[playerid]=0;
	new str[128];
	format(str, sizeof(str), "~r~Kick~w~~n~Gracz: %s~n~Nadawca: %s~n~~y~%s", GetName(playerid), adminname, reason);
	TextDrawSetString(Kary, str);
	TextDrawShowForAll(Kary);
	if(OffPenalty > 0)
	{
		KillTimer(OffPenalty);
	}
	OffPenalty = SetTimer("StopDrawPenalty", 15000, false);
	format(str, sizeof(str), "> Otrzyma³e karê(kick) od %s. Powód: %s", adminname, reason);
	SendClientMessage(playerid, COLOR_RED, str);
	SetTimerEx("KickFix", 10, false, "i", playerid);
	return 1;
}

forward KickFix(playerid);
public KickFix(playerid)
{
	Kick(playerid);
}

ShowPenalty(text[]) { 
    if(pntly) { 
    TextDrawHideForAll(Kary); 
    KillTimer(OffPenalty); } 
    pntly = true; 
    TextDrawSetString(Kary,text); 
    TextDrawShowForAll(Kary); 
    OffPenalty = SetTimer("StopDrawPenalty",20000,false);
    return 1; } 

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if(UsedWeap[playerid] > 0 ) {
	Thing[UsedWeapThing[playerid]][t_number] -= 1;
	DBUpdateThing(UsedWeapThing[playerid]);
	}
        if(GetPlayerWeapon(playerid) == 38 || GetPlayerWeapon(playerid) == 28 || GetPlayerWeapon(playerid) == 32)
        {
            return 1;
        }
        else
        {
        if((gettime() - shotTime[playerid]) < 1)
        {
            shot[playerid] += 1;
        }
        else
        {
            shot[playerid] = 0;
        }
        if(shot[playerid] > 10)
        {
			new string[184];
			format(string,sizeof(string),"AdmCmd: %s(%d) prawdopodobnie ma rapid-fire.",GetName(playerid),playerid);
			SendAdminMessage(COLOR_LOGS,string,1);
			KickEx(playerid);
        }
        shotTime[playerid] = gettime();
    }
   if(GetPlayerAmmo(playerid) == 1)
   {
      SCM(playerid, COLOR_GREY, "W twojej broni skoñczy³a siê w³anie amunicja!");
	  ResetPlayerWeaponsEx(playerid);
   }
    return 1;
}

stock PutPlayerInVehicleEx(playerid,vehicleid,seatid)
{
	PlayerEnterTime[playerid]+=221;
	PutPlayerInVehicle(playerid,vehicleid,seatid);
	return 1;
}

stock RemovePlayerFromVehicleEx(playerid)
{
	PlayerEnterTime[playerid]+=221;
	RemovePlayerFromVehicle(playerid);
	return 1;
}

public OnQueryError( errorid, error[ ], callback[ ], query[ ], connectionHandle )
{
	print( "====================================================================" );
	printf( "Error ID: %d, Blad: %s", errorid, error );
	printf( "Callback: %s", callback );
	printf( "gQuery: %s", query );
	print( "====================================================================" );
	return 1;
}

// 4790DE

function ShowShop(playerid) {
	new
		gold = PlayerInfo[playerid][pPremiumPoints],
	    string[256], szDialog[1120];

    
	if(gold >= 350) format(string, sizeof(string), "Item\tPret\n{FFFFFF}Konto premium (7 zile)\t{08C708}350 punkty premium\n");
	else format(string, sizeof(string), "Item\tPret\n{FFFFFF}Konto premium (7 zile)\t{FF0000}350 punkty premium\n");
	strcat(szDialog, string);
	
	if(gold >= 850) format(string, sizeof(string), "Konto premium (30 zile)\t{08C708}850 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}Konto premium (30 zile)\t{FF0000}850 punkty premium\n");
	strcat(szDialog, string);
	
	if(gold >= 1000) format(string, sizeof(string), "{FFFFFF}Clan mic (10 locuri)\t{08C708}1000 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}Maly klan (10 locuri)\t{FF0000}1000 punkty premium\n");
	strcat(szDialog, string);

	if(gold >= 2000) format(string, sizeof(string), "{FFFFFF}Clan mediu (20 locuri)\t{08C708}2000 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}Przecietny klan (20 locuri)\t{FF0000}2000 punkty premium\n");
	strcat(szDialog, string);

	if(gold >= 3000) format(string, sizeof(string), "{FFFFFF}Clan mare (40 locuri)\t{08C708}3000 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}Wielki klan (40 locuri)\t{FF0000}3000 punkty premium\n");
	strcat(szDialog, string);

	if(gold >= 200) format(string, sizeof(string), "{FFFFFF}$500,000\t{08C708}200 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}$500,000\t{FF0000}200 punkty premium\n");
	strcat(szDialog, string);	
	
	if(gold >= 400) format(string, sizeof(string), "{FFFFFF}$1,000,000\t{08C708}400 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}$1,000,000\t{FF0000}400 punkty premium\n");
	strcat(szDialog, string);	
	
	if(gold >= 600) format(string, sizeof(string), "{FFFFFF}$1,500,000\t{08C708}600 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}$1,500,000\t{FF0000}600 punkty premium\n");
	strcat(szDialog, string);

	if(gold >= 800) format(string, sizeof(string), "{FFFFFF}$2,000,000\t{08C708}800 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}$2,000,000\t{FF0000}800 punkty premium\n");
	strcat(szDialog, string);
	
	if(gold >= 1000) format(string, sizeof(string), "{FFFFFF}$2,500,000\t{08C708}1000 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}$2,500,000\t{FF0000}1000 punkty premium\n");
	strcat(szDialog, string);

	if(gold >= 1200) format(string, sizeof(string), "{FFFFFF}$3,000,000\t{08C708}1200 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}$3,000,000\t{FF0000}1200 punkty premium\n");
	strcat(szDialog, string);	
	
	if(gold >= 1400) format(string, sizeof(string), "{FFFFFF}$3,500,000\t{08C708}1400 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}$3,500,000\t{FF0000}1400 punkty premium\n");
	strcat(szDialog, string);		
	
	if(gold >= 1600) format(string, sizeof(string), "{FFFFFF}$4,000,000\t{08C708}1600 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}$4,000,000\t{FF0000}1600 punkty premium\n");
	strcat(szDialog, string);	

	if(gold >= 1800) format(string, sizeof(string), "{FFFFFF}$4,500,000\t{08C708}1800 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}$4,500,000\t{FF0000}1800 punkty premium\n");
	strcat(szDialog, string);

	if(gold >= 2000) format(string, sizeof(string), "{FFFFFF}$5,000,000\t{08C708}2000 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}$5,000,000\t{FF0000}2000 punkty premium\n");
	strcat(szDialog, string);	

	if(gold >= 2500) format(string, sizeof(string), "{FFFFFF}Schimbare interior (casa)\t{08C708}2500 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}Zmiana w pomieszczeniu (casa)\t{FF0000}2500 punkty premium\n");
	strcat(szDialog, string);

	if(gold >= 100) format(string, sizeof(string), "{FFFFFF}Resetare kilometrii (vehicul)\t{08C708}100 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}Reset kilometra(vehicul)\t{FF0000}100 punkty premium\n");
	strcat(szDialog, string);

	if(gold >= 1000) format(string, sizeof(string), "{FFFFFF}Culoare speciala\t{08C708}1000 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}Specjalny kolor\t{FF0000}1000 punkty premium\n");
	strcat(szDialog, string);

	if(gold >= 200) format(string, sizeof(string), "{FFFFFF}Sterge FPunish\t{08C708}200 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}Usun FPunish\t{FF0000}200 punkty premium\n");
	strcat(szDialog, string);

	if(gold >= 200) format(string, sizeof(string), "{FFFFFF}Sterge Warn-uri\t{08C708}200 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}Usun ostrzezenia\t{FF0000}200 punkty premium\n");
	strcat(szDialog, string);
	
	if(gold >= 1000) format(string, sizeof(string), "{FFFFFF}Slot pojazdu\t{08C708}1000 punkty premium\n");
	else format(string, sizeof(string), "{FFFFFF}Slot pojazdu\t{FF0000}1000 punkty premium\n");
	strcat(szDialog, string);	
	
	new title[256];
	format(title, 256, "Sklep: (%d)", PlayerInfo[playerid][pPremiumPoints]);
	ShowPlayerDialog(playerid, DIALOG_SHOP, DIALOG_STYLE_TABLIST_HEADERS, title, szDialog, "Wybierz", "Anuluj");
	return 1;
}

stock SetInteriorCamera(playerid) {
	new string[256];
	format(string, sizeof(string), "interior id: %d", SInterior[playerid]);
	PlayerTextDrawSetString(playerid, ShopTDs[0], string);
	PlayerTextDrawShow(playerid, ShopTDs[0]);
	new i = SInterior[playerid]-1;
	SetPlayerPosEx(playerid, InteriorPos[i][0], InteriorPos[i][1], InteriorPos[i][2]);

	if(SInterior[playerid] == 1) SetPlayerCameraPos(playerid, 226.6298, 1292.9222, 1084.1265), SetPlayerCameraLookAt(playerid, 225.8987, 1292.2417, 1083.6882), SetPlayerInterior(playerid, 1);
	if(SInterior[playerid] == 2) SetPlayerCameraPos(playerid, 2285.6091, -1134.0924, 1051.5907), SetPlayerCameraLookAt(playerid, 2284.9370, -1134.8314, 1051.4012), SetPlayerInterior(playerid, 11);
	if(SInterior[playerid] == 3) SetPlayerCameraPos(playerid, 326.8593, 1477.6793, 1085.2574), SetPlayerCameraLookAt(playerid, 327.1747, 1478.6263, 1085.0721), SetPlayerInterior(playerid, 15);
	if(SInterior[playerid] == 4) SetPlayerCameraPos(playerid, -51.7679, 1403.2477, 1086.7109), SetPlayerCameraLookAt(playerid, -51.3880, 1404.1694, 1086.4764), SetPlayerInterior(playerid, 8);
	if(SInterior[playerid] == 5) SetPlayerCameraPos(playerid, 301.3609, 311.8316, 1003.6948), SetPlayerCameraLookAt(playerid, 301.7389, 310.9072, 1003.6548), SetPlayerInterior(playerid, 4);
	if(SInterior[playerid] == 6) SetPlayerCameraPos(playerid, 2305.6182, -1211.9570, 1051.2274), SetPlayerCameraLookAt(playerid, 2306.5337, -1211.5588, 1050.8679), SetPlayerInterior(playerid, 6);
	if(SInterior[playerid] == 7) SetPlayerCameraPos(playerid, 2234.6445, -1111.8185, 1051.3431), SetPlayerCameraLookAt(playerid, 2234.1465, -1110.9523, 1051.1779), SetPlayerInterior(playerid, 5);
	if(SInterior[playerid] == 8) SetPlayerCameraPos(playerid, 2261.9775, -1133.6704, 1051.4977), SetPlayerCameraLookAt(playerid, 2262.1741, -1134.6493, 1051.3431), SetPlayerInterior(playerid, 10);
	if(SInterior[playerid] == 9) SetPlayerCameraPos(playerid, 2215.8022, -1076.6887, 1052.4047), SetPlayerCameraLookAt(playerid, 2214.8125, -1076.5696, 1052.2395), SetPlayerInterior(playerid, 1);
	if(SInterior[playerid] == 10) SetPlayerCameraPos(playerid, 267.8929, 304.8710, 1000.8421), SetPlayerCameraLookAt(playerid, 268.8906, 304.9142, 1000.6469), SetPlayerInterior(playerid, 2);
	if(SInterior[playerid] == 11) SetPlayerCameraPos(playerid, 245.2803, 307.2553, 1000.2034), SetPlayerCameraLookAt(playerid, 245.4770, 306.2764, 999.9384), SetPlayerInterior(playerid, 1);
	// medium
	if(SInterior[playerid] == 12) SetPlayerCameraPos(playerid, 231.6437, 1186.1727, 1081.5111), SetPlayerCameraLookAt(playerid, 231.8882, 1187.1407, 1081.3771), SetPlayerInterior(playerid, 3);
	if(SInterior[playerid] == 13) SetPlayerCameraPos(playerid, 487.8189, 1398.1814, 1082.1277), SetPlayerCameraLookAt(playerid, 488.1149, 1399.1350, 1082.0073), SetPlayerInterior(playerid, 2);
	if(SInterior[playerid] == 14) SetPlayerCameraPos(playerid, 17.5855, 1341.0245, 1087.9324), SetPlayerCameraLookAt(playerid, 18.5301, 1341.3497, 1087.7039), SetPlayerInterior(playerid, 10);
	if(SInterior[playerid] == 15) SetPlayerCameraPos(playerid, -282.8742, 1469.5415, 1086.3295), SetPlayerCameraLookAt(playerid, -283.7869, 1469.9467, 1086.2946), SetPlayerInterior(playerid, 15);
	if(SInterior[playerid] == 16) SetPlayerCameraPos(playerid, -261.3119, 1453.3258, 1086.6284), SetPlayerCameraLookAt(playerid, -262.2391, 1453.6963, 1086.4338), SetPlayerInterior(playerid, 4);
	if(SInterior[playerid] == 17) SetPlayerCameraPos(playerid, 86.9224, 1322.4597, 1086.1943), SetPlayerCameraLookAt(playerid, 86.5379, 1323.3815, 1086.0942), SetPlayerInterior(playerid, 9);
	if(SInterior[playerid] == 18) SetPlayerCameraPos(playerid, 2320.5571, -1025.0186, 1051.2029), SetPlayerCameraLookAt(playerid, 2320.2698, -1024.0619, 1051.3535), SetPlayerInterior(playerid, 9);
	if(SInterior[playerid] == 19) SetPlayerCameraPos(playerid, 2491.5051, -1696.2813, 1015.5330), SetPlayerCameraLookAt(playerid, 2492.0032, -1697.1469, 1015.3875), SetPlayerInterior(playerid, 3);
	if(SInterior[playerid] == 20) SetPlayerCameraPos(playerid, 2195.4080, -1200.0920, 1049.8566), SetPlayerCameraLookAt(playerid, 2194.8584, -1200.9266, 1049.6566), SetPlayerInterior(playerid, 6);
	if(SInterior[playerid] == 21) SetPlayerCameraPos(playerid, 376.9280, 1416.3525, 1082.3102), SetPlayerCameraLookAt(playerid, 375.9368, 1416.4741, 1082.1262), SetPlayerInterior(playerid, 15);
	if(SInterior[playerid] == 22) SetPlayerCameraPos(playerid, 2262.5979, -1211.7606, 1049.7876), SetPlayerCameraLookAt(playerid, 2261.6389, -1211.4824, 1049.5773), SetPlayerInterior(playerid, 10);
	if(SInterior[playerid] == 23) SetPlayerCameraPos(playerid, 445.7094, 1396.8407, 1086.2308), SetPlayerCameraLookAt(playerid, 445.9051, 1397.8197, 1085.9220), SetPlayerInterior(playerid, 2);
	if(SInterior[playerid] == 24) SetPlayerCameraPos(playerid, 386.4680, 1470.9492, 1081.3369), SetPlayerCameraLookAt(playerid, 385.4917, 1471.1572, 1081.1287), SetPlayerInterior(playerid, 15);
	if(SInterior[playerid] == 25) SetPlayerCameraPos(playerid, 21.8199, 1403.2657, 1085.2496), SetPlayerCameraLookAt(playerid, 22.0875, 1404.2279, 1085.0442), SetPlayerInterior(playerid, 5);
	if(SInterior[playerid] == 26) SetPlayerCameraPos(playerid, 2364.7788, -1134.1288, 1051.4226), SetPlayerCameraLookAt(playerid, 2365.0901, -1133.1803, 1051.2433), SetPlayerInterior(playerid, 8);
	if(SInterior[playerid] == 27) SetPlayerCameraPos(playerid, 2237.0874, -1080.0449, 1049.6121), SetPlayerCameraLookAt(playerid, 2237.3455, -1079.0806, 1049.4729), SetPlayerInterior(playerid, 2);
	if(SInterior[playerid] == 28) SetPlayerCameraPos(playerid, 294.5133, 1472.1792, 1081.0778), SetPlayerCameraLookAt(playerid, 294.7190, 1473.1558, 1080.9685), SetPlayerInterior(playerid, 15);
	if(SInterior[playerid] == 29) SetPlayerCameraPos(playerid, 220.7936, 1139.6627, 1083.8789), SetPlayerCameraLookAt(playerid, 221.0227, 1140.6345, 1083.6494), SetPlayerInterior(playerid, 4);
	if(SInterior[playerid] == 30) SetPlayerCameraPos(playerid, -69.9296, 1350.8909, 1081.0660), SetPlayerCameraLookAt(playerid, -69.7377, 1351.8710, 1080.7916), SetPlayerInterior(playerid, 6);
	if(SInterior[playerid] == 31) SetPlayerCameraPos(playerid, 259.8786, 1237.9282, 1085.5304), SetPlayerCameraLookAt(playerid, 260.2392, 1238.8597, 1085.1702), SetPlayerInterior(playerid, 9);
	if(SInterior[playerid] == 32) SetPlayerCameraPos(playerid, 2469.2764, -1699.1567, 1014.5864), SetPlayerCameraLookAt(playerid, 2468.3062, -1698.9172, 1014.3065), SetPlayerInterior(playerid, 2);
	// big
	if(SInterior[playerid] == 33) SetPlayerCameraPos(playerid, 136.0863, 1364.8931, 1086.5968), SetPlayerCameraLookAt(playerid, 136.4150, 1365.8356, 1086.3867), SetPlayerInterior(playerid, 5);
	if(SInterior[playerid] == 34) SetPlayerCameraPos(playerid, 225.1230, 1021.7136, 1084.7102), SetPlayerCameraLookAt(playerid, 225.5872, 1022.5983, 1084.5348), SetPlayerInterior(playerid, 7);
	if(SInterior[playerid] == 35) SetPlayerCameraPos(playerid, 231.2208, 1063.1127, 1085.9523), SetPlayerCameraLookAt(playerid, 231.6671, 1064.0059, 1085.5946), SetPlayerInterior(playerid, 6);
	if(SInterior[playerid] == 36) SetPlayerCameraPos(playerid, 225.9759, 1115.1960, 1081.7931), SetPlayerCameraLookAt(playerid, 226.9668, 1115.0742, 1081.6378), SetPlayerInterior(playerid, 5);
	return 1;
}

function ShowShopTDs(playerid) {
	TextDrawShowForPlayer(playerid, ShopTD[0]);
	TextDrawShowForPlayer(playerid, ShopTD[1]);
	PlayerTextDrawShow(playerid, ShopTDs[0]);
	PlayerTextDrawShow(playerid, ShopTDs[1]);
	TextDrawShowForPlayer(playerid, ShopTD[4]);
	PlayerTextDrawSetString(playerid, ShopTDs[0], "Interior id: 1");
	PlayerTextDrawShow(playerid, ShopTDs[0]);
	SelectTextDraw(playerid, 0xFF0000FF);
	return 1;
}

function HideShopTDs(playerid) {
	TextDrawHideForPlayer(playerid, ShopTD[0]);
	TextDrawHideForPlayer(playerid, ShopTD[1]);
	PlayerTextDrawHide(playerid, ShopTDs[0]);
	PlayerTextDrawHide(playerid, ShopTDs[1]);
	TextDrawHideForPlayer(playerid, ShopTD[4]);
	CancelSelectTextDraw(playerid);
	return 1;
}


AntiDeAMX()
{
	new a[][] =
 	{
 		"Unarmed (Fist)",
 		"Brass K"
 	};
	#pragma unused a
}

CMD:buyvehicle(playerid,params[])
{
	if(PlayerInfo[playerid][pLevel] < 3) return SCM(playerid, -1, "Ai nevoie de minim nivel 3.");
	new x=0, dbID[256], szQuery[256];
	if(!PlayerToPoint(3.0,playerid,327.9443, -1512.6609, 36.1366) && !PlayerToPoint(3.0,playerid,332.6239, -1506.7646, 36.0565)) return SendClientMessage(playerid, COLOR_WHITE, "{3385FF}Trebuie sa fii la Distribuitorul de Vehicule.");
	
	if(TestingModel[playerid] == 1) return 1;
	if(PlayerToPoint(3.0,playerid,332.6239, -1506.7646, 36.0565)) return 1; //InDealer[playerid] = 2;
	format(szQuery, sizeof(szQuery), "SELECT * FROM `dsveh` WHERE `Type`='1'");
	new Cache: result = mysql_query(SQL, szQuery);
	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
		cache_get_field_content(i, "ID", dbID);
		x++;
		SelectedCar[playerid][x] = strval(dbID);
		LastDealerCar[playerid] = strval(dbID);
	}
	cache_delete(result);
	TestingModel[playerid] = 0;
	TotalDealerCars[playerid] = x;
	DealerCarType[playerid] = 1;
	InDealer[playerid] = 1;
	TogglePlayerControllable(playerid, 0);
	SetPlayerVirtualWorld(playerid, playerid+1);
	SetPlayerInterior(playerid, 1);
	SetPlayerPosEx(playerid, 604.9370, -2.9715, 1003.8300);
	DealerID[playerid] = 1;
	DealerCarColor1[playerid] = 1;
	DealerCarColor2[playerid] = 1;
	DealerCarAngle[playerid] = 75.7200;
	DealerCar[playerid] = CreateVehicleEx(DSModels[DealerID[playerid]][dModel],613.7783, -2.9987, 1000.5500,DealerCarAngle[playerid],DealerCarColor1[playerid],DealerCarColor2[playerid],-1);
    Gas[DealerCar[playerid]] = 100;
	SetVehicleVirtualWorld(DealerCar[playerid],playerid+1);
	LinkVehicleToInterior(DealerCar[playerid], 1);
	PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
	SetPlayerCameraPos(playerid, 604.9370, -2.9715, 1003.8300);
	SetPlayerCameraLookAt(playerid, 605.9343, -2.9241, 1003.4600);
	ShowDealershipTextdraws(playerid);
	SelectTextDraw(playerid, 0xFF0000FF);
	return 1;
}

function FindCSlot(playerid) {
	for(new i = 0; i < 10; i++) {
		if(PlayerInfo[playerid][pCarKey][i] == 0) return i+1;
	}							
	return -1;
}

function GetVehicles(playerid) {
	new i;
	if(PlayerInfo[playerid][pCarKey][0] != 0) i++;
	if(PlayerInfo[playerid][pCarKey][1] != 0) i++;
	if(PlayerInfo[playerid][pCarKey][2] != 0) i++;
	if(PlayerInfo[playerid][pCarKey][3] != 0) i++;
	if(PlayerInfo[playerid][pCarKey][4] != 0) i++;
	if(PlayerInfo[playerid][pCarKey][5] != 0) i++;
	if(PlayerInfo[playerid][pCarKey][6] != 0) i++;
	if(PlayerInfo[playerid][pCarKey][7] != 0) i++;
	if(PlayerInfo[playerid][pCarKey][8] != 0) i++;
	if(PlayerInfo[playerid][pCarKey][9] != 0) i++;	
	return i;
}

CMD:swapcolors(playerid, params[])
{
	new string[128],color1,color2, idd;
	new valid = PlayerInfo[playerid][pCarKey][0] + PlayerInfo[playerid][pCarKey][1] + PlayerInfo[playerid][pCarKey][2] + PlayerInfo[playerid][pCarKey][3] + PlayerInfo[playerid][pCarKey][4];
	if(valid == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz prywatnego pojazdu!");
	if(PlayerInfo[playerid][pCash] < 50) return SendClientMessage(playerid, COLOR_GREY, "Nu ai $50!");
	new car = GetPlayerVehicleID(playerid);
	if(PersonalCar(playerid) == -1) return SCM(playerid, COLOR_LGREEN, "* Nie jeste w swoim pojezdzie!");
	idd = PersonalCar(playerid);
	color1 = CarInfo[idd][cColorOne];
	color2 = CarInfo[idd][cColorTwo];
	CarInfo[idd][cColorOne] = color2;
	CarInfo[idd][cColorTwo] = color1;
	ChangeVehicleColor(car, CarInfo[idd][cColorOne], CarInfo[idd][cColorTwo]);
	SendClientMessage(playerid, COLOR_GRAD2, "Ti-ai inversat culorile dla $50.");
	GivePlayerCash(playerid, -50);
	BizzInfo[11][bBalance] += 100;
	mysql_format(SQL, string,sizeof(string),"UPDATE bizz SET Till = %d WHERE ID = %d",BizzInfo[11][bBalance],5);
	mysql_tquery(SQL, string, "", "");
	return 1;
}

CMD:carplate(playerid, params[])
{
	new string[128], plate[32], idd;
	new valid = PlayerInfo[playerid][pCarKey][0] + PlayerInfo[playerid][pCarKey][1] + PlayerInfo[playerid][pCarKey][2] + PlayerInfo[playerid][pCarKey][3] + PlayerInfo[playerid][pCarKey][4];
	if(valid == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz prywatnego pojazdu!");
	if(sscanf(params, "s[14]", plate)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/carplate <Car Plate>");
	if(PersonalCar(playerid) == -1) return SCM(playerid, COLOR_LGREEN, "* Nie jeste w swoim pojezdzie!");
	idd = PersonalCar(playerid);
	if(idd == 0) return SendClientMessage(playerid, COLOR_GREY, "Ten pojazd nie nalezy do ciebie!");
	if(CarInfo[idd][Spawned] == 0) return SendClientMessage(playerid, COLOR_GREY, "Twój samochód nie jest zespawnowany!");
	if(GetPlayerCash(playerid) < 50) return SendClientMessage(playerid, COLOR_GREY, "Nu ai $50!");

    SetVehicleNumberPlate(CarInfo[idd][Spawned], plate);

	GivePlayerCash(playerid, -50);
	BizzInfo[11][bBalance] += 50;
	format(string, sizeof(string), "~w~Numer rejestracji ustawiony na ~y~%s~w~ dla ~g~$50", plate);
	GameTextForPlayer(playerid, string, 3000, 4);
    format(string, sizeof(string), "%s", plate);
	format(CarInfo[idd][cLicense], 100, "%s", plate);

	mysql_real_escape_string(plate, hackmysql);
    mysql_format(SQL, string, sizeof(string), "UPDATE cars SET License='%s' WHERE ID=%d", hackmysql, idd);
	mysql_tquery(SQL, string, "", "");

	mysql_format(SQL, string,sizeof(string),"UPDATE bizz SET Till = %d WHERE ID = %d",BizzInfo[11][bBalance],5);
	mysql_tquery(SQL, string, "", "");
	return 1;
}


CMD:lock(playerid, params[])
{
	LockCarFunction(playerid);
	return 1;
}

function attach_vip_text(idd) {
	if(strlen(CarInfo[idd][cText]) >= 3) {
		new name[82];
		nameobject[CarInfo[idd][Spawned]] = CreateDynamicObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
		format(name, sizeof(name), "{%s}%s", serverColors(CarInfo[idd][cTextColor]), CarInfo[idd][cText]);
		SetDynamicObjectMaterialText(nameobject[CarInfo[idd][Spawned]], 0, name, OBJECT_MATERIAL_SIZE_256x128, "Arial", 25, 1, -1, 0, 1);
		new model = CarInfo[idd][cModel];
		if(model == 411) AttachDynamicObjectToVehicle(nameobject[CarInfo[idd][Spawned]], CarInfo[idd][Spawned], 0.0, -1.9, 0.3, 270.0, 0.0, 0.0);
		if(model == 560) AttachDynamicObjectToVehicle(nameobject[CarInfo[idd][Spawned]], CarInfo[idd][Spawned], 0, -0.6, 0.8, 270.0, 0.0, 0.0);
		if(model == 541) AttachDynamicObjectToVehicle(nameobject[CarInfo[idd][Spawned]], CarInfo[idd][Spawned], 0, -0.4, 0.59, 270.0, 0.0, 0.0);	
		if(model == 429) AttachDynamicObjectToVehicle(nameobject[CarInfo[idd][Spawned]], CarInfo[idd][Spawned], 0, -1.79, 0.33, 270.0, 0.0, 0.0);
		if(model == 495) AttachDynamicObjectToVehicle(nameobject[CarInfo[idd][Spawned]], CarInfo[idd][Spawned], 0, -1.2, 1, 270.0, 0.0, 0.0);	
		if(model == 579) AttachDynamicObjectToVehicle(nameobject[CarInfo[idd][Spawned]], CarInfo[idd][Spawned], 0, -2, 1.21, 270.0, 0.0, 0.0);	
		if(model == 562) AttachDynamicObjectToVehicle(nameobject[CarInfo[idd][Spawned]], CarInfo[idd][Spawned], 0, -0.69, 0.76, 270.0, 0.0, 0.0);
		if(model == 451) AttachDynamicObjectToVehicle(nameobject[CarInfo[idd][Spawned]], CarInfo[idd][Spawned], 0, -0.6, 0.56, 270.0, 0.0, 0.0);
		if(model == 480) AttachDynamicObjectToVehicle(nameobject[CarInfo[idd][Spawned]], CarInfo[idd][Spawned], 0, -1.58, 0.27, 270.0, 0.0, 0.0);		
	}
	return 1;
}

CMD:park(playerid, params[])
{
	new string[128], idd, vsid = sVehicle[5][playerid];
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w pojezdzie!");
    new car = GetPlayerVehicleID(playerid);
	if(PersonalCar(playerid) == -1) return SCM(playerid, COLOR_LGREEN, "* Nie jeste w swoim pojezdzie!");
	idd = PersonalCar(playerid);
	if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nie ma cie w pojezdzie!");
	if(idd == 0) return SendClientMessage(playerid, COLOR_GREY, "Ten pojazd nie nalezy do ciebie!");
	new Float:x, Float:y, Float:z, Float:a;
	GetVehiclePos(car, x, y, z);
	GetVehicleZAngle(car, a);
	CarInfo[idd][cLocationx] = x;
	CarInfo[idd][cLocationy] = y;
	CarInfo[idd][cLocationz] = z;
	CarInfo[idd][cAngle] = a;
	VehicleOwned[CarInfo[idd][Spawned]] = 0;
	VehicleSQL[CarInfo[idd][Spawned]] = 0;	
	DestroyVehicle(car);
	CheckVehicle(car);
	if(strlen(CarInfo[idd][cText]) >= 3) {
		DestroyDynamicObject(nameobject[CarInfo[idd][Spawned]]);
	}			
	CarInfo[idd][Spawned] = CreateVehicleEx(CarInfo[idd][cModel],CarInfo[idd][cLocationx],CarInfo[idd][cLocationy],CarInfo[idd][cLocationz],CarInfo[idd][cAngle],CarInfo[idd][cColorOne],CarInfo[idd][cColorTwo],-1);
	VehicleOwned[CarInfo[idd][Spawned]] = CarInfo[idd][Spawned];
	VehicleSQL[CarInfo[idd][Spawned]] = idd;	
    SetTunning(vsid);
	attach_vip_text(idd);
	SetVehicleNumberPlate(CarInfo[idd][Spawned], CarInfo[idd][cLicense]);
	mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Locationx='%f' WHERE ID=%d", CarInfo[idd][cLocationx], idd);
	mysql_tquery(SQL, string, "", "");
	mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Locationy='%f' WHERE ID=%d", CarInfo[idd][cLocationy], idd);
	mysql_tquery(SQL, string, "", "");
	mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Locationz='%f' WHERE ID=%d", CarInfo[idd][cLocationz], idd);
	mysql_tquery(SQL, string, "", "");
	mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Angle='%f' WHERE ID=%d", CarInfo[idd][cAngle], idd);
	mysql_tquery(SQL, string, "", "");
	mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Spawned='%d' WHERE ID=%d", CarInfo[idd][Spawned], idd);
	mysql_tquery(SQL, string, "", "");
	SCM(playerid, 0xFFBABAFF, "Samochód zaparkowany!");
	return 1;
}

function CheckVehicle(carid) {
	foreach(Player, i) {
	    if(IsPlayerConnected(i)) {
	        if(VehicleKey[i] == carid) VehicleKey[i] = 0;
	    }
	}
	return 1;
}

CMD:givekey(playerid, params[]) {
	new idd, string[256];
	new valid = PlayerInfo[playerid][pCarKey][0] + PlayerInfo[playerid][pCarKey][1] + PlayerInfo[playerid][pCarKey][2] + PlayerInfo[playerid][pCarKey][3] + PlayerInfo[playerid][pCarKey][4];
	if(valid == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz prywatnego pojazdu!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w pojezdzie!");
	new car = GetPlayerVehicleID(playerid);
	if(PersonalCar(playerid) == -1) return SCM(playerid, COLOR_LGREEN, "* Nie jeste w swoim pojezdzie!");
	idd = PersonalCar(playerid);	
	if(idd == 0) return SendClientMessage(playerid, COLOR_GREY, "Ten pojazd nie nalezy do ciebie!");
	if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w swoim pojezdzie");
	if(CarInfo[idd][cSpecial] == 1) return SendClientMessage(playerid, COLOR_GREY, "Nie masz dostepu!");

	new id;
    if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/givekey <nazwa/id>");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	if(id == playerid) return 1;
	if(HireCar[id] != -1) return SCM(playerid, COLOR_WHITE, "Ten gracz ma zrespawnowany pojazd! Powiedz mu, zeby uzyl polecenia '/unrent'.");
	if(VehicleKey[id] != 0) return SCM(playerid, COLOR_WHITE, "Ten gracz ma juz klucz pojazdu. Powiedz mu, zeby uzyl polecenia '/throwkey'.");
	VehicleKey[id] = car;
	format(string, sizeof(string), "* %s dal ci klucze do pojazdu %s (%d).", GetName(playerid), aVehicleNames[CarInfo[idd][cModel]-400], car);
	SCM(id, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Dales %s, klucze do swojego pojazdu %s.", GetName(id), aVehicleNames[CarInfo[idd][cModel]-400]);
	SCM(playerid, COLOR_LIGHTBLUE, string);
	return 1;
}

CMD:throwkey(playerid, params[]) {
	if(VehicleKey[playerid] == 0) return 1;
	VehicleKey[playerid] = 0;
	SCM(playerid, COLOR_LIGHTBLUE, "Wyrzucile klucze");
	return 1;
}

CMD:sprzedajauto(playerid, params[])
{
	new id,price,string[128], keyid, idd;
	if(GetVehicles(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz prywatnego pojazdu!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w swoim pojedzie.");
	new car = GetPlayerVehicleID(playerid);
	if(sscanf(params, "ui", id,price)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/sprzedajauto <nazwa/id> <cena>");
	if(playerid == id) return 1;
	if(!ProxDetectorS(30.0, id, playerid)) return SCM(playerid, -1, "Nie jeste tym graczem!");
	if(PlayerInfo[id][pLevel] < 3) return SendClientMessage(playerid, -1, "Ten gracz nie ma minimalnego poziomu 3.");
	
	new car1 = PlayerInfo[playerid][pCarKey][0], car2 = PlayerInfo[playerid][pCarKey][1], car3 = PlayerInfo[playerid][pCarKey][2], car4 = PlayerInfo[playerid][pCarKey][3], car5 = PlayerInfo[playerid][pCarKey][4],
	car6 = PlayerInfo[playerid][pCarKey][5], car7 = PlayerInfo[playerid][pCarKey][6], car8 = PlayerInfo[playerid][pCarKey][7], car9 = PlayerInfo[playerid][pCarKey][8], car10 = PlayerInfo[playerid][pCarKey][9];
	if(car == CarInfo[car1][Spawned]) idd = PlayerInfo[playerid][pCarKey][0], keyid = 1;
	if(car == CarInfo[car2][Spawned]) idd = PlayerInfo[playerid][pCarKey][1], keyid = 2;
	if(car == CarInfo[car3][Spawned]) idd = PlayerInfo[playerid][pCarKey][2], keyid = 3;
	if(car == CarInfo[car4][Spawned]) idd = PlayerInfo[playerid][pCarKey][3], keyid = 4;
	if(car == CarInfo[car5][Spawned]) idd = PlayerInfo[playerid][pCarKey][4], keyid = 5;
	if(car == CarInfo[car6][Spawned]) idd = PlayerInfo[playerid][pCarKey][5], keyid = 6;
	if(car == CarInfo[car7][Spawned]) idd = PlayerInfo[playerid][pCarKey][6], keyid = 7;
	if(car == CarInfo[car8][Spawned]) idd = PlayerInfo[playerid][pCarKey][7], keyid = 8;
	if(car == CarInfo[car9][Spawned]) idd = PlayerInfo[playerid][pCarKey][8], keyid = 9;
	if(car == CarInfo[car10][Spawned]) idd = PlayerInfo[playerid][pCarKey][9], keyid = 10;	
	
	if(idd == 0) return SendClientMessage(playerid, COLOR_WHITE, "Ten pojazd nie nalezy do ciebie!");
	if(strlen(CarInfo[idd][cText]) >= 3) return SCM(playerid, -1, "Nie mozesz sprzedac tego pojazdu!");
	//if(IsPremiumVehicle(CarInfo[idd][Spawned]) && PlayerInfo[id][pPremiumAccount] == 0) return SCM(playerid, -1, "Ten pojazd jest dla kont premium. Nie mozesz go sprzedac go graczom bez konta premium!");	
	if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w swoim pojezdzie");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	if(id == playerid) return SendClientMessage(playerid, COLOR_WHITE, "You cannot sell car to yourself!");
	if(GetPlayerCash(id) < price) return SendClientMessage(playerid, COLOR_WHITE, "Ten gracz nie ma tych pieniedzy!");
	if(price < 1 || price > 15000000) return 1;
	if(GetSlots(id) == GetVehicles(id)) return SCM(playerid, -1, "Ten gracz ma maksymalna liczbe pojazdów!"); 
	else if(GetSlots(id) == 8) return SCM(playerid, -1, "Ten gracz ma maksymalna liczbe pojazdów!");	
	
	format(string, sizeof(string), "* Dales mu go %s cie kupic %s-ul (KM: %0.1f, Colors: %d, %d) za kwote $%s.", GetName(id), aVehicleNames[CarInfo[idd][cModel]-400], CarInfo[idd][KM], CarInfo[idd][cColorOne], 
	CarInfo[idd][cColorTwo], FormatNumber(price));
	SendClientMessage(playerid, COLOR_MONEY, string);
	format(string, sizeof(string), "* %s dal ci jeden %s (KM: %0.1f, Colors: %d, %d) za kwote $%s. (/akceptuj car %d)", GetName(playerid), aVehicleNames[CarInfo[idd][cModel]-400], CarInfo[idd][KM], CarInfo[idd][cColorOne], 
	CarInfo[idd][cColorTwo], FormatNumber(price), playerid);
	SendClientMessage(id, COLOR_MONEY, string);
	
	SetPVarInt(id, "OfferBy", playerid);
	SetPVarInt(id, "Price", price);
	SetPVarInt(id, "Slot", keyid);
	SetPVarInt(id, "OfferCar", idd);
	SetTimerEx("CancelTrade", 30000, 0, "d", id);
	return 1;
}

function CancelTrade(playerid) {
	new playerID = GetPVarInt(playerid, "OfferBy");
	if(playerID != -1 && IsPlayerConnected(playerID)){
		SCM(playerid, -1, "Firma zostala anulowana z powodu uplywu czasu!");
		SCM(playerID, -1, "Firma zostala anulowana z powodu uplywu czasu!");
		SetPVarInt(playerid, "OfferBy", -1);
	}
	return 1;
}

CMD:carcolor(playerid, params[])
{
    if(!PlayerToPoint(5.0, playerid, 1703.1559,-1469.9512,13.5469)) {
		if(CP[playerid] != 0) return ShowPlayerDialog(playerid, DIALOG_CHECKPOINT, DIALOG_STYLE_MSGBOX, "Checkpoint", "Masz juz aktywny punkt kontrolny. Czy chcesz go anulowac?", "Ok", "Wyjdz");
      	CP[playerid] = 53;
		SendClientMessage(playerid, COLOR_GREY, "Dostales punkt na mapie do tej lokalizacji.");
		SetPlayerCheckpointEx(playerid, 1703.1559,-1469.9512,13.5469, 7.0);
		return 1;
	}
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "Nie jeste w pojezdzie!");
	new idd;
	new valid = PlayerInfo[playerid][pCarKey][0] + PlayerInfo[playerid][pCarKey][1] + PlayerInfo[playerid][pCarKey][2] + PlayerInfo[playerid][pCarKey][3] + PlayerInfo[playerid][pCarKey][4];
	if(valid == 0) return SendClientMessage(playerid, COLOR_GREY, "Ten pojazd nie nalezy do ciebie!");
	new car = GetPlayerVehicleID(playerid);
	if(PersonalCar(playerid) == -1) return SCM(playerid, COLOR_LGREEN, "* Nie jeste w swoim pojezdzie!");
	idd = PersonalCar(playerid);
	if(idd == 0) return SendClientMessage(playerid, COLOR_GREY, "Ten pojazd nie nalezy do ciebie!");
	if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w swoim pojezdzie");
    pCarID[playerid] = CarInfo[idd][Spawned];
	GetPlayerPos(playerid, pPos[playerid][0], pPos[playerid][1], pPos[playerid][2]);
    pInteriorID[playerid] = GetPlayerInterior(playerid), pVirtual[playerid] = GetPlayerVirtualWorld(playerid);
	SetVehiclePos(car, -1948.0808, 258.7329, 40.7669);
	SetVehicleVirtualWorld(car, playerid+1);
	SetPlayerVirtualWorld(playerid, playerid+1);
	SetPlayerCameraPos(playerid, -1956.2145, 261.2427, 42.3533);
	SetPlayerCameraLookAt(playerid, -1955.2532, 260.9547, 42.1530);
	SetVehicleZAngle(car, 46.4705);
	InShop[playerid] = 1;
	pCar[playerid] = idd;
	TextDrawShowForPlayer(playerid, HiddTD[0]);
	TextDrawShowForPlayer(playerid, HiddTD[1]);
	TextDrawShowForPlayer(playerid, HiddTD[2]);
	TextDrawShowForPlayer(playerid, HiddTD[3]);
	TextDrawShowForPlayer(playerid, HiddTD[4]);
	PlayerTextDrawShow(playerid, HiddTDs[0]);
	PlayerTextDrawShow(playerid, HiddTDs[1]);
	PlayerTextDrawShow(playerid, HiddTDs[2]);
	SelectTextDraw(playerid, 0xFF0000FF);
	PlayerTextDrawSetString(playerid, HiddTDs[0], "Color 1: 0");
	PlayerTextDrawSetString(playerid, HiddTDs[2], "Color 2: 0");
	pColor1[playerid] = 0;
	pColor2[playerid] = 0;
	CarColor[playerid] = 1;
	ChangeVehicleColor(GetPlayerVehicleID(playerid), pColor2[playerid], pColor2[playerid]);
	return 1;
}

stock LockCarFunction(playerid) {
	new string[128];
	new engine,lights,alarm,doors,bonnet,boot,objective;
	new idd, car;
	car = GetClosestVehicle(playerid);
	idd = FindSpawnID(car);

	if(VehicleKey[playerid] != 0) {
	    if(VehicleKey[playerid] == car) {
			if(CarInfo[idd][cLock] == 0)
			{
				CarInfo[idd][cLock] = 1;
				GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(car,engine,lights,alarm,1,bonnet,boot,objective);
				format(string,sizeof(string),"~w~%s ~r~ZAMKNIETE",aVehicleNames[CarInfo[idd][cModel]-400]);
				GameTextForPlayer(playerid, string, 5000, 4);
				mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Lockk='%d' WHERE ID=%d", CarInfo[idd][cLock], idd);
				mysql_tquery(SQL, string, "", "");
			}
			else
			{
				CarInfo[idd][cLock] = 0;
				GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(car,engine,lights,alarm,0,bonnet,boot,objective);
				format(string,sizeof(string),"~w~%s ~g~OTWARTE",aVehicleNames[CarInfo[idd][cModel]-400]);
				GameTextForPlayer(playerid, string, 5000, 4);
				mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Lockk='%d' WHERE ID=%d", CarInfo[idd][cLock], idd);
				mysql_tquery(SQL, string, "", "");
			}
			return 1;
		}
	}
	if(HireCar[playerid] == -1) {
		if(idd == 0 || CarInfo[idd][Userid] != PlayerInfo[playerid][pSQLID] || !IsPlayerNearVehicle(playerid,car,3)) return 1;
		if(CarInfo[idd][cLock] == 0)
		{
			CarInfo[idd][cLock] = 1;
			GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(car,engine,lights,alarm,1,bonnet,boot,objective);
			format(string,sizeof(string),"~w~%s ~r~ZAMKNIETE",aVehicleNames[CarInfo[idd][cModel]-400]);
			GameTextForPlayer(playerid, string, 5000, 4);
			mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Lockk='%d' WHERE ID=%d", CarInfo[idd][cLock], idd);
			mysql_tquery(SQL, string, "", "");
		}
		else
		{
			CarInfo[idd][cLock] = 0;
			GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(car,engine,lights,alarm,0,bonnet,boot,objective);
			format(string,sizeof(string),"~w~%s ~g~OTWARTE",aVehicleNames[CarInfo[idd][cModel]-400]);
			GameTextForPlayer(playerid, string, 5000, 4);
			mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Lockk='%d' WHERE ID=%d", CarInfo[idd][cLock], idd);
			mysql_tquery(SQL, string, "", "");
		}
	}
	else if(HireCar[playerid] == car) {
		if(doors == 0)
		{
			GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(car,engine,lights,alarm,1,bonnet,boot,objective);
			format(string,sizeof(string),"~w~%s ~r~ZAMKNIETE",aVehicleNames[GetVehicleModel(car)-400]);
			GameTextForPlayer(playerid, string, 5000, 4);
		}
		if(doors == 1)
		{
			GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(car,engine,lights,alarm,0,bonnet,boot,objective);
			format(string,sizeof(string),"~w~%s ~g~OTWARTE",aVehicleNames[GetVehicleModel(car)-400]);
			GameTextForPlayer(playerid, string, 5000, 4);
		}
	}
	else {
		if(idd == 0 || CarInfo[idd][Userid] != PlayerInfo[playerid][pSQLID] || !IsPlayerNearVehicle(playerid,car,3)) return 1;
		if(CarInfo[idd][cLock] == 0)
		{
			CarInfo[idd][cLock] = 1;
			GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(car,engine,lights,alarm,1,bonnet,boot,objective);
			format(string,sizeof(string),"~w~%s ~r~ZAMKNIETE",aVehicleNames[CarInfo[idd][cModel]-400]);
			GameTextForPlayer(playerid, string, 5000, 4);
			mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Lockk='%d' WHERE ID=%d", CarInfo[idd][cLock], idd);
			mysql_tquery(SQL, string, "", "");
		}
		else
		{
			CarInfo[idd][cLock] = 0;
			GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(car,engine,lights,alarm,0,bonnet,boot,objective);
			format(string,sizeof(string),"~w~%s ~g~OTWARTE",aVehicleNames[CarInfo[idd][cModel]-400]);
			GameTextForPlayer(playerid, string, 5000, 4);
			mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Lockk='%d' WHERE ID=%d", CarInfo[idd][cLock], idd);
			mysql_tquery(SQL, string, "", "");
		}
	}
	return 1;
}
stock IsPlayerNearVehicle(playerid, vehicleid, Float:range)
{
    new Float:X, Float:Y, Float:Z;
    GetVehiclePos(vehicleid, X, Y, Z);
    if(IsPlayerInRangeOfPoint(playerid, range, X, Y, Z))return true;
    else return false;
}

public IsVehicleOccupied(vehicleid)
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerInVehicle(i,vehicleid)) return 1;
	}
	return 0;
}

CMD:enterrc(playerid, params[]) {
	if(!IsPlayerInAnyVehicle(playerid)){
		new Float:x, Float:y, Float:z, car, idd;
		GetPlayerPos(playerid, x, y, z);
		car = GetClosestVehicle(playerid);
		if(!IsPlayerNearVehicle(playerid, car, 5)) {
			SendClientMessage(playerid, COLOR_GREY, "Nie jeste wlascicielem zadnego pojazdu RC lub Jestes za daleko od nich.");
			return 1;
		}
		idd = FindSpawnID(car);
		if(IsVehicleRc(car) && CarInfo[idd][Userid] == PlayerInfo[playerid][pSQLID]) PutPlayerInVehicle(playerid, car, 0);
	}
	return 1;
}

CMD:exitrc(playerid, params[], help) {
	new vehicleID = GetPlayerVehicleID(playerid);
	if(IsVehicleRc(vehicleID) || GetVehicleModel(vehicleID) == RC_CAM){
		if(GetVehicleModel(vehicleID) != D_TRAM){
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			SetPlayerPosEx(playerid, x+0.5, y, z+1.0);
			if(InDealer[playerid] == 1) {
				DestroyVehicle(DealerCar[playerid]);
				InDealer[playerid] = 0, DealerCarType[playerid] = -1, DealerCar[playerid] = 0;
				KillTimer(DSTimer[playerid]);
				SendClientMessage(playerid, COLOR_YELLOW, "Test zostal zawieszony, poniewaz  porzuciles pojazd. ");
				SetPlayerPosEx(playerid, 327.9443, -1512.6609, 36.1366);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				TestingModel[playerid] = 0;
			}
		}
	}
	return 1;
}

CMD:cv(playerid, params[]) return cmd_checkcars(playerid, params);
CMD:checkcars(playerid, params[]) {
	new id, string[180];
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/checkvehicles <id/nazwa>");
	if(!IsPlayerConnected(id) || id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Ten gracz nie jest polaczony.");
	
	format(string, sizeof(string), "-- %s's (%d) pojazdy --", GetName(id), id);
	SCM(playerid, COLOR_WHITE, string);
	new colors[64];
	for(new i = 0; i < 10; i++) {
		if(PlayerInfo[id][pCarKey][i] != 0) {
			new car = PlayerInfo[id][pCarKey][i];
			format(colors, sizeof(colors), "%d, %d", CarInfo[car][cColorOne], CarInfo[car][cColorTwo]);		
			format(string, sizeof(string), "(%d) Pojazd: %s [%d] | ID: %d | Kolory: %s", i+1, aVehicleNames[CarInfo[car][cModel]-400], car, CarInfo[car][Spawned], colors);
			SCM(playerid, COLOR_LGREEN, string);	
		}		
	}
	return 1;
}

stock ShowTextDrawsPanel(playerid)
{
	if (GetPVarInt(playerid, "p_Panel"))
		return 0;
    
	for(new textdraw; textdraw < sizeof TextDrawVehiclePanel; textdraw++)
		TextDrawShowForPlayer(playerid, TextDrawVehiclePanel[textdraw]);
	    
	new
		p_vehid = GetPlayerVehicleID(playerid);
	    
	UpdatePlayerVehicleParams(playerid);
	    
	PlayerTextDrawShow(playerid, PlayerTextDrawPanel[playerid]);
	
	// Wybor textdraw
	SelectTextDraw(playerid, 0x222222FF);
	
	SetPVarInt(playerid, "p_panel", 1);
	
	return 1;
}



stock HideTextDrawsPanel(playerid)
{
	if (!GetPVarInt(playerid, "p_Panel"))
		return 0;
        
	for(new textdraw; textdraw < sizeof TextDrawVehiclePanel; textdraw++)
	    TextDrawHideForPlayer(playerid, TextDrawVehiclePanel[textdraw]);

	PlayerTextDrawHide(playerid, PlayerTextDrawPanel[playerid]);

	// Anuluj wybor textdraw
	CancelSelectTextDraw(playerid);
	
	// Deletar pvar
	DeletePVar(playerid, "p_panel");
	
	return 1;
}

stock UpdatePlayerVehicleParams(playerid)
{
	new p_vehparams[MAX_VEHICLE_PARAMS + 1];
	new p_vehid = GetPlayerVehicleID(playerid);
	
	GetVehicleParams(p_vehid, p_vehparams);
	
	new string[MAX_VEHICLE_PARAMS * 25];
	
	for(new params; params < MAX_VEHICLE_PARAMS; params++) {
	    format(string, sizeof string, "%s%s~n~ ~n~", string, p_vehparams[params] ? paramsName[params][1] : paramsName[params][2]);
	}
	PlayerTextDrawSetString(playerid, PlayerTextDrawPanel[playerid], string);
}

stock UpdateVehicleParams(playerid, param)
{
	if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		return 0;
	    
	new p_vehparams[MAX_VEHICLE_PARAMS + 1];
	new p_vehid = GetPlayerVehicleID(playerid);
	
	    
	// Sprawdzanie kliknietych przyciskow
	GetVehicleParams(p_vehid, p_vehparams);
	if(param == 0){
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
			new string[128],sendername[25];
			new engine,lights,alarm,doors,bonnet,boot,objective;
			if(Gas[p_vehid] == 0) return SCM(playerid,COLOR_YELLOW2, "Ten pojazd nie ma benzyny.");
			if(IsABike(p_vehid)) return SendClientMessage(playerid,COLOR_WHITE,"Nie mozesz uzyc tego polecenia na rowerze.");
			if(p_vehid == hotc[1] || p_vehid == hotc[2]) return SCM(playerid,COLOR_GREY, "Nie mozesz uzyc tego polecenia w tym pojezdzie.");
			if(p_vehid == sanr[1] || p_vehid == sanr[2]) return SCM(playerid,COLOR_GREY, "Nie mozesz uzyc tego polecenia w tym pojezdzie.");
			if(Refueling[playerid] == 0)
			{
			if(OdpalanieSpam[playerid] == 1)
			{
				SendClientMessage(playerid,COLOR_GREY, "Odpalasz juz wóz!");
				return 1;
			}
			if(Silnik[p_vehid] == 0)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s wklada kluczyk do stacyjki i przekreca.", sendername);
					ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetTimerEx("odpalanie",3000,0,"d",playerid);
					OdpalanieSpam[playerid] = 1;
					}
				else if(Silnik[p_vehid] == 1)
				{
				GetVehicleParamsEx(p_vehid,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(p_vehid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
				new vehicle;
				vehicle = GetVehicleModel(p_vehid) - 400;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s wyciaga kluczyk ze stacyjki i gasi auto.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				Silnik[p_vehid] = 0;
				Swiatla[p_vehid] = 0;
				}
			}
			else return SendClientMessage(playerid,COLOR_WHITE,"Pojazd jest tankowany, czekaj.");
		}
		else return SendClientMessage(playerid,COLOR_WHITE,"Musisz byc w pojezdzie, aby uzyc tego polecenia.");
	} 
	if (param == 1){
	new engine,lights,alarm,doors,bonnet,boot,objective;
	  if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
      {
         if(GetPVarInt(playerid, "Lights") == 0)
         {
			 GetVehicleParamsEx(p_vehid,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(p_vehid,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
			 SetPVarInt(playerid, "Lights", 1);
			 Swiatla[p_vehid] = 1;
         }
         else if(GetPVarInt(playerid, "Lights") == 1)
         {
			 GetVehicleParamsEx(p_vehid,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(p_vehid,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
			 SetPVarInt(playerid, "Lights", 0);
			 Swiatla[p_vehid] = 0;
			}
		}
	}
	if (param == 2) {
	new string[128], idd, vsid = sVehicle[5][playerid];
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w pojezdzie!");
    new car = GetPlayerVehicleID(playerid);
	if(PersonalCar(playerid) == -1) return SCM(playerid, COLOR_LGREEN, "* Nie jeste w swoim pojezdzie!");
	idd = PersonalCar(playerid);
	if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nie ma cie w pojezdzie!");
	if(idd == 0) return SendClientMessage(playerid, COLOR_GREY, "Ten pojazd nie nalezy do ciebie!");
	new Float:x, Float:y, Float:z, Float:a;
	GetVehiclePos(car, x, y, z);
	GetVehicleZAngle(car, a);
	CarInfo[idd][cLocationx] = x;
	CarInfo[idd][cLocationy] = y;
	CarInfo[idd][cLocationz] = z;
	CarInfo[idd][cAngle] = a;
	//VehicleOwned[CarInfo[idd][Spawned]] = 0;
	//VehicleSQL[CarInfo[idd][Spawned]] = 0;	
	//DestroyVehicle(car);
	CheckVehicle(car);		
	//CarInfo[idd][Spawned] = CreateVehicleEx(CarInfo[idd][cModel],CarInfo[idd][cLocationx],CarInfo[idd][cLocationy],CarInfo[idd][cLocationz],CarInfo[idd][cAngle],CarInfo[idd][cColorOne],CarInfo[idd][cColorTwo],-1);
	//VehicleOwned[CarInfo[idd][Spawned]] = CarInfo[idd][Spawned];
	//VehicleSQL[CarInfo[idd][Spawned]] = idd;	
    //SetTunning(vsid);
	//attach_vip_text(idd);
	//SetVehicleNumberPlate(CarInfo[idd][Spawned], CarInfo[idd][cLicense]);
	mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Locationx='%f' WHERE ID=%d", CarInfo[idd][cLocationx], idd);
	mysql_tquery(SQL, string, "", "");
	mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Locationy='%f' WHERE ID=%d", CarInfo[idd][cLocationy], idd);
	mysql_tquery(SQL, string, "", "");
	mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Locationz='%f' WHERE ID=%d", CarInfo[idd][cLocationz], idd);
	mysql_tquery(SQL, string, "", "");
	mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Angle='%f' WHERE ID=%d", CarInfo[idd][cAngle], idd);
	mysql_tquery(SQL, string, "", "");
	mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Spawned='%d' WHERE ID=%d", CarInfo[idd][Spawned], idd);
	mysql_tquery(SQL, string, "", "");
	SCM(playerid, 0xFFBABAFF, "Samochód zaparkowany!");
	}
	if (param == 3) {
	LockCarFunction(playerid);
	}
	if (param == 4) {
	new engine,lights,alarm,doors,bonnet,boot,objective;
      if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
      {
         if(Maska[p_vehid] == 0)
         {
			 GetVehicleParamsEx(p_vehid,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(p_vehid,engine,lights,alarm,doors,VEHICLE_PARAMS_ON,boot,objective);
			 Maska[p_vehid] = 1;
         }
         else if(Maska[p_vehid] == 1)
         {
			 GetVehicleParamsEx(p_vehid,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(p_vehid,engine,lights,alarm,doors,VEHICLE_PARAMS_OFF,boot,objective);
			 Maska[p_vehid] = 0;
         }
      }
	}
	if (param == 5) {
      if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
      {
		 new engine,lights,alarm,doors,bonnet,boot,objective;
         if(Bagaznik[p_vehid] == 0)
         {
			 GetVehicleParamsEx(p_vehid,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(p_vehid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_ON,objective);
			 Bagaznik[p_vehid] = 1;
         }
         else if(Bagaznik[p_vehid] == 1)
         {
			 GetVehicleParamsEx(p_vehid,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(p_vehid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_OFF,objective);
			 Bagaznik[p_vehid] = 0;
         }
      }
	}
	   
	//p_vehparams[param] = p_vehparams[param] ? 0 : 1;
	    
	UpdatePlayerVehicleParams(playerid);
	//SendClientMessageToAll(-1, "xdd");	
	
	return 1;
	    
}

stock GetVehicleParams(vehicleid, params[MAX_VEHICLE_PARAMS + 1])
{
	params[0] = Silnik[vehicleid];
	params[1] = Swiatla[vehicleid];
	params[2] = 0;//parkowanie
	params[3] = CarInfo[FindSpawnID(vehicleid)][cLock];
	params[4] = Maska[vehicleid];
	params[5] = Bagaznik[vehicleid];
	params[6] = 0;
}

CMD:auta(playerid, params[]) return ShowVehiclesMenu(playerid);
CMD:v(playerid, params[]) return ShowVehiclesMenu(playerid);
CMD:vehicles(playerid, params[]) return ShowVehiclesMenu(playerid);

stock ShowVehiclesMenu(playerid) {
	new szDialog[1300], szDialog2[1300], vstatus[1024];
	if(GetVehicles(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz prywatnego pojazdu!");	
	sVehicle[0][playerid] = 0, sVehicle[1][playerid] = 0, sVehicle[2][playerid] = 0, sVehicle[3][playerid] = 0, sVehicle[4][playerid] = 0, sVehicle[5][playerid] = 0;
	for(new i = 0; i < 10; i++) {
		if(PlayerInfo[playerid][pCarKey][i] != 0) {
			new car =  PlayerInfo[playerid][pCarKey][i];
			if(CarInfo[car][Spawned] > 0) format(vstatus, sizeof(vstatus), "{26B309}(zespawnowany){FFFFFF} %s", aVehicleNames[CarInfo[car][cModel]-400]);
			else format(vstatus, sizeof(vstatus), "{FF0000}(nieaktwny){FFFFFF} %s", aVehicleNames[CarInfo[car][cModel]-400]);
			format(szDialog, sizeof(szDialog), "%s\n", vstatus);
			strcat(szDialog2, szDialog);
		}
		else i += 1;
		//else strcat(szDialog2, "{FFD857}\n");
		//else return 1;
	}
	ShowPlayerDialog(playerid, DIALOG_GARAGE, DIALOG_STYLE_LIST, "Zarzadzaj swoimi pojazdami", szDialog2, "Ok", "Wyjdz");
	return 1;
}

function CancelTestDrive(playerid) {
	SendClientMessage(playerid, COLOR_YELLOW, "Czas na jazde próbna wygasl.");
	PutPlayerInVehicle(playerid, DealerCar[playerid], 0);
	if(DealerCarType[playerid] == 1) {
		SetPlayerInterior(playerid, 1);
		DealerCarAngle[playerid] = 75.7200;
		SetVehiclePos(DealerCar[playerid], 613.7783, -2.9987, 1000.5500), SetVehicleZAngle(DealerCar[playerid], 75.7200);
		LinkVehicleToInterior(DealerCar[playerid], 1);
		SetPlayerCameraPos(playerid, 604.9370, -2.9715, 1003.8300);
		SetPlayerCameraLookAt(playerid, 605.9343, -2.9241, 1003.4600);
	}
	else if(DealerCarType[playerid] == 2) {
		SetPlayerInterior(playerid, 1);
		DealerCarAngle[playerid] = 75.7200;
		SetVehiclePos(DealerCar[playerid], 613.7783, -2.9987, 1000.5500), SetVehicleZAngle(DealerCar[playerid], 75.7200);
		LinkVehicleToInterior(DealerCar[playerid], 1);
		SetPlayerCameraPos(playerid, 604.9370, -2.9715, 1003.8300);
		SetPlayerCameraLookAt(playerid, 605.9343, -2.9241, 1003.4600);
	}
	else if(DealerCarType[playerid] == 3) {
		DealerCarAngle[playerid] = 214.5153;
		SetVehiclePos(DealerCar[playerid], 179.2214,-1935.9833,-0.2331), SetVehicleZAngle(DealerCar[playerid], 214.5153);
		SetPlayerCameraPos(playerid, 195.5355, -1952.8099, 8.7636);
		SetPlayerCameraLookAt(playerid, 194.7955, -1952.1398, 8.3886);
	}
	else if(DealerCarType[playerid] == 4) {
		DealerCarAngle[playerid] = 320.7336;
		SetVehiclePos(DealerCar[playerid], 1765.7640, -2286.8374, 27.4146), SetVehicleZAngle(DealerCar[playerid], 320.7336);
		SetPlayerCameraPos(playerid, 1769.0742, -2266.9126, 32.7817);
		SetPlayerCameraLookAt(playerid, 1768.9325, -2267.9021, 32.4167);
	}
	else if(DealerCarType[playerid] == 5) {
		DealerCarAngle[playerid] = 121.0334;
		SetVehiclePos(DealerCar[playerid], 1543.3701,-1355.8428,328.6331), SetVehicleZAngle(DealerCar[playerid], 121.0334);
		SetPlayerCameraPos(playerid, 1542.2255, -1370.4922, 333.8188);
		SetPlayerCameraLookAt(playerid, 1542.3651, -1369.5028, 333.4086);
	}
	TestingModel[playerid] = 0;
	ShowDealershipTextdraws(playerid);
	SelectTextDraw(playerid, 0xFF0000FF);
 	TogglePlayerControllable(playerid, 0);
	new e,l,a,d,b,bo,o;
	GetVehicleParamsEx(DealerCar[playerid],e,l,a,d,b,bo,o);
	SetVehicleParamsEx(DealerCar[playerid],0,l,a,d,b,bo,o);
	return 1;
}


function ShowDealershipTextdraws(playerid) {
	PlayerTextDrawShow(playerid, MainColor), PlayerTextDrawShow(playerid, SecColor),
	PlayerTextDrawShow(playerid, NextColorMain), PlayerTextDrawShow(playerid, BackColorMain), PlayerTextDrawShow(playerid, NextColorSec),
	PlayerTextDrawShow(playerid, BackColorSec), PlayerTextDrawShow(playerid, CarsCategory), PlayerTextDrawShow(playerid, BikesCategory),
	PlayerTextDrawShow(playerid, BoatsCategory), PlayerTextDrawShow(playerid, AirCategory), /*PlayerTextDrawShow(playerid, SpecialCategory),*/
	PlayerTextDrawShow(playerid, RotLeft), PlayerTextDrawShow(playerid, RotRight), PlayerTextDrawShow(playerid, BuyModel), PlayerTextDrawShow(playerid, TestModel),
	PlayerTextDrawShow(playerid, ExitDS), PlayerTextDrawShow(playerid, BackCar), PlayerTextDrawShow(playerid, NextCar);

	new szText[1024];
	if(InDealer[playerid] == 1) {
		if(PlayerInfo[playerid][pCash] >= DSModels[DealerID[playerid]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Maksymalna pr?dko??: %d km/h~n~Cena: ~g~$%s~n~~w~Typ: ~g~Normalny", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[DealerID[playerid]][dMaxSpeed], FormatNumber(DSModels[DealerID[playerid]][dPrice]));
		else if(PlayerInfo[playerid][pCash] < DSModels[DealerID[playerid]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Maksymalna pr?dko??: %d km/h~n~Cena: ~r~$%s~n~~w~Typ: ~g~Normalny", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[DealerID[playerid]][dMaxSpeed], FormatNumber(DSModels[DealerID[playerid]][dPrice]));
		PlayerTextDrawSetString(playerid, InfoDS, szText);
		PlayerTextDrawShow(playerid, InfoDS);
	}
	else if(InDealer[playerid] == 2) {
		if(PlayerInfo[playerid][pCash] >= DSModels[DealerID[playerid]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Maksymalna pr?dko??: %d km/h~n~Gold: ~g~%s~n~~w~Typ: ~g~Normalny", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[DealerID[playerid]][dMaxSpeed], FormatNumber(DSModels[DealerID[playerid]][dGold]));
		else if(PlayerInfo[playerid][pCash] < DSModels[DealerID[playerid]][dPrice]) format(szText, sizeof(szText), "Model: %s~n~Maksymalna pr?dko??: %d km/h~n~Gold: ~r~$%s~n~~w~Typ: ~g~Normalny", aVehicleNames[GetVehicleModel(DealerCar[playerid])-400], DSModels[DealerID[playerid]][dMaxSpeed], FormatNumber(DSModels[DealerID[playerid]][dGold]));
		PlayerTextDrawSetString(playerid, InfoDS, szText);
		PlayerTextDrawShow(playerid, InfoDS);
	}
	return 1;
}

function HideDealershipTextdraws(playerid) {
	PlayerTextDrawHide(playerid, InfoDS), PlayerTextDrawHide(playerid, MainColor), PlayerTextDrawHide(playerid, SecColor),
	PlayerTextDrawHide(playerid, NextColorMain), PlayerTextDrawHide(playerid, BackColorMain), PlayerTextDrawHide(playerid, NextColorSec),
	PlayerTextDrawHide(playerid, BackColorSec), PlayerTextDrawHide(playerid, CarsCategory), PlayerTextDrawHide(playerid, BikesCategory),
	PlayerTextDrawHide(playerid, BoatsCategory), PlayerTextDrawHide(playerid, AirCategory), /*PlayerTextDrawHide(playerid, SpecialCategory),*/
	PlayerTextDrawHide(playerid, RotLeft), PlayerTextDrawHide(playerid, RotRight), PlayerTextDrawHide(playerid, BuyModel), PlayerTextDrawHide(playerid, TestModel),
	PlayerTextDrawHide(playerid, ExitDS), PlayerTextDrawHide(playerid, BackCar), PlayerTextDrawHide(playerid, NextCar);
	return 1;
}

stock DestroyPlayerCar(dbid) {
	new string[256];
	Delete3DTextLabel(CarInfo[dbid][vOpis]);
	Update3DTextLabelText(CarInfo[dbid][vOpis], COLOR_WHITE, " ");		
	Silnik[CarInfo[dbid][Spawned]] = 0;
	Swiatla[CarInfo[dbid][Spawned]] = 0;
	Maska[CarInfo[dbid][Spawned]] = 0;
	Bagaznik[CarInfo[dbid][Spawned]] = 0;
	DestroyVehicle(CarInfo[dbid][Spawned]);
	VehicleOwned[CarInfo[dbid][Spawned]] = 0;
	VehicleSQL[CarInfo[dbid][Spawned]] = 0;	
	CarInfo[dbid][Spawned] = 0;
	mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Spawned='%d' WHERE ID=%d", CarInfo[dbid][Spawned], dbid);
	mysql_tquery(SQL, string, "", "");
	return 1;
}

stock SpawnPlayerCar(dbid) {
	new string[256];
	new engine,lights,alarm,doors,bonnet,boot,objective;
	if(dbid != 0)
	{
		CarInfo[dbid][Spawned] = CreateVehicleEx(CarInfo[dbid][cModel],CarInfo[dbid][cLocationx],CarInfo[dbid][cLocationy],CarInfo[dbid][cLocationz],CarInfo[dbid][cAngle],CarInfo[dbid][cColorOne],CarInfo[dbid][cColorTwo],-1);
		attach_vip_text(dbid);
		VehicleOwned[CarInfo[dbid][Spawned]] = CarInfo[dbid][Spawned];
		VehicleSQL[CarInfo[dbid][Spawned]] = dbid;		
		GetVehicleParamsEx(CarInfo[dbid][Spawned],engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(CarInfo[dbid][Spawned],0,lights,alarm,CarInfo[dbid][cLock],bonnet,boot,objective);
		new carid = CarInfo[dbid][Spawned];
		if(CarInfo[dbid][mod0] != 0)
		{
			AddVehicleComponent(carid,CarInfo[dbid][mod0]);
		}
		if(CarInfo[dbid][mod1] != 0)
		{
			AddVehicleComponent(carid,CarInfo[dbid][mod1]);
		}
		if(CarInfo[dbid][mod2] != 0)
		{
			AddVehicleComponent(carid,CarInfo[dbid][mod2]);
		}
		if(CarInfo[dbid][mod3] != 0)
		{
			AddVehicleComponent(carid,CarInfo[dbid][mod3]);
		}
		if(CarInfo[dbid][mod4] != 0)
		{
			AddVehicleComponent(carid,CarInfo[dbid][mod4]);
		}
		if(CarInfo[dbid][mod5] != 0)
		{
			AddVehicleComponent(carid,CarInfo[dbid][mod5]);
		}
		if(CarInfo[dbid][mod6] != 0)
		{
			AddVehicleComponent(carid,CarInfo[dbid][mod6]);
		}
		if(CarInfo[dbid][mod7] != 0)
		{
			AddVehicleComponent(carid,CarInfo[dbid][mod7]);
		}
		if(CarInfo[dbid][mod8] != 0)
		{
			AddVehicleComponent(carid,CarInfo[dbid][mod8]);
		}
		if(CarInfo[dbid][mod9] != 0)
		{
			AddVehicleComponent(carid,CarInfo[dbid][mod9]);
		}
		if(CarInfo[dbid][mod10] != 0)
		{
			AddVehicleComponent(carid,CarInfo[dbid][mod10]);
		}
		if(CarInfo[dbid][mod11] != 0)
		{
			AddVehicleComponent(carid,CarInfo[dbid][mod11]);
		}
		if(CarInfo[dbid][mod12] != 0)
		{
			AddVehicleComponent(carid,CarInfo[dbid][mod12]);
		}
		if(CarInfo[dbid][mod13] != 0)
		{
			AddVehicleComponent(carid,CarInfo[dbid][mod13]);
		}
		SetVehicleNumberPlate(carid,CarInfo[dbid][cLicense]);
		mysql_format(SQL, string, sizeof(string), "UPDATE cars SET Spawned='%d' WHERE ID=%d", CarInfo[dbid][Spawned], dbid);
		mysql_tquery(SQL, string, "", "");
	}
	return 1;
}

function SetTunning(idd)
{
    new carid = CarInfo[idd][Spawned];
    new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(carid,0,lights,alarm,CarInfo[idd][cLock],bonnet,boot,objective);
	if(CarInfo[idd][mod0] != 0)
	{
		AddVehicleComponent(carid,CarInfo[idd][mod0]);
	}
	if(CarInfo[idd][mod1] != 0)
	{
		AddVehicleComponent(carid,CarInfo[idd][mod1]);
	}
	if(CarInfo[idd][mod2] != 0)
	{
		AddVehicleComponent(carid,CarInfo[idd][mod2]);
	}
	if(CarInfo[idd][mod3] != 0)
	{
		AddVehicleComponent(carid,CarInfo[idd][mod3]);
	}
	if(CarInfo[idd][mod4] != 0)
	{
		AddVehicleComponent(carid,CarInfo[idd][mod4]);
	}
	if(CarInfo[idd][mod5] != 0)
	{
		AddVehicleComponent(carid,CarInfo[idd][mod5]);
	}
	if(CarInfo[idd][mod6] != 0)
	{
		AddVehicleComponent(carid,CarInfo[idd][mod6]);
	}
	if(CarInfo[idd][mod7] != 0)
	{
		AddVehicleComponent(carid,CarInfo[idd][mod7]);
	}
	if(CarInfo[idd][mod8] != 0)
	{
		AddVehicleComponent(carid,CarInfo[idd][mod8]);
	}
	if(CarInfo[idd][mod9] != 0)
	{
		AddVehicleComponent(carid,CarInfo[idd][mod9]);
	}
	if(CarInfo[idd][mod10] != 0)
	{
		AddVehicleComponent(carid,CarInfo[idd][mod10]);
	}
	if(CarInfo[idd][mod11] != 0)
	{
		AddVehicleComponent(carid,CarInfo[idd][mod11]);
	}
	if(CarInfo[idd][mod12] != 0)
	{
		AddVehicleComponent(carid,CarInfo[idd][mod12]);
	}
	if(CarInfo[idd][mod13] != 0)
	{
		AddVehicleComponent(carid,CarInfo[idd][mod13]);
	}
	SetVehicleNumberPlate(carid,CarInfo[idd][cLicense]);
}

stock GetClosestVehicle(playerid)
{
    new closestdist = 999999999, closestvehicle = -1;
    new Float:x[2],Float:y[2],Float:z[2],distance;
    for(new i; i < MAX_VEHICLES; i++)
    {
        GetVehiclePos(i,x[0],y[0],z[0]);
        //if(x[0] == 0.0 && y[0] == 0.0 && z[0] == 0.0) return -1;
        GetPlayerPos(playerid,x[1],y[1],z[1]);
        distance = floatround(GetDistanceBetweenPoints(x[0],y[0],z[0],x[1],y[1],z[1]));
        if(distance < closestdist) {
            closestdist = distance;
            closestvehicle = i;
        }
    }
    return closestvehicle;
}

function LoadCCTV() {
	AddCCTV("DMV", 1458.746948, -1751.145507, 33.429687, 26.75);
	AddCCTV("Centrum", 1412.771484, -1575.380249, 36.570312, 229.17);
	AddCCTV("Market", 1287.093017, -1367.503906, 35.659873, 192.82);
	AddCCTV("Szpital", 1172.241455, -1324.703735, 31.462354, 268.94);
	AddCCTV("Market - Centrum Handlowe", 1098.589355, -1416.134765, 51.189582, 3.54);
	AddCCTV("San News - 1", 738.456237, -1384.432006, 25.692211, 178.38);
	AddCCTV("San News - 2", 593.877624, -1379.622192, 52.434432, 195.86);
	AddCCTV("Salon Aut", 323.798187, -1522.728027, 76.539062, 232.59);
    AddCCTV("Mount Chiliad", 375.944305, -1637.292602, 50.206146, 182.14);
	AddCCTV("Molo z ko³em", -702.9260, 1848.8094, 116.0507, 0.0);
	AddCCTV("Verona beach", 561.071960, -1744.317749, 32.549888, 350.72);
	AddCCTV("Molo bez ko³a", 848.805908, -1796.147705, 32.195312, 30.20);
	AddCCTV("DMV - tyly 1", 1197.831909, -1861.784545, 30.697074, 0.43);
	AddCCTV("DMV - ty³y 2", 1519.756591, -1881.494873, 33.249794, 358.24);
	AddCCTV("Idlewood", 1788.544555, -1868.390136, 29.338632, 317.82);
	AddCCTV("Idlewood - stacja", 1900.685302, -1762.988037, 25.791057, 340.38);
	AddCCTV("Idlewood - pizzeria", 2105.196533, -1806.062988, 22.218750, 83.13);
	AddCCTV("Skare park", 2010.162963, -1365.894409, 48.335937, 73.42);
	AddCCTV("Parkin ko³o banku", 1705.151733, -1170.858154, 54.101562, 326.57);
	AddCCTV("Bank", 1452.503173, -1017.831970, 61.170345, 150.81);	
	AddCCTV("Kasyno", 1022.506225, -1116.622070, 47.385696, 206.90);
	AddCCTV("Richman - 1", 910.566955, -1008.651489, 110.768493, 22.58);
	AddCCTV("Richman - 2", 581.794799, -1253.239624, 64.187500, 56.50);
	new Count, Left = TotalCCTVS;//CCTV
	for(new menu; menu<MAX_CCTVMENUS; menu++)
	{
	    if(Left > 12)
	    {
	        CCTVMenu[menu] = CreateMenu("Wybierz kamere:", 1, 200, 100, 220);
	        TotalMenus++;
	        MenuType[menu] = 1;
	        for(new i; i<11; i++)
	        {
	        	AddMenuItem(CCTVMenu[menu], 0, CameraName[Count]);
	        	Count++;
	        	Left--;
			}
			AddMenuItem(CCTVMenu[menu], 0, "Nastepna strona");
		}
		else if(Left<13 && Left > 0)
		{
		    CCTVMenu[menu] = CreateMenu("Wybierz kamere:", 1, 200, 100, 220);
		    TotalMenus++;
		    MenuType[menu] = 2;
		    new tmp = Left;
	        for(new i; i<tmp; i++)
	        {
	        	AddMenuItem(CCTVMenu[menu], 0, CameraName[Count]);
	        	Count++;
	        	Left--;
			}
		}
	}
}

function LoadSystems()
{
	new query[256];
	mysql_format(SQL, query, sizeof(query), "SELECT * FROM `dsveh`");
	mysql_tquery(SQL, query, "LoadDSVeh", "");

	mysql_format(SQL, query, sizeof(query), "SELECT MAX(ID) FROM `cars`");
	mysql_tquery(SQL, query, "PreLoadCars", "");
	
	mysql_format(SQL, query, sizeof(query), "SELECT * FROM `svehicles`");
	mysql_tquery(SQL, query, "LoadSVehicles", "");
	
	mysql_format(SQL, query, sizeof(query), "SELECT * FROM `obiekty` ORDER BY `obiekty`.`ID` ASC");
	mysql_tquery(SQL, query, "LoadObjects", "");
	
}

function LoadCars(id)
{
	new temp = cache_num_rows();
	if(temp == 0)
	{
        //CarInfo[id][cID] = -2;
	}
	else
	{
		CarInfo[id][cID] 				= cache_get_field_content_int(0, "ID");
		CarInfo[id][cModel]             = cache_get_field_content_int(0, "Model");
		CarInfo[id][cLocationx]         = cache_get_field_content_float(0, "Locationx");
		CarInfo[id][cLocationy]         = cache_get_field_content_float(0, "Locationy");
		CarInfo[id][cLocationz]         = cache_get_field_content_float(0, "Locationz");
		CarInfo[id][cAngle]		        = cache_get_field_content_float(0, "Angle");
		CarInfo[id][cHP]		        = cache_get_field_content_float(0, "HP");
		CarInfo[id][cColorOne]          = cache_get_field_content_int(0, "ColorOne");
		CarInfo[id][cColorTwo]          = cache_get_field_content_int(0, "ColorTwo");
		cache_get_field_content(0, "Owner", CarInfo[id][cOwner], SQL, 129);
		CarInfo[id][cValue]         	= cache_get_field_content_int(0, "Value");
		cache_get_field_content(0, "License", CarInfo[id][cLicense], SQL, 129);
		CarInfo[id][cAlarm]          	= cache_get_field_content_int(0, "Alarm");
		CarInfo[id][cOpis]          	= cache_get_field_content_int(0, "IsOpis");
		CarInfo[id][cLock]          	= cache_get_field_content_int(0, "Lockk");
		CarInfo[id][mod0]          		= cache_get_field_content_int(0, "mod0");
		CarInfo[id][mod1]          		= cache_get_field_content_int(0, "mod1");
		CarInfo[id][mod2]          		= cache_get_field_content_int(0, "mod2");
		CarInfo[id][mod3]          		= cache_get_field_content_int(0, "mod3");
		CarInfo[id][mod4]          		= cache_get_field_content_int(0, "mod4");
		CarInfo[id][mod5]          		= cache_get_field_content_int(0, "mod5");
		CarInfo[id][mod6]          		= cache_get_field_content_int(0, "mod6");
		CarInfo[id][mod7]          		= cache_get_field_content_int(0, "mod7");
		CarInfo[id][mod8]          		= cache_get_field_content_int(0, "mod8");
		CarInfo[id][mod9]          		= cache_get_field_content_int(0, "mod9");
		CarInfo[id][mod10]          	= cache_get_field_content_int(0, "mod10");
		CarInfo[id][mod11]          	= cache_get_field_content_int(0, "mod11");
		CarInfo[id][mod12]          	= cache_get_field_content_int(0, "mod12");
		CarInfo[id][mod13]          	= cache_get_field_content_int(0, "mod13");
		CarInfo[id][paintjob]          	= cache_get_field_content_int(0, "paintjob");
		CarInfo[id][KM]          		= cache_get_field_content_float(0, "KM");
		CarInfo[id][Userid]          	= cache_get_field_content_int(0, "Userid");
		CarInfo[id][Confiscated]   		= cache_get_field_content_int(0, "Confiscated");
		//CarInfo[id][Spawned]   			= cache_get_field_content_int(0, "Spawned"); ladowanie id auta z bazy
		CarInfo[id][cSpecial]   		= cache_get_field_content_int(0, "Special");
		CarInfo[id][cTextColor]   		= cache_get_field_content_int(0, "TextColor");
		cache_get_field_content(0, "Text", CarInfo[id][cText], SQL, 129);
		cache_get_field_content(0, "VOpis", CarInfo[id][dbOpis], SQL, 129);
	}
}



CMD:vipname(playerid, params[]) {
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie ma cie w pojezdzie!");
    new car = GetPlayerVehicleID(playerid), idd;
	if(GetVehicles(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz prywatnego pojazdu!");
	if(PersonalCar(playerid) == -1) return SCM(playerid, COLOR_LGREEN, "* Nie jeste w swoim pojezdzie!");
	idd = PersonalCar(playerid);
	if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w swoim pojedzie.");
	if(idd == 0) return SendClientMessage(playerid, COLOR_WHITE, "Ten pojazd nie nalezy do ciebie!");	
	if(strlen(CarInfo[idd][cText]) < 3) return SCM(playerid, -1, "Ten pojazd nie jest przeznaczony dla vipów");
	new result[32];
	if(sscanf(params, "s[32]",result)) {
		SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/vipname <name>");
		return 1;
	}
	if(strfind(result, "'", true) != -1 || strfind(result, "Model", true) != -1 || strfind(result, "`", true) != -1) return SCM(playerid, -1, "Caractere invalide!");	
	if(strlen(result) < 3 || strlen(result) > 10) return SCM(playerid, COLOR_GREY, "Poti pune un text ce are minim 3 caractere si maxim 10.");
	if(strlen(CarInfo[idd][cText]) >= 3) DestroyDynamicObject(nameobject[CarInfo[idd][Spawned]]);
	
	format(CarInfo[idd][cText], 256, result);
	new query[256], string[180];
	
	mysql_real_escape_string(result, hackmysql);
	format(query, sizeof(query), "UPDATE `cars` SET `Text`='%s' WHERE `ID`='%d'", hackmysql, idd);
	mysql_query(SQL, query);
	format(string, sizeof(string), "Nowy VIP TEXT jest teraz ustawiony na: %s", result);
	SCM(playerid, COLOR_YELLOW, string);
	attach_vip_text(idd);		
	return 1;
}

CMD:vipwheels(playerid, params[]) {
	//if(PlayerInfo[playerid][pVip] == 0) return SCM(playerid, COLOR_GREY, "* Nie masz dostepu do tego polecenia!");
    new car = GetPlayerVehicleID(playerid), idd;
	if(GetVehicles(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz prywatnego pojazdu!");
	if(PersonalCar(playerid) == -1) return SCM(playerid, COLOR_LGREEN, "* Nie jeste w swoim pojezdzie!");
	idd = PersonalCar(playerid);
	if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w swoim pojedzie.");
	if(idd == 0) return SendClientMessage(playerid, COLOR_WHITE, "Ten pojazd nie nalezy do ciebie!");
	if(strlen(CarInfo[idd][cText]) < 3) return SCM(playerid, -1, "Ten pojazd nie jest przeznaczony dla vipów");
	if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w swoim pojedzie.");
	ShowPlayerDialog(playerid, DIALOG_WHEELS, DIALOG_STYLE_LIST, "Vip Wheels", "Shadow\nCutter\nSwitch\nDollar", "Ok", "Wyjdz");
	return 1;
}

function PersonalCar(playerid) {
	for(new i = 0; i < 10; i++) {
		if(CarInfo[PlayerInfo[playerid][pCarKey][i]][Spawned] == GetPlayerVehicleID(playerid)) return PlayerInfo[playerid][pCarKey][i];
	}
	return -1;
}

CMD:vipnamecolor(playerid, params[]) {
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nie ma cie w pojezdzie!");
    new car = GetPlayerVehicleID(playerid), idd;
	if(GetVehicles(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Nie masz prywatnego pojazdu!");
	if(PersonalCar(playerid) == -1) return SCM(playerid, COLOR_LGREEN, "* Nie jeste w swoim pojezdzie!");
	idd = PersonalCar(playerid);
	if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w swoim pojedzie.");
	if(idd == 0) return SendClientMessage(playerid, COLOR_WHITE, "Ten pojazd nie nalezy do ciebie!");
	if(strlen(CarInfo[idd][cText]) < 3) return SCM(playerid, -1, "Ten pojazd nie jest przeznaczony dla vipów");
	if(CarInfo[idd][Spawned] != car) return SendClientMessage(playerid, COLOR_GREY, "Nie jeste w swoim pojedzie.");
	new szDialog[512];
	format(szDialog, 512, 
		"{FFFFFF}White\n\
		{00FF51}Lime Green\n\
		{32C24D}Green\n\
		{FF0000}Red\n\
		{A80F0F}Unusual Red\n\
		{C122C7}Purple\n\
		{3505F5}Blue\n\
		{463296}Dark Blue\n\
		{00BFFF}Light Blue\n\
		{FF9D14}Orange\n\
		{FF8708}Deep Orange\n\
		{FFFB14}Gold\n\
		{F2EF16}Yellow \n\
		{FF0080}Pink\n\
		{0FFA98}Unusual Green\n\
		{8932A1}Violet \n\
		{08FFA8}Unusual Green 2 \n\
		{F6FF00}Deep Yellow\n\
		{08FFFB}Aqua Blue");
	ShowPlayerDialog(playerid, DIALOG_VIPCOLOR, DIALOG_STYLE_LIST, "VIP Kolory nazwy:", szDialog, "Ok", "Zamknij");
	return 1;
}	

CMD:pcolor(playerid, params[]) {
	new szDialog[512];
	format(szDialog, 512, 
		"{FFFFFF}White\n\
		{00FF51}Lime Green\n\
		{32C24D}Green\n\
		{FF0000}Red\n\
		{A80F0F}Unusual Red\n\
		{C122C7}Purple\n\
		{3505F5}Blue\n\
		{463296}Dark Blue\n\
		{00BFFF}Light Blue\n\
		{FF9D14}Orange\n\
		{FF8708}Deep Orange\n\
		{FFFB14}Gold\n\
		{F2EF16}Yellow \n\
		{FF0080}Pink\n\
		{0FFA98}Unusual Green\n\
		{8932A1}Violet \n\
		{08FFA8}Unusual Green 2 \n\
		{F6FF00}Deep Yellow\n\
		{08FFFB}Aqua Blue");
	ShowPlayerDialog(playerid, DIALOG_PCOLOR, DIALOG_STYLE_LIST, "VIP Name Colors:", szDialog, "Ok", "Zamknij");
	return 1;
}
		
stock serverColors(id) {
	new string[180];
	switch(id) {
		case 0: string = "FFFFFF";
		case 1: string = "00FF51";
		case 2: string = "32C24D";
		case 3: string = "FF0000";
		case 4: string = "A80F0F";
		case 5: string = "C122C7";
		case 6: string = "3505F5";
		case 7: string = "463296";
		case 8: string = "00BFFF";
		case 9: string = "FF9D14";
		case 10: string = "FF8708";
		case 11: string = "FFFB14";
		case 12: string = "F2EF16";
		case 13: string = "FF0080";
		case 14: string = "0FFA98";
		case 15: string = "8932A1";
		case 16: string = "08FFA8";
		case 17: string = "F6FF00";	
		case 18: string = "08FFFB";	
	}
	return string;
}

function PreLoadCars()
{
	new query[128];
	new x = cache_get_field_content_int(0, "MAX(ID)");
	for(new i = 1; i <= x; i++)
	{
	    mysql_format(SQL, query, sizeof(query), "SELECT * FROM `cars` WHERE ID = %d",i);
		mysql_tquery(SQL, query, "LoadCars", "i", i);
	}
}

function LoadDSVeh()
{
	dsvehs = cache_num_rows();
	for(new i = 1; i <= dsvehs; i++)
	{
		new j = i - 1;
		DSModels[i][dID] 				= cache_get_field_content_int(j, "ID");
		DSModels[i][dModel]             = cache_get_field_content_int(j, "Model");
		DSModels[i][dPrice]             = cache_get_field_content_int(j, "Price");
		DSModels[i][dDoors]             = cache_get_field_content_int(j, "Doors");
		DSModels[i][dType]              = cache_get_field_content_int(j, "Type");
		DSModels[i][dPremium]             = cache_get_field_content_int(j, "Premium");
		DSModels[i][dMaxSpeed]          = cache_get_field_content_int(j, "MaxSpeed");
		DSModels[i][dGold]          = cache_get_field_content_int(j, "Gold");
	}
	printf("[MYSQL] Dealership Pojazdy: %d", dsvehs);
}

CMD:editprice(playerid, params[])
{
	new carid, price, szMessage[256];
	if(sscanf(params, "ii", carid, price)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/editprice <carid> <price>");
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		DSModels[carid][dPrice] = price;
		format(szMessage, sizeof(szMessage), "Zmieni³e cene samochodu %d na $%d!", carid, DSModels[carid][dPrice]);
		SendClientMessage(playerid, COLOR_YELLOW, szMessage);
		new szQuery[256];
		format(szQuery, sizeof(szQuery), "UPDATE dsveh SET `Price` = '%d' WHERE `ID` = '%d'",price, carid);
		mysql_query(SQL, szQuery);
	}
	return 1;
}

CMD:editgold(playerid, params[])
{
	new carid, gold, szMessage[256];
	if(sscanf(params, "ii", carid, gold)) return SendClientMessage(playerid, COLOR_GREY, "Uzycie: {FFFFFF}/editgold <carid> <gold>");
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		DSModels[carid][dGold] = gold;
		format(szMessage, sizeof(szMessage), "Zmienien potrzebne PP samochodu o identyfikatorze %d na %d!", carid, DSModels[carid][dGold]);
		SendClientMessage(playerid, COLOR_YELLOW, szMessage);
		new szQuery[256];
		format(szQuery, sizeof(szQuery), "UPDATE dsveh SET `Gold` = '%d' WHERE `ID` = '%d'",gold, carid);
		mysql_query(SQL, szQuery);
	}
	return 1;
}

public UpdateLabel(update, h)
{
	new PropertyString[256];
	if(update == 1)
	{
	    new pret[256];
	    if(HouseInfo[h][hValue] != 0) format(pret, 256, "\n{FFFFFF}Cena: {E80E0E}$%s (/kupdom)", FormatNumber(HouseInfo[h][hValue]));
		if(HouseInfo[h][hID] != 0) {
		if(HouseInfo[h][hOwned] == 0)
		{
			DestroyDynamic3DTextLabel(HouseLabel[h]);
			DestroyDynamicPickup(HouseInfo[h][hPickupID]);
            HouseInfo[h][hPickupID] = CreateDynamicPickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
			format(PropertyString, sizeof(PropertyString),"{FFFFFF}Dom {E80E0E}#%d\n{E80E0E}%s \n{FFFFFF}Wartosc: {E80E0E}$%s",HouseInfo[h][hID],HouseInfo[h][hDiscription],FormatNumber(HouseInfo[h][hValue]));
			HouseLabel[h] = CreateDynamic3DTextLabel(PropertyString ,0xFFFFFF99,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
		}
		else if(HouseInfo[h][hOwned] == 1)
		{
			if(HouseInfo[h][hRentabil] == 1)
			{
				DestroyDynamic3DTextLabel(HouseLabel[h]);
				format(PropertyString, sizeof(PropertyString),"{E80E0E}%s{FFFFFF}\nDom {E80E0E}#%d \n{FFFFFF}Dom nalezacy do: {E80E0E}%s \n{FFFFFF}Wynajem: {E80E0E}$%s \n{FFFFFF}%s",HouseInfo[h][hDiscription],HouseInfo[h][hID],HouseInfo[h][hOwner],FormatNumber(HouseInfo[h][hRent]), pret);
				HouseLabel[h] = CreateDynamic3DTextLabel(PropertyString ,0xFFFFFF99,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
			}
			else
			{
				DestroyDynamic3DTextLabel(HouseLabel[h]);
				format(PropertyString, sizeof(PropertyString),"{E80E0E}%s{FFFFFF}\nDom {E80E0E}#%d \n{FFFFFF}Wlasciciel: {E80E0E}%s \n{FFFFFF}%s",HouseInfo[h][hDiscription],HouseInfo[h][hID],HouseInfo[h][hOwner], pret);
				HouseLabel[h] = CreateDynamic3DTextLabel(PropertyString ,0xFFFFFF99,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
			}
			DestroyDynamicPickup(HouseInfo[h][hPickupID]);
            HouseInfo[h][hPickupID] = CreateDynamicPickup(1272, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
			}
		}
	}
	else if(update == 2)
	{
	    new pret[256];
	    if(BizzInfo[h][bBuyPrice] != 0) format(pret, 256, "\n{FFFFFF}Cena: {0E6CE8}$%s (/buybiz)", FormatNumber(BizzInfo[h][bBuyPrice]));

		if(BizzInfo[h][bOwned] == 0)
		{
			DestroyDynamic3DTextLabel(BizzLabel[h]);
			format(PropertyString, sizeof(PropertyString),"{FFFFFF}Biznes {0E6CE8}#%d \n%s{FFFFFF}\n {FFFFFF}Wartosc: {0E6CE8}%s \n{FFFFFF}Level: {0E6CE8}%d",h,BizzInfo[h][bMessage],FormatNumber(BizzInfo[h][bBuyPrice]),BizzInfo[h][bLevelNeeded]);
			BizzLabel[h] = CreateDynamic3DTextLabel(PropertyString ,0xFFFFFF99,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
		}
		else if(BizzInfo[h][bOwned] == 1)
		{
			DestroyDynamic3DTextLabel(BizzLabel[h]);
			format(PropertyString, sizeof(PropertyString),"{FFFFFF}Biznes {0E6CE8}#%d \n%s{FFFFFF} \n{FFFFFF}Wlasciciel: {0E6CE8}%s \n{FFFFFF}Oplata za wejscie: {0E6CE8}$%s\n{FFFFFF}Level:{0E6CE8} %d%s",h,BizzInfo[h][bMessage],BizzInfo[h][bOwner],FormatNumber(BizzInfo[h][bFee]),BizzInfo[h][bLevelNeeded], pret);
			BizzLabel[h] = CreateDynamic3DTextLabel(PropertyString ,0xFFFFFF99,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
		}
		BizzInfo[h][bPickup] = CreateDynamicPickup(1239, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
	}
	return 1;
}


stock DecimalNumber(playerid)
{
    new str[30];
    new money=PlayerInfo[playerid][pPnumber];
    if(money >= 0)
    {
        format(str, sizeof(str), "%d", money);
        if(1000000 <= money < 10000000)
		{
			strins(str, "-", 3, sizeof(str));
		}
    }
    return str;
}

function DestroyPickups(turfid) {
	for(new i = 0; i < MAX_PICKUPSW; i++) {
		if(Pickups[i][psWar] == turfid && Pickups[i][psID] != 0) {
			DestroyDynamicPickup(Pickups[i][psID]);
			Pickups[i][psType] = 0;
			Pickups[i][psID] = 0;
			Pickups[i][psWar] = 0;
		}
	}
	return 1;
}

function CheckIDEmpty() {
	for(new i = 0; i < MAX_PICKUPSW; i++) {
		if(Pickups[i][psID] == 0) return i;
	}
	return 0;
}

function IsAFLYCar(carid)
{
	if(GetVehicleModel(carid) == 592 || GetVehicleModel(carid) == 577 || GetVehicleModel(carid) == 511 || GetVehicleModel(carid) == 512 || GetVehicleModel(carid) == 593 || GetVehicleModel(carid) == 520 || GetVehicleModel(carid) == 553 || GetVehicleModel(carid) == 476 || GetVehicleModel(carid) == 519 || GetVehicleModel(carid) == 460 || GetVehicleModel(carid) == 513 || GetVehicleModel(carid) == 487)
	{
		return 1;
	}
	return 0;
}

function IsABOATCar(carid)
{
	new modelid = GetVehicleModel(carid);
	if(modelid == 430 || modelid == 446 || modelid == 452 || modelid == 453 || modelid == 454 || modelid == 472 || modelid == 473 || modelid == 484 || modelid == 493 || modelid == 595)
	{
		return 1;
	}
	return 0;
}

stock FindSpawnID(car) {
	if(VehicleOwned[car] != 0) return VehicleSQL[car];
	return 0;
}

function IsABoat2(carid) {
	if(carid == 430 || carid == 446 || carid == 452 || carid == 453 || carid == 454 || carid == 472 || carid == 473 || carid == 484 || carid == 493 || carid == 595)
		return 1;
	return 0;
}

function IsAPlane2(carid) {
	if(carid == 417 || carid == 425 || carid == 447 || carid == 460 || carid == 464 || carid == 465 || carid == 469 || carid == 476 || carid == 487 || carid == 488 || carid == 497 || carid == 501 || carid == 511 || carid == 512 || carid == 513
	 || carid == 519 || carid == 520 || carid == 548 || carid == 553 || carid == 563 || carid == 577 || carid == 592 || carid == 593)
		return 1;
	return 0;
}

function CarPriceValid(model) {
	for(new i = 0; i < 150; i ++) {
		if(DSModels[i][dModel] == model) return DSModels[i][dPrice];
	}
	return 0;
}

/*stock CheckObjects(playerid) {
	new x;
	for(new i = 0; i < 50; i++) {
		if(PlayerInfo[playerid][pSpecialQuest][i]) x ++;
	}
	return x;
}*/

function Spectator() {
	new 
		Float:health, Float: armour,
		text1[180], text2[180], szTD[1024];	
	
	foreach(Player,i) {
	    if(PlayerInfo[i][pAdmin] >= 1 || PlayerInfo[i][pHelper] >= 1) {
			if(IsPlayerConnected(i) && IsPlayerLogged[i] == 1) {
				if(Spectate[i] < 253 && Spectate[i] != 255) {	
					new targetid = Spectate[i];	
					if(IsPlayerConnected(targetid)) {
					    GetPlayerHealthEx(targetid, health);
					    GetPlayerArmourEx(targetid, armour);
					    if(PlayerInfo[targetid][pWantedLevel] == 0) text1 = "Nie";
					    else format(text1, sizeof(text1), "%d", PlayerInfo[targetid][pWantedLevel]);
					    if(PlayerInfo[targetid][pJailTime] == 0) text2 = "Nie";
					    else format(text2, sizeof(text2), "%d", PlayerInfo[targetid][pJailTime]);
				    
					    if(GetPlayerState(targetid) == PLAYER_STATE_DRIVER) {						    
					        new Float:Valoarea;
					        new carid = GetPlayerVehicleID(targetid);
							GetVehicleHealth(carid,Valoarea);
							new speed = Carspeed(targetid);
							format(szTD, sizeof(szTD), "~y~%s (%d) - L: %d~n~~w~~h~Health: ~r~%.1f  ~w~~h~Armour: ~r~%.1f~n~~w~~h~Wanted: ~r~%s~w~~h~  ~w~~h~Jail: ~r~%s~n~~w~~h~Vehicle ID: ~r~%d~n~~w~~h~Szybkosc: ~b~%d km/h", GetName(targetid), targetid, PlayerInfo[targetid][pLevel], health, armour, text1, text2, carid, speed);
							PlayerTextDrawSetString(i, SpecTD, szTD);
							PlayerTextDrawShow(i, SpecTD);						
						}
						else {
							format(szTD, sizeof(szTD), "~y~%s (%d) - L: %d~n~~w~~h~Health: ~r~%.1f  ~w~~h~Armour: ~r~%.1f~n~~w~~h~Wanted: ~r~%s~w~~h~  ~w~~h~Jail/Paka: ~r~%s", GetName(targetid), targetid, PlayerInfo[targetid][pLevel], health, armour, text1, text2);
							PlayerTextDrawSetString(i, SpecTD, szTD);
						}
						if(GetPlayerInterior(targetid) >= 0) SetPlayerInterior(i,GetPlayerInterior(targetid));
						if(GetPlayerVirtualWorld(targetid) >= 0) SetPlayerVirtualWorld(i,GetPlayerVirtualWorld(targetid));
					}
				}
				else PlayerTextDrawHide(i, SpecTD);
			}
		}
	}
	return 1;
}


function LoadTextDrawsGlobals() {

	payday_box = TextDrawCreate(121.000000, 117.000000, "_");
	TextDrawFont(payday_box, 1);
	TextDrawLetterSize(payday_box, 0.583333, 22.649963);
	TextDrawTextSize(payday_box, 298.500000, 178.500000);
	TextDrawSetOutline(payday_box, 1);
	TextDrawSetShadow(payday_box, 0);
	TextDrawAlignment(payday_box, 2);
	TextDrawColor(payday_box, -1);
	TextDrawBackgroundColor(payday_box, 255);
	TextDrawBoxColor(payday_box, 125);
	TextDrawUseBox(payday_box, 1);
	TextDrawSetProportional(payday_box, 1);
	TextDrawSetSelectable(payday_box, 0);

	wyplata_title = TextDrawCreate(77.000000, 119.000000, "Wyplata");
	TextDrawFont(wyplata_title, 1);
	TextDrawLetterSize(wyplata_title, 0.600000, 2.149998);
	TextDrawTextSize(wyplata_title, 400.000000, 17.000000);
	TextDrawSetOutline(wyplata_title, 1);
	TextDrawSetShadow(wyplata_title, 0);
	TextDrawAlignment(wyplata_title, 1);
	TextDrawColor(wyplata_title, 852308735);
	TextDrawBackgroundColor(wyplata_title, 255);
	TextDrawBoxColor(wyplata_title, 50);
	TextDrawUseBox(wyplata_title, 0);
	TextDrawSetProportional(wyplata_title, 1);
	TextDrawSetSelectable(wyplata_title, 0);

	stankonta = TextDrawCreate(32.000000, 147.000000, "Stan konta");
	TextDrawFont(stankonta, 1);
	TextDrawLetterSize(stankonta, 0.600000, 2.000000);
	TextDrawTextSize(stankonta, 400.000000, 17.000000);
	TextDrawSetOutline(stankonta, 1);
	TextDrawSetShadow(stankonta, 0);
	TextDrawAlignment(stankonta, 1);
	TextDrawColor(stankonta, -1);
	TextDrawBackgroundColor(stankonta, 255);
	TextDrawBoxColor(stankonta, 50);
	TextDrawUseBox(stankonta, 0);
	TextDrawSetProportional(stankonta, 1);
	TextDrawSetSelectable(stankonta, 0);

	stankonta_hajs = TextDrawCreate(47.000000, 166.000000, "11111$");
	TextDrawFont(stankonta_hajs, 1);
	TextDrawLetterSize(stankonta_hajs, 0.583333, 1.299999);
	TextDrawTextSize(stankonta_hajs, 400.000000, 17.000000);
	TextDrawSetOutline(stankonta_hajs, 1);
	TextDrawSetShadow(stankonta_hajs, 0);
	TextDrawAlignment(stankonta_hajs, 1);
	TextDrawColor(stankonta_hajs, -2016478465);
	TextDrawBackgroundColor(stankonta_hajs, 255);
	TextDrawBoxColor(stankonta_hajs, 50);
	TextDrawUseBox(stankonta_hajs, 0);
	TextDrawSetProportional(stankonta_hajs, 1);
	TextDrawSetSelectable(stankonta_hajs, 0);

	podatek = TextDrawCreate(34.000000, 179.000000, "Podatek");
	TextDrawFont(podatek, 1);
	TextDrawLetterSize(podatek, 0.600000, 2.000000);
	TextDrawTextSize(podatek, 400.000000, 17.000000);
	TextDrawSetOutline(podatek, 1);
	TextDrawSetShadow(podatek, 0);
	TextDrawAlignment(podatek, 1);
	TextDrawColor(podatek, -1);
	TextDrawBackgroundColor(podatek, 255);
	TextDrawBoxColor(podatek, 50);
	TextDrawUseBox(podatek, 0);
	TextDrawSetProportional(podatek, 1);
	TextDrawSetSelectable(podatek, 0);

	podatek_hajs = TextDrawCreate(46.000000, 199.000000, "-2312$");
	TextDrawFont(podatek_hajs, 1);
	TextDrawLetterSize(podatek_hajs, 0.583333, 1.299999);
	TextDrawTextSize(podatek_hajs, 400.000000, 17.000000);
	TextDrawSetOutline(podatek_hajs, 1);
	TextDrawSetShadow(podatek_hajs, 0);
	TextDrawAlignment(podatek_hajs, 1);
	TextDrawColor(podatek_hajs, -1962934017);
	TextDrawBackgroundColor(podatek_hajs, 255);
	TextDrawBoxColor(podatek_hajs, 50);
	TextDrawUseBox(podatek_hajs, 0);
	TextDrawSetProportional(podatek_hajs, 1);
	TextDrawSetSelectable(podatek_hajs, 0);

	wyplata = TextDrawCreate(34.000000, 214.000000, "Wyplata");
	TextDrawFont(wyplata, 1);
	TextDrawLetterSize(wyplata, 0.600000, 2.000000);
	TextDrawTextSize(wyplata, 400.000000, 17.000000);
	TextDrawSetOutline(wyplata, 1);
	TextDrawSetShadow(wyplata, 0);
	TextDrawAlignment(wyplata, 1);
	TextDrawColor(wyplata, -1);
	TextDrawBackgroundColor(wyplata, 255);
	TextDrawBoxColor(wyplata, 50);
	TextDrawUseBox(wyplata, 0);
	TextDrawSetProportional(wyplata, 1);
	TextDrawSetSelectable(wyplata, 0);

	wyplata_hajs = TextDrawCreate(47.000000, 235.000000, "+2351$");
	TextDrawFont(wyplata_hajs, 1);
	TextDrawLetterSize(wyplata_hajs, 0.583333, 1.299999);
	TextDrawTextSize(wyplata_hajs, 400.000000, 17.000000);
	TextDrawSetOutline(wyplata_hajs, 1);
	TextDrawSetShadow(wyplata_hajs, 0);
	TextDrawAlignment(wyplata_hajs, 1);
	TextDrawColor(wyplata_hajs, 1687547391);
	TextDrawBackgroundColor(wyplata_hajs, 255);
	TextDrawBoxColor(wyplata_hajs, 50);
	TextDrawUseBox(wyplata_hajs, 0);
	TextDrawSetProportional(wyplata_hajs, 1);
	TextDrawSetSelectable(wyplata_hajs, 0);

	odsetki = TextDrawCreate(35.000000, 248.000000, "Odsetki");
	TextDrawFont(odsetki, 1);
	TextDrawLetterSize(odsetki, 0.600000, 2.000000);
	TextDrawTextSize(odsetki, 400.000000, 17.000000);
	TextDrawSetOutline(odsetki, 1);
	TextDrawSetShadow(odsetki, 0);
	TextDrawAlignment(odsetki, 1);
	TextDrawColor(odsetki, -1);
	TextDrawBackgroundColor(odsetki, 255);
	TextDrawBoxColor(odsetki, 50);
	TextDrawUseBox(odsetki, 0);
	TextDrawSetProportional(odsetki, 1);
	TextDrawSetSelectable(odsetki, 0);

	odsetki_hajs = TextDrawCreate(46.000000, 269.000000, "+2351$");
	TextDrawFont(odsetki_hajs, 1);
	TextDrawLetterSize(odsetki_hajs, 0.583333, 1.299999);
	TextDrawTextSize(odsetki_hajs, 400.000000, 17.000000);
	TextDrawSetOutline(odsetki_hajs, 1);
	TextDrawSetShadow(odsetki_hajs, 0);
	TextDrawAlignment(odsetki_hajs, 1);
	TextDrawColor(odsetki_hajs, 1687547391);
	TextDrawBackgroundColor(odsetki_hajs, 255);
	TextDrawBoxColor(odsetki_hajs, 50);
	TextDrawUseBox(odsetki_hajs, 0);
	TextDrawSetProportional(odsetki_hajs, 1);
	TextDrawSetSelectable(odsetki_hajs, 0);

	nowesaldo = TextDrawCreate(33.000000, 280.000000, "Nowe saldo");
	TextDrawFont(nowesaldo, 1);
	TextDrawLetterSize(nowesaldo, 0.600000, 2.000000);
	TextDrawTextSize(nowesaldo, 400.000000, 17.000000);
	TextDrawSetOutline(nowesaldo, 1);
	TextDrawSetShadow(nowesaldo, 0);
	TextDrawAlignment(nowesaldo, 1);
	TextDrawColor(nowesaldo, -1);
	TextDrawBackgroundColor(nowesaldo, 255);
	TextDrawBoxColor(nowesaldo, 50);
	TextDrawUseBox(nowesaldo, 0);
	TextDrawSetProportional(nowesaldo, 1);
	TextDrawSetSelectable(nowesaldo, 0);

	nowesaldo_hajs = TextDrawCreate(43.000000, 299.000000, "79324$");
	TextDrawFont(nowesaldo_hajs, 1);
	TextDrawLetterSize(nowesaldo_hajs, 0.583333, 1.299999);
	TextDrawTextSize(nowesaldo_hajs, 400.000000, 17.000000);
	TextDrawSetOutline(nowesaldo_hajs, 1);
	TextDrawSetShadow(nowesaldo_hajs, 0);
	TextDrawAlignment(nowesaldo_hajs, 1);
	TextDrawColor(nowesaldo_hajs, -2016478465);
	TextDrawBackgroundColor(nowesaldo_hajs, 255);
	TextDrawBoxColor(nowesaldo_hajs, 50);
	TextDrawUseBox(nowesaldo_hajs, 0);
	TextDrawSetProportional(nowesaldo_hajs, 1);
	TextDrawSetSelectable(nowesaldo_hajs, 0);

	TD = TextDrawCreate(160, 400, "~y~Legenda:~n~Strzalki (WSDA): ~w~Poruszanie kamera~n~~y~Spacja: ~w~Przyspieszenie~n~~y~C (kucanie): ~w~Wyjscie");
    TextDrawLetterSize(TD, 0.4, 0.9);
    TextDrawSetShadow(TD, 0);
    TextDrawUseBox(TD,1);
	TextDrawBoxColor(TD,0x00000055);
	TextDrawTextSize(TD, 380, 400);

	TextDrawVehiclePanel[0] = TextDrawCreate(4.000000, 230.000000, "usebox");
	TextDrawBackgroundColor(TextDrawVehiclePanel[0], 0);
	TextDrawFont(TextDrawVehiclePanel[0], 1);
	TextDrawLetterSize(TextDrawVehiclePanel[0], 0.500000, 9.699998);
	TextDrawColor(TextDrawVehiclePanel[0], 0);
	TextDrawSetOutline(TextDrawVehiclePanel[0], 0);
	TextDrawSetProportional(TextDrawVehiclePanel[0], 1);
	TextDrawSetShadow(TextDrawVehiclePanel[0], 1);
	TextDrawUseBox(TextDrawVehiclePanel[0], 1);
	TextDrawBoxColor(TextDrawVehiclePanel[0], 150);
	TextDrawTextSize(TextDrawVehiclePanel[0], 101.000000, 0.000000);

	TextDrawVehiclePanel[1] = TextDrawCreate(5.000000, 232.000000, "ld_dual:white");
	TextDrawBackgroundColor(TextDrawVehiclePanel[1], 255);
	TextDrawFont(TextDrawVehiclePanel[1], 4);
	TextDrawLetterSize(TextDrawVehiclePanel[1], 0.500000, 1.000000);
	TextDrawColor(TextDrawVehiclePanel[1], 252645375);
	TextDrawSetOutline(TextDrawVehiclePanel[1], 0);
	TextDrawSetProportional(TextDrawVehiclePanel[1], 1);
	TextDrawSetShadow(TextDrawVehiclePanel[1], 1);
	TextDrawUseBox(TextDrawVehiclePanel[1], 1);
	TextDrawBoxColor(TextDrawVehiclePanel[1], 255);
	TextDrawTextSize(TextDrawVehiclePanel[1], 95.000000, 12.000000);
	TextDrawSetSelectable(TextDrawVehiclePanel[1], 1);

	TextDrawVehiclePanel[2] = TextDrawCreate(5.000000, 246.000000, "ld_dual:white");
	TextDrawBackgroundColor(TextDrawVehiclePanel[2], 255);
	TextDrawFont(TextDrawVehiclePanel[2], 4);
	TextDrawLetterSize(TextDrawVehiclePanel[2], 0.500000, 1.000000);
	TextDrawColor(TextDrawVehiclePanel[2], 252645375);
	TextDrawSetOutline(TextDrawVehiclePanel[2], 0);
	TextDrawSetProportional(TextDrawVehiclePanel[2], 1);
	TextDrawSetShadow(TextDrawVehiclePanel[2], 1);
	TextDrawUseBox(TextDrawVehiclePanel[2], 1);
	TextDrawBoxColor(TextDrawVehiclePanel[2], 255);
	TextDrawTextSize(TextDrawVehiclePanel[2], 95.000000, 12.000000);
	TextDrawSetSelectable(TextDrawVehiclePanel[2], 1);

	TextDrawVehiclePanel[3] = TextDrawCreate(5.000000, 260.000000, "ld_dual:white");
	TextDrawBackgroundColor(TextDrawVehiclePanel[3], 255);
	TextDrawFont(TextDrawVehiclePanel[3], 4);
	TextDrawLetterSize(TextDrawVehiclePanel[3], 0.500000, 1.000000);
	TextDrawColor(TextDrawVehiclePanel[3], 252645375);
	TextDrawSetOutline(TextDrawVehiclePanel[3], 0);
	TextDrawSetProportional(TextDrawVehiclePanel[3], 1);
	TextDrawSetShadow(TextDrawVehiclePanel[3], 1);
	TextDrawUseBox(TextDrawVehiclePanel[3], 1);
	TextDrawBoxColor(TextDrawVehiclePanel[3], 255);
	TextDrawTextSize(TextDrawVehiclePanel[3], 95.000000, 12.000000);
	TextDrawSetSelectable(TextDrawVehiclePanel[3], 1);

	TextDrawVehiclePanel[4] = TextDrawCreate(5.000000, 274.000000, "ld_dual:white");
	TextDrawBackgroundColor(TextDrawVehiclePanel[4], 255);
	TextDrawFont(TextDrawVehiclePanel[4], 4);
	TextDrawLetterSize(TextDrawVehiclePanel[4], 0.500000, 1.000000);
	TextDrawColor(TextDrawVehiclePanel[4], 252645375);
	TextDrawSetOutline(TextDrawVehiclePanel[4], 0);
	TextDrawSetProportional(TextDrawVehiclePanel[4], 1);
	TextDrawSetShadow(TextDrawVehiclePanel[4], 1);
	TextDrawUseBox(TextDrawVehiclePanel[4], 1);
	TextDrawBoxColor(TextDrawVehiclePanel[4], 255);
	TextDrawTextSize(TextDrawVehiclePanel[4], 95.000000, 12.000000);
	TextDrawSetSelectable(TextDrawVehiclePanel[4], 1);

	TextDrawVehiclePanel[5] = TextDrawCreate(5.000000, 288.000000, "ld_dual:white");
	TextDrawBackgroundColor(TextDrawVehiclePanel[5], 255);
	TextDrawFont(TextDrawVehiclePanel[5], 4);
	TextDrawLetterSize(TextDrawVehiclePanel[5], 0.500000, 1.000000);
	TextDrawColor(TextDrawVehiclePanel[5], 252645375);
	TextDrawSetOutline(TextDrawVehiclePanel[5], 0);
	TextDrawSetProportional(TextDrawVehiclePanel[5], 1);
	TextDrawSetShadow(TextDrawVehiclePanel[5], 1);
	TextDrawUseBox(TextDrawVehiclePanel[5], 1);
	TextDrawBoxColor(TextDrawVehiclePanel[5], 255);
	TextDrawTextSize(TextDrawVehiclePanel[5], 95.000000, 12.000000);
	TextDrawSetSelectable(TextDrawVehiclePanel[5], 1);

	TextDrawVehiclePanel[6] = TextDrawCreate(5.000000, 302.000000, "ld_dual:white");
	TextDrawBackgroundColor(TextDrawVehiclePanel[6], 255);
	TextDrawFont(TextDrawVehiclePanel[6], 4);
	TextDrawLetterSize(TextDrawVehiclePanel[6], 0.500000, 1.000000);
	TextDrawColor(TextDrawVehiclePanel[6], 252645375);
	TextDrawSetOutline(TextDrawVehiclePanel[6], 0);
	TextDrawSetProportional(TextDrawVehiclePanel[6], 1);
	TextDrawSetShadow(TextDrawVehiclePanel[6], 1);
	TextDrawUseBox(TextDrawVehiclePanel[6], 1);
	TextDrawBoxColor(TextDrawVehiclePanel[6], 255);
	TextDrawTextSize(TextDrawVehiclePanel[6], 95.000000, 12.000000);
	TextDrawSetSelectable(TextDrawVehiclePanel[6], 1);

	/*Kary = TextDrawCreate(20.000000, 288.000000,"_"); 
    TextDrawTextSize(Kary, 344.000000,0.000000); 
    TextDrawAlignment(Kary,0); 
    TextDrawBackgroundColor(Kary, 0x000000ff); 
    TextDrawFont(Kary,1); 
    TextDrawLetterSize(Kary,0.299999,1.000000); 
    TextDrawLetterSize(Kary, 0.340000, 1.000000); 
    TextDrawColor(Kary, 0xffffffff); 
    TextDrawSetOutline(Kary,1); 
    TextDrawSetProportional(Kary,1); 
    TextDrawSetShadow(Kary,1);*/
	
	Kary = TextDrawCreate(7.481735, 272.249847, "_");
	TextDrawLetterSize(Kary, 0.200876, 1.004995);
	TextDrawAlignment(Kary, 1);
	TextDrawColor(Kary, -1);
	TextDrawSetShadow(Kary, 0);
	TextDrawSetOutline(Kary, 1);
	TextDrawBackgroundColor(Kary, 83);
	TextDrawFont(Kary, 1);
	TextDrawSetProportional(Kary, 1);
	TextDrawSetShadow(Kary, 0);

    textdraw_0 = TextDrawCreate(6.000000, 426.000000, NAZWA);
	TextDrawFont(textdraw_0, 3);
	TextDrawLetterSize(textdraw_0, 0.425000, 1.799998);
	TextDrawTextSize(textdraw_0, 400.000000, 17.000000);
	TextDrawSetOutline(textdraw_0, 1);
	TextDrawSetShadow(textdraw_0, 0);
	TextDrawAlignment(textdraw_0, 1);
	TextDrawColor(textdraw_0, 1687547391);
	TextDrawBackgroundColor(textdraw_0, 255);
	TextDrawBoxColor(textdraw_0, 50);
	TextDrawUseBox(textdraw_0, 0);
	TextDrawSetProportional(textdraw_0, 1);
	TextDrawSetSelectable(textdraw_0, 0);

	new string[MAX_VEHICLE_PARAMS * 25];
	    
	for(new id; id < MAX_VEHICLE_PARAMS; id++) {
		format(string, sizeof string, "%s%s~n~~n~", string, paramsName[id][0]);
	}

	TextDrawVehiclePanel[7] = TextDrawCreate(7.000000, 234.000000, string);
	TextDrawBackgroundColor(TextDrawVehiclePanel[7], 0);
	TextDrawFont(TextDrawVehiclePanel[7], 1);
	TextDrawLetterSize(TextDrawVehiclePanel[7], 0.189999, 0.783999);
	TextDrawColor(TextDrawVehiclePanel[7], -106);
	TextDrawSetOutline(TextDrawVehiclePanel[7], 0);
	TextDrawSetProportional(TextDrawVehiclePanel[7], 1);
	TextDrawSetShadow(TextDrawVehiclePanel[7], 1);
	
	TextDrawVehiclePanel[8] = TextDrawCreate(104.000000, 228.000000, "ld_dual:white");
	TextDrawBackgroundColor(TextDrawVehiclePanel[8], 255);
	TextDrawFont(TextDrawVehiclePanel[8], 4);
	TextDrawLetterSize(TextDrawVehiclePanel[8], 0.500000, 1.000000);
	TextDrawColor(TextDrawVehiclePanel[8], 252645375);
	TextDrawSetOutline(TextDrawVehiclePanel[8], 0);
	TextDrawSetProportional(TextDrawVehiclePanel[8], 1);
	TextDrawSetShadow(TextDrawVehiclePanel[8], 1);
	TextDrawUseBox(TextDrawVehiclePanel[8], 1);
	TextDrawBoxColor(TextDrawVehiclePanel[8], 255);
	TextDrawTextSize(TextDrawVehiclePanel[8], 9.000000, 91.000000);
	TextDrawSetSelectable(TextDrawVehiclePanel[8], 1);

	TextDrawVehiclePanel[9] = TextDrawCreate(104.000000, 268.000000, "~<~");
	TextDrawBackgroundColor(TextDrawVehiclePanel[9], 0);
	TextDrawFont(TextDrawVehiclePanel[9], 2);
	TextDrawLetterSize(TextDrawVehiclePanel[9], 0.159999, 0.983999);
	TextDrawColor(TextDrawVehiclePanel[9], -206);
	TextDrawSetOutline(TextDrawVehiclePanel[9], 0);
	TextDrawSetProportional(TextDrawVehiclePanel[9], 1);
	TextDrawSetShadow(TextDrawVehiclePanel[9], 1);
	TextDrawUseBox(TextDrawVehiclePanel[9], 1);
	TextDrawBoxColor(TextDrawVehiclePanel[9], 0);
	TextDrawTextSize(TextDrawVehiclePanel[9], 101.000000, 10.000000);
	
	Login[0] = TextDrawCreate(-5.666664, 375.837066, "box");
	TextDrawLetterSize(Login[0], 0.000000, 9.199999);
	TextDrawTextSize(Login[0], 707.000000, 0.000000);
	TextDrawAlignment(Login[0], 1);
	TextDrawColor(Login[0], -1);
	TextDrawUseBox(Login[0], 1);
	TextDrawBoxColor(Login[0], 255);
	TextDrawSetShadow(Login[0], 0);
	TextDrawSetOutline(Login[0], 0);
	TextDrawBackgroundColor(Login[0], 255);
	TextDrawFont(Login[0], 1);
	TextDrawSetProportional(Login[0], 1);
	TextDrawSetShadow(Login[0], 0);

	Login[1] = TextDrawCreate(-31.333328, -19.481473, "box");
	TextDrawLetterSize(Login[1], 0.000000, 9.199999);
	TextDrawTextSize(Login[1], 682.000000, 0.000000);
	TextDrawAlignment(Login[1], 1);
	TextDrawColor(Login[1], -1);
	TextDrawUseBox(Login[1], 1);
	TextDrawBoxColor(Login[1], 255);
	TextDrawSetShadow(Login[1], 0);
	TextDrawSetOutline(Login[1], 0);
	TextDrawBackgroundColor(Login[1], 255);
	TextDrawFont(Login[1], 1);
	TextDrawSetProportional(Login[1], 1);
	TextDrawSetShadow(Login[1], 0);

	Login[2] = TextDrawCreate(317.333068, 361.733123, "Konta zarejestrowane ~y~%s~w~ > Graczy dzisiaj: ~y~%d~w~ > Najczesciej polaczone: ~y~%d (%s)");
	TextDrawLetterSize(Login[2], 0.257000, 1.093925);
	TextDrawTextSize(Login[2], 0.000000, 501.000000);
	TextDrawAlignment(Login[2], 2);
	TextDrawColor(Login[2], -1);
	TextDrawUseBox(Login[2], 1);
	TextDrawBoxColor(Login[2], 255);
	TextDrawSetShadow(Login[2], 0);
	TextDrawSetOutline(Login[2], 1);
	TextDrawBackgroundColor(Login[2], 255);
	TextDrawFont(Login[2], 1);
	TextDrawSetProportional(Login[2], 1);
	TextDrawSetShadow(Login[2], 0);
	
	TDEditor_TD[0] = TextDrawCreate(516.333496, 125.703689, "Pozostaly_czas_BW_%d_sek");
	TextDrawLetterSize(TDEditor_TD[0], 0.387666, 1.666370);
	TextDrawTextSize(TDEditor_TD[0], 0.000000, 160.000000);
	TextDrawAlignment(TDEditor_TD[0], 2);
	TextDrawColor(TDEditor_TD[0], -752024833);
	TextDrawUseBox(TDEditor_TD[0], 1);
	TextDrawBoxColor(TDEditor_TD[0], 118096127);
	TextDrawSetShadow(TDEditor_TD[0], 256);
	TextDrawSetOutline(TDEditor_TD[0], 0);
	TextDrawBackgroundColor(TDEditor_TD[0], -653065985);
	TextDrawFont(TDEditor_TD[0], 1);
	TextDrawSetProportional(TDEditor_TD[0], 1);
	TextDrawSetShadow(TDEditor_TD[0], 256);
	
	SafeTD[0] = TextDrawCreate(312.333160, 2.918390, "strefa-non-dm");
	TextDrawLetterSize(SafeTD[0], 0.382999, 1.475554);
	TextDrawAlignment(SafeTD[0], 2);
	TextDrawColor(SafeTD[0], -1);
	TextDrawSetShadow(SafeTD[0], 0);
	TextDrawSetOutline(SafeTD[0], 1);
	TextDrawBackgroundColor(SafeTD[0], 68);
	TextDrawFont(SafeTD[0], 3);
	TextDrawSetProportional(SafeTD[0], 1);
	TextDrawSetShadow(SafeTD[0], 0);

	HiddTD[0] = TextDrawCreate(244.385131, 354.499908, "LD_BEAT:left");
	TextDrawLetterSize(HiddTD[0], 0.000000, 0.000000);
	TextDrawTextSize(HiddTD[0], 14.000000, 19.000000);
	TextDrawAlignment(HiddTD[0], 1);
	TextDrawColor(HiddTD[0], -1);
	TextDrawSetShadow(HiddTD[0], 0);
	TextDrawSetOutline(HiddTD[0], 0);
	TextDrawBackgroundColor(HiddTD[0], 255);
	TextDrawFont(HiddTD[0], 4);
	TextDrawSetProportional(HiddTD[0], 0);
	TextDrawSetShadow(HiddTD[0], 0);
	TextDrawSetSelectable(HiddTD[0], true);

	HiddTD[1] = TextDrawCreate(380.724884, 353.333251, "LD_BEAT:right");
	TextDrawLetterSize(HiddTD[1], 0.000000, 0.000000);
	TextDrawTextSize(HiddTD[1], 14.000000, 19.000000);
	TextDrawAlignment(HiddTD[1], 1);
	TextDrawColor(HiddTD[1], -1);
	TextDrawSetShadow(HiddTD[1], 0);
	TextDrawSetOutline(HiddTD[1], 0);
	TextDrawBackgroundColor(HiddTD[1], 255);
	TextDrawFont(HiddTD[1], 4);
	TextDrawSetProportional(HiddTD[1], 0);
	TextDrawSetShadow(HiddTD[1], 0);
	TextDrawSetSelectable(HiddTD[1], true);

	HiddTD[2] = TextDrawCreate(409.305175, 325.333282, "LD_BEAT:cross");
	TextDrawLetterSize(HiddTD[2], 0.000000, 0.000000);
	TextDrawTextSize(HiddTD[2], 15.000000, 17.000000);
	TextDrawAlignment(HiddTD[2], 1);
	TextDrawColor(HiddTD[2], -16777092);
	TextDrawSetShadow(HiddTD[2], 0);
	TextDrawSetOutline(HiddTD[2], 0);
	TextDrawBackgroundColor(HiddTD[2], 255);
	TextDrawFont(HiddTD[2], 4);
	TextDrawSetProportional(HiddTD[2], 0);
	TextDrawSetShadow(HiddTD[2], 0);
	TextDrawSetSelectable(HiddTD[2], true);

	HiddTD[3] = TextDrawCreate(244.385040, 378.416656, "LD_BEAT:left");
	TextDrawLetterSize(HiddTD[3], 0.000000, 0.000000);
	TextDrawTextSize(HiddTD[3], 14.000000, 19.000000);
	TextDrawAlignment(HiddTD[3], 1);
	TextDrawColor(HiddTD[3], -1);
	TextDrawSetShadow(HiddTD[3], 0);
	TextDrawSetOutline(HiddTD[3], 0);
	TextDrawBackgroundColor(HiddTD[3], 255);
	TextDrawFont(HiddTD[3], 4);
	TextDrawSetProportional(HiddTD[3], 0);
	TextDrawSetShadow(HiddTD[3], 0);
	TextDrawSetSelectable(HiddTD[3], true);

	HiddTD[4] = TextDrawCreate(383.067321, 377.833221, "LD_BEAT:right");
	TextDrawLetterSize(HiddTD[4], 0.000000, 0.000000);
	TextDrawTextSize(HiddTD[4], 14.000000, 19.000000);
	TextDrawAlignment(HiddTD[4], 1);
	TextDrawColor(HiddTD[4], -1);
	TextDrawSetShadow(HiddTD[4], 0);
	TextDrawSetOutline(HiddTD[4], 0);
	TextDrawBackgroundColor(HiddTD[4], 255);
	TextDrawFont(HiddTD[4], 4);
	TextDrawSetProportional(HiddTD[4], 0);
	TextDrawSetShadow(HiddTD[4], 0);
	TextDrawSetSelectable(HiddTD[4], true);
	
	ShopTD[0] = TextDrawCreate(218.147888, 352.166687, "LD_BEAT:left");
	TextDrawLetterSize(ShopTD[0], 0.000000, 0.000000);
	TextDrawTextSize(ShopTD[0], 29.000000, 34.000000);
	TextDrawAlignment(ShopTD[0], 1);
	TextDrawColor(ShopTD[0], -1);
	TextDrawSetShadow(ShopTD[0], 0);
	TextDrawSetOutline(ShopTD[0], 0);
	TextDrawBackgroundColor(ShopTD[0], 255);
	TextDrawFont(ShopTD[0], 4);
	TextDrawSetProportional(ShopTD[0], 0);
	TextDrawSetShadow(ShopTD[0], 0);
	TextDrawSetSelectable(ShopTD[0], true);

	ShopTD[1] = TextDrawCreate(367.606292, 352.166625, "LD_BEAT:right");
	TextDrawLetterSize(ShopTD[1], 0.000000, 0.000000);
	TextDrawTextSize(ShopTD[1], 29.000000, 34.000000);
	TextDrawAlignment(ShopTD[1], 1);
	TextDrawColor(ShopTD[1], -1);
	TextDrawSetShadow(ShopTD[1], 0);
	TextDrawSetOutline(ShopTD[1], 0);
	TextDrawBackgroundColor(ShopTD[1], 255);
	TextDrawFont(ShopTD[1], 4);
	TextDrawSetProportional(ShopTD[1], 0);
	TextDrawSetShadow(ShopTD[1], 0);
	TextDrawSetSelectable(ShopTD[1], true);

	ShopTD[4] = TextDrawCreate(395.718414, 329.416717, "LD_BEAT:cross");
	TextDrawLetterSize(ShopTD[4], 0.000000, 0.000000);
	TextDrawTextSize(ShopTD[4], 15.000000, 17.000000);
	TextDrawAlignment(ShopTD[4], 1);
	TextDrawColor(ShopTD[4], -16777092);
	TextDrawSetShadow(ShopTD[4], 0);
	TextDrawSetOutline(ShopTD[4], 0);
	TextDrawBackgroundColor(ShopTD[4], 255);
	TextDrawFont(ShopTD[4], 4);
	TextDrawSetProportional(ShopTD[4], 0);
	TextDrawSetShadow(ShopTD[4], 0);
	TextDrawSetSelectable(ShopTD[4], true);
	

	/*Time = TextDrawCreate(577.000000, 11.629568, "21.02.2017~n~20:34:32");
	TextDrawLetterSize(Time, 0.372999, 1.562666);
	TextDrawAlignment(Time, 2);
	TextDrawColor(Time, -1);
	TextDrawSetShadow(Time, 0);
	TextDrawSetOutline(Time, 1);
	TextDrawBackgroundColor(Time, 124);
	TextDrawFont(Time, 3);
	TextDrawSetProportional(Time, 1);
	TextDrawSetShadow(Time, 0);*/
	
	TDWejscie[0] = TextDrawCreate(240.000000, 311.000000, "ADAM CHUJEK");
	TextDrawFont(TDWejscie[0], 1);
	TextDrawLetterSize(TDWejscie[0], 0.000000, 7.500011);
	TextDrawTextSize(TDWejscie[0], 403.500000, 23.500000);
	TextDrawSetOutline(TDWejscie[0], 0);
	TextDrawSetShadow(TDWejscie[0], 3);
	TextDrawAlignment(TDWejscie[0], 1);
	TextDrawColor(TDWejscie[0], -1);
	TextDrawBackgroundColor(TDWejscie[0], 255);
	TextDrawBoxColor(TDWejscie[0], 50);
	TextDrawUseBox(TDWejscie[0], 1);
	TextDrawSetProportional(TDWejscie[0], 1);
	TextDrawSetSelectable(TDWejscie[0], 0);

	TDWejscie[1] = TextDrawCreate(291.000000, 312.000000, "Wejscie ~y~(ID: 1)");
	TextDrawFont(TDWejscie[1], 1);
	TextDrawLetterSize(TDWejscie[1], 0.266666, 1.400000);
	TextDrawTextSize(TDWejscie[1], 400.000000, 17.000000);
	TextDrawSetOutline(TDWejscie[1], 1);
	TextDrawSetShadow(TDWejscie[1], 0);
	TextDrawAlignment(TDWejscie[1], 1);
	TextDrawColor(TDWejscie[1], -1);
	TextDrawBackgroundColor(TDWejscie[1], 255);
	TextDrawBoxColor(TDWejscie[1], 50);
	TextDrawUseBox(TDWejscie[1], 0);
	TextDrawSetProportional(TDWejscie[1], 1);
	TextDrawSetSelectable(TDWejscie[1], 0);

	TDWejscie[2] = TextDrawCreate(270.000000, 333.000000, "Aby wejsc do srodka");
	TextDrawFont(TDWejscie[2], 1);
	TextDrawLetterSize(TDWejscie[2], 0.287499, 1.250000);
	TextDrawTextSize(TDWejscie[2], 400.000000, 17.000000);
	TextDrawSetOutline(TDWejscie[2], 1);
	TextDrawSetShadow(TDWejscie[2], 0);
	TextDrawAlignment(TDWejscie[2], 1);
	TextDrawColor(TDWejscie[2], -1);
	TextDrawBackgroundColor(TDWejscie[2], 255);
	TextDrawBoxColor(TDWejscie[2], 50);
	TextDrawUseBox(TDWejscie[2], 0);
	TextDrawSetProportional(TDWejscie[2], 1);
	TextDrawSetSelectable(TDWejscie[2], 0);

	TDWejscie[3] = TextDrawCreate(281.000000, 356.000000, "Nacisnij klawisz ~y~F");
	TextDrawFont(TDWejscie[3], 1);
	TextDrawLetterSize(TDWejscie[3], 0.245832, 1.350000);
	TextDrawTextSize(TDWejscie[3], 400.000000, 17.000000);
	TextDrawSetOutline(TDWejscie[3], 1);
	TextDrawSetShadow(TDWejscie[3], 0);
	TextDrawAlignment(TDWejscie[3], 1);
	TextDrawColor(TDWejscie[3], -1);
	TextDrawBackgroundColor(TDWejscie[3], 255);
	TextDrawBoxColor(TDWejscie[3], 50);
	TextDrawUseBox(TDWejscie[3], 0);
	TextDrawSetProportional(TDWejscie[3], 1);
	TextDrawSetSelectable(TDWejscie[3], 0);
	
	//sannnews
	SanNews = TextDrawCreate(3320.000000, 437.000000, "elo");
    TextDrawFont(SanNews, 1);
    TextDrawLetterSize(SanNews, 0.600000, 2.000000);
    TextDrawTextSize(SanNews, -98.500000, 18.500000);
    TextDrawSetOutline(SanNews, 1);
    TextDrawSetShadow(SanNews, 0);
    TextDrawAlignment(SanNews, 1);
    TextDrawColor(SanNews, -1);
    TextDrawBackgroundColor(SanNews, 255);
    TextDrawBoxColor(SanNews, 50);
    TextDrawUseBox(SanNews, 1);
    TextDrawSetProportional(SanNews, 1);
    TextDrawSetSelectable(SanNews, 0);
 
    SanNewsInfo = TextDrawCreate(3.000000, 436.000000, "~y~San News:~w~ w radiu leci standardowy blok muzyczny SantosFM");
    TextDrawFont(SanNewsInfo, 1);
    TextDrawLetterSize(SanNewsInfo, 0.195833, 0.950000);
    TextDrawTextSize(SanNewsInfo, 383.500000, 9.500000);
    TextDrawSetOutline(SanNewsInfo, 1);
    TextDrawSetShadow(SanNewsInfo, 0);
    TextDrawAlignment(SanNewsInfo, 1);
    TextDrawColor(SanNewsInfo, -1);
    TextDrawBackgroundColor(SanNewsInfo, 255);
    TextDrawBoxColor(SanNewsInfo, 50);
    TextDrawUseBox(SanNewsInfo, 0);
    TextDrawSetProportional(SanNewsInfo, 1);
    TextDrawSetSelectable(SanNewsInfo, 0);
	
	//hud
	
	HUDTXD = TextDrawCreate(554.000000, 0.000000, "                                                                             ");
	TextDrawFont(HUDTXD, 1);
	TextDrawLetterSize(HUDTXD, 0.449999, 0.550000);
	TextDrawTextSize(HUDTXD, 479.000000, 202.000000);
	TextDrawSetOutline(HUDTXD, 1);
	TextDrawSetShadow(HUDTXD, 0);
	TextDrawAlignment(HUDTXD, 2);
	TextDrawColor(HUDTXD, -1);
	TextDrawBackgroundColor(HUDTXD, 255);
	TextDrawBoxColor(HUDTXD, 50);
	TextDrawUseBox(HUDTXD, 1);
	TextDrawSetProportional(HUDTXD, 1);
	TextDrawSetSelectable(HUDTXD, 0);
	
	return 1;
}

stock CreateVehicleEx(modelid, Float:x, Float:y, Float:z, Float:angle, color1, color2, respawn_delay) {
	new vehid = CreateVehicle(modelid, x, y, z, angle, color1, color2, respawn_delay);
	SetVehicleHealth(vehid, 999);
	return vehid;
}



#pragma dynamic (64*1024) //64 KB
#pragma warning disable 238


